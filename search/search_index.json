{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"NSI \u2693\ufe0e Les cours de sp\u00e9cialit\u00e9 NSI au lyc\u00e9e de Bois d'Olive, propos\u00e9s par Bruno DARID. \u2693\ufe0e Ann\u00e9e scolaire 2021-2022 \ud83d\udc40 MAJ octobre 2023 Ajout d'un interpr\u00e9teur python dans certaines pages d'exercices ( pour l'instant uniquement le niveau terminale et \u00e0 partir du chapitre 6 ). Cela a \u00e9t\u00e9 rendu possible gr\u00e2ce la distribution Python pour le Web Pyodide . Pyodide est un projet assez r\u00e9cent (2018), en d\u00e9veloppement reposant sur WebAssembly .","title":"Home"},{"location":"index.html#nsi","text":"Les cours de sp\u00e9cialit\u00e9 NSI au lyc\u00e9e de Bois d'Olive, propos\u00e9s par Bruno DARID.","title":"NSI"},{"location":"index.html#_1","text":"Ann\u00e9e scolaire 2021-2022 \ud83d\udc40 MAJ octobre 2023 Ajout d'un interpr\u00e9teur python dans certaines pages d'exercices ( pour l'instant uniquement le niveau terminale et \u00e0 partir du chapitre 6 ). Cela a \u00e9t\u00e9 rendu possible gr\u00e2ce la distribution Python pour le Web Pyodide . Pyodide est un projet assez r\u00e9cent (2018), en d\u00e9veloppement reposant sur WebAssembly .","title":""},{"location":"NSI1/S1/S1A1.html","text":"SEQUENCE 1 \u2693\ufe0e Les deux premi\u00e8res activit\u00e9s ont \u00e9t\u00e9 extraites et adapt\u00e9es du livre NSI 1re - Ed. Bordas ACTIVITE 1 - Constructions \u00e9l\u00e9mentaires & langages \u2693\ufe0e Adam a lu que dans la grande majorit\u00e9 des langages de programmation on retrouve les m\u00eames constructions \u00e9l\u00e9mentaires . Les deux premi\u00e8res constructions \u00e9l\u00e9mentaires auxquelles il s'int\u00e9resse sont les affectations et les s\u00e9quences d'instructions qui sont pr\u00e9sentes dans la fonction \u00e9crite en Python, suivante: 1 2 3 4 def conversion ( duree_en_minute ): heure = duree_en_minute // 60 minutes = duree_en_minute % 60 return heures , minutes Analyser A quelles lignes peut-on trouver: une affectation? une s\u00e9quence d'instructions? Parmi les deux fonctions suivantes, laquelle contient une boucle born\u00e9e ? une boucle non born\u00e9e ? Pr\u00e9ciser les mots cl\u00e9s utilis\u00e9s. 1 2 3 4 5 6 7 8 9 10 11 12 def estimer_quantite ( quantite_initiale , annee ): resultat = quantite_initiale while resultat <= quantite_initiale * 3 : resultat = resultat * 1.33 annee = annee + 1 return annee def augmentation ( quantite_initiale ): resultat = quantite_initiale for i in range ( 5 ): resultat = resultat * 1.33 return resultat On consid\u00e8re maintenant les 6 fonctions suivantes. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 def maximum ( a , b ): if a > b : return a else : return b def maximum2 ( a , b , c , d ): return maximum ( maximum ( a , b ), maximum ( c , d )) def positive ( valeur ): if valeur < 0 : valeur = - valeur return valeur def conversion ( en_bit ): en_octet = en_bit / 8 return en_octet def racine ( a ): x = 1 for i in range ( 10 ): x = ( x + a / x ) / 2 return x def compte_bits ( valeur ): nb_bits = 1 while valeur > 2 ** nb_bits : nb_bits = nb_bits + 1 return nb_bits Analyser Dans quelle(s) fonction(s) retrouve-t-on: une s\u00e9quence d'instructions ? une ou des affectations ? un test ? une boucle born\u00e9e ? une boucle non born\u00e9e ? un appel de fonction ? Adam s'attache maintenant \u00e0 \u00e9crire certaines fonctions pr\u00e9c\u00e9dentes avec le langage JavaScript afin de les comparer \u00e0 celle \u00e9crite en Python. Il commence par d\u00e9clarer une fonction nomm\u00e9e maximum() . 1 2 3 4 5 6 7 function maximum ( a , b ){ if ( a > b ) { return a } else { return b } } Analyser Citer les points communs avec le langage Python et rep\u00e9rer dans cet exemple 3 points particuliers du langage JavaScript. Adam \u00e9crit \u00e0 pr\u00e9sent cette fonction sans les indentations (version 1) et sur une seule ligne (version 2). Version 1 1 2 3 4 5 6 7 function maximum ( a , b ) { if ( a > b ) { return a } else { return b } } Version 2 1 function maximum ( a , b ){ if ( a > b ) { return a } else { return b } } Analyser Sachant que les deux \u00e9critures de la fonction maximum() sont correctes, quelles hypoth\u00e8ses peut-on formuler quant aux indentations et aux retours \u00e0 la ligne en javascript ? Quel caract\u00e8re est utilis\u00e9 en Javascript pour remplacer les indentations en python ? En gardant les indentations qui am\u00e9liore la lisibilit\u00e9 du code, Adam s'int\u00e9resse \u00e0 pr\u00e9sent \u00e0 la fonction augmentation() . 1 2 3 4 5 6 7 function augmentation ( quantite_initiale ) { let resultat = quantite_initiale for ( let i = 0 ; i < 5 ; i ++ ) { resultat = resultat * 1.33 } return resultat } Analyser En consid\u00e9rant le programme JavaScript augmentation() ci-dessus, citer deux nouveaux points communs et rep\u00e9rer deux diff\u00e9rences entre les langages Python et JavaScript. Formuler une hypoth\u00e8se sur l'utilit\u00e9 d'\u00e9crire le mot cl\u00e9 let aux lignes 2 et 3. Adam r\u00e9\u00e9crit \u00e9galement la premi\u00e8re fonction de cette activit\u00e9, conversion() , en Javascript. 1 2 3 4 5 function conversion ( duree_en_minute ) { let heures = Math . floor ( duree_en_minute / 60 ) let minutes = duree_en_minute % 60 return [ heures , minutes ] } Analyser En Javascript une fonction ne peut pas renvoyer un couple de valeur (en fait un n-uplet ). Comment Adam a-t-il choisi de renvoyer le r\u00e9sultat ? L'op\u00e9rateur qui calcule le reste de la division euclidienne est identique en python et en javascript: % . En revanche, il n'existe pas d'op\u00e9rateur en javascript pour calculer le quotient de la division euclidienne. Il faut calculer le quotient de la division et r\u00e9cup\u00e9rer sa partie enti\u00e8re en faisant appel \u00e0 une fonction native du langage JavaScript qui s'appelle floor() . Adam se rappelle avoir d\u00e9j\u00e0 utilis\u00e9 une fonction Python qui avait le m\u00eame nom. D'une mani\u00e8re g\u00e9n\u00e9rale, quelles difficult\u00e9s peut-on rencontrer quand on utilise un nouveau langage de programmation ?","title":"ACTIVITE 1"},{"location":"NSI1/S1/S1A1.html#sequence-1","text":"Les deux premi\u00e8res activit\u00e9s ont \u00e9t\u00e9 extraites et adapt\u00e9es du livre NSI 1re - Ed. Bordas","title":"SEQUENCE 1"},{"location":"NSI1/S1/S1A1.html#activite-1-constructions-elementaires-langages","text":"Adam a lu que dans la grande majorit\u00e9 des langages de programmation on retrouve les m\u00eames constructions \u00e9l\u00e9mentaires . Les deux premi\u00e8res constructions \u00e9l\u00e9mentaires auxquelles il s'int\u00e9resse sont les affectations et les s\u00e9quences d'instructions qui sont pr\u00e9sentes dans la fonction \u00e9crite en Python, suivante: 1 2 3 4 def conversion ( duree_en_minute ): heure = duree_en_minute // 60 minutes = duree_en_minute % 60 return heures , minutes Analyser A quelles lignes peut-on trouver: une affectation? une s\u00e9quence d'instructions? Parmi les deux fonctions suivantes, laquelle contient une boucle born\u00e9e ? une boucle non born\u00e9e ? Pr\u00e9ciser les mots cl\u00e9s utilis\u00e9s. 1 2 3 4 5 6 7 8 9 10 11 12 def estimer_quantite ( quantite_initiale , annee ): resultat = quantite_initiale while resultat <= quantite_initiale * 3 : resultat = resultat * 1.33 annee = annee + 1 return annee def augmentation ( quantite_initiale ): resultat = quantite_initiale for i in range ( 5 ): resultat = resultat * 1.33 return resultat On consid\u00e8re maintenant les 6 fonctions suivantes. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 def maximum ( a , b ): if a > b : return a else : return b def maximum2 ( a , b , c , d ): return maximum ( maximum ( a , b ), maximum ( c , d )) def positive ( valeur ): if valeur < 0 : valeur = - valeur return valeur def conversion ( en_bit ): en_octet = en_bit / 8 return en_octet def racine ( a ): x = 1 for i in range ( 10 ): x = ( x + a / x ) / 2 return x def compte_bits ( valeur ): nb_bits = 1 while valeur > 2 ** nb_bits : nb_bits = nb_bits + 1 return nb_bits Analyser Dans quelle(s) fonction(s) retrouve-t-on: une s\u00e9quence d'instructions ? une ou des affectations ? un test ? une boucle born\u00e9e ? une boucle non born\u00e9e ? un appel de fonction ? Adam s'attache maintenant \u00e0 \u00e9crire certaines fonctions pr\u00e9c\u00e9dentes avec le langage JavaScript afin de les comparer \u00e0 celle \u00e9crite en Python. Il commence par d\u00e9clarer une fonction nomm\u00e9e maximum() . 1 2 3 4 5 6 7 function maximum ( a , b ){ if ( a > b ) { return a } else { return b } } Analyser Citer les points communs avec le langage Python et rep\u00e9rer dans cet exemple 3 points particuliers du langage JavaScript. Adam \u00e9crit \u00e0 pr\u00e9sent cette fonction sans les indentations (version 1) et sur une seule ligne (version 2). Version 1 1 2 3 4 5 6 7 function maximum ( a , b ) { if ( a > b ) { return a } else { return b } } Version 2 1 function maximum ( a , b ){ if ( a > b ) { return a } else { return b } } Analyser Sachant que les deux \u00e9critures de la fonction maximum() sont correctes, quelles hypoth\u00e8ses peut-on formuler quant aux indentations et aux retours \u00e0 la ligne en javascript ? Quel caract\u00e8re est utilis\u00e9 en Javascript pour remplacer les indentations en python ? En gardant les indentations qui am\u00e9liore la lisibilit\u00e9 du code, Adam s'int\u00e9resse \u00e0 pr\u00e9sent \u00e0 la fonction augmentation() . 1 2 3 4 5 6 7 function augmentation ( quantite_initiale ) { let resultat = quantite_initiale for ( let i = 0 ; i < 5 ; i ++ ) { resultat = resultat * 1.33 } return resultat } Analyser En consid\u00e9rant le programme JavaScript augmentation() ci-dessus, citer deux nouveaux points communs et rep\u00e9rer deux diff\u00e9rences entre les langages Python et JavaScript. Formuler une hypoth\u00e8se sur l'utilit\u00e9 d'\u00e9crire le mot cl\u00e9 let aux lignes 2 et 3. Adam r\u00e9\u00e9crit \u00e9galement la premi\u00e8re fonction de cette activit\u00e9, conversion() , en Javascript. 1 2 3 4 5 function conversion ( duree_en_minute ) { let heures = Math . floor ( duree_en_minute / 60 ) let minutes = duree_en_minute % 60 return [ heures , minutes ] } Analyser En Javascript une fonction ne peut pas renvoyer un couple de valeur (en fait un n-uplet ). Comment Adam a-t-il choisi de renvoyer le r\u00e9sultat ? L'op\u00e9rateur qui calcule le reste de la division euclidienne est identique en python et en javascript: % . En revanche, il n'existe pas d'op\u00e9rateur en javascript pour calculer le quotient de la division euclidienne. Il faut calculer le quotient de la division et r\u00e9cup\u00e9rer sa partie enti\u00e8re en faisant appel \u00e0 une fonction native du langage JavaScript qui s'appelle floor() . Adam se rappelle avoir d\u00e9j\u00e0 utilis\u00e9 une fonction Python qui avait le m\u00eame nom. D'une mani\u00e8re g\u00e9n\u00e9rale, quelles difficult\u00e9s peut-on rencontrer quand on utilise un nouveau langage de programmation ?","title":"ACTIVITE 1 - Constructions \u00e9l\u00e9mentaires &amp; langages"},{"location":"NSI1/S1/S1A2.html","text":"S\u00e9quence 1 \u2693\ufe0e ACTIVITE 2 - Mise au point de programmes \u2693\ufe0e Sp\u00e9cification d'une fonction \u2693\ufe0e En tant que d\u00e9veloppeur python, on vous demande d'\u00e9crire une fonction de calcul de la racine carr\u00e9e d'un nombre. L'entreprise dans laquelle vous travaillez demande que chaque fonction soit document\u00e9e selon le plan suivant: Quel est le nom de la fonction ? Combien de param\u00e8tres sont accept\u00e9s en entr\u00e9e ? Pr\u00e9ciser leur type. Quel est le domaine valide des valeurs des param\u00e8tres? Combien de valeurs sont renvoy\u00e9es en sortie ? Pr\u00e9ciser leur type. Quel est le domaine valide de la valeur renvoy\u00e9e en sortie ? Si vos souvenirs sont bons en math\u00e9matiques, la racine carr\u00e9e d'un nombre est toujours positive ou nulle et ne peut-\u00eatre calcul\u00e9e que pour des valeurs positives ou nulles . Mobiliser des concepts R\u00e9pondre aux questions du plan en tenant compte des informations fournies. Les points 1, 2 et 4 du plan forment le prototype de la fonction car ils d\u00e9finissent le minimum d'informations \u00e0 conna\u00eetre pour pouvoir l'utiliser. A quoi servent les points 3 et 5 ? Comment ces informations pourraient-elles \u00eatre utilis\u00e9es ? Vous fournissez le programme suivant: 1 2 3 4 5 6 7 8 def racine ( a ): # m\u00e9thode de H\u00e9ron assert a >= 0 x = 1 for i in range ( 10 ): x = ( x + a / x ) / 2 assert x >= 0 return x Analyser & D\u00e9crire Pour chaque question du plan, indiquer la ligne du programme qui apporte la r\u00e9ponse. Tester la fonction racine() avec un argument invalide en entr\u00e9e, comme par exemple la valeur -2. Que se passe-t-il ? On souhaite ignorer la ligne 3 de la fonction racine() . Il suffit de la commenter comme suit # assert a >= 0 . Tester \u00e0 nouveau la fonction avec la valeur -2. Que se passe-t-il ? Pr\u00e9ciser alors le r\u00f4le de l'assertion utilis\u00e9e \u00e0 la ligne 3. Utiliser des jeux de test \u2693\ufe0e En tant que d\u00e9veloppeur python, on vous demande de v\u00e9rifier le bon comportement de chaque fonction \u00e9crite. Pour cela, il est conseill\u00e9 d'\u00e9crire une deuxi\u00e8me fonction, dit de v\u00e9rification ou de test . La fonction \u00e0 \u00e9crire, qui sera ensuite v\u00e9rifi\u00e9e, doit calculer un prix apr\u00e8s remise: si le prix est de 100 \u20ac ou moins, il n'y a pas de r\u00e9duction. Sinon, la r\u00e9duction sur le prix total est de 10 \u20ac. Vous \u00e9crivez donc les deux fonctions suivantes: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 def reduction ( prix ): if prix < 100 : return prix else : return prix - 10 def test_reduction (): if not reduction ( 50 ) == 50 : return False elif not reduction ( 150 ) == 140 : return False else : return True Analyser & D\u00e9crire Si la fonction de test renvoie False , que peut-on en d\u00e9duire sur le fonctionnement de la fonction reduction ? Que renvoie l'appel de la fonction test_reduction ? Est-il n\u00e9cessaire que le test renvoie True pour que la fonction soit correcte ? Dans le jeu de test, quelles sont finalement les seules valeurs test\u00e9es? Confiant dans l'exactitude de votre fonction, vous l'int\u00e9grez dans le logiciel qui doit l'utiliser. On s'aper\u00e7oit par la suite que la r\u00e9duction est appliqu\u00e9e pour un prix \u00e9gal \u00e0 100 \u20ac. Selon vous, d'o\u00f9 vient le probl\u00e8me ? La fonction de test est-elle suffisante ? Expliquer pourquoi. Est-il r\u00e9aliste de vouloir tester tous les cas possibles ? Commenter la citation de l'algorithmicien tr\u00e8s connu E. Dijkstra: le test de programmes peut-\u00eatre une fa\u00e7on tr\u00e8s efficace de montrer la pr\u00e9sence de bugs mais est d\u00e9sesp\u00e9r\u00e9ment inad\u00e9quate pour prouver leur absence . Plus tard, un autre d\u00e9veloppeur modifie votre fonction pour ajouter une r\u00e9duction suppl\u00e9mentaire si le prix d\u00e9passe 200 \u20ac. L'appel test_reduction() renvoie d\u00e9sormais False . Que faut-il en d\u00e9duire? Quel est l'int\u00e9r\u00eat d'avoir \u00e9crit cette fonction de test ?","title":"ACTIVITE 2"},{"location":"NSI1/S1/S1A2.html#sequence-1","text":"","title":"S\u00e9quence 1"},{"location":"NSI1/S1/S1A2.html#activite-2-mise-au-point-de-programmes","text":"","title":"ACTIVITE 2 - Mise au point de programmes"},{"location":"NSI1/S1/S1C1.html","text":"S\u00e9quence 1 \u2693\ufe0e COURS - Langage - Constructions \u00e9l\u00e9mentaires \u2693\ufe0e Rep\u00e8re historique \u2693\ufe0e En 1954, John Backus ( 1924-2007 ) pr\u00e9sente le premier vrai langage de programmation tel qu'on l'entend aujourd'hui: le Fortran . Il mit au point vers la fin des ann\u00e9es 50 le langage Algol . Il a, par la suite, propos\u00e9 la forme Backus-Naur notation qui permet de d\u00e9crire la grammaire des langages de programmation. Programme et langage de programmation \u2693\ufe0e Un programme est un texte qui d\u00e9crit un algorithme que l\u2019on souhaite faire ex\u00e9cuter par une machine . Ce texte est \u00e9crit dans un langage particulier, appel\u00e9 langage de programmation . On le sauvegarde dans un fichier dont l'extension donne une indication sur le langage utilis\u00e9 ( .py , .js , .c , etc.) Le principal langage utilis\u00e9 en sp\u00e9cialit\u00e9 NSI est le langage Python (cr\u00e9\u00e9 en 1991 par Guido Van Rossum) en version 3. C'est un langage de haut niveau ( d'abstraction ) et interpr\u00e9t\u00e9 , c'est-\u00e0-dire qu'il n\u00e9cessite un autre programme appel\u00e9 interpr\u00e9teur qui va se charger d'ex\u00e9cuter ligne par ligne le programme de l'utilisateur. Il existe bien \u00e9videmment d'autres langages de programmation. Il s'agit ici de pr\u00e9senter les constructions \u00e9l\u00e9mentaires que l'on retrouve dans la quasi totalit\u00e9 d'entre eux. Les entr\u00e9es/sorties \u2693\ufe0e Dans un langage de programmation on appelle entr\u00e9es/sorties des constructions permettant une communication avec l'utilisateur, donnant ainsi un aspect interactif au programme. En python, les fonctions print et input remplissent ces taches. 1 2 3 4 5 # Exemples print ( \"Hello World!\" ) print ( \"Python version 3.\" , \"Environnement\" , \"Jupyter Notebook 5.7\" ) print ( \"Python version 3.\" , \"Environnement\" , \"Jupyter Notebook 5.7\" , sep = \" :: \" , end = \" \" ) print ( \" !!! Pas de retour \u00e0 la ligne.\" ) 1 2 3 Hello World! Python version 3. Environnement Jupyter Notebook 5.7 Python version 3. :: Environnement :: Jupyter Notebook 5.7 !!! Pas de retour \u00e0 la ligne. Remarque Les arguments optionnels comme sep ou end par exemple, permettent d'adapter l'affichage aux besoins. Un effet (on dit aussi effet de bord ) de la fonction input est d'interrompre le d\u00e9roulement du programme et d'attendre que l'utilisateur tape quelque chose au clavier. Les caract\u00e8res entr\u00e9s sont g\u00e9n\u00e9ralement r\u00e9cup\u00e9r\u00e9s dans une variable . 1 2 3 niveau = input ( \"Quel est votre niveau en programmation (novice/interm\u00e9diaire/avanc\u00e9)? \" ) moyenne = input ( \"Quelle \u00e9tait votre moyenne annuelle en math ? \" ) print ( \"Vous avez r\u00e9pondu niveau: \" , niveau , \"avec \" , moyenne , \"en math!\" ) 1 2 3 Quel est votre niveau en programmation (novice/interm\u00e9diaire/avanc\u00e9)? avanc\u00e9 Quelle \u00e9tait votre moyenne annuelle en math ? 20 Vous avez r\u00e9pondu niveau: avanc\u00e9 avec 20 en math! Remarques input renvoie toujours une chaine de caract\u00e8res (m\u00eame si l'utilisateur entre un nombre!); la syntaxe employ\u00e9e \u00e0 l'int\u00e9rieur de la fonction print bien que correcte, pourra \u00eatre adapt\u00e9e ult\u00e9rieurement pour tenir compte des derni\u00e8res \u00e9volutions du langage. La d\u00e9claration-affectation \u2693\ufe0e Pour pouvoir acc\u00e9der aux donn\u00e9es, un programme d\u2019ordinateur fait abondamment usage de variables . En python, une variable est un nom associ\u00e9 \u00e0 un objet m\u00e9moire (voir video pour les plus curieux). Contrairement \u00e0 certains langages, les variables n'ont pas besoin d'\u00eatre d\u00e9clar\u00e9es au pr\u00e9alable, en python. La d\u00e9claration et l'affectation de variables peuvent se faire en une seule instruction. En python cette op\u00e9ration est r\u00e9alis\u00e9e selon le sch\u00e9ma nom_variable = valeur . Exemples 1 2 3 n = 7 msg = \"Affectation\" pi = 3.14 Remarques le nom de variable doit commencer par une lettre et ne pas \u00eatre un mot r\u00e9serv\u00e9 (voir liste ). Le type de l'objet r\u00e9f\u00e9renc\u00e9 par une variable est d\u00e9termin\u00e9 lors de l'affectation, de mani\u00e8re tout \u00e0 fait transparente. Dans l'exemple pr\u00e9c\u00e9dent, n d\u00e9signe un entier ( int ), msg d\u00e9signe une cha\u00eene de caract\u00e8res ( str ), pi d\u00e9signe un nombre d\u00e9cimal ( float ). S\u00e9quence et bloc d'instructions \u2693\ufe0e On peut d\u00e9finir une s\u00e9quence d'instructions comme un ensemble de deux instructions ex\u00e9cut\u00e9es l'une \u00e0 la suite de l'autre (l'ordre est important!). Par exemple, les lignes 1 2 x = x + 1 x = x * 2 constituent une s\u00e9quence d'instructions ( valide \u00e0 condition que la variable x ait \u00e9t\u00e9 affect\u00e9e au pr\u00e9alable ). Nos programmes comporteront g\u00e9n\u00e9ralement des s\u00e9quences de plus de deux instructions, on parlera alors de bloc d'instructions . En python, un bloc d'instructions est rep\u00e9r\u00e9 par son indentation , c'est-\u00e0-dire le d\u00e9calage par rapport au bloc pr\u00e9c\u00e9dent ( typiquement un multiple de 4 espaces ). Exemple La s\u00e9quence d'instructions ci-dessous permet de calculer et d'afficher l'aire \\(S\\) d'un disque de rayon \\(r\\) (rappel: \\(S=\\pi\\times r^{2}\\) ). 1 2 3 4 PI = 3.14 r = 5 s = PI * r ** 2 print ( s ) 1 78.5 Remarque Les instructions pr\u00e9c\u00e9dentes forment un seul bloc d'instructions (elles sont toutes align\u00e9es sur la m\u00eame colonne). Le test simple \u2693\ufe0e Cette construction permet d'ex\u00e9cuter une instruction ou un bloc d'instructions uniquement si une condition est v\u00e9rifi\u00e9e. En python, la syntaxe est la suivante: 1 2 if condition : bloc_instructions Exemple La construction x % 2 == 0 ( comparaison du reste de la division euclidienne de \\(x\\) par 2 avec z\u00e9ro) permet de tester si \\(x\\) est pair. 1 2 3 4 n = 50 if n % 2 == 0 : print ( n , \"est pair!\" ) print ( \"Sa moiti\u00e9 vaut \" , n // 2 ) 1 2 50 est pair! Sa moiti\u00e9 vaut 25 Pour identifier sans ambiguit\u00e9s les instructions appartenant au bloc v\u00e9rifiant la condition, on DOIT LES INDENTER en python. La condition est souvent exprim\u00e9e avec des op\u00e9rateurs de comparaisons . Voici quelques exemples: 1 2 3 4 5 6 x == y # x est \u00e9gal \u00e0 y x != y # x est diff\u00e9rent de y x > y # x est plus grand que y x < y # x est plus petit que y x >= y # x est plus grand que, ou \u00e9gal \u00e0 y x <= y # x est plus petit que, ou \u00e9gal \u00e0 y Le test avec alternative \u2693\ufe0e Dans un test avec alternative, on ajoute un bloc \u00e0 traiter lorsque la condition n'est pas v\u00e9rifi\u00e9e . La syntaxe est la suivante: 1 2 3 4 if condition : bloc_instructions_SI else : bloc_instructions_SINON Exemple 1 2 3 4 5 6 7 # Les test alternatif en python n = 501 if n % 2 == 0 : print ( n , \"est pair!\" ) print ( \"Sa moiti\u00e9 vaut \" , n // 2 ) else : print ( n , \" est impair\" ) 1 501 est impair La boucle conditionnelle, non born\u00e9e \u2693\ufe0e Une boucle conditionnelle , appel\u00e9 encore boucle while ( en anglais ) ou boucle tant que ( en fran\u00e7ais ) ex\u00e9cute un bloc d'instructions tant qu'une condition est v\u00e9rifi\u00e9e. En python, la boucle conditionnelle a la forme suivante: 1 2 while condition : bloc_instructions Remarques la condition s'exprime g\u00e9n\u00e9ralement avec les op\u00e9rateurs de comparaisons vus plus haut; le bloc d'instructions est indent\u00e9. Exemple 1 2 3 4 5 tab = 8 i = 1 while i < 10 : # la condition print ( i , \" x \" , tab , \" = \" , i * tab ) i = i + 1 1 2 3 4 5 6 7 8 9 1 x 8 = 8 2 x 8 = 16 3 x 8 = 24 4 x 8 = 32 5 x 8 = 40 6 x 8 = 48 7 x 8 = 56 8 x 8 = 64 9 x 8 = 72 ATTENTION Il faut que la condition ne soit plus v\u00e9rifi\u00e9e \u00e0 un moment donn\u00e9 pour assurer la terminaison de la boucle et \u00e9viter le bouclage infini. Ce point sera d\u00e9taill\u00e9 dans le cours d'algorithmique. Dans le cas pr\u00e9c\u00e9dent, la condition est: \\(i<10\\) . Or, \\(i\\) est un entier qui augmente de 1 \u00e0 chaque tour de boucle. Lorsqu'on aura atteint \\(i=10\\) , la condition ne sera plus v\u00e9rifi\u00e9e et on sortira de la boucle. La boucle inconditionnelle ou born\u00e9e \u2693\ufe0e Lorsque le nombre d'it\u00e9rations est connu d'avance la boucle devient inconditionnelle . On l'appelle encore boucle born\u00e9e ou boucle pour en fran\u00e7ais ( for loop en anglais). En python, la syntaxe de la boucle for est la suivante: 1 2 for variable_compteur in sequence : bloc_instructions Remarques sequence est une suite d'objets, comme des entiers, des caract\u00e8res d'une chaine, etc, (d'autres s\u00e9quences seront vus dans les prochains cours); typiquement une s\u00e9quence d'entiers est obtenue avec l'objet range(a, b) qui fourni les entiers allant de \\(a\\) \u00e0 \\(b-1\\) . Le bloc d'instructions doit \u00eatre indent\u00e9. Exemple 1 2 3 4 tab = 10 for i in range ( 1 , tab ): # i est la variable compteur, range(1, tab) fourni la sequence d'entiers print ( i , \" x \" , tab , \" = \" , i * tab ) 1 2 3 4 5 6 7 8 9 1 x 10 = 10 2 x 10 = 20 3 x 10 = 30 4 x 10 = 40 5 x 10 = 50 6 x 10 = 60 7 x 10 = 70 8 x 10 = 80 9 x 10 = 90 Diversit\u00e9 et unit\u00e9 des langages \u2693\ufe0e Les langages de programmations sont tr\u00e8s nombreux. Ils peuvent \u00eatre class\u00e9s suivant leur style ou paradigme (fa\u00e7on de mod\u00e9liser les probl\u00e8mes et les r\u00e9soudre). Plusieurs paradigmes (orient\u00e9 objet ou fonctionnel) seront abord\u00e9s en terminale. En 1re, on peut se limiter au style imp\u00e9ratif , dans lequel les probl\u00e8mes sont r\u00e9solus de mani\u00e8re s\u00e9quentielle, en proc\u00e9dant \u00e0 des modifications de la m\u00e9moire. Il est fait usage de variables , de boucles , etc. Passer d'un langage \u00e0 un autre peut \u00eatre facile \u00e0 l'int\u00e9rieur d'un m\u00eame paradigme car les constructions sont souvent assez proches. On peut aussi distinguer les langages suivant le fait qu'ils soient: interpr\u00e9t\u00e9 1 ou compil\u00e9 2 ; \u00e0 typage dynamique 3 ou statique 4 ; Exemples Le test alternatif en Javascript 1 2 3 4 5 6 7 8 const N = 50 ; if ( N % 2 === 0 ) { console . log ( N + \" est pair\" ); console . log ( \"Sa moiti\u00e9 vaut \" + N / 2 ); } else { console . log ( N + \" est impair\" ); } Le test alternatif en C 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #include <stdio.h> int main ( void ) { int N = 50 ; if (( N % 2 ) == 0 ){ printf ( \"%d est pair \\n \" , N ); printf ( \"Sa moiti\u00e9 vaut %d \\n \" , N / 2 ); } else { printf ( \"%d est impair \\n \" , N ); } return 0 ; } un programme annexe lit le code source et ex\u00e9cute les instructions; c'est le cas du langage Python (l'interpr\u00e9teur le plus courant s'appelle CPython). \u21a9 un programme annexe transforme le code source en langage machine (une fois) avant son ex\u00e9cution. \u21a9 une variable n'a pas besoin d'\u00eatre d\u00e9clar\u00e9e et peut changer de type au cours du programme (exemple en python). \u21a9 les variables doivent \u00eatre d\u00e9clar\u00e9es et ne peuvent changer de type. \u21a9","title":"COURS 1"},{"location":"NSI1/S1/S1C1.html#sequence-1","text":"","title":"S\u00e9quence 1"},{"location":"NSI1/S1/S1C1.html#cours-langage-constructions-elementaires","text":"","title":"COURS - Langage - Constructions \u00e9l\u00e9mentaires"},{"location":"NSI1/S1/S1C2.html","text":"S\u00e9quence 1 \u2693\ufe0e COURS - Conception & Mise au point de programmes \u2693\ufe0e Rep\u00e8re historique \u2693\ufe0e John McCarthy (1927-2011) auteur du langage Lisp en 1958 qui est le deuxi\u00e8me langage ancien encore largement diffus\u00e9 aujourd'hui. Il joua un r\u00f4le majeur dans la programmation en intelligence artificielle, \u00e9crivant un des premiers programmes jouant aux \u00e9checs. Qu'est-ce qu'une fonction ? \u2693\ufe0e Les programmeurs d\u00e9composent souvent leur programmes en blocs courts. Chaque bloc de code, associ\u00e9 \u00e0 un nom, est appel\u00e9 fonction . Proc\u00e9der ainsi, permet: d'\u00e9viter les r\u00e9p\u00e9titions et donc de factoriser le code; de faciliter la maintenance; de faciliter dans une certaine mesure le travail en \u00e9quipe. Note D'autres termes comme sous-programme, proc\u00e9dure, etc. sont parfois employ\u00e9s, \u00e0 quelques nuances pr\u00e8s. On ne les utilisera pas en sp\u00e9cialit\u00e9 NSI. Comment d\u00e9finir et appeler une fonction ? \u2693\ufe0e La syntaxe pr\u00e9sent\u00e9e ici est celle du langage Python. On d\u00e9finit une fonction avec: le mot cl\u00e9 def suivi d'un nom; une paire de parenth\u00e8ses \u00e0 l'int\u00e9rieur desquelles figurent \u00e9ventuellement des param\u00e8tres; le caract\u00e8re deux-points : qui termine la ligne de d\u00e9claration; un bloc de code indent\u00e9 qui forme le corps de la fonction; le mot cl\u00e9 return (optionnel) 1 2 def nom_fonction ( param\u00e8tre ( s )): bloc_instructions Le nom de la fonction doit commencer par une lettre et ne doit pas \u00eatre un mot reserv\u00e9. Ce nom sera le plus explicite possible. La fonction peut avoir 0, 1 ou plus de param\u00e8tres. Exemple 1 2 3 4 5 def deux_puissance ( n ): p = 1 for c in range ( n ): p = p * 2 return p Lorsqu'on ex\u00e9cute ce code, il ne se passe rien . A ce stade on a d\u00e9finit la fonction, il faut maintenant l'appeler pour que tout son code soit ex\u00e9cut\u00e9. L'appel d'une fonction consiste \u00e0 \u00e9crire son nom suivi de parenth\u00e8ses ouvrantes-fermantes \u00e0 l'int\u00e9rieur desquelles on place d'\u00e9ventuels arguments . 1 2 3 # Calcul et affichage de 2^8 et 2^16 print ( deux_puissance ( 8 )) print ( deux_puissance ( 16 )) 1 2 256 65536 Note En l'absence d'instruction return , python renvoie implicitement une valeur particuli\u00e8re None qui signifie 'rien'; une fonction peut appeler une autre fonction (concept d\u00e9velopp\u00e9 en classe de terminale). Sp\u00e9cifier une fonction \u2693\ufe0e Qu'est-ce qu'une sp\u00e9cification ? \u2693\ufe0e En plus d'un nom explicite, une fonction devrait \u00eatre convenablement document\u00e9e. Cette documentation devra comporter les sp\u00e9cifications de la fonction. Sp\u00e9cifier une fonction consiste \u00e0 donner: la liste ordonn\u00e9e et le type de ses param\u00e8tres; une description du r\u00e9sultat renvoy\u00e9 ou post-conditions ; les conditions ou propri\u00e9t\u00e9s portant sur les param\u00e8tres d'entr\u00e9e ou pr\u00e9-conditions . En python, la documentation suit imm\u00e9diatement la d\u00e9finition de la fonction et est encadr\u00e9e par des triples double quotes \"\"\" . Pour garantir les post-conditions ou les pr\u00e9-conditions, on peut utiliser des assertions . Definition Une assertion est une proposition logique qui doit \u00eatre vraie ( True en python) sinon le programme est arr\u00eat\u00e9. La syntaxe d'une assertion en python est: 1 assert expression , \"Message d'erreur explicite\" Par ailleurs, la documentation d'une fonction est en outre accessible avec la fonction native help() Exemple complet \u2693\ufe0e Sp\u00e9cifions la fonction deux_puissance pr\u00e9c\u00e9dente. On utilisera la fonction native de python isinstance pour v\u00e9rifier que le type d'un objet est bien celui attendu. 1 2 3 4 5 6 7 8 9 10 11 12 13 def deux_puissance ( n ): \"\"\" renvoie la puissance n-i\u00e8me de 2; n: entier naturel. \"\"\" # Pr\u00e9conditions assert isinstance ( n , int ), \"Erreur: n entier\" assert n >= 0 , \"Erreur: n >= 0\" p = 1 for c in range ( n ): p = p * 2 return p 1 deux_puissance ( 20 ) 1 1048576 En cas de non respect des pr\u00e9conditions, le contrat entre le programmeur et l'utilisateur est rompu et le programme s'arr\u00eate. Par exemple, un appel deux_puissance(2.5) conduit \u00e0: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 --------------------------------------------------------------------------- AssertionError Traceback (most recent call last) <ipython-input-11-34ff1cbea852> in <module> 1 # Non respect de: \"n, entier naturel\". 2 ----> 3 deux_puissance(2.5) <ipython-input-9-5988c4a4a8b7> in deux_puissance(n) 5 \"\"\" 6 # Pr\u00e9conditions ----> 7 assert isinstance(n, int), \"Erreur: n entier\" 8 assert n >= 0, \"Erreur: n >= 0\" 9 AssertionError: Erreur: n entier L'acc\u00e8s \u00e0 la documentation se fait avec help(deux_puissance) . 1 2 3 4 5 Help on function deux_puissance in module __main__: deux_puissance(n) renvoie la puissance n-i\u00e8me de 2; n: entier naturel. Utiliser des biblioth\u00e8ques \u2693\ufe0e La plupart des langages de programmation proposent des fonctions toutes pr\u00eates. Ces fonctions fournies avec le langage sont regroup\u00e9es au sein d'une biblioth\u00e8que standard . Les fonctions sont regroup\u00e9es par modules sp\u00e9cialis\u00e9s (par exemple math ou random ). Pour pouvoir utiliser les objets ( des fonctions par exemple ) d'un module, il faut les importer avec l'instruction import . On privil\u00e9giera la notation from module import objet au lieu de from module import * . Exemple 1 2 3 4 # Utilisation de la fonction racine carr\u00e9e (sqrt) du module math from math import sqrt print ( sqrt ( 2 )) 1 1.4142135623730951 Une autre construction possible et aussi valable que la pr\u00e9c\u00e9dente, consiste \u00e0 importer le module avec import module puis \u00e0 utiliser l'objet avec la notation point\u00e9e module.objet . Exemple 1 2 3 import math print ( math . sqrt ( 2 )) 1 1.4142135623730951 Tester son code \u2693\ufe0e Pour s'assurer que le programme fonctionne comme pr\u00e9vu, il est n\u00e9cessaire de le tester. Un jeu de tests devrait couvrir les cas d'utilisation: typiques; limites. On peut utiliser des assertions dans un premier temps (l'utilisation d'un module de test sp\u00e9cialis\u00e9 peut \u00eatre envisag\u00e9 en python). Enfin, une approche moderne consiste \u00e0 \u00e9crire ses tests avant les fonctions. Exemple 1 2 3 4 5 6 7 8 9 10 # Jeu de tests def test_puissance (): # Cas limite assert deux_puissance ( 0 ) == 1 # Cas typique assert deux_puissance ( 10 ) == 1024 return 'Tests OK' test_puissance () 1 'Tests OK' IMPORTANT Le succ\u00e8s d'un jeu de test ne garantit pas que le programme ne contient pas de bugs. Ce succ\u00e8s est une condition n\u00e9cessaire mais non suffisante.","title":"COURS 2"},{"location":"NSI1/S1/S1C2.html#sequence-1","text":"","title":"S\u00e9quence 1"},{"location":"NSI1/S1/S1C2.html#cours-conception-mise-au-point-de-programmes","text":"","title":"COURS - Conception &amp; Mise au point de programmes"},{"location":"NSI1/S1/S1E1.html","text":"S\u00e9quence 1 \u2693\ufe0e EXERCICES \u2693\ufe0e Exercice 1: quelques pi\u00e8ges de l'affectation \u2693\ufe0e On d\u00e9finit la fonction calcul_v1 suivante: 1 2 3 4 5 def calcul_v1 ( n ): resultat = 0 for i in range ( n ): resultat = resultat + 1 return resultat Donner deux constructions \u00e9l\u00e9mentaires diff\u00e9rentes ainsi que le num\u00e9ro de la ligne o\u00f9 elles apparaissent. On modifie l\u00e9g\u00e8rement la fonction pr\u00e9c\u00e9dente, pour obtenir une autre version: 1 2 3 4 def calcul_v2 ( n ): for i in range ( n ): resultat = resultat + 1 return resultat L'ex\u00e9cution de calcul_v2(0) provoque cette fois-ci l'erreur suivante: 1 2 3 4 5 6 7 8 9 10 11 --------------------------------------------------------------------------- UnboundLocalError Traceback ( most recent call last ) < ipython - input - 5 - e000315c4ef2 > in < module > ----> 1 calcul_v2 ( 0 ) < ipython - input - 4 - 012 f1c01c96b > in calcul_v2 ( n ) 2 for i in range ( n ): 3 resultat = resultat + 1 ----> 4 return resultat UnboundLocalError : local variable 'resultat' referenced before assignment En comparant avec la premi\u00e8re version, donner l'origine cette erreur. Proposer une explication de la situation. 3. Un \u00e9l\u00e8ve ex\u00e9cute la s\u00e9quence d'instructions suivante: 1 2 calcul_v1 ( 100 ) somme_100 = resultat Malheureusement cette s\u00e9quence \u00e9choue. L'interpr\u00e9teur python affiche l'erreur 1 NameError : name 'resultat' is not defined Cette erreur semble curieuse \u00e0 priori car la variable resultat a \u00e9t\u00e9 d\u00e9clar\u00e9e et affect\u00e9e dans la fonction calcul_v1 . Faire une hypoth\u00e8se sur la visibilit\u00e9 d'une variable d\u00e9clar\u00e9e \u00e0 l'int\u00e9rieur d'une fonction. Exercice 2: des \u00e9toiles en boucle \u2693\ufe0e Pr\u00e9ambule: compl\u00e9ments sur les cha\u00eenes de caract\u00e8re \u2693\ufe0e Utilisation des op\u00e9rateurs + et * 1 2 ch = '_/\\_' print ( ch ) 1 _/\\_ L'op\u00e9rateur + permet de concat\u00e9ner deux cha\u00eenes. 1 print ( ch + ch + ch ) 1 _/\\__/\\__/\\_ On peut aussi utiliser l'op\u00e9rateur * entre une cha\u00eene et un entier. 1 2 ch = ch * 3 print ( ch ) 1 _/\\__/\\__/\\_ Dans ce dernier exemple ch r\u00e9f\u00e9rence un nouvel objet r\u00e9sultant de la concat\u00e9nation _/\\_ + _/\\_ + _/\\_ . Le caract\u00e8re d'\u00e9chappement \\ Sa pr\u00e9sence dans une cha\u00eene modifie le caract\u00e8re qui le suit. Ainsi \\n ne d\u00e9signe pas n mais un saut de ligne. 1 print ( '100 \\n 200 \\n 300' ) 1 2 3 100 200 300 Enonc\u00e9 \u2693\ufe0e On consid\u00e8re la fonction etoilef suivante, dont la documentation est incompl\u00e8te. 1 2 3 4 5 6 7 8 def etoilef ( n ): \"\"\" A compl\u00e9ter \"\"\" a = '' for i in range ( 1 , n + 1 ): a = a + '*' * i + ' \\n ' return a Que r\u00e9alise cette fonction? En cas de difficult\u00e9, on peut r\u00e9aliser quelques appels print(etoilef(n)) , n \u00e9tant un entier naturel sup\u00e9rieur ou \u00e9gal \u00e0 1. Compl\u00e9ter la documentation de la fonction. Sur la \\(i\\) -\u00e8me ligne, \\(i\\) \u00e9tant un entier sup\u00e9rieur \u00e0 1, combien a-t-on d'\u00e9toiles ? Transformer la fonction etoilef en une fonction etoilew qui utilise une boucle conditionnelle ( while ) et qui r\u00e9pond aux m\u00eames sp\u00e9cifications. Exercice 3: diversit\u00e9 des langages \u2693\ufe0e Aucune connaissance des langages cit\u00e9s ci-dessous n'est n\u00e9cessaire pour r\u00e9soudre l'exercice. Il s'agit d'un travail sur les similitudes et les diff\u00e9rences existant entre ces langages . Le m\u00e9lange de Fisher-Yates est un algorithme qui permet de m\u00e9langer des objets (voir sa description sur Wikipedia ). On se propose de comparer la traduction cet algorithme dans divers langages de programmation. Pascal (1970) 1 2 3 4 5 6 7 8 9 10 11 12 13 procedure shuffleList ( var tab : tableau ) ; var i , j , tmp : integer ; begin for i := 1 to High ( tab ) - Low ( tab ) do begin j := random ( i + 1 ) ; if j < i then tmp := tab [ i + Low ( tab )] ; tab [ i + Low ( tab )] := tab [ j + Low ( tab )] ; tab [ j + Low ( tab )] := tmp end ; end ; end ; C (1972) 1 2 3 4 5 6 7 8 9 10 11 void shuffle ( int tab [], int n ) { int i ; for ( i = 1 ; i < n ; ++ i ) { int j = random ( i + 1 ); if ( j < i ) { int tmp = tab [ i ]; tab [ i ] = tab [ j ]; tab [ j ] = tmp ; } } } Go (2009) 1 2 3 4 5 6 7 8 9 10 func shuffle ( tab [] int ) { for i := 1 ; i < len ( tab ); i ++ { j := rand . Intn ( i + 1 ) if j < i { tmp := tab [ i ] tab [ i ] := tab [ j ] tab [ j ] := tmp } } } ECMAScript (Javascript) ES 6 (2015) 1 2 3 4 5 6 7 8 9 10 const shuffle = ( tab ) => { for ( let i = 1 ; i < tab . length ; i ++ ) { let j = Math . floor (( i + 1 ) * Math . random ()) if ( j < i ) { let temp = tab [ j ] tab [ j ] = tab [ i ] tab [ i ] = temp } } } Python (1991) 1 2 3 4 5 def shuffle ( tab ): for i in range ( 1 , len ( tab )): j = random . randint ( 0 , i ) if j < i : tab [ i ], tab [ j ] = tab [ j ], tab [ i ] Comment sont d\u00e9limit\u00e9s les blocs d'instructions ? Est-il n\u00e9cessaire de d\u00e9clarer les variables locales dans une fonction ? Comment est construite une boucle for ? A partir des informations propos\u00e9es, de quel(s) langage(s), le Go est-il proche ? R\u00e9ponses Pascal C Go Python Javascript (ES 6) D\u00e9limiteurs Variables locales Structure boucle for Exercice 4: sp\u00e9cifier une fonction et tests \u2693\ufe0e Lucas a d\u00e9j\u00e0 eu 3 notes sur 20 en NSI: 14 coef. 1 15 coef. 2 16 coef. 2 La derni\u00e8re \u00e9valuation pr\u00e9vue sera affect\u00e9e d'un coefficient 5. Lucas veut pr\u00e9voir sa moyenne trimestrielle en \u00e9crivant une fonction moyenne qui prendra en param\u00e8tre sa derni\u00e8re note et qui renvoie sa moyenne trimestrielle. Ecrire les sp\u00e9cifications de la fonction moyenne . Donner une assertion qui permet de garantir la pr\u00e9condition. Lucas a bien pris note des bonnes pratiques de programmation. Il commence par \u00e9crire une fonction de tests de sa fonction moyenne : 1 2 3 4 5 6 7 def test_moyenne (): # Cas limites assert isclose ( moyenne ( 0 ), 7.6 ) assert isclose ( moyenne ( 20 ), 17.6 ) # Cas typique assert isclose ( moyenne ( 10 ), 12.6 ) return 'Tests OK' Compl\u00e9ter cette fonction de test. Ecrire la fonction moyenne et tester la. Exercice 5: divisibilit\u00e9 \u2693\ufe0e Un moyen simple pour savoir si un entier naturel \\(a\\) est divisible par un entier naturel \\(k\\) non nul, est de tester le reste de la division de \\(a\\) par \\(k\\) . S'il est nul alors \\(a\\) est divisible par \\(k\\) . La fonction est_divisible ci-dessous code cette propri\u00e9t\u00e9. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def est_divisible ( a , k ): \"\"\" Renvoie vrai (True) si a est divisible par k, faux (False) sinon. a: entier naturel k: entier naturel strictement positif \"\"\" assert isinstance ( a , int ), \"Erreur, a entier\" assert a >= 0 , \"Erreur, a entier naturel\" assert isinstance ( k , int ), \"Erreur, k entier\" assert k > 0 , \"Erreur, k strictement positif\" return a % k == 0 def test_divisible (): assert est_divisible ( 0 , 1 ) is True assert est_divisible ( 2 , 1 ) is True assert est_divisible ( 10 , 3 ) is False return 'Tests OK' Combien de param\u00e8tres requiert la fonction est_divisible ? Quel est l'int\u00e9r\u00eat des lignes 7 \u00e0 10 ? Tester la fonction est_divisible . Pr\u00e9voir le r\u00e9sultat renvoy\u00e9 par l'appel test_divisible() si on rajoute avant la ligne return ... l'instruction assert est_divisible(10, 0) is False . Exercice 6: ann\u00e9e bissextile \u2693\ufe0e Dans le calendrier gr\u00e9gorien, une ann\u00e9e est bissextile si (voir article wikipedia ) on se trouve dans un des cas suivants: l'ann\u00e9e est divisible par 4 et non divisible par 100 ; l'ann\u00e9e est divisible par 400 On souhaite coder une fonction est_bissextile qui prend en param\u00e8tre une ann\u00e9e et qui renvoie le r\u00e9sultat logique vrai ou faux ( True ou False en python) selon que l'ann\u00e9e est bissextile ou non. Pour simplifier, on consid\u00e8re que le passage au calendrier gr\u00e9gorien a eu lieu en 1583. Compl\u00e9ter les sp\u00e9cifications de la fonction est_bissextile ci-dessous. Seuls les ... sont \u00e0 compl\u00e9ter. Ne pas supprimer l'instruction pass qui sera remplac\u00e9e par votre code plus tard. 1 2 3 4 5 6 7 # A compl\u00e9ter def est_bissextile ( ... ): \"\"\" ... \"\"\" pass Ecrire une fonction de tests test_bissextile en utilisant les r\u00e9sultats disponibles sur la page wikipedia . 1 2 3 4 # A compl\u00e9ter apr\u00e8s avoir supprimer l'instruction pass def test_bissextile (): pass Compl\u00e9ter la fonction est_bissextile en rempla\u00e7ant l'instruction pass par votre code et en r\u00e9-utilisant la fonction est_divisble de l'exercice pr\u00e9c\u00e9dent. Tester votre fonction.","title":"EXERCICES 1"},{"location":"NSI1/S1/S1E1.html#sequence-1","text":"","title":"S\u00e9quence 1"},{"location":"NSI1/S1/S1E1.html#exercices","text":"","title":"EXERCICES"},{"location":"NSI1/S1/sequence1.html","text":"SEQUENCE 1 \u2693\ufe0e Les deux premi\u00e8res activit\u00e9s ont \u00e9t\u00e9 extraites et adapt\u00e9es du livre NSI 1re - Ed. Bordas ACTIVITE 1 - Constructions \u00e9l\u00e9mentaires & langages \u2693\ufe0e Adam a lu que dans la grande majorit\u00e9 des langages de programmation on retrouve les m\u00eames constructions \u00e9l\u00e9mentaires. Les deux premi\u00e8res constructions \u00e9l\u00e9mentaires auxquelles il s'int\u00e9resse sont les affectations et les s\u00e9quences d'instructions qui sont pr\u00e9sentes dans la fonction Python suivante: 1 2 3 4 def conversion ( duree_en_minute ): heure = duree_en_minute // 60 minutes = duree_en_minute % 60 return heures , minutes R\u00e9pondre aux questions A quelles lignes peut-on trouver: une affectation? une s\u00e9quence d'instructions? Parmi les deux fonctions suivantes, laquelle contient une boucle born\u00e9e ? une boucle non born\u00e9e ? Pr\u00e9ciser les mots cl\u00e9s utilis\u00e9s. 1 2 3 4 5 6 7 8 9 10 11 12 def estimer_quantite ( quantite_initiale , annee ): resultat = quantite_initiale while resultat <= quantite_initiale * 3 : resultat = resultat * 1.33 annee = annee + 1 return annee def augmentation ( quantite_initiale ): resultat = quantite_initiale for i in range ( 5 ): resultat = resultat * 1.33 return resultat On consid\u00e8re maintenant les 6 fonctions suivantes. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 def maximum ( a , b ): if a > b : return a else : return b def maximum2 ( a , b , c , d ): return maximum ( maximum ( a , b ), maximum ( c , d )) def positive ( valeur ): if valeur < 0 : valeur = - valeur return valeur def conversion ( en_bit ): en_octet = en_bit / 8 return en_octet def racine ( a ): x = 1 for i in range ( 10 ): x = ( x + a / x ) / 2 return x def compte_bits ( valeur ): nb_bits = 1 while valeur > 2 ** nb_bits : nb_bits = nb_bits + 1 return nb_bits R\u00e9pondre aux questions Dans quelle(s) fonction(s) retrouve-t-on: une s\u00e9quence d'instructions ? une ou des affectations ? un test ? une boucle born\u00e9e ? une boucle non born\u00e9e ? un appel de fonction ? Adam s'attache maintenant \u00e0 \u00e9crire certaines fonctions pr\u00e9c\u00e9dentes avec le langage JavaScript afin de les comparer \u00e0 celle \u00e9crite en Python. Il commence par \u00e9crire la fonction nomm\u00e9e maximum() . 1 2 3 4 5 6 7 function maximum ( a , b ){ if ( a > b ) { return a } else { return b } } Analyser Citer les points communs avec le langage Python et rep\u00e9rer dans cet exemple 3 points particuliers du langage JavaScript. Adam \u00e9crit \u00e0 pr\u00e9sent cette fonction sans les indentations (version 1) et sur une seule ligne (version 2). Version 1 1 2 3 4 5 6 7 function maximum ( a , b ) { if ( a > b ) { return a } else { return b } } Version 2 1 function maximum ( a , b ){ if ( a > b ) { return a } else { return b } } R\u00e9pondre aux questions Sachant que les deux \u00e9critures de la fonction maximum() sont correctes, quelles hypoth\u00e8ses peut-on formuler quant aux indentations et aux retours \u00e0 la ligne en javascript ? Quel signe de ponctuation est utilis\u00e9 en Javascript pour remplacer les indentations en python ? En gardant les indentations qui am\u00e9liore la lisibilit\u00e9 du code, Adam s'int\u00e9resse \u00e0 pr\u00e9sent \u00e0 la fonction augmentation() . 1 2 3 4 5 6 7 function augmentation ( quantite_initiale ) { let resultat = quantite_initiale for ( let i = 0 ; i < 5 ; i ++ ) { resultat = resultat * 1.33 } return resultat } Analyser En consid\u00e9rant le programme JavaScript augmentation() ci-dessus, citer deux nouveaux points communs et rep\u00e9rer deux diff\u00e9rences entre les langages Python et JavaScript. Formuler une hypoth\u00e8se sur l'utilit\u00e9 d'\u00e9crire le mot cl\u00e9 let aux lignes 2 et 3. Adam r\u00e9\u00e9crit \u00e9galement la premi\u00e8re fonction de cette activit\u00e9, conversion() , en Javascript. 1 2 3 4 5 function conversion ( duree_en_minute ) { let heures = Math . floor ( duree_en_minute / 60 ) let minutes = duree_en_minute % 60 return [ heures , minutes ] } R\u00e9pondre aux questions En Javascript une fonction ne peut pas renvoyer un couple de valeur (en fait un n-uplet ). Comment Adam a-t-il choisi de renvoyer le r\u00e9sultat ? L'op\u00e9rateur qui calcule le reste de la division euclidienne est identique en python et en javascript: % . En revanche, il n'existe pas d'op\u00e9rateur en javascript pour calculer le quotient de la division euclidienne. Il faut calculer le quotient de la division et r\u00e9cup\u00e9rer sa partie enti\u00e8re en faisant appel \u00e0 une fonction native du langage JavaScript qui s'appelle floor() . Adam se rappelle avoir d\u00e9j\u00e0 utilis\u00e9 une fonction Python qui avait le m\u00eame nom. D'une mani\u00e8re g\u00e9n\u00e9rale, quelles difficult\u00e9s peut-on rencontrer quand on utilise un nouveau langage de programmation ? ACTIVITE 2 - Mise au point de programmes \u2693\ufe0e Sp\u00e9cification d'une fonction \u2693\ufe0e En tant que d\u00e9veloppeur python, on vous demande d'\u00e9crire une fonction de calcul de la racine carr\u00e9e d'un nombre. L'entreprise dans laquelle vous travaillez demande que chaque fonction soit document\u00e9e selon le plan suivant: Quel est le nom de la fonction ? Combien de param\u00e8tres sont accept\u00e9s en entr\u00e9e ? Pr\u00e9ciser leur type. Quel est le domaine valide des valeurs des param\u00e8tres? Combien de valeurs sont renvoy\u00e9es en sortie ? Pr\u00e9ciser leur type. Quel est le domaine valide de la valeur renvoy\u00e9e en sortie ? Si vos souvenirs sont bons en math\u00e9matiques, la racine carr\u00e9e d'un nombre est toujours positive ou nulle et ne peut-\u00eatre calcul\u00e9e que pour des valeurs positives ou nulles . Questions R\u00e9pondre aux questions du plan en tenant compte des informations fournies. Les points 1, 2 et 4 du plan forment le prototype de la fonction car ils d\u00e9finissent le minimum d'informations \u00e0 conna\u00eetre pour pouvoir l'utiliser. A quoi servent les points 3 et 5 ? Comment ces informations pourraient-elles \u00eatre utilis\u00e9es ? Vous fournissez le programme suivant: 1 2 3 4 5 6 7 8 def racine ( a ): # m\u00e9thode de H\u00e9ron assert a >= 0 x = 1 for i in range ( 10 ): x = ( x + a / x ) / 2 assert x >= 0 return x Questions Pour chaque question du plan, indiquer la ligne du programme qui apporte la r\u00e9ponse. Tester la fonction racine() avec un argument invalide en entr\u00e9e, comme par exemple la valeur \\(-2\\) . Que se passe-t-il ? On souhaite ignorer la ligne 3 de la fonction racine() . Il suffit de la commenter comme suit # assert a >= 0 . Tester \u00e0 nouveau la fonction avec la valeur \\(-2\\) . Que se passe-t-il ? Pr\u00e9ciser alors le r\u00f4le de l'assertion utilis\u00e9e \u00e0 la ligne 3. Utiliser des jeux de test \u2693\ufe0e En tant que d\u00e9veloppeur python, on vous demande de v\u00e9rifier le bon comportement de chaque fonction \u00e9crite. Pour cela, il faut \u00e9crire une deuxi\u00e8me fonction, dit de v\u00e9rification ou de test . La fonction \u00e0 \u00e9crire, qui sera ensuite v\u00e9rifi\u00e9e, doit calculer un prix apr\u00e8s remise: si le prix est de 100 \u20ac ou moins, il n'y a pas de r\u00e9duction. Sinon, la r\u00e9duction sur le prix total est de 10 \u20ac. Vous \u00e9crivez donc les deux fonctions suivantes: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 def reduction ( prix ): if prix < 100 : return prix else : return prix - 10 def test_reduction (): if not reduction ( 50 ) == 50 : return False elif not reduction ( 150 ) == 140 : return False else : return True Questions Si la fonction de test renvoie False , que peut-on en d\u00e9duire sur le fonctionnement de reduction(prix) ? Que renvoie l'appel test_reduction ? Est-il n\u00e9cessaire que le test renvoie True pour que la fonction soit correcte ? Dans le jeu de test, quelles sont finalement les seules valeurs test\u00e9es? Confiant dans l'exactitude de votre fonction, vous l'int\u00e9grez dans le logiciel qui doit l'utiliser. On s'aper\u00e7oit par la suite que la r\u00e9duction est appliqu\u00e9e pour un prix \u00e9gal \u00e0 100 \u20ac. Selon vous, d'o\u00f9 vient le probl\u00e8me ? La fonction de test est-elle suffisante ? Expliquer pourquoi. Est-il r\u00e9aliste de vouloir tester tous les cas possibles ? Commenter la citation de l'algorithmicien tr\u00e8s connu E. Dijkstra: le test de programmes peut-\u00eatre une fa\u00e7on tr\u00e8s efficace de montrer la pr\u00e9sence de bugs mais est d\u00e9sesp\u00e9r\u00e9ment inad\u00e9quate pour prouver leur absence . Plus tard, un autre d\u00e9veloppeur modifie votre fonction pour ajouter une r\u00e9duction suppl\u00e9mentaire si le prix d\u00e9passe 200 \u20ac. L'appel test_reduction() renvoie d\u00e9sormais False . Que faut-il en d\u00e9duire? Quel est l'int\u00e9r\u00eat d'avoir \u00e9crit cette fonction de test ? COURS - Langage - Constructions \u00e9l\u00e9mentaires \u2693\ufe0e Rep\u00e8re historique \u2693\ufe0e En 1954, John Backus ( 1924-2007 ) pr\u00e9sente le premier vrai langage de programmation tel qu'on l'entend aujourd'hui: le Fortran . Il mit au point vers la fin des ann\u00e9es 50 le langage Algol . Il a, par la suite, propos\u00e9 la forme Backus-Naur notation qui permet de d\u00e9crire la grammaire des langages de programmation. Programme et langage de programmation \u2693\ufe0e Un programme est un texte qui d\u00e9crit un algorithme que l\u2019on souhaite faire ex\u00e9cuter par une machine . Ce texte est \u00e9crit dans un langage particulier, appel\u00e9 langage de programmation . On le sauvegarde dans un fichier dont l'extension donne une indication sur le langage utilis\u00e9 ( .py , .js , .c , etc.) Le principal langage utilis\u00e9 en sp\u00e9cialit\u00e9 NSI est le langage Python (cr\u00e9\u00e9 en 1991 par Guido Van Rossum) en version 3. C'est un langage de haut niveau ( d'abstraction ) et interpr\u00e9t\u00e9 , c'est-\u00e0-dire qu'il n\u00e9cessite un autre programme appel\u00e9 interpr\u00e9teur qui va se charger d'ex\u00e9cuter ligne par ligne le code source du programme de l'utilisateur. Il existe bien \u00e9videmment d'autres langages de programmation. Il s'agit ici de pr\u00e9senter les constructions \u00e9l\u00e9mentaires que l'on retrouve dans la quasi totalit\u00e9 d'entre eux. Les entr\u00e9es/sorties \u2693\ufe0e Dans un langage de programmation on appelle entr\u00e9es/sorties des constructions permettant une communication avec l'utilisateur, donnant ainsi un aspect interactif au programme. En python, les fonctions print() et input() remplissent ces taches. 1 2 3 4 5 # Exemples print ( \"Hello World!\" ) print ( \"Python version 3.\" , \"Environnement\" , \"Jupyter Notebook 5.7\" ) print ( \"Python version 3.\" , \"Environnement\" , \"Jupyter Notebook 5.7\" , sep = \" :: \" , end = \" \" ) print ( \" !!! Pas de retour \u00e0 la ligne.\" ) 1 2 3 Hello World! Python version 3. Environnement Jupyter Notebook 5.7 Python version 3. :: Environnement :: Jupyter Notebook 5.7 !!! Pas de retour \u00e0 la ligne. Remarque Les arguments optionnels comme sep ou end par exemple, permettent d'adapter l'affichage aux besoins. Un effet de la fonction input() est d'interrompre le d\u00e9roulement du programme et d'attendre que l'utilisateur tape quelque chose au clavier. Les caract\u00e8res entr\u00e9s sont g\u00e9n\u00e9ralement r\u00e9cup\u00e9r\u00e9s dans une variable . 1 2 3 niveau = input ( \"Quel est votre niveau en programmation (novice/interm\u00e9diaire/avanc\u00e9)? \" ) moyenne = input ( \"Quelle \u00e9tait votre moyenne annuelle en math ? \" ) print ( \"Vous avez r\u00e9pondu niveau: \" , niveau , \"avec \" , moyenne , \"en math!\" ) 1 2 3 Quel est votre niveau en programmation (novice/interm\u00e9diaire/avanc\u00e9)? avanc\u00e9 Quelle \u00e9tait votre moyenne annuelle en math ? 20 Vous avez r\u00e9pondu niveau: avanc\u00e9 avec 20 en math! Remarques input() renvoie toujours une chaine de caract\u00e8res (m\u00eame si l'utilisateur entre un nombre!); la syntaxe employ\u00e9e \u00e0 l'int\u00e9rieur de la fonction print() bien que correcte, sera adapt\u00e9e dans les cours ult\u00e9rieurs tenant compte des derni\u00e8res \u00e9volutions du langage. La d\u00e9claration-affectation \u2693\ufe0e Pour pouvoir acc\u00e9der aux donn\u00e9es, un programme d\u2019ordinateur fait abondamment usage de variables . En python, une variable est une r\u00e9f\u00e9rence vers un objet m\u00e9moire (voir video ). Contrairement \u00e0 certains langages, les variables n'ont pas besoin d'\u00eatre d\u00e9clar\u00e9es au pr\u00e9alable, en python. La d\u00e9claration et l'affectation de variables peuvent se faire en une seule instruction. En python cette op\u00e9ration est r\u00e9alis\u00e9e selon le sch\u00e9ma nom_variable = valeur . Exemples 1 2 3 n = 7 msg = \"Affectation\" pi = 3.14 Remarques le nom de variable doit commencer par une lettre et ne pas \u00eatre un mot r\u00e9serv\u00e9 (voir liste ). Le type de l'objet r\u00e9f\u00e9renc\u00e9 par une variable est d\u00e9termin\u00e9 lors de l'affectation, de mani\u00e8re tout \u00e0 fait transparente. Dans l'exemple pr\u00e9c\u00e9dent, n r\u00e9f\u00e9rence un entier ( int ), msg r\u00e9f\u00e9rence une cha\u00eene de caract\u00e8res ( str ), pi r\u00e9f\u00e9rence un nombre d\u00e9cimal ( float ). S\u00e9quence et bloc d'instructions \u2693\ufe0e On peut d\u00e9finir une s\u00e9quence d'instructions comme un ensemble de deux instructions ex\u00e9cut\u00e9es l'une \u00e0 la suite de l'autre (l'ordre est important!). Par exemple, les lignes 1 2 x = x + 1 x = x * 2 constituent une s\u00e9quence d'instructions ( valide \u00e0 condition que la variable x ait \u00e9t\u00e9 affect\u00e9e au pr\u00e9alable ). Nos programmes comporteront g\u00e9n\u00e9ralement des s\u00e9quences de plus de deux instructions, on parlera alors de bloc d'instructions . En python, un bloc d'instructions est rep\u00e9r\u00e9 par son indentation , c'est-\u00e0-dire le d\u00e9calage par rapport au bloc pr\u00e9c\u00e9dent ( typiquement un multiple de 4 espaces ). Exemple La s\u00e9quence d'instructions ci-dessous permet de calculer et d'afficher l'aire \\(S\\) d'un disque de rayon \\(r\\) (rappel: \\(S=\\pi\\times r^{2}\\) ). 1 2 3 4 PI = 3.14 r = 5 s = PI * r ** 2 print ( s ) 1 78.5 Remarque Les instructions pr\u00e9c\u00e9dentes forment un seul bloc d'instructions (elles sont toutes align\u00e9es sur la m\u00eame colonne). Le test simple \u2693\ufe0e Cette construction permet d'ex\u00e9cuter une instruction ou un bloc d'instructions uniquement si une condition est v\u00e9rifi\u00e9e. En python, la syntaxe est la suivante: 1 2 if condition : bloc_instructions Exemple La construction x % 2 == 0 ( comparaison du reste de la division euclidienne de \\(x\\) par 2 avec z\u00e9ro) permet de tester si \\(x\\) est pair. 1 2 3 4 n = 50 if n % 2 == 0 : print ( n , \"est pair!\" ) print ( \"Sa moiti\u00e9 vaut \" , n / 2 ) 1 2 50 est pair! Sa moiti\u00e9 vaut 25.0 Pour identifier sans ambiguit\u00e9s les instructions appartenant au bloc v\u00e9rifiant la condition, on DOIT LES INDENTER en python. La condition est souvent exprim\u00e9e avec des op\u00e9rateurs de comparaisons . Voici quelques exemples: 1 2 3 4 5 6 x == y # x est \u00e9gal \u00e0 y x != y # x est diff\u00e9rent de y x > y # x est plus grand que y x < y # x est plus petit que y x >= y # x est plus grand que, ou \u00e9gal \u00e0 y x <= y # x est plus petit que, ou \u00e9gal \u00e0 y Le test avec alternative \u2693\ufe0e Dans un test avec alternative, on ajoute un bloc \u00e0 traiter lorsque la condition n'est pas v\u00e9rifi\u00e9e . La syntaxe est la suivante: 1 2 3 4 if condition : bloc_instructions_SI else : bloc_instructions_SINON Exemple 1 2 3 4 5 6 7 # Les test alternatif en python n = 501 if n % 2 == 0 : print ( n , \"est pair!\" ) print ( \"Sa moiti\u00e9 vaut \" , n / 2 ) else : print ( n , \" est impair\" ) 1 501 est impair La boucle conditionnelle, non born\u00e9e \u2693\ufe0e Une boucle conditionnelle , appel\u00e9 encore boucle while ( en anglais ) ou boucle tant que ( en fran\u00e7ais ) ex\u00e9cute un bloc d'instructions tant qu'une condition est v\u00e9rifi\u00e9e. En python, la boucle conditionnelle a la forme suivante: 1 2 while condition : bloc_instructions Remarques la condition s'exprime g\u00e9n\u00e9ralement avec les op\u00e9rateurs de comparaisons vus plus haut; le bloc d'instructions est indent\u00e9. Exemple 1 2 3 4 5 tab = 8 i = 1 while i < 10 : # la condition print ( i , \" x \" , tab , \" = \" , i * tab ) i = i + 1 1 2 3 4 5 6 7 8 9 1 x 8 = 8 2 x 8 = 16 3 x 8 = 24 4 x 8 = 32 5 x 8 = 40 6 x 8 = 48 7 x 8 = 56 8 x 8 = 64 9 x 8 = 72 ATTENTION Il faut que la condition ne soit plus v\u00e9rifi\u00e9e \u00e0 un moment donn\u00e9 pour assurer la terminaison de la boucle et \u00e9viter le bouclage infini. Ce point sera d\u00e9taill\u00e9 dans le cours d'algorithmique. Dans le cas pr\u00e9c\u00e9dent, la condition est: \\(i<10\\) . Or, \\(i\\) est un entier qui augmente de 1 \u00e0 chaque tour de boucle. Lorsqu'on aura atteint \\(i=10\\) , la condition ne sera plus v\u00e9rifi\u00e9e et on sortira de la boucle. La boucle inconditionnelle ou born\u00e9e \u2693\ufe0e Lorsque le nombre d'it\u00e9rations est connu d'avance la boucle devient inconditionnelle . On l'appelle encore boucle born\u00e9e ou boucle pour en fran\u00e7ais ( for loop en anglais). En python, la syntaxe de la boucle for est la suivante: 1 2 for variable_compteur in sequence : bloc_instructions Remarques sequence est une suite d'objets, comme des entiers, des caract\u00e8res d'une chaine, etc, (d'autres s\u00e9quences seront vus dans les prochains cours); typiquement une s\u00e9quence d'entiers est obtenue avec l'objet range(a, b) qui fourni les entiers allant de \\(a\\) \u00e0 \\(b-1\\) . Le bloc d'instructions doit \u00eatre indent\u00e9. Exemple 1 2 3 4 tab = 10 for i in range ( 1 , tab ): # i est la variable compteur, range(1, tab) fourni la sequence d'entiers print ( i , \" x \" , tab , \" = \" , i * tab ) 1 2 3 4 5 6 7 8 9 1 x 10 = 10 2 x 10 = 20 3 x 10 = 30 4 x 10 = 40 5 x 10 = 50 6 x 10 = 60 7 x 10 = 70 8 x 10 = 80 9 x 10 = 90 Diversit\u00e9 et unit\u00e9 des langages \u2693\ufe0e Les langages de programmations sont tr\u00e8s nombreux. Ils peuvent \u00eatre class\u00e9s suivant leur style ou paradigme (fa\u00e7on de mod\u00e9liser les probl\u00e8mes et les r\u00e9soudre). Plusieurs paradigmes (orient\u00e9 objet ou fonctionnel) seront abord\u00e9s en terminale. En 1re, on peut se limiter au style imp\u00e9ratif , dans lequel les probl\u00e8mes sont r\u00e9solus de mani\u00e8re s\u00e9quentielle, en proc\u00e9dant \u00e0 des modifications de la m\u00e9moire. Il est fait usage de variables , de boucles , etc. Passer d'un langage \u00e0 un autre peut \u00eatre facile \u00e0 l'int\u00e9rieur d'un m\u00eame paradigme car les constructions sont souvent assez proches. On peut aussi distinguer les langages suivant le fait qu'ils soient: interpr\u00e9t\u00e9 1 ou compil\u00e9 2 ; \u00e0 typage dynamique 3 ou statique 4 ; Exemples Le test alternatif en Javascript 1 2 3 4 5 6 7 8 const N = 50 if ( N % 2 === 0 ) { console . log ( N + \" est pair\" ) console . log ( \"Sa moiti\u00e9 vaut \" + N / 2 ) } else { console . log ( N + \" est impair\" ) } Le test alternatif en C 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #include <stdio.h> int main ( void ) { int N = 50 ; if (( N % 2 ) == 0 ){ printf ( \"%d est pair \\n \" , N ); printf ( \"Sa moiti\u00e9 vaut %d \\n \" , N / 2 ); } else { printf ( \"%d est impair \\n \" , N ); } return 0 ; } COURS - Conception & Mise au point de programmes \u2693\ufe0e Rep\u00e8re historique \u2693\ufe0e John McCarthy (1927-2011) auteur du langage Lisp en 1958, dont la principale construction est la d\u00e9finition de fonctions . Il joua un r\u00f4le majeur dans la programmation en intelligence artificielle, \u00e9crivant un des premiers programmes jouant aux \u00e9checs. Qu'est-ce qu'une fonction ? \u2693\ufe0e Les programmeurs d\u00e9composent souvent leur programmes en blocs courts. Chaque bloc de code, associ\u00e9 \u00e0 un nom, est appel\u00e9 fonction . Proc\u00e9der ainsi, permet: d'\u00e9viter les r\u00e9p\u00e9titions et donc de factoriser le code; de faciliter la maintenance; de faciliter dans une certaine mesure le travail en \u00e9quipe. Note D'autres termes comme sous-programme, proc\u00e9dure, etc. sont parfois employ\u00e9s. On ne les utilisera pas en sp\u00e9cialit\u00e9 NSI Comment d\u00e9finir et appeler une fonction ? \u2693\ufe0e La syntaxe pr\u00e9sent\u00e9e ici est celle du langage Python. On d\u00e9finit une fonction avec: le mot cl\u00e9 def suivi d'un nom; une paire de parenth\u00e8ses \u00e0 l'int\u00e9rieur desquelles figurent \u00e9ventuellement des param\u00e8tres; le caract\u00e8re deux-points : qui termine la ligne de d\u00e9claration; un bloc de code indent\u00e9 qui forme le corps de la fonction; le mot cl\u00e9 return (optionnel) 1 2 def nom_fonction ( param\u00e8tre ( s )): bloc_instructions Le nom de la fonction doit commencer par une lettre et ne doit pas \u00eatre un mot reserv\u00e9. Ce nom sera le plus explicite possible. La fonction peut avoir 0, 1 ou plus de param\u00e8tres. Exemple 1 2 3 4 5 def deux_puissance ( n ): p = 1 for c in range ( n ): p = p * 2 return p Lorsqu'on ex\u00e9cute ce code, il ne se passe rien . A ce stade on a d\u00e9finit la fonction, il faut maintenant l'appeler pour que tout son code soit ex\u00e9cut\u00e9. L'appel d'une fonction consiste \u00e0 \u00e9crire son nom suivi de parenth\u00e8ses ouvrantes-fermantes \u00e0 l'int\u00e9rieur desquelles on place d'\u00e9ventuels arguments . 1 2 3 # Calcul et affichage de 2^8 et 2^16 print ( deux_puissance ( 8 )) print ( deux_puissance ( 16 )) 1 2 256 65536 Note En l'absence d'instruction return , python renvoie implicitement une valeur particuli\u00e8re None qui signifie 'rien'; une fonction peut appeler une autre fonction. Sp\u00e9cifier une fonction \u2693\ufe0e Qu'est-ce qu'une sp\u00e9cification ? \u2693\ufe0e En plus d'un nom explicite, une fonction devrait \u00eatre convenablement document\u00e9e. Cette documentation devra comporter les sp\u00e9cifications de la fonction. Sp\u00e9cifier une fonction consiste \u00e0 donner: la liste ordonn\u00e9e et le type de ses param\u00e8tres; une description du r\u00e9sultat renvoy\u00e9 ou post-conditions ; les conditions ou propri\u00e9t\u00e9s portant sur les param\u00e8tres d'entr\u00e9e ou pr\u00e9-conditions . En python, la documentation suit imm\u00e9diatement la d\u00e9finition de la fonction et est encadr\u00e9e par des triples double quotes \"\"\" . Pour garantir les post-conditions ou les pr\u00e9-conditions, on peut utiliser des assertions . Definition Une assertion est une proposition logique qui doit \u00eatre vraie ( True en python) sinon le programme est arr\u00eat\u00e9. La syntaxe d'une assertion en python est: 1 assert expression , \"Message d'erreur explicite\" Par ailleurs, la documentation d'une fonction est en outre accessible avec la fonction native help() Exemple complet \u2693\ufe0e On sp\u00e9cifie la fonction deux_puissance() pr\u00e9c\u00e9dente. 1 2 3 4 5 6 7 8 9 10 11 12 13 def deux_puissance ( n ): \"\"\" renvoie la puissance n-i\u00e8me de 2; n: entier naturel. \"\"\" # Pr\u00e9conditions assert isinstance ( n , int ), \"Erreur: n entier\" assert n >= 0 , \"Erreur: n >= 0\" p = 1 for c in range ( n ): p = p * 2 return p 1 deux_puissance ( 20 ) 1 1048576 En cas de non respect des pr\u00e9conditions, le contrat entre le programmeur et l'utilisateur est rompu et le programme s'arr\u00eate. Par exemple, un appel deux_puissance(2.5) conduit \u00e0: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 --------------------------------------------------------------------------- AssertionError Traceback (most recent call last) <ipython-input-11-34ff1cbea852> in <module> 1 # Non respect de: \"n, entier naturel\". 2 ----> 3 deux_puissance(2.5) <ipython-input-9-5988c4a4a8b7> in deux_puissance(n) 5 \"\"\" 6 # Pr\u00e9conditions ----> 7 assert isinstance(n, int), \"Erreur: n entier\" 8 assert n >= 0, \"Erreur: n >= 0\" 9 AssertionError: Erreur: n entier L'acc\u00e8s \u00e0 la documentation se fait avec help(deux_puissance) . 1 2 3 4 5 Help on function deux_puissance in module __main__: deux_puissance(n) renvoie la puissance n-i\u00e8me de 2; n: entier naturel. Utiliser des biblioth\u00e8ques \u2693\ufe0e La plupart des langages de programmation proposent des fonctions toutes pr\u00eates. Ces fonctions fournies avec le langage sont regroup\u00e9es au sein d'une biblioth\u00e8que standard . Il s'agit d'un ensemble de modules sp\u00e9cialis\u00e9s (par exemple math ou random ). Pour pouvoir utiliser les objets ( des fonctions par exemple ) d'un module, il faut les importer avec l'instruction import . On privil\u00e9giera la notation from module import objet au lieu de from module import * . Exemple 1 2 3 4 # Utilisation de la fonction racine carr\u00e9e (sqrt) du module math from math import sqrt print ( sqrt ( 2 )) 1 1.4142135623730951 Une autre construction possible et aussi valable que la pr\u00e9c\u00e9dente, consiste \u00e0 importer le module avec import module puis \u00e0 utiliser l'objet avec la notation point\u00e9e module.objet . Exemple 1 2 3 import math print ( math . sqrt ( 2 )) 1 1.4142135623730951 Tester son code \u2693\ufe0e Pour s'assurer que le programme fonctionne comme pr\u00e9vu, il est n\u00e9cessaire de le tester. Un jeu de tests devrait couvrir les cas d'utilisation: typiques; limites. On peut utiliser des assertions dans un premier temps (l'utilisation d'un module sp\u00e9cialis\u00e9 peut \u00eatre envisag\u00e9 en python). Enfin, une approche moderne consiste \u00e0 \u00e9crire ses tests avant les fonctions. Exemple 1 2 3 4 5 6 7 8 9 10 # Jeu de tests def test_puissance (): # Cas limite assert deux_puissance ( 0 ) == 1 # Cas typique assert deux_puissance ( 10 ) == 1024 return 'Tests OK' test_puissance () 1 'Tests OK' IMPORTANT Le succ\u00e8s d'un jeu de test ne garantit pas que le programme ne contient pas de bugs. Il s'agit d'une condition n\u00e9cessaire mais non suffisante. EXERCICES S\u00e9quence 1 \u2693\ufe0e Exercice 1: quelques pi\u00e8ges de l'affectation \u2693\ufe0e On d\u00e9finit la fonction calcul_v1() suivante: 1 2 3 4 5 def calcul_v1 ( n ): resultat = 0 for i in range ( n ): resultat = resultat + 1 return resultat Donner deux constructions \u00e9l\u00e9mentaires diff\u00e9rentes ainsi que le num\u00e9ro de la ligne o\u00f9 elles apparaissent. On modifie l\u00e9g\u00e8rement la fonction pr\u00e9c\u00e9dente, pour obtenir une autre version: 1 2 3 4 def calcul_v2 ( n ): for i in range ( n ): resultat = resultat + 1 return resultat L'ex\u00e9cution de calcul_v2(0) provoque cette fois-ci l'erreur suivante: 1 2 3 4 5 6 7 8 9 10 11 --------------------------------------------------------------------------- UnboundLocalError Traceback ( most recent call last ) < ipython - input - 5 - e000315c4ef2 > in < module > ----> 1 calcul_v2 ( 0 ) < ipython - input - 4 - 012 f1c01c96b > in calcul_v2 ( n ) 2 for i in range ( n ): 3 resultat = resultat + 1 ----> 4 return resultat UnboundLocalError : local variable 'resultat' referenced before assignment En comparant avec la premi\u00e8re version, donner l'origine cette erreur. Proposer une explication de la situation. Un \u00e9l\u00e8ve ex\u00e9cute la s\u00e9quence d'instructions suivante: 1 2 calcul_v1 ( 100 ) somme_100 = resultat Malheureusement cette s\u00e9quence \u00e9choue. L'interpr\u00e9teur python affiche l'erreur 1 NameError : name 'resultat' is not defined Cette erreur semble curieuse \u00e0 priori car la variable resultat a \u00e9t\u00e9 d\u00e9clar\u00e9e et affect\u00e9e dans la fonction calcul_v1 . Faire une hypoth\u00e8se sur la visibilit\u00e9 d'une variable d\u00e9clar\u00e9e \u00e0 l'int\u00e9rieur d'une fonction. Exercice 2: des \u00e9toiles en boucle \u2693\ufe0e Pr\u00e9ambule: compl\u00e9ments sur les cha\u00eenes de caract\u00e8re \u2693\ufe0e Utilisation des op\u00e9rateurs + et * 1 2 ch = '_/\\_' print ( ch ) 1 _/\\_ L'op\u00e9rateur + permet de concat\u00e9ner deux cha\u00eenes. 1 print ( ch + ch + ch ) 1 _/\\__/\\__/\\_ On peut aussi utiliser l'op\u00e9rateur * entre une cha\u00eene et un entier. 1 2 ch = ch * 3 print ( ch ) 1 _/\\__/\\__/\\_ Dans ce dernier exemple ch r\u00e9f\u00e9rence un nouvel objet r\u00e9sultant de la concat\u00e9nation _/\\_ + _/\\_ + _/\\_ . Le caract\u00e8re d'\u00e9chappement \\ Sa pr\u00e9sence dans une cha\u00eene modifie le caract\u00e8re qui le suit. Ainsi \\n ne d\u00e9signe pas n mais un saut de ligne. 1 print ( '100 \\n 200 \\n 300' ) 1 2 3 100 200 300 Enonc\u00e9 \u2693\ufe0e On consid\u00e8re la fonction etoilef suivante, dont la documentation est incompl\u00e8te. 1 2 3 4 5 6 7 8 def etoilef ( n ): \"\"\" A compl\u00e9ter \"\"\" a = '' for i in range ( 1 , n + 1 ): a = a + '*' * i + ' \\n ' return a Que r\u00e9alise cette fonction? En cas de difficult\u00e9, on peut r\u00e9aliser quelques appels print(etoilef(n)) , n \u00e9tant un entier naturel sup\u00e9rieur ou \u00e9gal \u00e0 1. Compl\u00e9ter la documentation de la fonction. Sur la \\(i\\) -\u00e8me ligne, \\(i\\) \u00e9tant un entier sup\u00e9rieur \u00e0 1, combien a-t-on d'\u00e9toiles ? Transformer la fonction etoilef en une fonction etoilew qui utilise une boucle conditionnelle ( while ) et qui r\u00e9pond aux m\u00eames sp\u00e9cifications. Exercice 3: diversit\u00e9 des langages \u2693\ufe0e Aucune connaissance des langages cit\u00e9s ci-dessous n'est n\u00e9cessaire pour r\u00e9soudre l'exercice. Il s'agit d'un travail sur les similitudes et les diff\u00e9rences existant entre ces langages . Le m\u00e9lange de Fisher-Yates est un algorithme qui permet de m\u00e9langer des objets (voir sa description sur Wikipedia ). On se propose de comparer la traduction cet algorithme dans divers langages de programmation. Pascal (1970) 1 2 3 4 5 6 7 8 9 10 11 12 13 procedure shuffleList ( var tab : tableau ) ; var i , j , tmp : integer ; begin for i := 1 to High ( tab ) - Low ( tab ) do begin j := random ( i + 1 ) ; if j < i then tmp := tab [ i + Low ( tab )] ; tab [ i + Low ( tab )] := tab [ j + Low ( tab )] ; tab [ j + Low ( tab )] := tmp end ; end ; end ; C (1972) 1 2 3 4 5 6 7 8 9 10 11 void shuffle ( int tab [], int n ) { int i ; for ( i = 1 ; i < n ; ++ i ) { int j = random ( i + 1 ); if ( j < i ) { int tmp = tab [ i ]; tab [ i ] = tab [ j ]; tab [ j ] = tmp ; } } } Go (2009) 1 2 3 4 5 6 7 8 9 10 func shuffle ( tab [] int ) { for i := 1 ; i < len ( tab ); i ++ { j := rand . Intn ( i + 1 ) if j < i { tmp := tab [ i ] tab [ i ] := tab [ j ] tab [ j ] := tmp } } } ECMAScript (Javascript) ES 6 (2015) 1 2 3 4 5 6 7 8 9 10 const shuffle = ( tab ) => { for ( let i = 1 ; i < tab . length ; i ++ ) { let j = Math . floor (( i + 1 ) * Math . random ()) if ( j < i ) { let temp = tab [ j ] tab [ j ] = tab [ i ] tab [ i ] = temp } } } Python (1991) 1 2 3 4 5 def shuffle ( tab ): for i in range ( 1 , len ( tab )): j = random . randint ( 0 , i ) if j < i : tab [ i ], tab [ j ] = tab [ j ], tab [ i ] Comment sont d\u00e9limit\u00e9s les blocs d'instructions ? Est-il n\u00e9cessaire de d\u00e9clarer les variables locales dans une fonction ? Comment est structur\u00e9e une boucle for ? A partir des informations propos\u00e9es, de quel(s) langage(s), le Go est-il proche ? R\u00e9ponses Pascal C Go Python Javascript (ES 6) D\u00e9limiteurs Variables locales Structure boucle for Exercice 4: sp\u00e9cifier une fonction et tests \u2693\ufe0e Lucas a d\u00e9j\u00e0 eu 3 notes sur 20 en NSI: 14 coef. 1 15 coef. 2 16 coef. 2 La derni\u00e8re \u00e9valuation pr\u00e9vue sera affect\u00e9e d'un coefficient 5. Lucas veut pr\u00e9voir sa moyenne trimestrielle en \u00e9crivant une fonction moyenne qui prendra en param\u00e8tre sa derni\u00e8re note et qui renvoie sa moyenne trimestrielle. Ecrire les sp\u00e9cifications de la fonction moyenne . Donner une assertion qui permet de garantir la pr\u00e9condition. Lucas a bien pris note des bonnes pratiques de programmation. Il commence par \u00e9crire une fonction de tests de sa fonction moyenne : 1 2 3 4 5 6 7 def test_moyenne (): # Cas limites assert moyenne ( 0 ) == ... assert moyenne ( 20 ) == ... # Cas typique assert moyenne ( 10 ) == ... return 'Tests OK' Compl\u00e9ter cette fonction de test. Ecrire la fonction moyenne et tester la. Exercice 5: divisibilit\u00e9 \u2693\ufe0e Un moyen simple pour savoir si un entier naturel \\(a\\) est divisible par un entier naturel \\(k\\) non nul, est de tester le reste de la division de \\(a\\) par \\(k\\) . S'il est nul alors \\(a\\) est divisible par \\(k\\) . La fonction est_divisible ci-dessous code cette propri\u00e9t\u00e9. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def est_divisible ( a , k ): \"\"\" Renvoie vrai (True) si a est divisible par k, faux (False) sinon. a: entier naturel k: entier naturel strictement positif \"\"\" assert isinstance ( a , int ), \"Erreur, a entier\" assert a >= 0 , \"Erreur, a entier naturel\" assert isinstance ( k , int ), \"Erreur, k entier\" assert k > 0 , \"Erreur, k strictement positif\" return a % k == 0 def test_divisible (): assert est_divisible ( 0 , 1 ) is True assert est_divisible ( 2 , 1 ) is True assert est_divisible ( 10 , 3 ) is False return 'Tests OK' Combien de param\u00e8tres requiert la fonction est_divisible ? Quel est l'int\u00e9r\u00eat des lignes 7 \u00e0 10 ? Tester la fonction est_divisible . Pr\u00e9voir le r\u00e9sultat renvoy\u00e9 par l'appel test_divisible() si on rajoute avant la ligne return ... l'instruction assert est_divisible(10, 0) is False . Exercice 6: ann\u00e9e bissextile \u2693\ufe0e Dans le calendrier gr\u00e9gorien, une ann\u00e9e est bissextile si (voir article wikipedia ) on se trouve dans un des cas suivants: l'ann\u00e9e est divisible par 4 et non divisible par 100 ; l'ann\u00e9e est divisible par 400 On souhaite coder une fonction est_bissextile qui prend en param\u00e8tre une ann\u00e9e et qui renvoie le r\u00e9sultat logique vrai ou faux ( True ou False en python) selon que l'ann\u00e9e est bissextile ou non. Pour simplifier, on consid\u00e8re que le passage au calendrier gr\u00e9gorien a eu lieu en 1583. Compl\u00e9ter les sp\u00e9cifications de la fonction est_bissextile ci-dessous. Seuls les ... sont \u00e0 compl\u00e9ter. Ne pas supprimer l'instruction pass qui sera remplac\u00e9e par votre code plus tard. 1 2 3 4 5 6 7 # A compl\u00e9ter def est_bissextile ( ... ): \"\"\" ... \"\"\" pass Ecrire une fonction de tests test_bissextile en utilisant les r\u00e9sultats disponibles sur la page wikipedia . 1 2 3 4 # A compl\u00e9ter apr\u00e8s avoir supprimer l'instruction pass def test_bissextile (): pass Compl\u00e9ter la fonction est_bissextile en rempla\u00e7ant l'instruction pass par votre code et en r\u00e9-utilisant la fonction est_divisble de l'exercice pr\u00e9c\u00e9dent. Tester votre fonction. Exercice 7: pr\u00e9parer un argumentaire \u2693\ufe0e Pourquoi existe-t-il plus de 730 langages de programmation dont certains sont plus utilis\u00e9s que d'autres? un programme annexe lit le code source et ex\u00e9cute les instructions; c'est le cas du langage Python (l'interpr\u00e9teur le plus courant s'appelle CPython). \u21a9 un programme annexe transforme le code source en langage machine (une fois) avant son ex\u00e9cution. \u21a9 une variable n'a pas besoin d'\u00eatre d\u00e9clar\u00e9e et peut changer de type au cours du programme (exemple en python). \u21a9 les variables doivent \u00eatre d\u00e9clar\u00e9es et ne peuvent changer de type. \u21a9","title":"Sequence1"},{"location":"NSI1/S1/sequence1.html#sequence-1","text":"Les deux premi\u00e8res activit\u00e9s ont \u00e9t\u00e9 extraites et adapt\u00e9es du livre NSI 1re - Ed. Bordas","title":"SEQUENCE 1"},{"location":"NSI1/S1/sequence1.html#activite-1-constructions-elementaires-langages","text":"Adam a lu que dans la grande majorit\u00e9 des langages de programmation on retrouve les m\u00eames constructions \u00e9l\u00e9mentaires. Les deux premi\u00e8res constructions \u00e9l\u00e9mentaires auxquelles il s'int\u00e9resse sont les affectations et les s\u00e9quences d'instructions qui sont pr\u00e9sentes dans la fonction Python suivante: 1 2 3 4 def conversion ( duree_en_minute ): heure = duree_en_minute // 60 minutes = duree_en_minute % 60 return heures , minutes R\u00e9pondre aux questions A quelles lignes peut-on trouver: une affectation? une s\u00e9quence d'instructions? Parmi les deux fonctions suivantes, laquelle contient une boucle born\u00e9e ? une boucle non born\u00e9e ? Pr\u00e9ciser les mots cl\u00e9s utilis\u00e9s. 1 2 3 4 5 6 7 8 9 10 11 12 def estimer_quantite ( quantite_initiale , annee ): resultat = quantite_initiale while resultat <= quantite_initiale * 3 : resultat = resultat * 1.33 annee = annee + 1 return annee def augmentation ( quantite_initiale ): resultat = quantite_initiale for i in range ( 5 ): resultat = resultat * 1.33 return resultat On consid\u00e8re maintenant les 6 fonctions suivantes. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 def maximum ( a , b ): if a > b : return a else : return b def maximum2 ( a , b , c , d ): return maximum ( maximum ( a , b ), maximum ( c , d )) def positive ( valeur ): if valeur < 0 : valeur = - valeur return valeur def conversion ( en_bit ): en_octet = en_bit / 8 return en_octet def racine ( a ): x = 1 for i in range ( 10 ): x = ( x + a / x ) / 2 return x def compte_bits ( valeur ): nb_bits = 1 while valeur > 2 ** nb_bits : nb_bits = nb_bits + 1 return nb_bits R\u00e9pondre aux questions Dans quelle(s) fonction(s) retrouve-t-on: une s\u00e9quence d'instructions ? une ou des affectations ? un test ? une boucle born\u00e9e ? une boucle non born\u00e9e ? un appel de fonction ? Adam s'attache maintenant \u00e0 \u00e9crire certaines fonctions pr\u00e9c\u00e9dentes avec le langage JavaScript afin de les comparer \u00e0 celle \u00e9crite en Python. Il commence par \u00e9crire la fonction nomm\u00e9e maximum() . 1 2 3 4 5 6 7 function maximum ( a , b ){ if ( a > b ) { return a } else { return b } } Analyser Citer les points communs avec le langage Python et rep\u00e9rer dans cet exemple 3 points particuliers du langage JavaScript. Adam \u00e9crit \u00e0 pr\u00e9sent cette fonction sans les indentations (version 1) et sur une seule ligne (version 2). Version 1 1 2 3 4 5 6 7 function maximum ( a , b ) { if ( a > b ) { return a } else { return b } } Version 2 1 function maximum ( a , b ){ if ( a > b ) { return a } else { return b } } R\u00e9pondre aux questions Sachant que les deux \u00e9critures de la fonction maximum() sont correctes, quelles hypoth\u00e8ses peut-on formuler quant aux indentations et aux retours \u00e0 la ligne en javascript ? Quel signe de ponctuation est utilis\u00e9 en Javascript pour remplacer les indentations en python ? En gardant les indentations qui am\u00e9liore la lisibilit\u00e9 du code, Adam s'int\u00e9resse \u00e0 pr\u00e9sent \u00e0 la fonction augmentation() . 1 2 3 4 5 6 7 function augmentation ( quantite_initiale ) { let resultat = quantite_initiale for ( let i = 0 ; i < 5 ; i ++ ) { resultat = resultat * 1.33 } return resultat } Analyser En consid\u00e9rant le programme JavaScript augmentation() ci-dessus, citer deux nouveaux points communs et rep\u00e9rer deux diff\u00e9rences entre les langages Python et JavaScript. Formuler une hypoth\u00e8se sur l'utilit\u00e9 d'\u00e9crire le mot cl\u00e9 let aux lignes 2 et 3. Adam r\u00e9\u00e9crit \u00e9galement la premi\u00e8re fonction de cette activit\u00e9, conversion() , en Javascript. 1 2 3 4 5 function conversion ( duree_en_minute ) { let heures = Math . floor ( duree_en_minute / 60 ) let minutes = duree_en_minute % 60 return [ heures , minutes ] } R\u00e9pondre aux questions En Javascript une fonction ne peut pas renvoyer un couple de valeur (en fait un n-uplet ). Comment Adam a-t-il choisi de renvoyer le r\u00e9sultat ? L'op\u00e9rateur qui calcule le reste de la division euclidienne est identique en python et en javascript: % . En revanche, il n'existe pas d'op\u00e9rateur en javascript pour calculer le quotient de la division euclidienne. Il faut calculer le quotient de la division et r\u00e9cup\u00e9rer sa partie enti\u00e8re en faisant appel \u00e0 une fonction native du langage JavaScript qui s'appelle floor() . Adam se rappelle avoir d\u00e9j\u00e0 utilis\u00e9 une fonction Python qui avait le m\u00eame nom. D'une mani\u00e8re g\u00e9n\u00e9rale, quelles difficult\u00e9s peut-on rencontrer quand on utilise un nouveau langage de programmation ?","title":"ACTIVITE 1 - Constructions \u00e9l\u00e9mentaires &amp; langages"},{"location":"NSI1/S1/sequence1.html#activite-2-mise-au-point-de-programmes","text":"","title":"ACTIVITE 2 - Mise au point de programmes"},{"location":"NSI1/S1/sequence1.html#cours-langage-constructions-elementaires","text":"","title":"COURS - Langage - Constructions \u00e9l\u00e9mentaires"},{"location":"NSI1/S1/sequence1.html#cours-conception-mise-au-point-de-programmes","text":"","title":"COURS - Conception &amp; Mise au point de programmes"},{"location":"NSI1/S1/sequence1.html#exercices-sequence-1","text":"","title":"EXERCICES S\u00e9quence 1"},{"location":"NSI1/S2/S2A1.html","text":"SEQUENCE 2 \u2693\ufe0e ACTIVITE 1 - Interface en ligne de commande d'un syt\u00e8me d'exploitation libre \u2693\ufe0e Syst\u00e8mes d'exploitations \u2693\ufe0e Rep\u00e8res historiques \u2693\ufe0e Prendre connaissance des vid\u00e9os suivantes: Histoire des syst\u00e8mes d'exploitation Le(s) syst\u00e8me(s) de type UNIX Rechercher de l\u2019information - Situer dans le temps des \u00e9v\u00e9nements cl\u00e9s de l'informatique R\u00e9sumer en une phrase courte le r\u00f4le d'un syst\u00e8me d'exploitation. Vers quelle p\u00e9riode sont n\u00e9s les syst\u00e8mes d'exploitation ? Syst\u00e8mes libres ou propri\u00e9taires \u2693\ufe0e Rechercher de l\u2019information A l'aide de cette page wikipedia , rappelez les 4 diff\u00e9rences fondamentales entre un logiciel libre et un logiciel propri\u00e9taire. Quelles sont les cons\u00e9quences du statut propri\u00e9taire de Microsoft Windows ? Le syst\u00e8me Linux \u2693\ufe0e Histoire du syst\u00e8me d'exploitation Linux Citer des \u00e9v\u00e9nements cl\u00e9s de l'informatique Qui a cr\u00e9\u00e9 Linux ? Syst\u00e8me de fichiers de Linux \u2693\ufe0e Avec Linux, comme dans Microsoft Windows, les donn\u00e9es sont stock\u00e9es dans des fichiers, eux-m\u00eames contenus dans des dossiers appel\u00e9s r\u00e9pertoires . En revanche, il n'existe pas de notion de \u00ab disque C:\\ ou D:\\ ou autre\u00bb sous Linux. Un exemple d'organisation des principaux fichiers et r\u00e9pertoires appel\u00e9e arborescence est repr\u00e9sent\u00e9e en version simplifi\u00e9e ci-dessous. Dans le syst\u00e8me de fichiers de Linux, tous les r\u00e9pertoires n\u00e9cessaires au fonctionnement du syst\u00e8me d'exploitation ( usr , bin , etc , dev , tmp , ...) sont accessibles depuis le r\u00e9pertoire racine / . Les r\u00e9pertoires des utilisateurs d'une machine Linux, sont situ\u00e9s dans le r\u00e9pertoire home . Dans l'exemple ci-dessus il s'agit des r\u00e9pertoires Angie et Matei . Attention, le syst\u00e8me d'exploitation Linux est sensible \u00e0 la casse , il faut donc \u00eatre vigilant et distinguer les majuscules des minuscules. Pour naviguer dans le syst\u00e8me de fichiers, nous devons d\u00e9finir les chemins absolus et relatifs . D\u00e9finition Un chemin d'acc\u00e8s absolu part toujours du r\u00e9pertoire racine / suivi des noms de r\u00e9pertoires rencontr\u00e9s jusqu'\u00e0 la destination, s\u00e9par\u00e9s par des symboles / (slash). Exemple Le chemin absolu vers le r\u00e9pertoire Exos de Matei est /home/Matei/Math/Exos . A faire \u00c9crire le chemin absolu vers le r\u00e9pertoire NSI d' Angie . Lorsque l'on se d\u00e9place dans l' arborescence de fichiers , le r\u00e9pertoire dans lequel on se situe s'appelle le r\u00e9pertoire courant et est not\u00e9 . (point). Un chemin relatif fait r\u00e9f\u00e9rence au r\u00e9pertoire courant et donne la liste des noms du ou des r\u00e9pertoire(s) rencontr\u00e9s jusqu'\u00e0 la destination, s\u00e9par\u00e9s par des / . Exemple Le chemin relatif vers le r\u00e9pertoire Exos de Matei depuis le r\u00e9pertoire courant home est ./Matei/Math/Exos . Reconna\u00eetre une situation \u00c9crire le chemin relatif vers le r\u00e9pertoire NSI d' Angie \u00e0 partir du r\u00e9pertoire courant home . Pour remonter d'un niveau dans l'arborescence de fichiers, il faut utiliser le r\u00e9pertoire parent .. . Exemple Le chemin relatif depuis le r\u00e9pertoire courant d'Angie ( /home/Angie ) vers le r\u00e9pertoire Math de Matei est ../Matei/Math . Reconna\u00eetre une situation \u00c9crire le chemin relatif vers le r\u00e9pertoire Jeux d' Angie \u00e0 partir du r\u00e9pertoire courant NSI Le chemin vers le r\u00e9pertoire personnel d'un utilisateur est un cas particulier. Il poss\u00e8de un raccourci ~ , que l'on prononce tilde . Ainsi, si Angie souhaite rejoindre son r\u00e9pertoire personnel, il lui suffira de taper cd ~ . Structure d'une commande sous Linux \u2693\ufe0e Pour interagir avec l'utilisateur, les syst\u00e8mes d'exploitation (SE) peuvent avoir une interface graphique, o\u00f9 les manipulations se font essentiellement \u00e0 la souris dans des fen\u00eatres. Il existe une autre possibilit\u00e9 d'interaction: l' interface en ligne de commande . Il s'agit d'un programme qui permet de saisir les commandes que le syst\u00e8me d'exploitation doit effectuer, en mode texte . Pour d\u00e9couvrir comment interagir avec le syst\u00e8me d'exploitation en ligne de commandes, nous allons utiliser un syst\u00e8me Linux simplifi\u00e9 sp\u00e9cialement adapt\u00e9 pour cette activit\u00e9 . Mobiliser des concepts Lancer un terminal sous Ubuntu avec la s\u00e9quence de touche Ctrl \uff0b Alt \uff0b T . A l'int\u00e9rieur de ce terminal, on saisira la commande: docker run -it --rm nsilinux:1.6 . Un syst\u00e8me Linux d\u00e9marre. La connexion est automatiquement faite sur le compte d'Angie et un programme interpr\u00e9teur de commande (ici le shell Bash ) est en attente. Pour quitter, on utilisera la s\u00e9quence de touches Ctrl \uff0b D . Commande La commande ls (de l'anglais list ) permet d'afficher la liste des r\u00e9pertoires et des fichiers dans le r\u00e9pertoire courant. Reconna\u00eetre une situation - Analyser Saisir la commande ls . Commenter. Commande La commande pwd (de l'anglais print working directory ) affiche le r\u00e9pertoire courant. La commande cd (de l'anglais change directory ) permet de changer de r\u00e9pertoire courant. Reconna\u00eetre une situation - Analyser Tester La commande pwd , puis \u00e9crire et tester les commandes appropri\u00e9es afin de v\u00e9rifier vos r\u00e9ponses aux questions de la section Syst\u00e8me de fichiers de Linux pr\u00e9c\u00e9dente.","title":"ACTIVIT\u00c9 1"},{"location":"NSI1/S2/S2A1.html#sequence-2","text":"","title":"SEQUENCE 2"},{"location":"NSI1/S2/S2A1.html#activite-1-interface-en-ligne-de-commande-dun-syteme-dexploitation-libre","text":"","title":"ACTIVITE 1 - Interface en ligne de commande d'un syt\u00e8me d'exploitation libre"},{"location":"NSI1/S2/S2A2.html","text":"S\u00c9QUENCE 2 \u2693\ufe0e ACTIVITE 2 - Commandes de base avec arguments \u2693\ufe0e Angie veut mettre de l'ordre dans son repertoire personnel. Son syst\u00e8me de fichiers est le m\u00eame que celui de l'activit\u00e9 pr\u00e9c\u00e9dente. Commande La commande cat suivie d'un nom_de_fichier (de l'anglais catenate ) affiche dans la console le contenu du fichier nom_de_fichier pass\u00e9 en argument. Utiliser les commandes de base du shell Bash Se connecter au syst\u00e8me linux pr\u00e9c\u00e9dent ( docker run --rm -it nsilinux:1.6 ). A l'aide de la commande cd , aller dans le r\u00e9pertoire NSI puis afficher le contenu du fichier Modules . \u00c9crire les commandes saisies dans la console. Cr\u00e9er des r\u00e9pertoires \u2693\ufe0e Commande La commande mkdir suivie d'un nom_de_repertoire (de l'anglais make directory ) permet de cr\u00e9er un r\u00e9pertoire nomm\u00e9 nom_de_repertoire dans le r\u00e9pertoire courant. Utiliser les commandes de base du shell Bash Cr\u00e9er le r\u00e9pertoire OS dans le r\u00e9pertoire NSI \u00e0 l'aide de la commande mkdir et v\u00e9rifier sa cr\u00e9ation avec la commande ls . \u00c9crire les commandes n\u00e9cessaires. On peut \u00e9galement cr\u00e9er un r\u00e9pertoire dans un autre r\u00e9pertoire en pr\u00e9cisant le chemin relatif: mkdir chemin_relatif/nom_de_repertoire . Reconna\u00eetre des situations d\u00e9j\u00e0 analys\u00e9es et r\u00e9utiliser des solutions En restant dans le r\u00e9pertoire NSI , cr\u00e9er le r\u00e9pertoire Linux dans le r\u00e9pertoire Angie . \u00c9crire les commandes n\u00e9cessaires. D\u00e9placer et copier des fichiers / r\u00e9pertoires \u2693\ufe0e Commande La commande mv source destination (de l'anglais move ) permet de d\u00e9placer et/ou de renommer des fichiers et des r\u00e9pertoires. Les arguments source et destination sont constitu\u00e9s du nom du fichier ou du r\u00e9pertoire, pr\u00e9c\u00e9d\u00e9s \u00e9ventuellement du chemin. Reconna\u00eetre des situations d\u00e9j\u00e0 analys\u00e9es - Utiliser les commandes de base du shell Bash A l'aide de la commande cd aller dans le r\u00e9pertoire Angie . D\u00e9placer le r\u00e9pertoire Types d'Angie dans le r\u00e9pertoire NSI \u00e0 l'aide de la commande mv . \u00c9crire les commandes n\u00e9cessaires. Quel est le r\u00e9sultat de la commande mv Encodage NSI/Encodage ? Commande La commande cp source destination (de l'anglais copy ) permet de copier des fichiers ou des r\u00e9pertoires source vers la destination . Reconna\u00eetre des situations d\u00e9j\u00e0 analys\u00e9es - Utiliser les commandes de base du shell Bash Sans changer de r\u00e9pertoire courant ( Angie ), cr\u00e9er un r\u00e9pertoire Programmation dans le r\u00e9pertoire NSI , puis copier le fichier Modules dans le r\u00e9pertoire Programmation . \u00c9crire les commandes n\u00e9cessaires. Supprimer des fichiers et des r\u00e9pertoires \u2693\ufe0e Commande La commande rm chemin/nom_de_fichier (de l'anglais remove ) permet de supprimer d\u00e9finitivement un ou des fichiers. Reconna\u00eetre des situations d\u00e9j\u00e0 analys\u00e9es - Utiliser les commandes de base du shell Bash Supprimer le fichier Modules du r\u00e9pertoire NSI . \u00c9crire La commande n\u00e9cessaire. Tester la commande rm Danse . Que remarquez-vous ?Justifier. Commande Pour avoir acc\u00e8s \u00e0 la documentation d'une commande, suffit de saisir man nom_de_la_commande . Reconna\u00eetre des situations d\u00e9j\u00e0 analys\u00e9es - Utiliser les commandes de base du shell Bash Tester la commande rm -r Danse . Apr\u00e8s avoir consulter la documentation de rm conclure sur l'utilit\u00e9 de l'option -r .","title":"ACTIVIT\u00c9 2"},{"location":"NSI1/S2/S2A2.html#sequence-2","text":"","title":"S\u00c9QUENCE 2"},{"location":"NSI1/S2/S2A2.html#activite-2-commandes-de-base-avec-arguments","text":"Angie veut mettre de l'ordre dans son repertoire personnel. Son syst\u00e8me de fichiers est le m\u00eame que celui de l'activit\u00e9 pr\u00e9c\u00e9dente. Commande La commande cat suivie d'un nom_de_fichier (de l'anglais catenate ) affiche dans la console le contenu du fichier nom_de_fichier pass\u00e9 en argument. Utiliser les commandes de base du shell Bash Se connecter au syst\u00e8me linux pr\u00e9c\u00e9dent ( docker run --rm -it nsilinux:1.6 ). A l'aide de la commande cd , aller dans le r\u00e9pertoire NSI puis afficher le contenu du fichier Modules . \u00c9crire les commandes saisies dans la console.","title":"ACTIVITE 2 - Commandes de base avec arguments"},{"location":"NSI1/S2/S2A3.html","text":"S\u00e9quence 2 \u2693\ufe0e ACTIVITE 3 - Etude des droits et permissions \u2693\ufe0e Angie s'int\u00e9resse aux droits et aux permissions d'acc\u00e8s \u00e0 des fichiers contenant des informations sur son jeu vid\u00e9o pr\u00e9f\u00e9r\u00e9, enregistr\u00e9es sur l'ordinateur familial, qui a pour syst\u00e8me d'exploitation Linux. Arborescence Utiliser le shell D\u00e9marrer le syst\u00e8me Linux simplifi\u00e9 avec la commande docker run -it --rm nsilinux:1.6 Quand on saisit un nom de fichier ou de r\u00e9pertoire, la touche Tab permet de compl\u00e9ter automatiquement son nom. Utiliser les commandes de base du shell Bash \u00c0 l'aide de la commande cd , aller dans le r\u00e9pertoire Jeux d'Angie. Les options -al de la commande ls permettent d'afficher plus d'informations, comme les droits et les permissions d'acc\u00e8s de tous les fichiers et les r\u00e9pertoires (cach\u00e9s ou non) contenus dans le r\u00e9pertoire courant. Le premier caract\u00e8re permet de diff\u00e9rencier les r\u00e9pertoires des fichiers. Ainsi, le caract\u00e8re d (de l'anglais directory ) d\u00e9signe un r\u00e9pertoire et le caract\u00e8re - d\u00e9signe un fichier ordinaire. Utiliser les commandes de base du shell Bash - Mobiliser des concepts Saisir la commande ls -al , puis identifier les r\u00e9pertoires et les fichiers du r\u00e9pertoire d'Angie. Les caract\u00e8res ci-dessous correspondent aux droits d'acc\u00e8s et aux permissions. Droits Utiliser les commandes de base du shell Bash Quels sont les dix premiers caract\u00e8res affich\u00e9s pour le fichier Mondes et pour le r\u00e9pertoire Saisons . La pr\u00e9sence des lettres r , w et x donne le droit correspondant et - l'interdiction. Lettre De l'anglais Pour un fichier Pour un r\u00e9pertoire r read lire afficher la liste des fichiers et r\u00e9pertoires w write modifier le contenu cr\u00e9er, supprimer et changer le nom des fichiers x execute ex\u00e9cuter (si ex\u00e9cutable) Ouvrir le r\u00e9pertoire L'ordinateur familial est configur\u00e9 pour qu'Angie et son fr\u00e8re Matei soient dans le m\u00eame groupe d'utilisateurs, appel\u00e9 enfants . Leurs parents ont leur propre groupe, diff\u00e9rent, appel\u00e9 parents . Sur un fichier ou un r\u00e9pertoire d'Angie, les parents sont consid\u00e9r\u00e9s comme \u00ab autres utilisateurs \u00bb. Enfin, Angie est \u00e9galement \u00ab propri\u00e9taire \u00bb de ses propres fichiers et r\u00e9pertoires. Mobiliser des concepts Compl\u00e9ter le tableau ci-dessous avec oui ou non pour les trois utilisateurs: Angie, Matei et P\u00e8re. Lecture Ecriture Ex\u00e9cution Mondes Saisons Mobiliser des concepts Quelles actions le p\u00e8re d'Angie peut-il effectuer sur le r\u00e9pertoire Saisons ?","title":"ACTIVIT\u00c9 3"},{"location":"NSI1/S2/S2A3.html#sequence-2","text":"","title":"S\u00e9quence 2"},{"location":"NSI1/S2/S2A3.html#activite-3-etude-des-droits-et-permissions","text":"Angie s'int\u00e9resse aux droits et aux permissions d'acc\u00e8s \u00e0 des fichiers contenant des informations sur son jeu vid\u00e9o pr\u00e9f\u00e9r\u00e9, enregistr\u00e9es sur l'ordinateur familial, qui a pour syst\u00e8me d'exploitation Linux. Arborescence Utiliser le shell D\u00e9marrer le syst\u00e8me Linux simplifi\u00e9 avec la commande docker run -it --rm nsilinux:1.6 Quand on saisit un nom de fichier ou de r\u00e9pertoire, la touche Tab permet de compl\u00e9ter automatiquement son nom. Utiliser les commandes de base du shell Bash \u00c0 l'aide de la commande cd , aller dans le r\u00e9pertoire Jeux d'Angie. Les options -al de la commande ls permettent d'afficher plus d'informations, comme les droits et les permissions d'acc\u00e8s de tous les fichiers et les r\u00e9pertoires (cach\u00e9s ou non) contenus dans le r\u00e9pertoire courant. Le premier caract\u00e8re permet de diff\u00e9rencier les r\u00e9pertoires des fichiers. Ainsi, le caract\u00e8re d (de l'anglais directory ) d\u00e9signe un r\u00e9pertoire et le caract\u00e8re - d\u00e9signe un fichier ordinaire. Utiliser les commandes de base du shell Bash - Mobiliser des concepts Saisir la commande ls -al , puis identifier les r\u00e9pertoires et les fichiers du r\u00e9pertoire d'Angie. Les caract\u00e8res ci-dessous correspondent aux droits d'acc\u00e8s et aux permissions. Droits Utiliser les commandes de base du shell Bash Quels sont les dix premiers caract\u00e8res affich\u00e9s pour le fichier Mondes et pour le r\u00e9pertoire Saisons . La pr\u00e9sence des lettres r , w et x donne le droit correspondant et - l'interdiction. Lettre De l'anglais Pour un fichier Pour un r\u00e9pertoire r read lire afficher la liste des fichiers et r\u00e9pertoires w write modifier le contenu cr\u00e9er, supprimer et changer le nom des fichiers x execute ex\u00e9cuter (si ex\u00e9cutable) Ouvrir le r\u00e9pertoire L'ordinateur familial est configur\u00e9 pour qu'Angie et son fr\u00e8re Matei soient dans le m\u00eame groupe d'utilisateurs, appel\u00e9 enfants . Leurs parents ont leur propre groupe, diff\u00e9rent, appel\u00e9 parents . Sur un fichier ou un r\u00e9pertoire d'Angie, les parents sont consid\u00e9r\u00e9s comme \u00ab autres utilisateurs \u00bb. Enfin, Angie est \u00e9galement \u00ab propri\u00e9taire \u00bb de ses propres fichiers et r\u00e9pertoires. Mobiliser des concepts Compl\u00e9ter le tableau ci-dessous avec oui ou non pour les trois utilisateurs: Angie, Matei et P\u00e8re. Lecture Ecriture Ex\u00e9cution Mondes Saisons Mobiliser des concepts Quelles actions le p\u00e8re d'Angie peut-il effectuer sur le r\u00e9pertoire Saisons ?","title":"ACTIVITE 3 - Etude des droits et permissions"},{"location":"NSI1/S2/S2A4.html","text":"S\u00e9quence 2 \u2693\ufe0e ACTIVITE 4 - Modifications des droits \u2693\ufe0e Angie veut donner plus de droits \u00e0 son petit fr\u00e8re Mat\u00e9i afin qu'il puisse avoir un acc\u00e8s complet \u00e0 certains fichiers contenant des informations sur son jeu vid\u00e9o pr\u00e9f\u00e9r\u00e9 et les modifier lui-m\u00eame. ( Le syst\u00e8me linux simplifi\u00e9 doit \u00eatre d\u00e9marr\u00e9 pour cette activit\u00e9 : docker run -it --rm nsilinux:1.6 ) Commande La commande chmod droits nom_fichier_repertoire (de l'anglais change mode ) permet de modifier les permissions d'acc\u00e8s \u00e0 un fichier ou \u00e0 un r\u00e9pertoire nomm\u00e9 nom_fichier_repertoire . La syntaxe de droits est d\u00e9taill\u00e9e ci-dessous. Exemple la commande chmod ug+x nom_fichier ajoute le droit d'ex\u00e9cution du fichier nom_fichier au propri\u00e9taire et aux utilisateurs faisant partie du groupe du fichier. Utiliser des commandes du shell Bash \u00c0 l'aide de la commande ls -l , trouver les droits du fichier Personnages puis modifier ses droits afin qu'il soit modifiable par le fr\u00e8re d'Angie, qui est dans le m\u00eame groupe que le propri\u00e9taire. V\u00e9rifier enfin que les droits ont bien \u00e9t\u00e9 chang\u00e9s. Tester la commande chmod u=rw,go=r Mondes . Faire une hypoth\u00e8se sur l'utilit\u00e9 de la virgule. Au lieu de modifier les fichiers un par un, Angie a d\u00e9couvert, en utilisant la commande man chmod , que l'option -R (de l'anglais recursive ) modifie les autorisations de tout le contenu d'un r\u00e9pertoire. Utiliser des commandes du shell Bash Tester, puis \u00e9crire la commande qui permet d'ajouter au r\u00e9pertoire Saisons et \u00e0 tout ce qu'il contient les droits en lecture et en \u00e9criture au groupe du fichier. Supprimer les droits en lecture aux utilisateurs qui ne font pas partie du groupe.","title":"ACTIVIT\u00c9 4"},{"location":"NSI1/S2/S2A4.html#sequence-2","text":"","title":"S\u00e9quence 2"},{"location":"NSI1/S2/S2A4.html#activite-4-modifications-des-droits","text":"Angie veut donner plus de droits \u00e0 son petit fr\u00e8re Mat\u00e9i afin qu'il puisse avoir un acc\u00e8s complet \u00e0 certains fichiers contenant des informations sur son jeu vid\u00e9o pr\u00e9f\u00e9r\u00e9 et les modifier lui-m\u00eame. ( Le syst\u00e8me linux simplifi\u00e9 doit \u00eatre d\u00e9marr\u00e9 pour cette activit\u00e9 : docker run -it --rm nsilinux:1.6 ) Commande La commande chmod droits nom_fichier_repertoire (de l'anglais change mode ) permet de modifier les permissions d'acc\u00e8s \u00e0 un fichier ou \u00e0 un r\u00e9pertoire nomm\u00e9 nom_fichier_repertoire . La syntaxe de droits est d\u00e9taill\u00e9e ci-dessous. Exemple la commande chmod ug+x nom_fichier ajoute le droit d'ex\u00e9cution du fichier nom_fichier au propri\u00e9taire et aux utilisateurs faisant partie du groupe du fichier. Utiliser des commandes du shell Bash \u00c0 l'aide de la commande ls -l , trouver les droits du fichier Personnages puis modifier ses droits afin qu'il soit modifiable par le fr\u00e8re d'Angie, qui est dans le m\u00eame groupe que le propri\u00e9taire. V\u00e9rifier enfin que les droits ont bien \u00e9t\u00e9 chang\u00e9s. Tester la commande chmod u=rw,go=r Mondes . Faire une hypoth\u00e8se sur l'utilit\u00e9 de la virgule. Au lieu de modifier les fichiers un par un, Angie a d\u00e9couvert, en utilisant la commande man chmod , que l'option -R (de l'anglais recursive ) modifie les autorisations de tout le contenu d'un r\u00e9pertoire. Utiliser des commandes du shell Bash Tester, puis \u00e9crire la commande qui permet d'ajouter au r\u00e9pertoire Saisons et \u00e0 tout ce qu'il contient les droits en lecture et en \u00e9criture au groupe du fichier. Supprimer les droits en lecture aux utilisateurs qui ne font pas partie du groupe.","title":"ACTIVITE 4 - Modifications des droits"},{"location":"NSI1/S2/S2C1.html","text":"S\u00e9quence 2 \u2693\ufe0e COURS - SYSTEME D'EXPLOITATION \u2693\ufe0e Quel est le r\u00f4le d'un syst\u00e8me d'exploitation? \u2693\ufe0e Le syst\u00e8me d'exploitation permet: l'ex\u00e9cution des applications; le partage des ressources entre les utilisateurs, les programmes; la gestion: des p\u00e9riph\u00e9riques; des fichiers; des erreurs; des performances. Les diff\u00e9rents types de syst\u00e8me d'exploitation \u2693\ufe0e On distingue deux grandes familles de syst\u00e8me d'exploitation: les d\u00e9riv\u00e9s d'UNIX (GNU/Linux, BSD, iOS, MacOS, Android, etc.); les syst\u00e8mes Microsoft Windows. Certains sont libres (c-\u00e0-d ne n\u00e9cessitant pas le paiement d'une licence d'utilisation, code source disponible, entre autres), d'autres non (on les qualifie de syst\u00e8mes propri\u00e9taires ). Conform\u00e9ment au programme, on utilisera un syst\u00e8me d'exploitation libre en NSI: GNU/Linux. L'interaction avec le syst\u00e8me d'exploitation peut se faire de deux mani\u00e8res: par le biais d'une interface graphique (GUI: Graphical User Interface); par le biais d'une interface en ligne de commande (CLI: Command Line Interface). On privil\u00e9giera ici l'utilisation de la ligne de commande . D\u00e9couvrir la ligne de commande \u2693\ufe0e Un interpr\u00e9teur de commande : Bash ou shell Bash \u2693\ufe0e On a acc\u00e8s \u00e0 la ligne de commande en ouvrant un terminal avec le raccourci clavier Ctrl \uff0b Alt \uff0b T . Il s'agit d'un programme appel\u00e9 Bash qui est pr\u00e9sent par d\u00e9faut sur la majorit\u00e9 des syt\u00e8mes UNIX. Les commandes de base \u2693\ufe0e Une fois le terminal d\u00e9marr\u00e9, chaque utilisateur se trouve par d\u00e9faut dans son dossier personnel (en anglais home directory ou plus simplement HOME ) et le shell Bash est en attente de commande en affichant une s\u00e9rie d'informations: nom_utilisateur@nom_machine:~$ Le caract\u00e8re ~ (prononcez tilde, touche AltGr \uff0b 2 ) correspond au chemin du r\u00e9pertoire personnel de l'utilisateur . Le caract\u00e8re $ signifie que l'on a affaire \u00e0 un utilisateur normal c-\u00e0-d avec des droits limit\u00e9s. Toutes les commandes acceptent de nombreuses options. Pour avoir un inventaire complet des options on doit taper: man xxx o\u00f9 xxx est la commande. Quelques commandes \u00e0 conna\u00eetre (liste non exhaustive) Commande Description ls lister le contenu du dossier courant mkdir cr\u00e9er un dossier cd se d\u00e9placer dans un dossier cp copier des fichiers ou dossiers rm supprimer des fichiers ou dossiers cat afficher le contenu d'un fichier touch cr\u00e9e un fichier vide clear efface l'\u00e9cran Aborescence d'un syst\u00e8me Linux \u2693\ufe0e Les dossiers du syst\u00e8mes sont organis\u00e9s selon une arborescence dont la racine est / . Un utilisateur normal n'a pas les droits suffisants pour \u00e9crire dans les dossiers syst\u00e8mes ou y effacer des fichiers. Seul le superutilisateur nomm\u00e9 root peut tout faire (et m\u00eame d\u00e9truire le syst\u00e8me) et n'importe o\u00f9 ! Les changements de dossier se font naturellement avec la commande cd qui peut prendre comme param\u00e8tre: un chemin absolu , c-\u00e0-d compl\u00e8tement qualifi\u00e9 depuis racine / (par exemple /home/bruno/Documents ); un chemin relatif , c-\u00e0-d par rapport au dossier o\u00f9 on se trouve qui est not\u00e9 avec le raccourci . (point); le dossier parent est not\u00e9 avec le raccourci .. (point point). Ainsi, si on est dans /home/bruno/Documents et qu'on veut se rendre dans /home/bruno/T\u00e9l\u00e9chargements on tapera: 1 cd ../T\u00e9l\u00e9chargements Gestion des droits \u2693\ufe0e Qui peut faire quoi et o\u00f9 ? Pour r\u00e9pondre \u00e0 cette question, les environnements UNIX divisent le monde en trois parties: le propri\u00e9taire ou utilisateur ( u ser); le groupe ( g roup); les autres ( o thers). Par ailleurs, les fichiers peuvent \u00eatre manipul\u00e9s en: lecture ( r ead); \u00e9criture ( w rite); ex\u00e9cution (e x ecute). Consid\u00e9rons la sortie de la commande ls -l sur un r\u00e9pertoire donn\u00e9. Les colonnes n\u00b0 1, 3 et 4 sont utiles \u00e0 la gestion des droits. La colonne 3 indique le nom du propri\u00e9taire; la colonne 4 indique le nom du groupe; la colonne 1 qui contient 10 caract\u00e8res doit \u00eatre d\u00e9compos\u00e9 en quatre parties. Par exemple -rwx r-- r-- ( attention il n'y a pas d'espaces en r\u00e9alit\u00e9, ils ont \u00e9t\u00e9 rajout\u00e9s ici pour une meilleure lisibilit\u00e9 ) ! Les indications de la 1re colonne peuvent \u00eatre interpr\u00e9t\u00e9es de la mani\u00e8re suivante: le 1er caract\u00e8re: un - correspond \u00e0 un fichier et un d \u00e0 un r\u00e9pertoire; un groupe de 3 caract\u00e8res associ\u00e9s aux droits du propri\u00e9taire ; un groupe de 3 caract\u00e8res associ\u00e9s aux droits du groupe ; un groupe de 3 caract\u00e8res associ\u00e9s aux droits des autres ; Dans l'exemple de la capture ci-dessus, Saison1 est un fichier ordinaire dont le propri\u00e9taire est Angie qui dispose des droits en lecture et \u00e9criture alors que le groupe enfants et les autres n'ont que le droit en lecture. Un x signifie droit de traverser pour un r\u00e9pertoire. Enfin, seuls le propri\u00e9taire ou bien root peuvent changer les droits sur un fichier ou r\u00e9pertoire. La commande chmod est pr\u00e9vue \u00e0 cet effet. Voir des exemples de syntaxe dans le tableau ci-dessous. Accorder les droits de: Syntaxe lecture au groupe chmod g+r fichier \u00e9criture au propri\u00e9taire chmod u+w fichier ex\u00e9cution aux autres chmod o+x fichier ex\u00e9cution \u00e0 tous chmod ugo+r fichier Remarque Pour supprimer un droit, on utilise le signe - ; par exemple, pour supprimer le droit d'\u00e9criture au groupe sur un fichier, on utilisera la commande chmod g-w fichier","title":"COURS"},{"location":"NSI1/S2/S2C1.html#sequence-2","text":"","title":"S\u00e9quence 2"},{"location":"NSI1/S2/S2C1.html#cours-systeme-dexploitation","text":"","title":"COURS - SYSTEME D'EXPLOITATION"},{"location":"NSI1/S2/S2E1.html","text":"S\u00e9quence 2 \u2693\ufe0e EXERCICES \u2693\ufe0e R\u00e9vision: Cocher la ou les bonnes r\u00e9ponses \u2693\ufe0e La commande ls -al : permet de lister les fichiers du r\u00e9pertoire courant sans d\u00e9tail. permet de lister les fichiers standards et cach\u00e9s du r\u00e9pertoire courant. permet d\u2019afficher des d\u00e9tails sur un fichier comme son propri\u00e9taire ou ses droits. n\u2019existe pas en Bash. La commande mv : sert \u00e0 copier des fichiers ou r\u00e9pertoires. sert \u00e0 d\u00e9placer des fichiers ou r\u00e9pertoires. peut servir \u00e0 renommer un fichier ou un r\u00e9pertoire. n\u2019existe pas en Bash. La commande ls -l toto.sh affiche -r-xr--r-- 1 john staff 128 18 mai 11:56 toto.sh . toto.sh appartient \u00e0 john. toto.sh appartient \u00e0 staff du groupe john. Personne n\u2019a le droit d\u2019\u00e9criture sur toto.sh. Personne n\u2019a le droit de lire toto.sh. Dans un terminal, on tape cd (sans arguments) pour se placer dans son r\u00e9pertoire personnel, not\u00e9 parfois HOME . Quelle commande doit-on ensuite taper pour d\u00e9placer dans le r\u00e9pertoire courant le fichier exo1.py qui se trouve dans Documents/python/ en sachant que Documents est dans HOME ? cp Documents/python/exo1.py mv /Documents/python/exo1.py mv ./Documents/python/exo1.py . rm Documents/python/exo1.py Indication pour les exercices \ud83d\udc49 On utilisera la machine Linux simplifi\u00e9e. On se connectera avec le compte de Matei en saisissant la commande su Matei (son mot de passe est eleve ). Puis on se d\u00e9place dans son r\u00e9pertoire personnel avec cd ~ . Exercice 1 - Trouver son chemin \u2693\ufe0e Observer l\u2019arborescence suivante : Proposer une commande qui permette de se d\u00e9placer du r\u00e9pertoire HOME de Alice \u00e0 celui de Bob : en utilisant un chemin relatif ; en utilisant un chemin absolu. Alice est \u00e0 la racine / . Proposer deux commandes qui peuvent lui permettre de se d\u00e9placer dans son r\u00e9pertoire personnel ( HOME ). Bob est dans son HOME . Aidez-le \u00e0 : lister le contenu de son HOME ; lister le contenu de son HOME y compris les fichiers et r\u00e9pertoires cach\u00e9s ; lister le contenu du r\u00e9pertoire share sans quitter son HOME . Exercice 2 - Cr\u00e9er une arborescence et se d\u00e9placer dedans \u2693\ufe0e Cr\u00e9er dans le r\u00e9pertoire personnel de Matei l\u2019arborescence ci-dessus dans laquelle A, B, C, D, E, F et G sont des r\u00e9pertoires. La commande du shell touch nom_fichier permet de cr\u00e9er un fichier vide. Cr\u00e9er deux fichiers vides appel\u00e9s un et deux dans le r\u00e9pertoire d\u2019accueil. Quelle commande permet de copier des fichiers ou r\u00e9pertoires ? Copier le fichier un dans le r\u00e9pertoire A en lui donnant le nom trois . Comment r\u00e9aliser la copie pr\u00e9c\u00e9dente en utilisant un chemin relatif si vous \u00eates : dans le r\u00e9pertoire A ? dans le r\u00e9pertoire B ? Si votre nom d\u2019utilisateur est Angie , comment r\u00e9aliser cette copie en utilisant un chemin absolu ? Comment renommer le fichier trois en quatre ? Exercice 3 - Utiliser les pages du manuel d'une commande \u2693\ufe0e Quelle option de la commande echo faut-il utiliser pour rester sur la m\u00eame ligne ? Comment faut-il faire pour afficher un message sur plusieurs lignes avec cette m\u00eame commande ? La commande cat nom_fichier permet d'afficher son contenu dans le terminale. Comment peut-on afficher le contenu avec les num\u00e9ros de lignes? Tester. Exercice 4 - Avez-vous les droits ? \u2693\ufe0e On consid\u00e8re le syst\u00e8me \u00e9tudi\u00e9 dans les activit\u00e9s pr\u00e9paratoires. L'utilisateur Matei est connect\u00e9 et a obtenu les informations suivantes: Commandes utilis\u00e9es : tree repertoire affiche l'arborescence des fichiers depuis repertoire et groups utilisateur permet de connaitre les groupes auxquels appartient utilisateur . Matei souhaite ajouter un fichier Saison4 dans le dossier Saisons d'Angie. Peut-il le faire directement ? Justifier la r\u00e9ponse. Proposer une strat\u00e9gie pour r\u00e9soudre le probl\u00e8me.","title":"EXERCICES 1"},{"location":"NSI1/S2/S2E1.html#sequence-2","text":"","title":"S\u00e9quence 2"},{"location":"NSI1/S2/S2E1.html#exercices","text":"","title":"EXERCICES"},{"location":"NSI1/S2/sequence2.html","text":"SEQUENCE 2 \u2693\ufe0e ACTIVITE 1 - Interface en ligne de commande d'un syt\u00e8me d'exploitation libre \u2693\ufe0e Syst\u00e8mes d'exploitations \u2693\ufe0e Rep\u00e8res historiques \u2693\ufe0e Prendre connaissance des vid\u00e9os suivantes: Histoire des syst\u00e8mes d'exploitation Le(s) syst\u00e8me(s) de type UNIX A faire R\u00e9sumer en une phrase courte le r\u00f4le d'un syst\u00e8me d'exploitation. Vers quelle p\u00e9riode sont n\u00e9s les syst\u00e8mes d'exploitation ? Syst\u00e8mes libres ou propri\u00e9taires \u2693\ufe0e A faire A l'aide de cette page wikipedia , rappelez les 4 diff\u00e9rences fondamentales entre un logiciel libre et un logiciel propri\u00e9taire. Quelles sont les cons\u00e9quences du statut propri\u00e9taire de Microsoft Windows ? Le syst\u00e8me Linux \u2693\ufe0e Histoire du syst\u00e8me d'exploitation Linux A faire Qui a cr\u00e9\u00e9 Linux ? Syst\u00e8me de fichiers de Linux \u2693\ufe0e Avec Linux, comme dans Microsoft Windows, les donn\u00e9es sont stock\u00e9es dans des fichiers, eux-m\u00eames contenus dans des dossiers appel\u00e9s r\u00e9pertoires . En revanche, il n'existe pas de notion de \u00ab disque C:\\ ou D:\\ ou autre\u00bb sous Linux. Un exemple d'organisation des principaux fichiers et r\u00e9pertoires appel\u00e9e arborescence est repr\u00e9sent\u00e9e en version simplifi\u00e9e ci-dessous. Dans le syst\u00e8me de fichiers de Linux, tous les r\u00e9pertoires n\u00e9cessaires au fonctionnement du syst\u00e8me d'exploitation ( usr , bin , etc , dev , tmp , ...) sont accessibles depuis le r\u00e9pertoire racine / . Les r\u00e9pertoires des utilisateurs d'une machine Linux, sont situ\u00e9s dans le r\u00e9pertoire home . Dans l'exemple ci-dessus il s'agit des r\u00e9pertoires Angie et Matei . Attention, le syst\u00e8me d'exploitation Linux est sensible \u00e0 la casse , il faut donc \u00eatre vigilant et distinguer les majuscules des minuscules. Pour naviguer dans le syst\u00e8me de fichiers, nous devons d\u00e9finir les chemins absolus et relatifs . Un chemin d'acc\u00e8s absolu part toujours du r\u00e9pertoire racine / suivi des noms de r\u00e9pertoires rencontr\u00e9s jusqu'\u00e0 la destination, s\u00e9par\u00e9s par des symboles / (slash). Exemple Le chemin absolu vers le r\u00e9pertoire Exos de Mat\u00e9i est /home/Matei/Math/Exos . A faire \u00c9crire le chemin absolu vers le r\u00e9pertoire NSI d' Angie . Lorsque l'on se d\u00e9place dans l' arborescence de fichiers , le r\u00e9pertoire dans lequel on se situe s'appelle le r\u00e9pertoire courant et est not\u00e9 . (point). Un chemin relatif fait r\u00e9f\u00e9rence au r\u00e9pertoire courant et donne la liste des noms du ou des r\u00e9pertoire(s) rencontr\u00e9s jusqu'\u00e0 la destination, s\u00e9par\u00e9s par des / . Exemple Le chemin relatif vers le r\u00e9pertoire Exos de Matei depuis le r\u00e9pertoire courant home est ./Matei/Math/Exos . A faire \u00c9crire le chemin relatif vers le r\u00e9pertoire NSI d' Angie \u00e0 partir du r\u00e9pertoire courant home . Pour remonter d'un niveau dans l'arborescence de fichiers, il faut utiliser le r\u00e9pertoire parent .. . Exemple Le chemin relatif depuis le r\u00e9pertoire courant d'Angie ( /home/Angie ) vers le r\u00e9pertoire Math de Matei est ../Matei/Math . A faire \u00c9crire le chemin relatif vers le r\u00e9pertoire Jeux d' Angie \u00e0 partir du r\u00e9pertoire courant NSI Le chemin vers le r\u00e9pertoire personnel d'un utilisateur est un cas particulier. Il poss\u00e8de un raccourci ~ , que l'on prononce tilde . Ainsi, si Angie souhaite rejoindre son r\u00e9pertoire personnel, il lui suffira de taper cd ~ . Structure d'une commande sous Linux \u2693\ufe0e Pour interagir avec l'utilisateur, les syst\u00e8mes d'exploitation (SE) peuvent avoir une interface graphique, o\u00f9 les manipulations se font essentiellement \u00e0 la souris dans des fen\u00eatres. Il existe une autre possibilit\u00e9 d'interaction: l' interface en ligne de commande . Il s'agit d'un programme qui permet de saisir les commandes que le syst\u00e8me d'exploitation doit effectuer, en mode texte . Pour d\u00e9couvrir comment interagir avec le syst\u00e8me d'exploitation en ligne de commandes, nous allons utiliser un syst\u00e8me Linux simplifi\u00e9 sp\u00e9cialement adapt\u00e9 pour cette activit\u00e9 . A faire Lancer un terminal sous Ubuntu avec la s\u00e9quence de touche Ctrl \uff0b Alt \uff0b T . A l'int\u00e9rieur de ce terminal, on saisira la commande: docker run -it --rm nsilinux:1.6 . Un syst\u00e8me Linux d\u00e9marre. La connexion est automatiquement faite sur le compte d'Angie et un programme interpr\u00e9teur de commande (ici le shell Bash ) est en attente. Pour quitter, on utilisera la s\u00e9quence de touches Ctrl \uff0b D . Commande La commande ls (de l'anglais list ) permet d'afficher la liste des r\u00e9pertoires et des fichiers dans le r\u00e9pertoire courant. A faire Saisir la commande ls . Commenter. Commande La commande pwd (de l'anglais print working directory ) affiche le r\u00e9pertoire courant. La commande cd (de l'anglais change directory ) permet de changer de r\u00e9pertoire courant. A faire Tester La commande pwd , puis \u00e9crire et tester les commandes appropri\u00e9es afin de v\u00e9rifier vos r\u00e9ponses aux questions de la section Syst\u00e8me de fichiers de Linux pr\u00e9c\u00e9dente. ACTIVITE 2 - Commandes de base avec arguments \u2693\ufe0e Angie veut mettre de l'ordre dans son repertoire personnel. Son syst\u00e8me de fichiers est le m\u00eame que celui de l'activit\u00e9 pr\u00e9c\u00e9dente. Commande La commande cat suivie d'un nom_de_fichier (de l'anglais catenate ) affiche dans la console le contenu du fichier nom_de_fichier pass\u00e9 en argument. A faire Se connecter au syst\u00e8me linux pr\u00e9c\u00e9dent ( docker run --rm -it nsilinux:1.6 ). A l'aide de la commande cd , aller dans le r\u00e9pertoire NSI puis afficher le contenu du fichier Modules . \u00c9crire les commandes saisies dans la console. Cr\u00e9er des r\u00e9pertoires \u2693\ufe0e Commande La commande mkdir suivie d'un nom_de_repertoire (de l'anglais make directory ) permet de cr\u00e9er un r\u00e9pertoire nomm\u00e9 nom_de_repertoire dans le r\u00e9pertoire courant. A faire Cr\u00e9er le r\u00e9pertoire OS dans le r\u00e9pertoire NSI \u00e0 l'aide de la commande mkdir et v\u00e9rifier sa cr\u00e9ation avec la commande ls . \u00c9crire les commandes n\u00e9cessaires. On peut \u00e9galement cr\u00e9er un r\u00e9pertoire dans un autre r\u00e9pertoire en pr\u00e9cisant le chemin relatif: mkdir chemin_relatif/nom_de_repertoire . A faire En restant dans le r\u00e9pertoire NSI , cr\u00e9er le r\u00e9pertoire Linux dans le r\u00e9pertoire Angie . \u00c9crire les commandes n\u00e9cessaires. D\u00e9placer et copier des fichiers / r\u00e9pertoires \u2693\ufe0e Commande La commande mv source destination (de l'anglais move ) permet de d\u00e9placer et/ou de renommer des fichiers et des r\u00e9pertoires. Les arguments source et destination sont constitu\u00e9s du nom du fichier ou du r\u00e9pertoire, pr\u00e9c\u00e9d\u00e9s \u00e9ventuellement du chemin. A faire A l'aide de la commande cd aller dans le r\u00e9pertoire Angie . D\u00e9placer le r\u00e9pertoire Types d'Angie dans le r\u00e9pertoire NSI \u00e0 l'aide de la commande mv . \u00c9crire les commandes n\u00e9cessaires. Quel est le r\u00e9sultat de la commande mv Encodage NSI/Encodage ? Commande La commande cp source destination (de l'anglais copy ) permet de copier des fichiers ou des r\u00e9pertoires source vers la destination . A faire Sans changer de r\u00e9pertoire courant ( Angie ), cr\u00e9er un r\u00e9pertoire Programmation dans le r\u00e9pertoire NSI , puis copier le fichier Modules dans le r\u00e9pertoire Programmation . \u00c9crire les commandes n\u00e9cessaires. Supprimer des fichiers et des r\u00e9pertoires \u2693\ufe0e Commande La commande rm chemin/nom_de_fichier (de l'anglais remove ) permet de supprimer d\u00e9finitivement un ou des fichiers. A faire Supprimer le fichier Modules du r\u00e9pertoire NSI . \u00c9crire La commande n\u00e9cessaire. Tester la commande rm Danse . Que remarquez-vous ?Justifier. Commande Pour avoir acc\u00e8s \u00e0 la documentation d'une commande, suffit de saisir man nom_de_la_commande . A faire Tester la commande rm -r Danse . Apr\u00e8s avoir consulter la documentation de rm conclure sur l'utilit\u00e9 de l'option -r . ACTIVITE 3 - Etude des droits et permissions \u2693\ufe0e Angie s'int\u00e9resse aux droits et aux permissions d'acc\u00e8s \u00e0 des fichiers contenant des informations sur son jeu vid\u00e9o pr\u00e9f\u00e9r\u00e9, enregistr\u00e9es sur l'ordinateur familial, qui a pour syst\u00e8me d'exploitation Linux. A faire D\u00e9marrer le syst\u00e8me Linux simplifi\u00e9 avec la commande docker run -it --rm nsilinux:1.6 Quand on saisit un nom de fichier ou de r\u00e9pertoire, la touche Tab permet de compl\u00e9ter automatiquement son nom. A faire \u00c0 l'aide de la commande cd , aller dans le r\u00e9pertoire Jeux d'Angie. Les options -al de la commande ls permettent d'afficher plus d'informations, comme les droits et les permissions d'acc\u00e8s de tous les fichiers et les r\u00e9pertoires (cach\u00e9s ou non) contenus dans le r\u00e9pertoire courant. Le premier caract\u00e8re permet de diff\u00e9rencier les r\u00e9pertoires des fichiers. Ainsi, le caract\u00e8re d (de l'anglais directory ) d\u00e9signe un r\u00e9pertoire et le caract\u00e8re - d\u00e9signe un fichier ordinaire. A faire Saisir la commande ls -al , puis identifier les r\u00e9pertoires et les fichiers du r\u00e9pertoire d'Angie. Les caract\u00e8res ci-dessous correspondent aux droits d'acc\u00e8s et aux permissions. A faire Quels sont les dix premiers caract\u00e8res affich\u00e9s pour le fichier Mondes et pour le r\u00e9pertoire Saisons . La pr\u00e9sence des lettres r , w et x donne le droit correspondant et - l'interdiction. Lettre De l'anglais Pour un fichier Pour un r\u00e9pertoire r read lire afficher la liste des fichiers et r\u00e9pertoires w write modifier le contenu cr\u00e9er, supprimer et changer le nom des fichiers x execute ex\u00e9cuter (si ex\u00e9cutable) Ouvrir le r\u00e9pertoire L'ordinateur familial est configur\u00e9 pour qu'Angie et son fr\u00e8re Matei soient dans le m\u00eame groupe d'utilisateurs, appel\u00e9 enfants . Leurs parents ont leur propre groupe, diff\u00e9rent, appel\u00e9 parents . Sur un fichier ou un r\u00e9pertoire d'Angie, les parents sont consid\u00e9r\u00e9s comme \u00ab autres utilisateurs \u00bb. Enfin, Angie est \u00e9galement \u00ab propri\u00e9taire \u00bb de ses propres fichiers et r\u00e9pertoires. A faire Compl\u00e9ter le tableau ci-dessous avec oui ou non pour les trois utilisateurs: Angie, Matei et P\u00e8re. Lecture Ecriture Ex\u00e9cution Mondes Saisons A faire Quelles actions le p\u00e8re d'Angie peut-il effectuer sur le r\u00e9pertoire Saisons ? ACTIVITE 4 - Modifications des droits \u2693\ufe0e Angie veut donner plus de droits \u00e0 son petit fr\u00e8re Mat\u00e9i afin qu'il puisse avoir un acc\u00e8s complet \u00e0 certains fichiers contenant des informations sur son jeu vid\u00e9o pr\u00e9f\u00e9r\u00e9 et les modifier lui-m\u00eame. ( Le syst\u00e8me linux simplifi\u00e9 doit \u00eatre d\u00e9marr\u00e9 pour cette activit\u00e9 : docker run -it --rm nsilinux:1.6 ) Commande La commande chmod droits nom_fichier_repertoire (de l'anglais change mode ) permet de modifier les permissions d'acc\u00e8s \u00e0 un fichier ou \u00e0 un r\u00e9pertoire nomm\u00e9 nom_fichier_repertoire . La syntaxe de droits est d\u00e9taill\u00e9e ci-dessous. Exemple la commande chmod ug+x nom_fichier ajoute le droit d'ex\u00e9cution du fichier nom_fichier au propri\u00e9taire et aux utilisateurs faisant partie du groupe du fichier. A faire \u00c0 l'aide de la commande ls -l , trouver les droits du fichier Personnages puis modifier ses droits afin qu'il soit modifiable par le fr\u00e8re d'Angie, qui est dans le m\u00eame groupe que le propri\u00e9taire. V\u00e9rifier enfin que les droits ont bien \u00e9t\u00e9 chang\u00e9s. Tester la commande chmod u=rw,go=r Mondes . Faire une hypoth\u00e8se sur l'utilit\u00e9 de la virgule. Au lieu de modifier les fichiers un par un, Angie a d\u00e9couvert, en utilisant la commande man chmod , que l'option -R (de l'anglais recursive ) modifie les autorisations de tout le contenu d'un r\u00e9pertoire. A faire Tester, puis \u00e9crire la commande qui permet d'ajouter au r\u00e9pertoire Saisons et \u00e0 tout ce qu'il contient les droits en lecture et en \u00e9criture au groupe du fichier. Supprimer les droits en lecture aux utilisateurs qui ne font pas partie du groupe. COURS - SYSTEME D'EXPLOITATION \u2693\ufe0e Quel est le r\u00f4le d'un syst\u00e8me d'exploitation? \u2693\ufe0e Le syst\u00e8me d'exploitation permet: l'ex\u00e9cution des applications; le partage des ressources entre les utilisateurs, les programmes; la gestion: des p\u00e9riph\u00e9riques; des fichiers; des erreurs; des performances. Les diff\u00e9rents types de syst\u00e8me d'exploitation \u2693\ufe0e On distingue deux grandes familles de syst\u00e8me d'exploitation: les d\u00e9riv\u00e9s d'UNIX (GNU/Linux, BSD, iOS, MacOS, Android, etc.); les syst\u00e8mes Microsoft Windows. Certains sont libres (c-\u00e0-d ne n\u00e9cessitant pas le paiement d'une licence d'utilisation, code source disponible, entre autres), d'autres non (on les qualifie de syst\u00e8mes propri\u00e9taires ). Conform\u00e9ment au programme, on utilisera un syst\u00e8me d'exploitation libre en NSI: GNU/Linux. L'interaction avec le syst\u00e8me d'exploitation peut se faire de deux mani\u00e8res: par le biais d'une interface graphique (GUI: Graphical User Interface); par le biais d'une interface en ligne de commande (CLI: Command Line Interface). On privil\u00e9giera ici l'utilisation de la ligne de commande . D\u00e9couvrir la ligne de commande \u2693\ufe0e Un interpr\u00e9teur de commande : Bash ou shell Bash \u2693\ufe0e On a acc\u00e8s \u00e0 la ligne de commande en ouvrant un terminal avec le raccourci clavier Ctrl \uff0b Alt \uff0b T . Il s'agit d'un programme appel\u00e9 Bash qui est pr\u00e9sent par d\u00e9faut sur la majorit\u00e9 des syt\u00e8mes UNIX. Les commandes de base \u2693\ufe0e Une fois le terminal d\u00e9marr\u00e9, chaque utilisateur se trouve par d\u00e9faut dans son dossier personnel (en anglais home directory ou plus simplement HOME ) et le shell Bash est en attente de commande en affichant une s\u00e9rie d'informations: nom_utilisateur@nom_machine:~$ Le caract\u00e8re ~ (prononcez tilde, touche AltGr \uff0b 2 ) correspond au chemin du r\u00e9pertoire personnel de l'utilisateur . Le caract\u00e8re $ signifie que l'on a affaire \u00e0 un utilisateur normal c-\u00e0-d avec des droits limit\u00e9s. Toutes les commandes acceptent de nombreuses options. Pour avoir un inventaire complet des options on doit taper: man xxx o\u00f9 xxx est la commande. Quelques commandes \u00e0 conna\u00eetre (liste non exhaustive) Commande Description ls lister le contenu du dossier courant mkdir cr\u00e9er un dossier cd se d\u00e9placer dans un dossier cp copier des fichiers ou dossiers rm supprimer des fichiers ou dossiers cat afficher le contenu d'un fichier touch cr\u00e9e un fichier vide clear efface l'\u00e9cran Aborescence d'un syst\u00e8me Linux \u2693\ufe0e Les dossiers du syst\u00e8mes sont organis\u00e9s selon une arborescence dont la racine est / . Un utilisateur normal n'a pas les droits suffisants pour \u00e9crire dans les dossiers syst\u00e8mes ou y effacer des fichiers. Seul le superutilisateur nomm\u00e9 root peut tout faire (et m\u00eame d\u00e9truire le syst\u00e8me) et n'importe o\u00f9 ! Les changements de dossier se font naturellement avec la commande cd qui peut prendre comme param\u00e8tre: un chemin absolu , c-\u00e0-d compl\u00e8tement qualifi\u00e9 depuis racine / (par exemple /home/bruno/Documents ); un chemin relatif , c-\u00e0-d par rapport au dossier o\u00f9 on se trouve qui est not\u00e9 avec le raccourci . (point); le dossier parent est not\u00e9 avec le raccourci .. (point point). Ainsi, si on est dans /home/bruno/Documents et qu'on veut se rendre dans /home/bruno/T\u00e9l\u00e9chargements on tapera: 1 cd ../T\u00e9l\u00e9chargements Gestion des droits \u2693\ufe0e Qui peut faire quoi et o\u00f9 ? Pour r\u00e9pondre \u00e0 cette question, les environnements UNIX divisent le monde en trois parties: le propri\u00e9taire ou utilisateur ( u ser); le groupe ( g roup); les autres ( o thers). Par ailleurs, les fichiers peuvent \u00eatre manipul\u00e9s en: lecture ( r ead); \u00e9criture ( w rite); ex\u00e9cution (e x ecute). Consid\u00e9rons la sortie de la commande ls -l sur un r\u00e9pertoire donn\u00e9. Les colonnes n\u00b0 1, 3 et 4 sont utiles \u00e0 la gestion des droits. La colonne 3 indique le nom du propri\u00e9taire; la colonne 4 indique le nom du groupe; la colonne 1 qui contient 10 caract\u00e8res doit \u00eatre d\u00e9compos\u00e9 en quatre parties. Par exemple -rwx r-- r-- ( attention il n'y a pas d'espaces en r\u00e9alit\u00e9, ils ont \u00e9t\u00e9 rajout\u00e9s ici pour une meilleure lisibilit\u00e9 ) ! Les indications de la 1re colonne peuvent \u00eatre interpr\u00e9t\u00e9es de la mani\u00e8re suivante: le 1er caract\u00e8re: un - correspond \u00e0 un fichier et un d \u00e0 un r\u00e9pertoire; un groupe de 3 caract\u00e8res associ\u00e9s aux droits du propri\u00e9taire ; un groupe de 3 caract\u00e8res associ\u00e9s aux droits du groupe ; un groupe de 3 caract\u00e8res associ\u00e9s aux droits des autres ; Dans l'exemple de la capture ci-dessus, Saison1 est un fichier ordinaire dont le propri\u00e9taire est Angie qui dispose des droits en lecture et \u00e9criture alors que le groupe enfants et les autres n'ont que le droit en lecture. Un x signifie droit de traverser pour un r\u00e9pertoire. Enfin, seuls le propri\u00e9taire ou bien root peuvent changer les droits sur un fichier ou r\u00e9pertoire. La commande chmod est pr\u00e9vue \u00e0 cet effet. Voir des exemples de syntaxe dans le tableau ci-dessous. Accorder les droits de: Syntaxe lecture au groupe chmod g+r fichier \u00e9criture au propri\u00e9taire chmod u+w fichier ex\u00e9cution aux autres chmod o+x fichier ex\u00e9cution \u00e0 tous chmod ugo+r fichier Remarque Pour supprimer un droit, on utilise le signe - ; par exemple, pour supprimer le droit d'\u00e9criture au groupe sur un fichier, on utilisera la commande chmod g-w fichier EXERCICES - S\u00e9quence 2 \u2693\ufe0e Cocher la ou les bonnes r\u00e9ponses \u2693\ufe0e La commande ls -al : permet de lister les fichiers du r\u00e9pertoire courant sans d\u00e9tail. permet de lister les fichiers standards et cach\u00e9s du r\u00e9pertoire courant. permet d\u2019afficher des d\u00e9tails sur un fichier comme son propri\u00e9taire ou ses droits. n\u2019existe pas en Bash. La commande mv : sert \u00e0 copier des fichiers ou r\u00e9pertoires. sert \u00e0 d\u00e9placer des fichiers ou r\u00e9pertoires. peut servir \u00e0 renommer un fichier ou un r\u00e9pertoire. n\u2019existe pas en Bash. La commande ls -l toto.sh affiche -r-xr--r-- 1 john staff 128 18 mai 11:56 toto.sh . toto.sh appartient \u00e0 john. toto.sh appartient \u00e0 staff du groupe john. Personne n\u2019a le droit d\u2019\u00e9criture sur toto.sh. Personne n\u2019a le droit de lire toto.sh. Dans un terminal, on tape cd (sans arguments) pour se placer dans son r\u00e9pertoire personnel, not\u00e9 parfois HOME . Quelle commande doit-on ensuite taper pour d\u00e9placer dans le r\u00e9pertoire courant le fichier exo1.py qui se trouve dans Documents/python/ en sachant que Documents est dans HOME ? cp Documents/python/exo1.py mv /Documents/python/exo1.py mv ./Documents/python/exo1.py . rm Documents/python/exo1.py Indication pour les exercices \ud83d\udc49 On utilisera la machine Linux simplifi\u00e9e. On se connectera avec le compte de Matei en saisissant la commande su Matei (son mot de passe est eleve ). Puis on se d\u00e9place dans son r\u00e9pertoire personnel avec cd ~ . Exercice 1 - Trouver son chemin \u2693\ufe0e Observer l\u2019arborescence suivante : Proposer une commande qui permette de se d\u00e9placer du r\u00e9pertoire HOME de Alice \u00e0 celui de Bob : en utilisant un chemin relatif ; en utilisant un chemin absolu. Alice est \u00e0 la racine / . Proposer deux commandes qui peuvent lui permettre de se d\u00e9placer dans son r\u00e9pertoire personnel ( HOME ). Bob est dans son HOME . Aidez-le \u00e0 : lister le contenu de son HOME ; lister le contenu de son HOME y compris les fichiers et r\u00e9pertoires cach\u00e9s ; lister le contenu du r\u00e9pertoire share sans quitter son HOME . Exercice 2 - Cr\u00e9er une arborescence et se d\u00e9placer dedans \u2693\ufe0e Cr\u00e9er dans le r\u00e9pertoire personnel de Matei l\u2019arborescence ci-dessus dans laquelle A, B, C, D, E, F et G sont des r\u00e9pertoires. La commande du shell touch nom_fichier permet de cr\u00e9er un fichier vide. Cr\u00e9er deux fichiers vides appel\u00e9s un et deux dans le r\u00e9pertoire d\u2019accueil. Quelle commande permet de copier des fichiers ou r\u00e9pertoires ? Copier le fichier un dans le r\u00e9pertoire A en lui donnant le nom trois . Comment r\u00e9aliser la copie pr\u00e9c\u00e9dente en utilisant un chemin relatif si vous \u00eates : dans le r\u00e9pertoire A ? dans le r\u00e9pertoire B ? Si votre nom d\u2019utilisateur est Angie , comment r\u00e9aliser cette copie en utilisant un chemin absolu ? Comment renommer le fichier trois en quatre ? Exercice 3 - Utiliser les pages du manuel d'une commande \u2693\ufe0e Quelle option de la commande echo faut-il utiliser pour rester sur la m\u00eame ligne ? Comment faut-il faire pour afficher un message sur plusieurs lignes avec cette m\u00eame commande ? La commande cat nom_fichier permet d'afficher son contenu dans le terminale. Comment peut-on afficher le contenu avec les num\u00e9ros de lignes? Tester. Exercice 4 - Avez-vous les droits ? \u2693\ufe0e On consid\u00e8re le syst\u00e8me \u00e9tudi\u00e9 dans les activit\u00e9s pr\u00e9paratoires. L'utilisateur Matei est connect\u00e9 et a obtenu les informations suivantes: Commandes utilis\u00e9es : tree repertoire affiche l'arborescence des fichiers depuis repertoire et groups utilisateur permet de connaitre les groupes auxquels appartient l'utilisateur. Matei souhaite ajouter un fichier Saison4 dans le dossier Saisons d'Angie. Peut-il le faire directement ? Justifier la r\u00e9ponse. Proposer une strat\u00e9gie pour r\u00e9soudre le probl\u00e8me.","title":"Sequence2"},{"location":"NSI1/S2/sequence2.html#sequence-2","text":"","title":"SEQUENCE 2"},{"location":"NSI1/S2/sequence2.html#activite-1-interface-en-ligne-de-commande-dun-syteme-dexploitation-libre","text":"","title":"ACTIVITE 1 - Interface en ligne de commande d'un syt\u00e8me d'exploitation libre"},{"location":"NSI1/S2/sequence2.html#activite-2-commandes-de-base-avec-arguments","text":"Angie veut mettre de l'ordre dans son repertoire personnel. Son syst\u00e8me de fichiers est le m\u00eame que celui de l'activit\u00e9 pr\u00e9c\u00e9dente. Commande La commande cat suivie d'un nom_de_fichier (de l'anglais catenate ) affiche dans la console le contenu du fichier nom_de_fichier pass\u00e9 en argument. A faire Se connecter au syst\u00e8me linux pr\u00e9c\u00e9dent ( docker run --rm -it nsilinux:1.6 ). A l'aide de la commande cd , aller dans le r\u00e9pertoire NSI puis afficher le contenu du fichier Modules . \u00c9crire les commandes saisies dans la console.","title":"ACTIVITE 2 - Commandes de base avec arguments"},{"location":"NSI1/S2/sequence2.html#activite-3-etude-des-droits-et-permissions","text":"Angie s'int\u00e9resse aux droits et aux permissions d'acc\u00e8s \u00e0 des fichiers contenant des informations sur son jeu vid\u00e9o pr\u00e9f\u00e9r\u00e9, enregistr\u00e9es sur l'ordinateur familial, qui a pour syst\u00e8me d'exploitation Linux. A faire D\u00e9marrer le syst\u00e8me Linux simplifi\u00e9 avec la commande docker run -it --rm nsilinux:1.6 Quand on saisit un nom de fichier ou de r\u00e9pertoire, la touche Tab permet de compl\u00e9ter automatiquement son nom. A faire \u00c0 l'aide de la commande cd , aller dans le r\u00e9pertoire Jeux d'Angie. Les options -al de la commande ls permettent d'afficher plus d'informations, comme les droits et les permissions d'acc\u00e8s de tous les fichiers et les r\u00e9pertoires (cach\u00e9s ou non) contenus dans le r\u00e9pertoire courant. Le premier caract\u00e8re permet de diff\u00e9rencier les r\u00e9pertoires des fichiers. Ainsi, le caract\u00e8re d (de l'anglais directory ) d\u00e9signe un r\u00e9pertoire et le caract\u00e8re - d\u00e9signe un fichier ordinaire. A faire Saisir la commande ls -al , puis identifier les r\u00e9pertoires et les fichiers du r\u00e9pertoire d'Angie. Les caract\u00e8res ci-dessous correspondent aux droits d'acc\u00e8s et aux permissions. A faire Quels sont les dix premiers caract\u00e8res affich\u00e9s pour le fichier Mondes et pour le r\u00e9pertoire Saisons . La pr\u00e9sence des lettres r , w et x donne le droit correspondant et - l'interdiction. Lettre De l'anglais Pour un fichier Pour un r\u00e9pertoire r read lire afficher la liste des fichiers et r\u00e9pertoires w write modifier le contenu cr\u00e9er, supprimer et changer le nom des fichiers x execute ex\u00e9cuter (si ex\u00e9cutable) Ouvrir le r\u00e9pertoire L'ordinateur familial est configur\u00e9 pour qu'Angie et son fr\u00e8re Matei soient dans le m\u00eame groupe d'utilisateurs, appel\u00e9 enfants . Leurs parents ont leur propre groupe, diff\u00e9rent, appel\u00e9 parents . Sur un fichier ou un r\u00e9pertoire d'Angie, les parents sont consid\u00e9r\u00e9s comme \u00ab autres utilisateurs \u00bb. Enfin, Angie est \u00e9galement \u00ab propri\u00e9taire \u00bb de ses propres fichiers et r\u00e9pertoires. A faire Compl\u00e9ter le tableau ci-dessous avec oui ou non pour les trois utilisateurs: Angie, Matei et P\u00e8re. Lecture Ecriture Ex\u00e9cution Mondes Saisons A faire Quelles actions le p\u00e8re d'Angie peut-il effectuer sur le r\u00e9pertoire Saisons ?","title":"ACTIVITE 3 - Etude des droits et permissions"},{"location":"NSI1/S2/sequence2.html#activite-4-modifications-des-droits","text":"Angie veut donner plus de droits \u00e0 son petit fr\u00e8re Mat\u00e9i afin qu'il puisse avoir un acc\u00e8s complet \u00e0 certains fichiers contenant des informations sur son jeu vid\u00e9o pr\u00e9f\u00e9r\u00e9 et les modifier lui-m\u00eame. ( Le syst\u00e8me linux simplifi\u00e9 doit \u00eatre d\u00e9marr\u00e9 pour cette activit\u00e9 : docker run -it --rm nsilinux:1.6 ) Commande La commande chmod droits nom_fichier_repertoire (de l'anglais change mode ) permet de modifier les permissions d'acc\u00e8s \u00e0 un fichier ou \u00e0 un r\u00e9pertoire nomm\u00e9 nom_fichier_repertoire . La syntaxe de droits est d\u00e9taill\u00e9e ci-dessous. Exemple la commande chmod ug+x nom_fichier ajoute le droit d'ex\u00e9cution du fichier nom_fichier au propri\u00e9taire et aux utilisateurs faisant partie du groupe du fichier. A faire \u00c0 l'aide de la commande ls -l , trouver les droits du fichier Personnages puis modifier ses droits afin qu'il soit modifiable par le fr\u00e8re d'Angie, qui est dans le m\u00eame groupe que le propri\u00e9taire. V\u00e9rifier enfin que les droits ont bien \u00e9t\u00e9 chang\u00e9s. Tester la commande chmod u=rw,go=r Mondes . Faire une hypoth\u00e8se sur l'utilit\u00e9 de la virgule. Au lieu de modifier les fichiers un par un, Angie a d\u00e9couvert, en utilisant la commande man chmod , que l'option -R (de l'anglais recursive ) modifie les autorisations de tout le contenu d'un r\u00e9pertoire. A faire Tester, puis \u00e9crire la commande qui permet d'ajouter au r\u00e9pertoire Saisons et \u00e0 tout ce qu'il contient les droits en lecture et en \u00e9criture au groupe du fichier. Supprimer les droits en lecture aux utilisateurs qui ne font pas partie du groupe.","title":"ACTIVITE 4 - Modifications des droits"},{"location":"NSI1/S2/sequence2.html#cours-systeme-dexploitation","text":"","title":"COURS - SYSTEME D'EXPLOITATION"},{"location":"NSI1/S2/sequence2.html#exercices-sequence-2","text":"","title":"EXERCICES - S\u00e9quence 2"},{"location":"NSI1/S3/Annexe_TP.html","text":"Structure d'un fichier BMP - r\u00e9sum\u00e9 \u2693\ufe0e Un fichier BMP comporte trois parties obligatoires: l'ent\u00eate du fichier, l'ent\u00eate de l'image et le tableau d'octets repr\u00e9sentant l'image. Il peut y avoir \u00e9galement des parties optionnelles. Voici une description, issue de wikipedia , des deux ent\u00eates. Ent\u00eate du fichier \u2693\ufe0e Offset(hex) Offset(dec) Size Purpose 00 0 2 bytes The header field used to identify the BMP and DIB file is 0x42 0x4D in hexadecimal, same as BM in ASCII. The following entries are possible: BM : Windows 3.1x, 95, NT, ... etc BA : OS/2 struct bitmap array CI : OS/2 struct color icon CP : OS/2 const color pointer IC : OS/2 struct icon PT : OS/2 pointer 02 2 4 bytes The size of the BMP file in bytes 06 6 2 bytes Reserved; actual value depends on the application that creates the image, if created manually can be 0 08 8 2 bytes Reserved; actual value depends on the application that creates the image, if created manually can be 0 0A 10 4 bytes The offset, i.e. starting address, of the byte where the bitmap image data (pixel array) can be found. Ent\u00eate de l'image \u2693\ufe0e Offset (hex) Offset (dec) Size (bytes) Windows BITMAPINFOHEADER[2] 0E 14 4 the size of this header, in bytes (40) 12 18 4 the bitmap width in pixels (signed integer) 16 22 4 the bitmap height in pixels (signed integer) 1A 26 2 the number of color planes (must be 1) 1C 28 2 the number of bits per pixel, which is the color depth of the image. Typical values are 1, 4, 8, 16, 24 and 32. 1E 30 4 the compression method being used. See the next table for a list of possible values 22 34 4 the image size. This is the size of the raw bitmap data; a dummy 0 can be given for BI_RGB bitmaps. 26 38 4 the horizontal resolution of the image. (pixel per metre, signed integer) 2A 42 4 the vertical resolution of the image. (pixel per metre, signed integer) 2E 46 4 the number of colors in the color palette, or 0 to default to 2n 32 50 4 the number of important colors used, or 0 when every color is important; generally ignored","title":"Annexe TP1"},{"location":"NSI1/S3/Annexe_TP.html#structure-dun-fichier-bmp-resume","text":"Un fichier BMP comporte trois parties obligatoires: l'ent\u00eate du fichier, l'ent\u00eate de l'image et le tableau d'octets repr\u00e9sentant l'image. Il peut y avoir \u00e9galement des parties optionnelles. Voici une description, issue de wikipedia , des deux ent\u00eates.","title":"Structure d'un fichier BMP - r\u00e9sum\u00e9"},{"location":"NSI1/S3/Annexe_TP.html#entete-du-fichier","text":"Offset(hex) Offset(dec) Size Purpose 00 0 2 bytes The header field used to identify the BMP and DIB file is 0x42 0x4D in hexadecimal, same as BM in ASCII. The following entries are possible: BM : Windows 3.1x, 95, NT, ... etc BA : OS/2 struct bitmap array CI : OS/2 struct color icon CP : OS/2 const color pointer IC : OS/2 struct icon PT : OS/2 pointer 02 2 4 bytes The size of the BMP file in bytes 06 6 2 bytes Reserved; actual value depends on the application that creates the image, if created manually can be 0 08 8 2 bytes Reserved; actual value depends on the application that creates the image, if created manually can be 0 0A 10 4 bytes The offset, i.e. starting address, of the byte where the bitmap image data (pixel array) can be found.","title":"Ent\u00eate du fichier"},{"location":"NSI1/S3/Annexe_TP.html#entete-de-limage","text":"Offset (hex) Offset (dec) Size (bytes) Windows BITMAPINFOHEADER[2] 0E 14 4 the size of this header, in bytes (40) 12 18 4 the bitmap width in pixels (signed integer) 16 22 4 the bitmap height in pixels (signed integer) 1A 26 2 the number of color planes (must be 1) 1C 28 2 the number of bits per pixel, which is the color depth of the image. Typical values are 1, 4, 8, 16, 24 and 32. 1E 30 4 the compression method being used. See the next table for a list of possible values 22 34 4 the image size. This is the size of the raw bitmap data; a dummy 0 can be given for BI_RGB bitmaps. 26 38 4 the horizontal resolution of the image. (pixel per metre, signed integer) 2A 42 4 the vertical resolution of the image. (pixel per metre, signed integer) 2E 46 4 the number of colors in the color palette, or 0 to default to 2n 32 50 4 the number of important colors used, or 0 when every color is important; generally ignored","title":"Ent\u00eate de l'image"},{"location":"NSI1/S3/S3A1.html","text":"Compter en base 2, 10 et 16 \u2693\ufe0e Base 10 (d\u00e9cimale) \u2693\ufe0e De fa\u00e7on naturelle, on travaille avec des nombres \u00e9crits le plus souvent en base 10, avec ses 10 chiffres de 0 \u00e0 9 (\u00e0 cause de nos 10 doigts ?). Ainsi, chaque nombre est d\u00e9compos\u00e9 suivant des unit\u00e9s (rang 0), dizaines (rang 1), centaines (rang 2), etc. On peut aussi utiliser les puissances de 10. Exemple Le nombre 125 est \u00e9gal une centaine plus deux dizaines plus cinq unit\u00e9s, ce qui peut \u00eatre \u00e9crit aussi: \\(125=1\\times 10^2+2\\times 10^1+5\\times 10^0\\) A faire D\u00e9composer 63 en base 10. Base 2 (binaire) \u2693\ufe0e Dans un ordinateur, la base naturelle est la base 2 ou binaire (l'\u00e9tat d'un compos\u00e9 \u00e9lectronique ne prend que deux valeurs: allum\u00e9 ou \u00e9teint). Deux chiffres seulement sont n\u00e9cessaires: le z\u00e9ro et le un. Comme en base 10, un nombre peut \u00eatre d\u00e9compos\u00e9 en unit\u00e9 (rang 0), deuzaine (rang 1), quatraine (rang 2), huitaine (rang 3) etc. Info Le nom des adjectifs num\u00e9raux peut \u00eatre consult\u00e9 sur cette page wikipedia . Comme en base 10 encore, on peut utiliser les puissances de la base, ici 2. Exemple Le nombre 17 peut \u00eatre d\u00e9compos\u00e9 en une seizaine plus une unit\u00e9: seizaine huitaine quatraine deuzaine unit\u00e9 \\(2^4=16\\) \\(2^3=8\\) \\(2^2=4\\) \\(2^1=2\\) \\(2^0=1\\) 1 0 0 0 1 De ce fait, 17 s'\u00e9crit \\(10001_2\\) en base 2 (le deux en indice indique la base et \u00e9vite les ambiguit\u00e9s). A faire Le nombre 14 est \u00e9gal \u00e0 une huitaine plus une quatraine plus une deuzaine. D\u00e9composer 14 sur la base 2. 1 Techniquement, la d\u00e9composition en puissance de 2 peut se faire en r\u00e9alisant des divisions euclidienne par 2. Rappel important Le vocabulaire employ\u00e9 lorsqu'on pose une division (avec la potence): Il s'agit de r\u00e9aliser des divisions successives par 2 du quotient, tant que celui-ci n'est pas nul . Exemple Soit \u00e0 convertir 25 en binaire en utilisant les divisions successives par 2. M\u00e9thode des divisions successives par 2 Le r\u00e9sultat est obtenu en faisant une lecture des restes de bas en haut : \\(11001_2\\) . A faire Ecrire le nombre 19 en binaire en utilisant la technique des divisions successives par 2. Pour conna\u00eetre la valeur d'un nombre \u00e9crit en binaire, en base 10, il suffit de faire la somme de sa d\u00e9composition en puissances de deux. Exemple \\(1101_2=1\\times 2^3+1\\times 2^2+1\\times 2^0=8+4+1=13\\) \\(2^3\\) \\(2^2\\) \\(2^1\\) \\(2^0\\) 1 1 0 1 A faire Convertir \\(110110_2\\) en base 10. 1 Base 16 (hexad\u00e9cimale) \u2693\ufe0e La base 16 est \u00e9galement tr\u00e8s utilis\u00e9e en informatique. Dans cette base, seize symboles (chiffres) sont n\u00e9cessaires. On utilise les dix chiffres de la base 10 plus les six lettres A, B, C, D, E et F. Base 16 0 1 2 3 4 5 6 7 8 9 A B C D E F Base 10 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Les principes de conversions vus pr\u00e9c\u00e9demment sont toujours valables. Conversion de la base 10 vers la base 16 On effectue des divisions successives du quotient tant que celui-ci n'est pas nul. Exemple Soit le nombre \\(480_{10}\\) \u00e0 \u00e9crire en base 16. La fl\u00eache indique le sens de lecture: \\(480_{10}=1\\mathrm{E}0_{16}\\) Conversion de la base 16 vers la base 10 On effectue la somme de la d\u00e9composition du nombre en puissance de 16. Exemple \\(16^2\\) \\(16^1\\) \\(16^0\\) 1 E 0 \\(1\\mathrm{E}0_{16}= 1\\times 16^2+14\\times 16^1+0\\times 16^0=256+224=480\\) A faire Fanny a choisi comme couleur de fond de la page d'accueil de son site web la valeur #F34DC1 . Dans cette syntaxe, chaque paire de caract\u00e8re correspond \u00e0 nombre hexad\u00e9cimal associ\u00e9 \u00e0 une nuance de rouge, de vert ou de bleu (codage RGB). Ici, la nuance de rouge est cod\u00e9 par le nombre F3 . La nuance de vert est associ\u00e9 \u00e0 4D et celle du bleu \u00e0 C1 . Donner chaque nuance de couleur en base 10; Les autres pages du site auront une couleur de fond cod\u00e9e en d\u00e9cimal par le triplet RGB (241, 19, 126). Donner le code hexad\u00e9cimal de cette couleur. 1 Conversion hexad\u00e9cimale - binaire \u2693\ufe0e Pour passer de l'hexad\u00e9cimal au binaire il suffit de remplacer chaque chiffre hexad\u00e9cimal par son code binaire. Hexad\u00e9cimal 0 1 2 3 4 5 6 7 8 9 A B C D E F Binaire 0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111 A faire Quelle est la valeur en binaire, du code de la couleur de la page d'accueil du site de Fanny ? 1 Pour passer d'une \u00e9criture binaire \u00e0 l'hexad\u00e9cimale, on fait des groupes de 4 chiffres binaires de la droite vers la gauche (si besoin on compl\u00e8te avec des z\u00e9ros). On fait correspondre \u00e0 chaque groupe le chiffre hexad\u00e9cimal correct (voir tableau ci-dessus. Exemple Que vaut \\(111\\ 0001\\ 1010_2\\) en hexad\u00e9cimal ? R\u00e9ponse: \\(71\\mathrm{A}\\) A faire Ecrire \\(10\\ 1111\\ 1101\\ 1010\\ 0111\\ 1011_2\\) en hexad\u00e9cimal 1","title":"ACTIVITE 1"},{"location":"NSI1/S3/S3A1.html#compter-en-base-2-10-et-16","text":"","title":"Compter en base 2, 10 et 16"},{"location":"NSI1/S3/S3A1.html#base-10-decimale","text":"De fa\u00e7on naturelle, on travaille avec des nombres \u00e9crits le plus souvent en base 10, avec ses 10 chiffres de 0 \u00e0 9 (\u00e0 cause de nos 10 doigts ?). Ainsi, chaque nombre est d\u00e9compos\u00e9 suivant des unit\u00e9s (rang 0), dizaines (rang 1), centaines (rang 2), etc. On peut aussi utiliser les puissances de 10. Exemple Le nombre 125 est \u00e9gal une centaine plus deux dizaines plus cinq unit\u00e9s, ce qui peut \u00eatre \u00e9crit aussi: \\(125=1\\times 10^2+2\\times 10^1+5\\times 10^0\\) A faire D\u00e9composer 63 en base 10.","title":"Base 10 (d\u00e9cimale)"},{"location":"NSI1/S3/S3A1.html#base-2-binaire","text":"Dans un ordinateur, la base naturelle est la base 2 ou binaire (l'\u00e9tat d'un compos\u00e9 \u00e9lectronique ne prend que deux valeurs: allum\u00e9 ou \u00e9teint). Deux chiffres seulement sont n\u00e9cessaires: le z\u00e9ro et le un. Comme en base 10, un nombre peut \u00eatre d\u00e9compos\u00e9 en unit\u00e9 (rang 0), deuzaine (rang 1), quatraine (rang 2), huitaine (rang 3) etc. Info Le nom des adjectifs num\u00e9raux peut \u00eatre consult\u00e9 sur cette page wikipedia . Comme en base 10 encore, on peut utiliser les puissances de la base, ici 2. Exemple Le nombre 17 peut \u00eatre d\u00e9compos\u00e9 en une seizaine plus une unit\u00e9: seizaine huitaine quatraine deuzaine unit\u00e9 \\(2^4=16\\) \\(2^3=8\\) \\(2^2=4\\) \\(2^1=2\\) \\(2^0=1\\) 1 0 0 0 1 De ce fait, 17 s'\u00e9crit \\(10001_2\\) en base 2 (le deux en indice indique la base et \u00e9vite les ambiguit\u00e9s). A faire Le nombre 14 est \u00e9gal \u00e0 une huitaine plus une quatraine plus une deuzaine. D\u00e9composer 14 sur la base 2. 1 Techniquement, la d\u00e9composition en puissance de 2 peut se faire en r\u00e9alisant des divisions euclidienne par 2. Rappel important Le vocabulaire employ\u00e9 lorsqu'on pose une division (avec la potence): Il s'agit de r\u00e9aliser des divisions successives par 2 du quotient, tant que celui-ci n'est pas nul . Exemple Soit \u00e0 convertir 25 en binaire en utilisant les divisions successives par 2. M\u00e9thode des divisions successives par 2 Le r\u00e9sultat est obtenu en faisant une lecture des restes de bas en haut : \\(11001_2\\) . A faire Ecrire le nombre 19 en binaire en utilisant la technique des divisions successives par 2. Pour conna\u00eetre la valeur d'un nombre \u00e9crit en binaire, en base 10, il suffit de faire la somme de sa d\u00e9composition en puissances de deux. Exemple \\(1101_2=1\\times 2^3+1\\times 2^2+1\\times 2^0=8+4+1=13\\) \\(2^3\\) \\(2^2\\) \\(2^1\\) \\(2^0\\) 1 1 0 1 A faire Convertir \\(110110_2\\) en base 10. 1","title":"Base 2 (binaire)"},{"location":"NSI1/S3/S3A1.html#base-16-hexadecimale","text":"La base 16 est \u00e9galement tr\u00e8s utilis\u00e9e en informatique. Dans cette base, seize symboles (chiffres) sont n\u00e9cessaires. On utilise les dix chiffres de la base 10 plus les six lettres A, B, C, D, E et F. Base 16 0 1 2 3 4 5 6 7 8 9 A B C D E F Base 10 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Les principes de conversions vus pr\u00e9c\u00e9demment sont toujours valables. Conversion de la base 10 vers la base 16 On effectue des divisions successives du quotient tant que celui-ci n'est pas nul. Exemple Soit le nombre \\(480_{10}\\) \u00e0 \u00e9crire en base 16. La fl\u00eache indique le sens de lecture: \\(480_{10}=1\\mathrm{E}0_{16}\\) Conversion de la base 16 vers la base 10 On effectue la somme de la d\u00e9composition du nombre en puissance de 16. Exemple \\(16^2\\) \\(16^1\\) \\(16^0\\) 1 E 0 \\(1\\mathrm{E}0_{16}= 1\\times 16^2+14\\times 16^1+0\\times 16^0=256+224=480\\) A faire Fanny a choisi comme couleur de fond de la page d'accueil de son site web la valeur #F34DC1 . Dans cette syntaxe, chaque paire de caract\u00e8re correspond \u00e0 nombre hexad\u00e9cimal associ\u00e9 \u00e0 une nuance de rouge, de vert ou de bleu (codage RGB). Ici, la nuance de rouge est cod\u00e9 par le nombre F3 . La nuance de vert est associ\u00e9 \u00e0 4D et celle du bleu \u00e0 C1 . Donner chaque nuance de couleur en base 10; Les autres pages du site auront une couleur de fond cod\u00e9e en d\u00e9cimal par le triplet RGB (241, 19, 126). Donner le code hexad\u00e9cimal de cette couleur. 1","title":"Base 16 (hexad\u00e9cimale)"},{"location":"NSI1/S3/S3A1.html#conversion-hexadecimale-binaire","text":"Pour passer de l'hexad\u00e9cimal au binaire il suffit de remplacer chaque chiffre hexad\u00e9cimal par son code binaire. Hexad\u00e9cimal 0 1 2 3 4 5 6 7 8 9 A B C D E F Binaire 0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111 A faire Quelle est la valeur en binaire, du code de la couleur de la page d'accueil du site de Fanny ? 1 Pour passer d'une \u00e9criture binaire \u00e0 l'hexad\u00e9cimale, on fait des groupes de 4 chiffres binaires de la droite vers la gauche (si besoin on compl\u00e8te avec des z\u00e9ros). On fait correspondre \u00e0 chaque groupe le chiffre hexad\u00e9cimal correct (voir tableau ci-dessus. Exemple Que vaut \\(111\\ 0001\\ 1010_2\\) en hexad\u00e9cimal ? R\u00e9ponse: \\(71\\mathrm{A}\\) A faire Ecrire \\(10\\ 1111\\ 1101\\ 1010\\ 0111\\ 1011_2\\) en hexad\u00e9cimal 1","title":"Conversion hexad\u00e9cimale - binaire"},{"location":"NSI1/S3/S3A2.html","text":"Manipuler des nombres en machine \u2693\ufe0e Somme d'entiers positifs \u2693\ufe0e En binaire on a: \\(0+0=0\\) \\(0+1=1+0=1\\) \\(1+1=0\\) et on a une retenue de 1. La derni\u00e8re relation est facile \u00e0 comprendre: en d\u00e9cimal \\(1+1=2\\) qui est \u00e9gal \u00e0 \\(10_2\\) . A faire Effectuer les sommes \\(1001_2+0101_2\\) puis \\(0011_2+1001_2\\) ; Au maximum, combien de bits sont n\u00e9cessaires pour additionner deux entiers cod\u00e9s sur \\(n\\) bits? 1 Somme d'entiers relatifs \u2693\ufe0e Voici une proposition de codage des entiers n\u00e9gatifs sur 4 bits. A faire Compte tenu de ces informations, effectuer les additions \\((-7)+5\\) et \\(3+(-7)\\) . Les r\u00e9sultats obtenus sont-ils corrects? 1 La m\u00e9thode de codage des entiers n\u00e9gatifs, dite du compl\u00e9ment \u00e0 2 (qui sera d\u00e9taill\u00e9e dans le cours), est r\u00e9sum\u00e9e ci-dessous. Pour coder un nombre \\(x\\) : coder \\(\\lvert x\\rvert\\) en binaire de fa\u00e7on habituelle; inverser tous les bits; additionner 1. Exemple Soit \u00e0 coder \\(-6\\) . |-6| = 6 0110 Inversion 1001 Addition de 1 + 0001 R\u00e9sultat 1010 A faire Coder \\(-68_{10}\\) sur 8 bits en adoptant la m\u00e9thode du compl\u00e9ment \u00e0 2. 1 D\u00e9passement de capacit\u00e9 \u2693\ufe0e A faire En utilisant la roue binaire pr\u00e9c\u00e9dente d\u00e9crire ce qui se passe si on effectue \\(7+1\\) ou \\((-8)-1\\) sur 4 bits. 1 D\u00e9composition d'un nombre \u00e0 virgule \u2693\ufe0e A faire D\u00e9composer le nombre \\(10,0111_2\\) en base 2 selon la m\u00e9thode habituelle, sachant qu'apr\u00e8s la virgule les puissances de 2 sont n\u00e9gatives. Quelle est sa valeur en d\u00e9cimal ? 1 Comment convertir un nombre \u00e0 virgule ? \u2693\ufe0e Pour la partie enti\u00e8re ( avant la virgule ) on proc\u00e8de comme d'habitude. Pour la partie fractionnaire, la m\u00e9thode est la suivante: on multiplie la partie fractionnaire par 2; la partie enti\u00e8re donne le prochain chiffre binaire; on r\u00e9cup\u00e8re la partie fractionnaire et on recommence le processus tant que cette derni\u00e8re n'est pas nulle Exemple Soit \u00e0 convertir \\(6,125\\) . \\(6_{10}=110_2\\) Multiplication par 2 Prochain chiffre binaire 0,125 x 2 = 0,25 0 0,25 x 2 = 0,5 0 0,5 x 2 = 1,0 1 On a donc \\(6,125=110,001_2\\) . A faire Convertir 9,375 en binaire. 1","title":"ACTIVITE 2"},{"location":"NSI1/S3/S3A2.html#manipuler-des-nombres-en-machine","text":"","title":"Manipuler des nombres en machine"},{"location":"NSI1/S3/S3A2.html#somme-dentiers-positifs","text":"En binaire on a: \\(0+0=0\\) \\(0+1=1+0=1\\) \\(1+1=0\\) et on a une retenue de 1. La derni\u00e8re relation est facile \u00e0 comprendre: en d\u00e9cimal \\(1+1=2\\) qui est \u00e9gal \u00e0 \\(10_2\\) . A faire Effectuer les sommes \\(1001_2+0101_2\\) puis \\(0011_2+1001_2\\) ; Au maximum, combien de bits sont n\u00e9cessaires pour additionner deux entiers cod\u00e9s sur \\(n\\) bits? 1","title":"Somme d'entiers positifs"},{"location":"NSI1/S3/S3A2.html#somme-dentiers-relatifs","text":"Voici une proposition de codage des entiers n\u00e9gatifs sur 4 bits. A faire Compte tenu de ces informations, effectuer les additions \\((-7)+5\\) et \\(3+(-7)\\) . Les r\u00e9sultats obtenus sont-ils corrects? 1 La m\u00e9thode de codage des entiers n\u00e9gatifs, dite du compl\u00e9ment \u00e0 2 (qui sera d\u00e9taill\u00e9e dans le cours), est r\u00e9sum\u00e9e ci-dessous. Pour coder un nombre \\(x\\) : coder \\(\\lvert x\\rvert\\) en binaire de fa\u00e7on habituelle; inverser tous les bits; additionner 1. Exemple Soit \u00e0 coder \\(-6\\) . |-6| = 6 0110 Inversion 1001 Addition de 1 + 0001 R\u00e9sultat 1010 A faire Coder \\(-68_{10}\\) sur 8 bits en adoptant la m\u00e9thode du compl\u00e9ment \u00e0 2. 1","title":"Somme d'entiers relatifs"},{"location":"NSI1/S3/S3A2.html#depassement-de-capacite","text":"A faire En utilisant la roue binaire pr\u00e9c\u00e9dente d\u00e9crire ce qui se passe si on effectue \\(7+1\\) ou \\((-8)-1\\) sur 4 bits. 1","title":"D\u00e9passement de capacit\u00e9"},{"location":"NSI1/S3/S3A2.html#decomposition-dun-nombre-a-virgule","text":"A faire D\u00e9composer le nombre \\(10,0111_2\\) en base 2 selon la m\u00e9thode habituelle, sachant qu'apr\u00e8s la virgule les puissances de 2 sont n\u00e9gatives. Quelle est sa valeur en d\u00e9cimal ? 1","title":"D\u00e9composition d'un nombre \u00e0 virgule"},{"location":"NSI1/S3/S3A2.html#comment-convertir-un-nombre-a-virgule","text":"Pour la partie enti\u00e8re ( avant la virgule ) on proc\u00e8de comme d'habitude. Pour la partie fractionnaire, la m\u00e9thode est la suivante: on multiplie la partie fractionnaire par 2; la partie enti\u00e8re donne le prochain chiffre binaire; on r\u00e9cup\u00e8re la partie fractionnaire et on recommence le processus tant que cette derni\u00e8re n'est pas nulle Exemple Soit \u00e0 convertir \\(6,125\\) . \\(6_{10}=110_2\\) Multiplication par 2 Prochain chiffre binaire 0,125 x 2 = 0,25 0 0,25 x 2 = 0,5 0 0,5 x 2 = 1,0 1 On a donc \\(6,125=110,001_2\\) . A faire Convertir 9,375 en binaire. 1","title":"Comment convertir un nombre \u00e0 virgule ?"},{"location":"NSI1/S3/S3C1.html","text":"TRAVAILLER EN BASE 2, 10 ET 16 \u2693\ufe0e Rep\u00e8res historiques \u2693\ufe0e L'invention du syst\u00e8me binaire est souvent attribu\u00e9 \u00e0 tort au savant allemand Wilhelm Gottfried Leibniz (1646-1716). En effet, le math\u00e9maticien et astronome anglais Thomas Harriot (1560-1621) avait d\u00e9j\u00e0 travaill\u00e9 sur les syst\u00e8mes non d\u00e9cimaux. Voir une publication en ligne des manuscrits de Harriot Leibniz s'inspira des figures de le l'empereur chinois Fuxi (-3000) que l'on peut consid\u00e9rer comme la premi\u00e8re expression d'un codage binaire. Comment repr\u00e9senter des informations sur une machine num\u00e9rique ? \u2693\ufe0e Unit\u00e9 d'information \u2693\ufe0e Les machines num\u00e9riques sont compos\u00e9es d'\u00e9l\u00e9ments manipulant l'information sous forme de deux \u00e9tats distincts . C'est la raison pour laquelle on les appelle machine binaire . Par convention, ces \u00e9tats sont not\u00e9s \\(0\\) ou \\(1\\) . En anglais, ces informations \u00e9l\u00e9mentaires sont appel\u00e9es binary digit ou bit . Un bit permet de repr\u00e9senter \\(2^1=2\\) informations. On peut g\u00e9n\u00e9raliser: \\(n\\) bits permettent de repr\u00e9senter \\(2^n\\) informations. Les machines num\u00e9riques manipulent habituellement des groupes de bits. Ainsi, un groupe de 8 bits forment un octet . ATTENTION en anglais un octet est traduit par BYTE . Au del\u00e0 de 8 bits on utilise le terme mot . On parle par exemple de mot de 16 bits, de mot de 32 bits (on trouve aussi le terme double mot ) ou de mot de 64 bits (ou quadruple mot ). Les quantit\u00e9s d'informations stock\u00e9es ou manipul\u00e9es s'expriment avec les pr\u00e9fixes habituels reli\u00e9s aux puissances de 10 (1 kilooctet (ko) \\(= 1\\times10^3\\) octets, 1 m\u00e9gaoctet (Mo) \\(= 1\\times10^6\\) octets, 1 gigaoctet (Go) \\(= 1\\times10^9\\) octets etc). Remarque Certains informaticiens/\u00e9lectroniciens utilisent encore des d\u00e9finitions de ces quantit\u00e9s exprim\u00e9es en puissances de 2 ( \\(2^{10}\\) , \\(2^{20}\\) , \\(2^{30}\\) , etc). Pour \u00e9viter les confusions, l'International Electrotechnical Commission (IEC) a normalis\u00e9 ces appellations en d\u00e9cembre 1998. Voir lien . Repr\u00e9sentation binaire des entiers naturels \u2693\ufe0e Repr\u00e9sentation positionnelle: d\u00e9composition suivant une base \u2693\ufe0e On pr\u00e9sente les nombres entiers de mani\u00e8re classique en repr\u00e9sentation positionnelle . Par exemple en base 10, la suite 123 signifie \\(1\\times 10^2+2\\times 10^1+3\\times 10^0\\) . En base 2, la suite 10011 signifie \\(1\\times 2^4+0\\times 2^3+0\\times 2^2+1\\times 2^1+1\\times 2^0\\) . Dans un motif binaire, le bit le plus \u00e0 droite est le bit de poids faible ou LSB ( Least Significant Bit ). A l'oppos\u00e9, le bit le plus \u00e0 gauche est le bit de poids fort ou MSB ( Most Significant Bit ). Astuce Le bit de poids faible peut \u00eatre utilis\u00e9 pour trouver la parit\u00e9 du nombre: \\(0\\) indique un nombre pair et \\(1\\) un nombre impair. Conversion binaire - d\u00e9cimal \u2693\ufe0e La conversion binaire - d\u00e9cimale d'un entier naturel d\u00e9coule simplement du mode de repr\u00e9sentation positionnelle: on additionne les puissances de 2 pr\u00e9sentes dans le motif binaire . Ainsi, pour l'exemple pr\u00e9c\u00e9dent on a: \\(10011_2=(1\\times 2^4+0\\times 2^3+0\\times 2^2+1\\times 2^1+1\\times 2^0)_{10}=19_{10}\\) Remarque La base a \u00e9t\u00e9 indiqu\u00e9e ici en indice, on peut l'omettre lorsqu'il n'y a pas d'ambiguit\u00e9. Conversion d\u00e9cimal - binaire \u2693\ufe0e On d\u00e9compose le nombre entier en une somme de puissance de 2 par divisions enti\u00e8res successives tant que le quotient n'est pas nul. Le r\u00e9sultat est alors constitu\u00e9 des restes de chaque division, en commen\u00e7ant par la derni\u00e8re. \\(25=11001_2\\) Repr\u00e9sentation hexad\u00e9cimale \u2693\ufe0e La repr\u00e9sentation binaire devient rapidement encombrante. On lui pr\u00e9f\u00e8re souvent la repr\u00e9sentation hexad\u00e9cimale (base 16). L'utilisation de cette base n\u00e9cessite 16 caract\u00e8res. Le tableau ci-dessous pr\u00e9sente ces caract\u00e8res ainsi que leur \u00e9quivalence en base 10 et 2. Conversion d\u00e9cimal - hexad\u00e9cimale \u2693\ufe0e De la m\u00eame fa\u00e7on qu'en binaire, on d\u00e9compose le nombre entier en une somme de puissance de 16, par divisions successives par 16 tant que le quotient n'est pas nul. \\(480=1\\mathrm{E}0_{16}\\) Conversion hexad\u00e9cimale - d\u00e9cimale \u2693\ufe0e On additionne les puissances de 16 pr\u00e9sentes dans le motif hexad\u00e9cimal. \\(1\\mathrm{E}0_{16}=1\\times 16^2+14\\times 16^1+0\\times 16^0=256+224+0=480\\) Remarque Dans la somme, on remplace \u00e9videmment chaque chiffre hexad\u00e9cimal par sa valeur (en d\u00e9cimal). Dans l'exemple pr\u00e9c\u00e9dent, \\(\\mathrm{E}\\) est remplac\u00e9 par 14. Conversions binaire - hexad\u00e9cimal et vice-versa \u2693\ufe0e Pour passer du binaire \u00e0 l'hexad\u00e9cimal il suffit de grouper les bits par 4 et de les remplacer par leur \u00e9quivalent hexd\u00e9cimal ( voir tableau ci-dessus ). \\(1101011111_2=0011\\ 0101\\ 1111=35\\mathrm{F}_{16}\\) A l'inverse, pour passer de l'hexad\u00e9cimal au binaire, on remplace chaque chiffre hexad\u00e9cimal par sa valeur en binaire. \\(\\mathrm{F}15_{16}=1111\\ 0001\\ 0101_2\\)","title":"COURS 1"},{"location":"NSI1/S3/S3C1.html#travailler-en-base-2-10-et-16","text":"","title":"TRAVAILLER EN BASE 2, 10 ET 16"},{"location":"NSI1/S3/S3C1.html#reperes-historiques","text":"L'invention du syst\u00e8me binaire est souvent attribu\u00e9 \u00e0 tort au savant allemand Wilhelm Gottfried Leibniz (1646-1716). En effet, le math\u00e9maticien et astronome anglais Thomas Harriot (1560-1621) avait d\u00e9j\u00e0 travaill\u00e9 sur les syst\u00e8mes non d\u00e9cimaux. Voir une publication en ligne des manuscrits de Harriot Leibniz s'inspira des figures de le l'empereur chinois Fuxi (-3000) que l'on peut consid\u00e9rer comme la premi\u00e8re expression d'un codage binaire.","title":"Rep\u00e8res historiques"},{"location":"NSI1/S3/S3C1.html#comment-representer-des-informations-sur-une-machine-numerique","text":"","title":"Comment repr\u00e9senter des informations sur une machine num\u00e9rique ?"},{"location":"NSI1/S3/S3C1.html#representation-binaire-des-entiers-naturels","text":"","title":"Repr\u00e9sentation binaire des entiers naturels"},{"location":"NSI1/S3/S3C1.html#representation-hexadecimale","text":"La repr\u00e9sentation binaire devient rapidement encombrante. On lui pr\u00e9f\u00e8re souvent la repr\u00e9sentation hexad\u00e9cimale (base 16). L'utilisation de cette base n\u00e9cessite 16 caract\u00e8res. Le tableau ci-dessous pr\u00e9sente ces caract\u00e8res ainsi que leur \u00e9quivalence en base 10 et 2.","title":"Repr\u00e9sentation hexad\u00e9cimale"},{"location":"NSI1/S3/S3C2.html","text":"Encodage des entiers relatifs \u2693\ufe0e Comment coder un entier sign\u00e9 sur une machine num\u00e9rique? \u2693\ufe0e Le signe d'un entier relatif peut prendre deux valeurs possibles: + ou - . Par cons\u00e9quent, un seul bit suffit pour le codage du signe. Convention Par convention le signe + est cod\u00e9 par 0 et le signe - par 1. Les tailles courantes pour repr\u00e9senter un entier sont 8, 16, 32 ou 64 bits. Propri\u00e9t\u00e9s \u00e0 v\u00e9rifier et premi\u00e8re solution \u2693\ufe0e Note Quelque soit l'encodage choisi, on doit respecter deux propri\u00e9t\u00e9s essentielles: \\(a + (-a) = 0\\) (propri\u00e9t\u00e9 1) \\(-(-a) = a\\) (propri\u00e9t\u00e9 2) La premi\u00e8re id\u00e9e est d'utiliser un bit, g\u00e9n\u00e9ralement le bit de poids fort , pour repr\u00e9senter le signe et les autres bits pour repr\u00e9senter la valeur absolue du nombre \\(x\\) \u00e0 coder. Ce qui peut \u00eatre repr\u00e9sent\u00e9 par: 1 2 3 4 <---- n-1 bits --> +---+----------------+ | 1 | |x| | +---+----------------+ ou 1 2 3 4 <---- n-1 bits --> +---+----------------+ | 0 | |x| | +---+----------------+ selon que \\(x\\) soit n\u00e9gatif ou positif. Exemple Soit \u00e0 coder \\(-5\\) sur 4 bits. Avec 4 bits, la valeur absolue sera cod\u00e9e sur 3 bits et le signe sur 1 bit. On a \\(|-5| = 5\\) , ce qui correspond \u00e0 \\(101_{2}\\) , le bit de signe valant 1 car \\(-5<0\\) . On aura donc le codage suivant: \\(-5\\rightarrow 1\\ 1\\ 0\\ 1\\) La propri\u00e9t\u00e9 (1) ci-dessus est-elle v\u00e9rifi\u00e9e ? Ajoutons les repr\u00e9sentations de \\(5\\) et \\(-5\\) , avec un r\u00e9sultat sur 4 bits: \\(_1\\) \\(_1\\) \\(_1\\) 0 1 0 1 + 1 1 0 1 0 0 1 0 La valeur obtenue sur 4 bits est diff\u00e9rente de z\u00e9ro: cette solution n'est pas satisfaisante . Remarque Un probl\u00e8me suppl\u00e9mentaire peut \u00eatre mis en \u00e9vidence: l'existence de deux repr\u00e9sentations pour z\u00e9ro. Une solution plus satisfaisante \u2693\ufe0e Le compl\u00e9ment \u00e0 2 \u2693\ufe0e Sur \\(n\\) bits on peut coder \\(2^n\\) entiers. Il y en a autant de positifs que de n\u00e9gatifs, soit \\(\\dfrac{2^n}{2}=2^{n-1}\\) . Les plages de valeurs repr\u00e9sentables sont: de \\(0\\) \u00e0 \\(2^{n-1}-1\\) pour les valeurs positives; de \\(-1\\) \u00e0 \\(-2^{n-1}\\) pour les valeurs n\u00e9gatives Ainsi, avec \\(n=8\\) bits par exemple, on peut repr\u00e9senter les entiers allant de \\(-128\\) \u00e0 \\(+127\\) . D\u00e9finition Soit un entier relatif \\(x\\) \u00e0 coder sur \\(n\\) bits. Si \\(x\\in [\\![0..2^{n-1}-1]\\!]\\) , alors on code \\(x\\) comme un entier naturel sur \\(n\\) bits; si \\(x\\in [\\![-2^{n-1}..-1]\\!]\\) , alors on code \\(x\\) comme l'entier naturel \\(2^n-\\lvert x\\rvert\\) sur \\(n\\) bits. Vocabulaire La quantit\u00e9 \\(2^n-\\lvert x\\rvert\\) , appel\u00e9e compl\u00e9ment \u00e0 \\(2^n\\) de \\(x\\) voit son nom souvent abr\u00e9g\u00e9 en compl\u00e9ment \u00e0 2 . Comment utiliser le compl\u00e9ment \u00e0 2 ? \u2693\ufe0e M\u00e9thode 1 \u2693\ufe0e On utilise directement la d\u00e9finition. Exemples Soit \u00e0 coder les entiers relatifs \\(x_1=107\\) et \\(x_2=-107\\) sur 8 bits. \\(x_1=107=1101011_2\\) , soit \\(0110\\ 1011\\) . On constate que le bit de poids fort vaut \\(0\\) , ce qui indique un nombre positif. Pour \\(x_2\\) on a: \\(2^8-\\lvert -107\\rvert=149\\) qui s'\u00e9crit en binaire \\(1001\\ 0101\\) et qui correspond \u00e0 la repr\u00e9sentation de \\(-107\\) sur 8 bits. Par ailleurs, le bit de poids fort vaut \\(1\\) , ce qui indique bien un nombre n\u00e9gatif. Effectuons \\(x_1+x_2\\) : 1 1 1 1 1 1 1 1 0 1 1 0 1 0 1 1 + 1 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 La m\u00e9thode du compl\u00e9ment \u00e0 2 v\u00e9rifie la propri\u00e9t\u00e9 1. M\u00e9thode 2 (\u00e0 conna\u00eetre) Pour repr\u00e9senter l'oppos\u00e9 d'un entier relatif: Ecrire la valeur absolue du nombre en binaire naturel avec le nombre de bits sp\u00e9cifi\u00e9 (compl\u00e9ter si besoin avec des z\u00e9ros); Inverser tous les bits (compl\u00e9ment \u00e0 un); Ajouter 1 au r\u00e9sultat pr\u00e9c\u00e9dent. Exemple Coder \\(x_2=-107\\) sur 8 bits en utilisant la m\u00e9thode 2. \\(\\lvert x_2\\rvert = 0110\\ 1011\\) . On inverse les bits: \\(1001\\ 0100\\) et on ajoute 1: \\(1001\\ 0101\\) . On retrouve heureusement le r\u00e9sultat pr\u00e9c\u00e9dent. Appliquons une deuxi\u00e8me fois le compl\u00e9ment \u00e0 2 sur le r\u00e9sultat \\(1001\\ 0101\\) : Inversion des bits: \\(0110\\ 1010\\) , additionner 1: \\(0110\\ 1011\\) . La propri\u00e9t\u00e9 2 est v\u00e9rifi\u00e9e. Repr\u00e9sentation circulaire \u2693\ufe0e Il est commode de repr\u00e9senter le codage d'entiers relatifs sous forme circulaire. On y rep\u00e8re l'intervalle des valeurs couvertes selon qu'on travaille avec des entiers non sign\u00e9s ( ext\u00e9rieur ) ou sign\u00e9s ( int\u00e9rieur ). Par ailleurs, la notion de compl\u00e9ment \u00e0 \\(2^n\\) est bien mise en \u00e9vidence. Par exemple, \\(-5\\) sera cod\u00e9 comme son compl\u00e9ment \u00e0 \\(2^4\\) , c'est-\u00e0-dire \\(2^4-\\lvert -5\\rvert=11\\) . A retenir \u2693\ufe0e Pour coder un entier relatif, on utilise la m\u00e9thode du compl\u00e9ment \u00e0 \\(2^n\\) . Pour cela, si la capacit\u00e9 est fix\u00e9e \u00e0 \\(n\\) bits, on peut simplement: \u00e9crire la valeur absolue du nombre en binaire naturel avec le nombre de bits sp\u00e9cifi\u00e9 (compl\u00e9ter si besoin avec des z\u00e9ros); inverser tous les bits (compl\u00e9ment \u00e0 un); ajouter 1 au r\u00e9sultat pr\u00e9c\u00e9dent Avec \\(n\\) bits, on peut coder les entiers appartenant \u00e0 l'intervalle \\([\\![-2^{n-1}...2^{n-1}-1]\\!]\\) . Si une op\u00e9ration conduit \u00e0 un nombre se situant en dehors de cet intervalle, on a un ph\u00e9nom\u00e8ne de d\u00e9passement de capacit\u00e9 (en anglais overflow ).","title":"COURS 2"},{"location":"NSI1/S3/S3C2.html#encodage-des-entiers-relatifs","text":"","title":"Encodage des entiers relatifs"},{"location":"NSI1/S3/S3C2.html#comment-coder-un-entier-signe-sur-une-machine-numerique","text":"Le signe d'un entier relatif peut prendre deux valeurs possibles: + ou - . Par cons\u00e9quent, un seul bit suffit pour le codage du signe. Convention Par convention le signe + est cod\u00e9 par 0 et le signe - par 1. Les tailles courantes pour repr\u00e9senter un entier sont 8, 16, 32 ou 64 bits.","title":"Comment coder un entier sign\u00e9 sur une machine num\u00e9rique?"},{"location":"NSI1/S3/S3C2.html#proprietes-a-verifier-et-premiere-solution","text":"Note Quelque soit l'encodage choisi, on doit respecter deux propri\u00e9t\u00e9s essentielles: \\(a + (-a) = 0\\) (propri\u00e9t\u00e9 1) \\(-(-a) = a\\) (propri\u00e9t\u00e9 2) La premi\u00e8re id\u00e9e est d'utiliser un bit, g\u00e9n\u00e9ralement le bit de poids fort , pour repr\u00e9senter le signe et les autres bits pour repr\u00e9senter la valeur absolue du nombre \\(x\\) \u00e0 coder. Ce qui peut \u00eatre repr\u00e9sent\u00e9 par: 1 2 3 4 <---- n-1 bits --> +---+----------------+ | 1 | |x| | +---+----------------+ ou 1 2 3 4 <---- n-1 bits --> +---+----------------+ | 0 | |x| | +---+----------------+ selon que \\(x\\) soit n\u00e9gatif ou positif. Exemple Soit \u00e0 coder \\(-5\\) sur 4 bits. Avec 4 bits, la valeur absolue sera cod\u00e9e sur 3 bits et le signe sur 1 bit. On a \\(|-5| = 5\\) , ce qui correspond \u00e0 \\(101_{2}\\) , le bit de signe valant 1 car \\(-5<0\\) . On aura donc le codage suivant: \\(-5\\rightarrow 1\\ 1\\ 0\\ 1\\) La propri\u00e9t\u00e9 (1) ci-dessus est-elle v\u00e9rifi\u00e9e ? Ajoutons les repr\u00e9sentations de \\(5\\) et \\(-5\\) , avec un r\u00e9sultat sur 4 bits: \\(_1\\) \\(_1\\) \\(_1\\) 0 1 0 1 + 1 1 0 1 0 0 1 0 La valeur obtenue sur 4 bits est diff\u00e9rente de z\u00e9ro: cette solution n'est pas satisfaisante . Remarque Un probl\u00e8me suppl\u00e9mentaire peut \u00eatre mis en \u00e9vidence: l'existence de deux repr\u00e9sentations pour z\u00e9ro.","title":"Propri\u00e9t\u00e9s \u00e0 v\u00e9rifier et premi\u00e8re solution"},{"location":"NSI1/S3/S3C2.html#une-solution-plus-satisfaisante","text":"","title":"Une solution plus satisfaisante"},{"location":"NSI1/S3/S3C2.html#a-retenir","text":"Pour coder un entier relatif, on utilise la m\u00e9thode du compl\u00e9ment \u00e0 \\(2^n\\) . Pour cela, si la capacit\u00e9 est fix\u00e9e \u00e0 \\(n\\) bits, on peut simplement: \u00e9crire la valeur absolue du nombre en binaire naturel avec le nombre de bits sp\u00e9cifi\u00e9 (compl\u00e9ter si besoin avec des z\u00e9ros); inverser tous les bits (compl\u00e9ment \u00e0 un); ajouter 1 au r\u00e9sultat pr\u00e9c\u00e9dent Avec \\(n\\) bits, on peut coder les entiers appartenant \u00e0 l'intervalle \\([\\![-2^{n-1}...2^{n-1}-1]\\!]\\) . Si une op\u00e9ration conduit \u00e0 un nombre se situant en dehors de cet intervalle, on a un ph\u00e9nom\u00e8ne de d\u00e9passement de capacit\u00e9 (en anglais overflow ).","title":"A retenir"},{"location":"NSI1/S3/S3C3.html","text":"CODAGE DES NOMBRES DECIMAUX \u2693\ufe0e Conversion d\u00e9cimal - binaire d'un nombre en virgule fixe \u2693\ufe0e Pour passer du binaire au d\u00e9cimal, la m\u00e9thode consiste \u00e0 consid\u00e9rer deux parties: la premi\u00e8re, compos\u00e9ee de puissances positives et qui correspond \u00e0 la partie enti\u00e8re; la seconde, compos\u00e9e de puissances n\u00e9gatives et qui correspond \u00e0 la la partie fractionnaire. Ces deux parties \u00e9tant s\u00e9par\u00e9es par la virgule qui est fixe dans ce cas . La conversion binaire \\(\\rightarrow\\) d\u00e9cimale est obtenue en additionnant les termes de la d\u00e9composition en base 2. Exemple \\(2^2\\) \\(2^1\\) \\(2^0\\) \\(2^{-1}\\) \\(2^{-2}\\) \\(2^{-3}\\) \\(2^{-4}\\) 1 0 1 1 1 0 1 Ce nombre vaut \\(2^2+1+\\dfrac{1}{2}+\\dfrac{1}{4}+\\dfrac{1}{16}=5.8125\\) Pour passer du d\u00e9cimal au binaire, on peut utiliser l'algorithme ci-dessous. ATTENTION Cet algorithme est destin\u00e9 \u00e0 \u00eatre d\u00e9roul\u00e9 \u00e0 la main . En effet, il peut boucler ind\u00e9finiment. Ce cas se produit pour des nombres qui ne peuvent \u00eatre repr\u00e9sent\u00e9s en machine. La valeur retenue est forc\u00e9ment approch\u00e9e . Exemple Convertir en binaire 6,6875. En appliquant l'algorithme (la conversion de 6 en binaire est imm\u00e9diate et n'est pas d\u00e9taill\u00e9e): r f resultat 0,6875 110, 1,375 0,375 110,1 0,75 0,75 110,10 1,5 0,5 110,101 1,0 0 110,1011 Par cons\u00e9quent \\(6,6875=110,1011_2\\) en virgule fixe. Conversion d'un nombre d\u00e9cimal en binaire - virgule flottante \u2693\ufe0e Il s'agit de d\u00e9couvrir ici la fa\u00e7on dont on repr\u00e9sente de mani\u00e8re approximative les nombres d\u00e9cimaux ou nombres flottants en machine. Il s'agit de la repr\u00e9sentation en virgule flottante . Le format et les notations \u2693\ufe0e Cette deuxi\u00e8me fa\u00e7on d'encoder un nombre d\u00e9cimal est inspir\u00e9e de la notation scientifique: \\(\\pm m\\times 10^n\\) avec \\(1\\leq m<10\\) et \\(n\\) un entier. De mani\u00e8re similaire, en base 2, on va \u00e9crire les nombres sous la forme \\(\\pm m\\times 2^n\\) avec \\(1\\leq m \\lt 2\\) et \\(n\\) un entier. Le codage d'un nombre d\u00e9cimal en base 2 n\u00e9cessite trois informations binaires: une pour le signe \\(s\\) ; une pour l'exposant \\(n\\) ; une pour \\(m\\) qu'on appelle encore mantisse . Repr\u00e9sentation en simple ou double pr\u00e9cision \u2693\ufe0e Le format pr\u00e9c\u00e9dent a \u00e9t\u00e9 d\u00e9taill\u00e9 dans une norme appel\u00e9e IEEE754 . Plusieurs niveaux de pr\u00e9cisions sont d\u00e9finis dans cette norme. On ne s'int\u00e9ressera ici qu'\u00e0 la repr\u00e9sentation en simple pr\u00e9cision sur 32 bits et double pr\u00e9cision sur 64 bits . Le signe \u2693\ufe0e Un seul bit est n\u00e9cessaire pour coder le signe \\(s\\) . On garde la convention d\u00e9j\u00e0 rencontr\u00e9e: 0 pour le signe + et 1 pour le signe - . L'exposant \u2693\ufe0e La norme pr\u00e9voit 8 bits en simple pr\u00e9cision et 11 bits en double pr\u00e9cision pour l'exposant. Les valeurs de \\(n\\) possibles seraient donc comprises entre 0 et 255 ou 0 et 2047. C'est un probl\u00e8me car cela nous emp\u00eache de travailler avec des nombres proches de z\u00e9ro. Pour y rem\u00e9dier, on a eu recours \u00e0 l'astuce suivante: l'exposant est biais\u00e9 ou d\u00e9cal\u00e9 de 127 en simple pr\u00e9cision et 1023 en double pr\u00e9cision. La cons\u00e9quence est que l'exposant \\(n\\) ne correspond pas \u00e0 la valeur cod\u00e9e \\(e\\) mais \u00e0: \\(e-127\\) en simple pr\u00e9cision; \\(e-1023\\) en double pr\u00e9cision. Ainsi, sur 8 bits, la valeur cod\u00e9e \\(e\\) variant de \\(0000\\ 0000=0\\) \u00e0 \\(1111\\ 1111=255\\) va correspondre \u00e0 un exposant allant de \\(0-127=-127\\) \u00e0 \\(255-127=128\\) . La mantisse \u2693\ufe0e Avec le format d\u00e9crit, \\(1\\leq m \\lt 2\\) , on aura toujours \\(m=1,\\dots\\) . La mantisse commence toujours par \\(1\\) ( sauf cas particuliers qui ne seront pas trait\u00e9s ici ). De ce fait, on ne code jamais le 1 et les 23 ou 52 bits restants sont utilis\u00e9s pour coder la partie fractionnaire \\(f\\) de la mantisse . Remarque \\(m=1+f\\) R\u00e9sum\u00e9 \u2693\ufe0e Un nombre d\u00e9cimal sera cod\u00e9 de la mani\u00e8re suivante: signe | exposant \\(e\\) | partie fractionnaire \\(f\\) pr\u00e9cision exposant \\(e\\) partie frac. \\(f\\) expression de la valeur en d\u00e9cimal 32 bits 8 bits 23 bits \\((-1)^s\\times (1+f)\\times 2^{e-127}\\) 64 bits 11 bits 52 bits \\((-1)^s\\times (1+f)\\times 2^{e-1023}\\) En marge du programme D'apr\u00e8s le programme officiel aucune connaissance pr\u00e9cise de la norme IEEE754 n'est exigible. Les deux exemples qui suivent compl\u00e8tent le cours ( notamment pour les plus curieux ) mais ne feront pas l'objet d'\u00e9valuation . Exemple de conversion d\u00e9cimal - flottant \u2693\ufe0e Soit \u00e0 convertir \\(N=17,25\\) en flottant, format simple pr\u00e9cision. Il s'agit de touver les trois composantes \\(s,e \\mbox{ et}f\\) de la repr\u00e9sentation en virgule flottante. Signe Le nombre est positif donc \\(s=0\\) . Mantisse et code de l'exposant En virgule fixe on a \\(N=10001,01\\) . Apr\u00e8s d\u00e9calage de la virgule de 4 rangs vers la gauche (cela revient \u00e0 multiplier par \\(2^4\\) ), on obtient: \\[ N=1,000101 \\times 2^4\\] On a fait appara\u00eetre la partie fractionnaire \\(f=000101\\) soit, sur 23 bits, \\(f=00010100\\ 00000000\\ 0000000\\) . L'exposant r\u00e9el est \\(n=4\\) . La valeur cod\u00e9e \\(e\\) sera: \\[ n=e - 127 = 4 \\iff e=131=10000011_2\\] Ecriture selon la norme IEEE754 simple pr\u00e9cision \\[N= 0\\ 10000011\\ 00010100 00000000 0000000\\] Exemple de conversion flottant - d\u00e9cimal \u2693\ufe0e Soit \u00e0 convertir \\(1\\ 10000110\\ 10101101100000000000000\\) Signe \\(s=(-1)^1=-1\\) ; Exposant En simple pr\u00e9cision, \\(n=e-127\\) . Or on peut lire \\(e=10000110_2 = 134_{10}\\) ; on a donc \\(n=134-127=7\\) . Mantisse \\(m=1+f\\) avec \\(f=2^{-1}+2^{-3}+2^{-5}+2^{-6}+2^{-8}+2^{-9}\\) , soit \\(m=1,677734375\\) . Finalement, ce nombre vaut en d\u00e9cimal: \\[-1,677734375\\times 2^7=-214,75\\] Cas particuliers \u2693\ufe0e Lorsque tous les bits sont \u00e0 z\u00e9ros, cela correspond \u00e0 la valeur z\u00e9ro. Lorsque tous les bits de l'exposant sont \u00e0 1 et que la partie fractionnaire est nulle, cela correspond \u00e0 l'infini (plus ou moins, cela d\u00e9pend du bit de signe). Enfin, pour les nombres tr\u00e8s petits (inf\u00e9rieurs \u00e0 \\(2^{-126}\\) ) il existe une forme d\u00e9normalis\u00e9e, qui ne sera pas \u00e9tudi\u00e9e ici. Caract\u00e8re approch\u00e9e de la repr\u00e9sentation \u2693\ufe0e Probl\u00e8me Quel constat peut-on faire concernant les repr\u00e9sentations binaires de certains nombres comme 0.2 et 0.3 par exemple ? R\u00e9ponse En d\u00e9roulant l'algorithme propos\u00e9 \u00e0 la main, on constate rapidement que la partie fractionnaire est constitu\u00e9e d'une r\u00e9p\u00e9tition infinie du motif 1001 . Un ordinateur qui ne peut stocker qu'un nombre fini de chiffre , ne peut repr\u00e9senter correctement certains nombres r\u00e9els et utilise par cons\u00e9quent une valeur approch\u00e9e. Par exemple: 1.2* 3 donne 3.5999999999999996; 0.1 + 0.2 == 0.3 donne False Par ailleurs, des propri\u00e9t\u00e9s comme l'associativit\u00e9 de l'addition ne sont plus valables 1 1.6 + ( 3.2 + 1.7 ) 1 6.5 1 ( 1.6 + 3.2 ) + 1.7 1 6.500000000000001 CONSEQUENCE IMPORTANTE Il faut \u00e9viter de tester l'\u00e9galit\u00e9 entre deux nombres flottants. A retenir Les nombres flottants sont une repr\u00e9sentation approximatives des nombres r\u00e9els dans les ordinateurs. Une norme internationale IEEE754 d\u00e9finit un encodage en simple ou double pr\u00e9cision (32 ou 64 bits). Les op\u00e9rations arithm\u00e9tiques sur les nombres flottants n'ont pas toujours les m\u00eames propri\u00e9t\u00e9s que ces m\u00eames op\u00e9rations sur les nombres r\u00e9els.","title":"COURS 3"},{"location":"NSI1/S3/S3C3.html#codage-des-nombres-decimaux","text":"","title":"CODAGE DES NOMBRES DECIMAUX"},{"location":"NSI1/S3/S3C3.html#conversion-decimal-binaire-dun-nombre-en-virgule-fixe","text":"Pour passer du binaire au d\u00e9cimal, la m\u00e9thode consiste \u00e0 consid\u00e9rer deux parties: la premi\u00e8re, compos\u00e9ee de puissances positives et qui correspond \u00e0 la partie enti\u00e8re; la seconde, compos\u00e9e de puissances n\u00e9gatives et qui correspond \u00e0 la la partie fractionnaire. Ces deux parties \u00e9tant s\u00e9par\u00e9es par la virgule qui est fixe dans ce cas . La conversion binaire \\(\\rightarrow\\) d\u00e9cimale est obtenue en additionnant les termes de la d\u00e9composition en base 2. Exemple \\(2^2\\) \\(2^1\\) \\(2^0\\) \\(2^{-1}\\) \\(2^{-2}\\) \\(2^{-3}\\) \\(2^{-4}\\) 1 0 1 1 1 0 1 Ce nombre vaut \\(2^2+1+\\dfrac{1}{2}+\\dfrac{1}{4}+\\dfrac{1}{16}=5.8125\\) Pour passer du d\u00e9cimal au binaire, on peut utiliser l'algorithme ci-dessous. ATTENTION Cet algorithme est destin\u00e9 \u00e0 \u00eatre d\u00e9roul\u00e9 \u00e0 la main . En effet, il peut boucler ind\u00e9finiment. Ce cas se produit pour des nombres qui ne peuvent \u00eatre repr\u00e9sent\u00e9s en machine. La valeur retenue est forc\u00e9ment approch\u00e9e . Exemple Convertir en binaire 6,6875. En appliquant l'algorithme (la conversion de 6 en binaire est imm\u00e9diate et n'est pas d\u00e9taill\u00e9e): r f resultat 0,6875 110, 1,375 0,375 110,1 0,75 0,75 110,10 1,5 0,5 110,101 1,0 0 110,1011 Par cons\u00e9quent \\(6,6875=110,1011_2\\) en virgule fixe.","title":"Conversion d\u00e9cimal - binaire d'un nombre en virgule fixe"},{"location":"NSI1/S3/S3C3.html#conversion-dun-nombre-decimal-en-binaire-virgule-flottante","text":"Il s'agit de d\u00e9couvrir ici la fa\u00e7on dont on repr\u00e9sente de mani\u00e8re approximative les nombres d\u00e9cimaux ou nombres flottants en machine. Il s'agit de la repr\u00e9sentation en virgule flottante .","title":"Conversion d'un nombre d\u00e9cimal en binaire - virgule flottante"},{"location":"NSI1/S3/S3C3.html#caractere-approchee-de-la-representation","text":"Probl\u00e8me Quel constat peut-on faire concernant les repr\u00e9sentations binaires de certains nombres comme 0.2 et 0.3 par exemple ? R\u00e9ponse En d\u00e9roulant l'algorithme propos\u00e9 \u00e0 la main, on constate rapidement que la partie fractionnaire est constitu\u00e9e d'une r\u00e9p\u00e9tition infinie du motif 1001 . Un ordinateur qui ne peut stocker qu'un nombre fini de chiffre , ne peut repr\u00e9senter correctement certains nombres r\u00e9els et utilise par cons\u00e9quent une valeur approch\u00e9e. Par exemple: 1.2* 3 donne 3.5999999999999996; 0.1 + 0.2 == 0.3 donne False Par ailleurs, des propri\u00e9t\u00e9s comme l'associativit\u00e9 de l'addition ne sont plus valables 1 1.6 + ( 3.2 + 1.7 ) 1 6.5 1 ( 1.6 + 3.2 ) + 1.7 1 6.500000000000001 CONSEQUENCE IMPORTANTE Il faut \u00e9viter de tester l'\u00e9galit\u00e9 entre deux nombres flottants. A retenir Les nombres flottants sont une repr\u00e9sentation approximatives des nombres r\u00e9els dans les ordinateurs. Une norme internationale IEEE754 d\u00e9finit un encodage en simple ou double pr\u00e9cision (32 ou 64 bits). Les op\u00e9rations arithm\u00e9tiques sur les nombres flottants n'ont pas toujours les m\u00eames propri\u00e9t\u00e9s que ces m\u00eames op\u00e9rations sur les nombres r\u00e9els.","title":"Caract\u00e8re approch\u00e9e de la repr\u00e9sentation"},{"location":"NSI1/S3/S3E1.html","text":"S\u00e9quence 3 - exercices \u2693\ufe0e Exercice 1 - Codage d'une information num\u00e9rique \u2693\ufe0e Citer un syst\u00e8me qui n\u00e9cessite un bit pour coder son information. Combien de bits sont n\u00e9cessaires pour distinguer les 4 familles d'un jeu de cartes? Combien de bits sont n\u00e9cessaires pour distinguer les 26 lettres de l'alphabet ? Justifier le fait qu'\u00e0 l'origine 7 bits \u00e9taient suffisants pour coder du texte ( en anglais! ) Exercice 2 - Manipuler les bases 2, 10 et 16 \u2693\ufe0e Compl\u00e9ter le tableau suivant: Base Valeur Valeur Valeur Base 10 16 Base 2 0110 1101 Base 16 44 Exercice 3 - Adresse IPv6 \u2693\ufe0e Une adresse IPv6 est compos\u00e9e de 8 champs de 4 valeurs hexad\u00e9cimales, d\u00e9limit\u00e9es par des : pour la rendre plus lisible. Par exemple, l'adresse IPv6 de facebook.com est 2a03:2880:f130:83:face:b00c:0:25de . Calculer le nombre de bits n\u00e9cessaire pour \u00e9crire une adresse IPv6 en binaire. Exercice 4 - Bug 2038 \u2693\ufe0e Les machines UNIX suivent la norme IEEE 1003 (ou norme POSIX) qui sp\u00e9cifie, entre autres, que le temps est compt\u00e9 en secondes \u00e0 partir du 1er janvier 1970 \u00e0 00:00:00 temps universel. De nombreux syst\u00e8mes de fichiers codent ce temps par un entier sign\u00e9 sur 32 bits . Expliquer pourquoi ces syst\u00e8mes pourraient conna\u00eetre un bug en 2038. Indice: un entier sign\u00e9 a un bit r\u00e9serv\u00e9 pour le signe . 1","title":"EXERCICES E1"},{"location":"NSI1/S3/S3E1.html#sequence-3-exercices","text":"","title":"S\u00e9quence 3 - exercices"},{"location":"NSI1/S3/S3E1.html#exercice-1-codage-dune-information-numerique","text":"Citer un syst\u00e8me qui n\u00e9cessite un bit pour coder son information. Combien de bits sont n\u00e9cessaires pour distinguer les 4 familles d'un jeu de cartes? Combien de bits sont n\u00e9cessaires pour distinguer les 26 lettres de l'alphabet ? Justifier le fait qu'\u00e0 l'origine 7 bits \u00e9taient suffisants pour coder du texte ( en anglais! )","title":"Exercice 1 - Codage d'une information num\u00e9rique"},{"location":"NSI1/S3/S3E1.html#exercice-2-manipuler-les-bases-2-10-et-16","text":"Compl\u00e9ter le tableau suivant: Base Valeur Valeur Valeur Base 10 16 Base 2 0110 1101 Base 16 44","title":"Exercice 2 - Manipuler les bases 2, 10 et 16"},{"location":"NSI1/S3/S3E1.html#exercice-3-adresse-ipv6","text":"Une adresse IPv6 est compos\u00e9e de 8 champs de 4 valeurs hexad\u00e9cimales, d\u00e9limit\u00e9es par des : pour la rendre plus lisible. Par exemple, l'adresse IPv6 de facebook.com est 2a03:2880:f130:83:face:b00c:0:25de . Calculer le nombre de bits n\u00e9cessaire pour \u00e9crire une adresse IPv6 en binaire.","title":"Exercice 3 - Adresse IPv6"},{"location":"NSI1/S3/S3E1.html#exercice-4-bug-2038","text":"Les machines UNIX suivent la norme IEEE 1003 (ou norme POSIX) qui sp\u00e9cifie, entre autres, que le temps est compt\u00e9 en secondes \u00e0 partir du 1er janvier 1970 \u00e0 00:00:00 temps universel. De nombreux syst\u00e8mes de fichiers codent ce temps par un entier sign\u00e9 sur 32 bits . Expliquer pourquoi ces syst\u00e8mes pourraient conna\u00eetre un bug en 2038. Indice: un entier sign\u00e9 a un bit r\u00e9serv\u00e9 pour le signe . 1","title":"Exercice 4 - Bug 2038"},{"location":"NSI1/S3/S3R1.html","text":"L'ESSENTIEL DE LA SEQUENCE 3 \u2693\ufe0e Ce qu\u2019il faut savoir \u2693\ufe0e en base 10 nous avons 10 symboles (chiffres) : 0, 1, 2, 3, 4, 5\u2026.9 en base 2 (binaire) nous avons 2 symboles (chiffres) : 0 et 1 en base 16 (hexad\u00e9cimal) nous avons 16 symboles : 0, 1, 2\u2026.8, 9, A, B, C, D, E, F il serait judicieux de conna\u00eetre par coeur (ou au moins \u00eatre capable de les retrouver rapidement) les nombres jusqu\u2019\u00e0 15 : on peut coder \\(2^n\\) valeurs avec \\(n\\) bits conna\u00eetre le principe du compl\u00e9ment \u00e0 2 (voir cours) savoir que pour une repr\u00e9sentation sur \\(n\\) bits, il sera possible de coder des valeurs comprises entre \\(-2^{n-1}\\) et \\(+2^{n-1}- 1\\) . la repr\u00e9sentation en machine des nombres r\u00e9els (on parle souvent en informatique de nombres flottants ou nombre \u00e0 virgule flottante ) diff\u00e8re de la repr\u00e9sentation en machine des entiers la norme IEEE 754 est la norme la plus employ\u00e9e pour la repr\u00e9sentation des nombres \u00e0 virgule flottante dans le domaine informatique. il existe 2 formats associ\u00e9s \u00e0 la norme IEEE 754 : le format simple pr\u00e9cision (le nombre est repr\u00e9sent\u00e9 sur 32 bits) et le format double pr\u00e9cision (le nombre est repr\u00e9sent\u00e9 sur 64 bits) que cela soit en simple pr\u00e9cision ou en double pr\u00e9cision, la norme IEEE754 utilise : 1 bit de signe (1 si le nombre est n\u00e9gatif et 0 si le nombre est positif) des bits consacr\u00e9s \u00e0 l'exposant (8 bits pour la simple pr\u00e9cision et 11 bits pour la double pr\u00e9cision) des bits consacr\u00e9s \u00e0 la mantisse (23 bits pour la simple pr\u00e9cision et 52 bits pour la double pr\u00e9cision) \u00e0 cause de la taille fixe de la mantisse on peut, dans certains cas, avoir des erreurs d\u2019arrondies, par exemple 0.1 + 0.2 n\u2019est pas \u00e9gal \u00e0 0.3. On \u00e9vitera de tester l\u2019\u00e9galit\u00e9 entre 2 flottants (par exemple 0.1 + 0.2 == 0.3 renvoie False en python!) Ce qu\u2019il faut savoir faire \u2693\ufe0e convertir d\u00e9cimal vers binaire convertir binaire vers d\u00e9cimal convertir d\u00e9cimal vers hexad\u00e9cimal convertir hexad\u00e9cimal vers d\u00e9cimal convertir binaire vers hexad\u00e9cimal convertir hexad\u00e9cimal vers binaire Vous devez savoir repr\u00e9senter un entier (positif ou n\u00e9gatif) en utilisant le compl\u00e9ment \u00e0 2 sur \\(n\\) bits (repr\u00e9sentation binaire \\(\\longrightarrow\\) repr\u00e9sentation d\u00e9cimale et repr\u00e9sentation d\u00e9cimale \\(\\longrightarrow\\) repr\u00e9sentation binaire). vous devez \u00eatre capable de trouver la repr\u00e9sentation en binaire d\u2019un nombre r\u00e9el (par exemple 0.1, 0.25 ou encore 1/3) vous n\u2019avez pas \u00e0 savoir \u00e9crire un nombre flottant en utilisant la norme IEEE754, vous devez juste connaitre les grands principes de cette norme (bit de signe, exposant, mantisse) 1","title":"En R\u00e9sum\u00e9"},{"location":"NSI1/S3/S3R1.html#lessentiel-de-la-sequence-3","text":"","title":"L'ESSENTIEL DE LA SEQUENCE 3"},{"location":"NSI1/S3/TP1S3.html","text":"Travailler en base 2, 10 ou 16 - Applications \u2693\ufe0e Manipulations binaires en python \u2693\ufe0e Pr\u00e9ambule: types natifs \u2693\ufe0e Python poss\u00e8de trois types d'objets num\u00e9riques natifs, parmi lesquels on peux citer le type int ( integer ) pour manipuler les entiers relatifs et le type float pour manipuler les nombres d\u00e9cimaux \u00e0 virgule flottante. Pour manipuler les cha\u00eenes de caract\u00e8res, on dispose du type str ( string ). Ces derni\u00e8res sont d\u00e9clar\u00e9es en \u00e9tant entour\u00e9es de double quotes \" \" ou de simples quotes ' ' (s'il n'y a pas d'ambiguit\u00e9s avec l'apostrophe). Par exemple 1 mavariable = \"programmation\" Pour acc\u00e9der au type d'un objet obj on utilise la fonction native type() sur cet objet: 1 type ( obj ) A faire Donner le type des objets suivants: 11, 11.0 et \"11\". Repr\u00e9sentent-ils le m\u00eame objet ? 1 Convertisseur decimal binaire \u2693\ufe0e Python poss\u00e8de une fonction native qui permet la conversion d'un entier en binaire: la fonction bin() . 1 bin ( 77 ) 1 '0b1001101' On constate que le r\u00e9sultat est: une cha\u00eene de caract\u00e8res; pr\u00e9fix\u00e9 des caract\u00e8res 0b pour indiquer du binaire. On se propose d'\u00e9crire ici notre propre fonction de conversion en python, en suivant l'algorithme \u00e9crit en pseudo-code ci-apr\u00e8s. Dans cet algorithme, l'affectation est not\u00e9e \\(\\leftarrow\\) (fl\u00eache gauche) et la chaine de caract\u00e8res vide \"\" . Par ailleurs, en python: le reste r de la division d'un entier naturel \\(a\\) par un entier naturel \\(b\\) est obtenu par r = a % b ; le quotient q de la division euclidienne de \\(a\\) par \\(b\\) s'obtient par q = a // b ; la transformation d'un nombre \\(x\\) en chaine de caract\u00e8res \"x\" est r\u00e9alis\u00e9e par str(x) . 1 2 3 4 5 6 7 # R\u00e9aliser des divisions euclidiennes en python a = 17 b = 2 q = a // b r = a % b print ( \"quotient:\" , q , \", reste:\" , r ) print ( \"concat\u00e9nation de 'r' et '00':\" , str ( r ) + '00' ) 1 2 quotient: 8 , reste: 1 concat\u00e9nation de 'r' et '00': 100 A faire Ecrire une fonction dec2bin qui prend en param\u00e8tre un entier naturel n et qui renvoit la repr\u00e9sentation binaire de n sous forme de chaine de caract\u00e8res, \u00e0 partir de l'algorithme fourni. Bonus ( pour les plus rapides ) \u00e9crire une fonction sur_16_bits qui prend en param\u00e8tre une chaine repr\u00e9sentant un nombre binaire ( donc form\u00e9e de 0 et de 1 ) et qui renvoit une chaine correspondant au m\u00eame nombre \u00e9crit sur 16 bits. Il faudra donc rajouter, si besoin, des z\u00e9ros. Application de la num\u00e9ration hexad\u00e9cimale \u2693\ufe0e Introduction \u2693\ufe0e Quelque soit leur type, les fichiers sont stock\u00e9s en machine sous forme binaire. Celle-ci est peu pratique la plupart du temps. On lui pr\u00e9f\u00e8re la forme hexad\u00e9cimale. A faire On peut utiliser un outil en ligne de commande pour visualiser le contenu en hexad\u00e9cimal d'un fichier. Dans un terminal ( Ctrl \uff0b Alt \uff0b T ), saisir la commande hexdump -C -n 64 logo.bmp qui affiche les 64 premiers octets du fichier logo.bmp en hexad\u00e9cimal. On s'int\u00e9ressera uniquement \u00e0 la colonne centrale o\u00f9 chaque ligne repr\u00e9sente 16 octets. Donner la valeur des 6 premiers octets. On peut aussi convertir un nombre hexad\u00e9cimal en d\u00e9cimal via la ligne de commande en penant soin de le pr\u00e9fix\u00e9 par 0x . Exemple de syntaxe: echo $((0x7F)) qui donne 127. Convertir le nombre h\u00e9xad\u00e9cimal B104 en d\u00e9cimal. 1 Notion de boutisme \u2693\ufe0e Pour une donn\u00e9e qui occupent au moins deux octets, la question de sa repr\u00e9sentation en m\u00e9moire (on dit aussi de son boutisme) se pose. En effet, on a deux possibilit\u00e9s pour l'\u00e9crire: de l'octet de poids fort vers l'octet de poids faible; c'est la repr\u00e9sentation gros-boutisme ou big-endian ; de l'octet de poids faible vers l'octet de poids fort; c'est la repr\u00e9sentation petit-boutisme ou little-endian ; Le choix du boutisme est typiquement fix\u00e9 par l'architecture du processeur ou le protocole. Pour ce TP, au lyc\u00e9e, c'est la repr\u00e9sentation little-endian qui pr\u00e9vaut. Exemple Le nombre hexad\u00e9cimal 0x1A597C occupe trois octets, 1A est l'octet de poids fort et 7C l'octet de poids faible. Sur une architecture little-endian ce nombre sera repr\u00e9sent\u00e9 par 7C 59 1A . A faire Saisir la commande hexdump -C -n 14 logo.bmp qui affiche les 14 premiers octets du fichier. Relever les 4 octets allant du n\u00b02 au n\u00b05 (attention, on compte \u00e0 partir de 0); Sachant que c'est la repr\u00e9sentation little-endian qui est utilis\u00e9e, quel est le nombre hexad\u00e9cimal correspondant ? 1 Caract\u00e9ristiques d'une image au format BMP \u2693\ufe0e Les fichiers images au format BMP sont bien document\u00e9s. On peut aisemment consulter les informations avec un \u00e9diteur hexadecimal. Les 2 premiers octets servent \u00e0 identifier le fichier. Pour une image BMP, on doit avoir 'BM' soit 42 4D en hexad\u00e9cimal. Les 4 octets suivants nous donnent la taille du fichier , en hexad\u00e9cimal. A faire A partir d'un relev\u00e9 fait avec hexdump et compte tenu du boutisme, donner la taille du fichier en hexad\u00e9cimal puis en d\u00e9cimal. Est-ce coh\u00e9rent avec la valeur fourni par la commande ls -l ? Avec des options appropri\u00e9es, la commande hexdump nous permet de r\u00e9cup\u00e9rer \\(n\\) octets \u00e0 partir d'une adresse \\(s\\) (appel\u00e9e aussi offset ) par rapport au d\u00e9but du fichier. Ainsi, hexdump -n 4 -s 2 logo.bmp affichera 4 octets \u00e0 partir de l'octet n\u00b0 2 ( offset ). Tester. La documentation du format BMP est r\u00e9sum\u00e9e en annexe et est disponible sur wikipedia . A partir de toutes ces informations et des questions pr\u00e9c\u00e9dentes: donner la valeur en hexad\u00e9cimal et en d\u00e9cimal de la largeur (en anglais width ) de l'image; donner la valeur en hexad\u00e9cimal et en d\u00e9cimal de la hauteur (en anglais height ) de l'image; dire si l'image est compress\u00e9e ou non. Justifier avec la lecture d'octets bien particuliers.","title":"TP 1"},{"location":"NSI1/S3/TP1S3.html#travailler-en-base-2-10-ou-16-applications","text":"","title":"Travailler en base 2, 10 ou 16 - Applications"},{"location":"NSI1/S3/TP1S3.html#manipulations-binaires-en-python","text":"","title":"Manipulations binaires en python"},{"location":"NSI1/S3/TP1S3.html#application-de-la-numeration-hexadecimale","text":"","title":"Application de la num\u00e9ration hexad\u00e9cimale"},{"location":"NSI1/S4/S4A1.html","text":"Simulations logiques \u2693\ufe0e Les fichiers de simulation sont \u00e0 r\u00e9cup\u00e9rer ici Op\u00e9rateurs and, or et not \u2693\ufe0e A faire Simuler avec le logiciel Digital du professeur Helmut Neemann les op\u00e9rations logiques and , or et not . \u00c9tablir leur table de v\u00e9rit\u00e9. Lois de De Morgan \u2693\ufe0e Dresser la table de v\u00e9rit\u00e9 de l'expression not (A or B) ; V\u00e9rifier les r\u00e9sultats par simulation; Proposer une expression \u00e9quivalente; Reprendre les questions 1, 2 et 3 avec l'expression not (A and B) Une op\u00e9ration logique tr\u00e8s utilis\u00e9e \u2693\ufe0e Ouvrir le circuit Dilemme.dig . R\u00e9aliser la simulation. \u00c9tablir et commenter sa table de v\u00e9rit\u00e9. Cette op\u00e9ration tr\u00e8s utilis\u00e9e a pour symbole ( US ): Addition binaire \u2693\ufe0e Demi additionneur \u2693\ufe0e Le demi additionneur est un circuit combinatoire qui permet de r\u00e9aliser la somme arithm\u00e9tique de deux nombres A et B chacun sur un bit . A la sortie on va avoir la somme S et une \u00e9ventuelle retenue R. Ouvrir le fichier halfAdder.dig et passer en mode simulation. Dresser alors la table de v\u00e9rit\u00e9 de ce circuit. En d\u00e9duire la table d'addition binaire. En utilisant la fonction d'analyse du logiciel, donner l'expression bool\u00e9enne de la sortie S et de la retenue R. Additionneur complet \u2693\ufe0e Lorsqu'on souhaite effectuer l'addition binaire sur un bit de deux nombres \\(A_i\\) et \\(B_i\\) , il faut tenir compte d'une \u00e9ventuelle retenue \\(R_{i-1}\\) provenant du calcul du rang pr\u00e9c\u00e9dent. On a alors un additionneur complet, qui est r\u00e9alis\u00e9 avec deux demi-additionneurs. A la sortie on va avoir la somme \\(S_i\\) et une \u00e9ventuelle retenue \\(R_i\\) . Ouvrir le fichier fullAdder.dig et passer en mode simulation. Dresser la table de v\u00e9rit\u00e9 de l'additionneur complet.","title":"ACTIVITE 1"},{"location":"NSI1/S4/S4A1.html#simulations-logiques","text":"Les fichiers de simulation sont \u00e0 r\u00e9cup\u00e9rer ici","title":"Simulations logiques"},{"location":"NSI1/S4/S4A1.html#operateurs-and-or-et-not","text":"A faire Simuler avec le logiciel Digital du professeur Helmut Neemann les op\u00e9rations logiques and , or et not . \u00c9tablir leur table de v\u00e9rit\u00e9.","title":"Op\u00e9rateurs and, or et not"},{"location":"NSI1/S4/S4A1.html#lois-de-de-morgan","text":"Dresser la table de v\u00e9rit\u00e9 de l'expression not (A or B) ; V\u00e9rifier les r\u00e9sultats par simulation; Proposer une expression \u00e9quivalente; Reprendre les questions 1, 2 et 3 avec l'expression not (A and B)","title":"Lois de De Morgan"},{"location":"NSI1/S4/S4A1.html#une-operation-logique-tres-utilisee","text":"Ouvrir le circuit Dilemme.dig . R\u00e9aliser la simulation. \u00c9tablir et commenter sa table de v\u00e9rit\u00e9. Cette op\u00e9ration tr\u00e8s utilis\u00e9e a pour symbole ( US ):","title":"Une op\u00e9ration logique tr\u00e8s utilis\u00e9e"},{"location":"NSI1/S4/S4A1.html#addition-binaire","text":"","title":"Addition binaire"},{"location":"NSI1/S4/S4A2.html","text":"S\u00e9quence d'instructions en langage machine \u2693\ufe0e Format d'une instruction \u2693\ufe0e Un mot extrait depuis la m\u00e9moire repr\u00e9sente un ordre donn\u00e9 au processeur. Il se pr\u00e9sente sous la forme d'une chaine binaire de \\(p\\) bits (typiquement \\(p=32\\) ou \\(64\\) bits), compos\u00e9e de deux parties. Pour s'affranchir des codes binaires et des calculs d'adresse le programmeur utilise plut\u00f4t un langage d'assemblage o\u00f9 les instructions binaires sont remplac\u00e9s par une chaine de caract\u00e8res mn\u00e9moniques. En effet, MOV R0,#127 est un peu plus explicite que 11100011\u200910100000\u200900000000\u200901111111 ! Un programme appel\u00e9 assembleur r\u00e9alisera ensuite le passage vers le code binaire. Compl\u00e9ment Les instructions du langage machine peuvent \u00eatre rang\u00e9es dans six cat\u00e9gories: calcul, transfert, entr\u00e9es/sorties, saut, appel de sous programme, instructions particuli\u00e8res (arr\u00eat par exemple). L'ensemble des codes op\u00e9ration reconnu par un processeur s'appelle son jeu d'instructions . Il n'est pas question dans cette activit\u00e9 de d\u00e9tailler un quelconque jeu d'instructions, ni les subtilit\u00e9s de son utilisation. Il s'agit plut\u00f4t de pr\u00e9senter quelques s\u00e9quences simples . Premiers pas avec un langage d'assemblage \u2693\ufe0e Dans les exemples qui suivront le jeu d'instructions minimaliste utilis\u00e9 (voisin de celui des processeurs ARM ) peut \u00eatre trouv\u00e9 ici . A faire R\u00e9alisez l'activit\u00e9 ci-dessous et dont la version originale peut \u00eatre trouv\u00e9e \u00e0 cette adresse . Afin de mettre en pratique ce que nous avons \u00e9tudi\u00e9 dans le cours 2 \"Architecture des ordinateurs - Mod\u00e8le de von Neumann\", nous allons utiliser un simulateur d\u00e9velopp\u00e9 par Peter L Higginson. Ce simulateur est bas\u00e9 sur une architecture de von Neumann. Nous allons trouver dans ce simulateur : une RAM un CPU Une version en ligne de ce simulateur est disponible ici : http://www.peterhigginson.co.uk/AQA/ Voici ce que vous devriez obtenir en vous rendant \u00e0 l'adresse indiqu\u00e9e ci-dessus : Simulateur d\u00e9velopp\u00e9 par Peter L Higginson Il est relativement facile de distinguer les diff\u00e9rentes parties du simulateur : \u00e0 droite, on trouve la m\u00e9moire vive (\"main memory\") au centre, on trouve le microprocesseur \u00e0 gauche on trouve la zone d'\u00e9dition (\"Assembly Language\"), c'est dans cette zone que nous allons saisir nos programmes en assembleur Revenons sur les parties RAM et CPU La RAM \u2693\ufe0e Par d\u00e9faut le contenu des diff\u00e9rentes cellules de la m\u00e9moire est en base 10 (entier sign\u00e9), mais d'autres options sont possibles : base 10 (entier non-sign\u00e9, \"unsigned\"), base 16 (\"hex\"), base 2 (\"binary\"). On acc\u00e8de \u00e0 ces options \u00e0 l'aide du bouton \"OPTIONS\" situ\u00e9 en bas dans la partie gauche du simulateur. activit\u00e9 9.1 \u2693\ufe0e A faire \u00c0 l'aide du bouton \"OPTIONS\", passez \u00e0 un affichage en binaire. Comme vous pouvez le constater, chaque cellule de la m\u00e9moire comporte 32 bits (nous avons vu que classiquement une cellule de RAM comporte 8 bits). Chaque cellule de la m\u00e9moire poss\u00e8de une adresse (de 000 \u00e0 199), ces adresses sont cod\u00e9es en base 10. A faire Vous pouvez repasser \u00e0 un affichage en base 10 (bouton \"OPTION\"->\"signed\") Le CPU \u2693\ufe0e Dans la partie centrale du simulateur, nous allons trouver en allant du haut vers le bas : le bloc \"registre\" (\"Registers\") : nous avons 13 registres (R0 \u00e0 R12) + 1 registre (PC) qui contient l'adresse m\u00e9moire de l'instruction en court d'ex\u00e9cution; le bloc \"unit\u00e9 de commande\" (\"Control Unit\") qui contient l'instruction machine en cours d'ex\u00e9cution (au format hexad\u00e9cimal) le bloc \"unit\u00e9 arithm\u00e9tique et logique\" (\"Arithmetic and Logic Unit\") Nous ne nous int\u00e9resserons pas aux autres composants de la partie CPU Programmer en langage d'assemblage. \u2693\ufe0e activit\u00e9 9.2 \u2693\ufe0e A faire Dans la partie \"\u00e9diteur\" (\"Assembly Language\") saisissez les lignes de codes ci-dessous. 1 2 3 MOV R0,#42 STR R0,150 HALT A faire Une fois la saisie termin\u00e9e, cliquez sur le bouton \"submit\". Vous devriez voir apparaitre des nombres \"\u00e9tranges\" dans les cellules m\u00e9moires d'adresses 000, 001 et 002 : L'assembleur a fait son travail, il a converti les 3 lignes de notre programme en instructions machines, la premi\u00e8re instruction machine est stock\u00e9e \u00e0 l'adresse m\u00e9moire 000 (elle correspond \u00e0 MOV R0,#42 en assembleur), la deuxi\u00e8me \u00e0 l'adresse 001 (elle correspond \u00e0 STR R0,150 en assembleur) et la troisi\u00e8me \u00e0 l'adresse 002 (elle correspond \u00e0 HALT en langage d'assemblage). A faire Pour avoir une id\u00e9e des v\u00e9ritables instructions machines, vous devez repasser \u00e0 un affichage en binaire (bouton \"OPTION\"->\"binary\"). Vous devriez obtenir ceci : Nous pouvons donc maintenant affirmer que : l'instruction machine 11100011\u200910100000\u200900000000\u200900101010 correspond au code assembleur MOV R0,#42 l'instruction machine 11100101\u200910001111\u200900000010\u200901001100 correspond au code assembleur STR R0,150 l'instruction machine 11101111\u200900000000\u200900000000\u200900000000 correspond au code assembleur HALT Au passage, pour l'instruction machine 11100011\u200910100000\u200900000000\u200900101010 , vous pouvez remarquer que l'octet le plus \u00e0 droite, \\(00101010_2\\) , est bien \u00e9gale \u00e0 \\(42_{10}\\) ! A faire Repassez \u00e0 un affichage en base 10 afin de faciliter la lecture des donn\u00e9es pr\u00e9sentes en m\u00e9moire. activit\u00e9 9.3 \u2693\ufe0e A faire Pour ex\u00e9cuter notre programme, il suffit maintenant de cliquer sur le bouton RUN . Vous allez voir le CPU travailler en direct gr\u00e2ce \u00e0 de petites animations. Si cela va trop vite (ou trop doucement), vous pouvez r\u00e9gler la vitesse de simulation \u00e0 l'aide des boutons << et >> . Un appui sur le bouton STOP met en pause la simulation, si vous rappuyez une deuxi\u00e8me fois sur ce m\u00eame bouton STOP , la simulation reprend l\u00e0 o\u00f9 elle s'\u00e9tait arr\u00eat\u00e9e. Une fois la simulation termin\u00e9e, vous pouvez constater que la cellule m\u00e9moire d'adresse 150, contient bien le nombre 42 (en base 10). Vous pouvez aussi constater que le registre R0 a bien stock\u00e9 le nombre 42. ATTENTION Pour relancer la simulation, il est n\u00e9cessaire d'appuyer sur le bouton RESET afin de remettre les registres R0 \u00e0 R12 \u00e0 0, ainsi que le registre PC (il faut que l'unit\u00e9 de commande pointe de nouveau sur l'instruction situ\u00e9e \u00e0 l'adresse m\u00e9moire 000). La m\u00e9moire n'est pas modifi\u00e9e par un appui sur le bouton RESET , pour remettre la m\u00e9moire \u00e0 0, il faut cliquer sur le bouton OPTIONS et choisir clr memory . Si vous remettez votre m\u00e9moire \u00e0 0, il faudra cliquer sur le bouton \"ASSEMBLE\" avant de pouvoir ex\u00e9cuter de nouveau votre programme. activit\u00e9 9.4 \u2693\ufe0e A faire Modifiez le programme pr\u00e9c\u00e9dent pour qu'\u00e0 la fin de l'ex\u00e9cution on trouve le nombre 54 \u00e0 l'adresse m\u00e9moire 50. On utilisera le registre R1 \u00e0 la place du registre R0 . Testez vos modifications en ex\u00e9cutant la simulation. Le simulateur prend en charge les labels . activit\u00e9 9.5 \u2693\ufe0e A faire Saisissez et testez le programme suivant : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 MOV R0, #4 STR R0,30 MOV R0, #8 STR R0,75 LDR R0,30 CMP R0, #10 BNE else MOV R0, #9 STR R0,75 B endif else: LDR R0,30 ADD R0, R0, #1 STR R0,30 endif: MOV R0, #6 STR R0,23 HALT activit\u00e9 9.6 \u2693\ufe0e Voici un programme Python : 1 2 3 x=0 while x<3: x=x+1 A faire \u00c9crivez et testez un programme en assembleur \u00e9quivalent au programme ci-dessus.","title":"ACTIVITE 2"},{"location":"NSI1/S4/S4A2.html#sequence-dinstructions-en-langage-machine","text":"","title":"S\u00e9quence d'instructions en langage machine"},{"location":"NSI1/S4/S4A2.html#format-dune-instruction","text":"Un mot extrait depuis la m\u00e9moire repr\u00e9sente un ordre donn\u00e9 au processeur. Il se pr\u00e9sente sous la forme d'une chaine binaire de \\(p\\) bits (typiquement \\(p=32\\) ou \\(64\\) bits), compos\u00e9e de deux parties. Pour s'affranchir des codes binaires et des calculs d'adresse le programmeur utilise plut\u00f4t un langage d'assemblage o\u00f9 les instructions binaires sont remplac\u00e9s par une chaine de caract\u00e8res mn\u00e9moniques. En effet, MOV R0,#127 est un peu plus explicite que 11100011\u200910100000\u200900000000\u200901111111 ! Un programme appel\u00e9 assembleur r\u00e9alisera ensuite le passage vers le code binaire. Compl\u00e9ment Les instructions du langage machine peuvent \u00eatre rang\u00e9es dans six cat\u00e9gories: calcul, transfert, entr\u00e9es/sorties, saut, appel de sous programme, instructions particuli\u00e8res (arr\u00eat par exemple). L'ensemble des codes op\u00e9ration reconnu par un processeur s'appelle son jeu d'instructions . Il n'est pas question dans cette activit\u00e9 de d\u00e9tailler un quelconque jeu d'instructions, ni les subtilit\u00e9s de son utilisation. Il s'agit plut\u00f4t de pr\u00e9senter quelques s\u00e9quences simples .","title":"Format d'une instruction"},{"location":"NSI1/S4/S4A2.html#premiers-pas-avec-un-langage-dassemblage","text":"Dans les exemples qui suivront le jeu d'instructions minimaliste utilis\u00e9 (voisin de celui des processeurs ARM ) peut \u00eatre trouv\u00e9 ici . A faire R\u00e9alisez l'activit\u00e9 ci-dessous et dont la version originale peut \u00eatre trouv\u00e9e \u00e0 cette adresse . Afin de mettre en pratique ce que nous avons \u00e9tudi\u00e9 dans le cours 2 \"Architecture des ordinateurs - Mod\u00e8le de von Neumann\", nous allons utiliser un simulateur d\u00e9velopp\u00e9 par Peter L Higginson. Ce simulateur est bas\u00e9 sur une architecture de von Neumann. Nous allons trouver dans ce simulateur : une RAM un CPU Une version en ligne de ce simulateur est disponible ici : http://www.peterhigginson.co.uk/AQA/ Voici ce que vous devriez obtenir en vous rendant \u00e0 l'adresse indiqu\u00e9e ci-dessus : Simulateur d\u00e9velopp\u00e9 par Peter L Higginson Il est relativement facile de distinguer les diff\u00e9rentes parties du simulateur : \u00e0 droite, on trouve la m\u00e9moire vive (\"main memory\") au centre, on trouve le microprocesseur \u00e0 gauche on trouve la zone d'\u00e9dition (\"Assembly Language\"), c'est dans cette zone que nous allons saisir nos programmes en assembleur Revenons sur les parties RAM et CPU","title":"Premiers pas avec un langage d'assemblage"},{"location":"NSI1/S4/S4C1.html","text":"Expressions bool\u00e9ennes \u2693\ufe0e Rep\u00e8res historiques \u2693\ufe0e George Boole George Boole ( 1815-1864 ): math\u00e9maticien, logicien britannique, auteur d'une alg\u00e8bre binaire dite bool\u00e9enne n'acceptant que deux valeurs 0 et 1. Voir ce lien ou celui-ci vers la pr\u00e9sentation de Marie Duflot-Kremer, chercheuse en informatique l'Universit\u00e9 de Lorraine. Aujourd'hui, l'alg\u00e8bre de Boole trouve de nombreuses applications en informatique et dans la conception des circuits \u00e9lectroniques Quelques d\u00e9finitions \u2693\ufe0e Valeur logique (bool\u00e9enne) On appelle valeur logique ou valeur bool\u00e9enne toute valeur not\u00e9e par deux symboles. On peut utiliser par exemple un des couples de valeurs suivants : {0,1}, {vrai, faux}, {true, false} ou {ouvert, ferm\u00e9}. Exemple L'\u00e9tat d'un interrupteur a une valeur bool\u00e9enne, il peut \u00eatre ouvert ou ferm\u00e9 . Variable bool\u00e9enne Une variable bool\u00e9enne ou variable logique est une grandeur repr\u00e9sent\u00e9e par un nom et pouvant prendre des valeurs bool\u00e9ennes. L'alg\u00e8bre de Boole est caract\u00e9ris\u00e9e par la donn\u00e9e: de deux op\u00e9rations binaires or et and ( ou et et en fran\u00e7ais, correspondant respectivement, \u00e0 la somme \"+\" et au produit \".\") d'une op\u00e9ration unaire not ( en fran\u00e7ais non, correspondant au compl\u00e9mentaire \\(\\bar{}\\) ). Ces op\u00e9rations doivent v\u00e9rifier certaines conditions qui ne seront pas expos\u00e9es ici. Remarque En math\u00e9matique on trouve les notations \\(\\lor\\) ( disjonction pour le ou ), \\(\\wedge\\) ( conjonction pour le et ) et \\(\\lnot\\) ( n\u00e9gation ). Expression bool\u00e9enne On appelle expression bool\u00e9enne, l'association de variables bool\u00e9ennes et d'op\u00e9rateur(s) bool\u00e9en(s). Exemple Si \\(a\\) , \\(b\\) et \\(c\\) sont trois variables bool\u00e9ennes, (a and b and not c) or (a and not b and c) est une expression bool\u00e9enne. Remarque L'usage de parenth\u00e8ses am\u00e9liore la lisibilit\u00e9. Table de v\u00e9rit\u00e9 Dresser la table de v\u00e9rit\u00e9 d'une expression bool\u00e9enne signifie construire une table ayant autant de colonnes que de variables d'entr\u00e9e plus une colonne donnant le r\u00e9sultat ( vrai ou faux , 0 ou 1) pour chaque combinaison possible des variables d'entr\u00e9e. Les op\u00e9rations logiques \u00e9l\u00e9mentaires \u2693\ufe0e Les symboles \u2693\ufe0e Les op\u00e9rations logiques sont r\u00e9alis\u00e9es simplement avec des circuits \u00e9lectroniques (\u00e0 base de transistors) appel\u00e9s portes logiques . Voici les symboles des portes logiques utilis\u00e9es pour les op\u00e9rations and , or et not . Symboles La conjonction (\"et logique\") \u2693\ufe0e La conjonction fait appel \u00e0 l'op\u00e9rateur logique and . Elle traduit le fait que deux expressions sont vraies simultan\u00e9ment : a and b est vrai si et seulement si a est vrai et b est vrai aussi. Table de v\u00e9rit\u00e9 a b a and b 0 0 0 0 1 0 1 0 0 1 1 1 La disjonction (\"ou logique\") \u2693\ufe0e La disjonction fait appel \u00e0 l'op\u00e9rateur logique or . Elle traduit le fait qu\u2019 une parmi deux expressions est vraie : a or b est vrai si soit a est vrai, soit b est vrai soit les deux sont vrais. Table de v\u00e9rit\u00e9 a b a or b 0 0 0 0 1 1 1 0 1 1 1 1 La n\u00e9gation (\"non logique\") \u2693\ufe0e La n\u00e9gation fait appel \u00e0 l'op\u00e9rateur logique not . Il permet d'obtenir la valeur inverse d\u2019une valeur bool\u00e9enne. Table de v\u00e9rit\u00e9 a not a 0 1 1 0 Expression bool\u00e9enne en python \u2693\ufe0e Python poss\u00e8de un type de base bool . Les objets de ce type ne peuvent prendre que deux valeurs True ou False . Les op\u00e9rateurs logiques sont not\u00e9s, sans surprise: and , or et not . Exemples 1 2 3 4 5 6 7 a = 6 b = 7 c = 42 print ( '- a == 6:' , a == 6 ) print ( '- a == 7:' , a == 7 ) print ( '- a == 16 and b == 7:' , a == 16 and b == 7 ) print ( '- a == 6 or b == 67:' , a == 6 or b == 67 ) 1 2 3 4 - a == 6: True - a == 7: False - a == 16 and b == 7: False - a == 6 or b == 67: True Important Les expressions contenant les op\u00e9rateurs and et or sont \u00e9valu\u00e9es de mani\u00e8res s\u00e9quentielles . Ainsi, dans une expression du type: x and y , le deuxi\u00e8me argument y est \u00e9valu\u00e9 uniquement si x est vrai; x or y , le deuxi\u00e8me argument y est \u00e9valu\u00e9 uniquement si x est faux. Voir les exemples lignes 6 et 7 ci-dessus.","title":"COURS 1"},{"location":"NSI1/S4/S4C1.html#expressions-booleennes","text":"","title":"Expressions bool\u00e9ennes"},{"location":"NSI1/S4/S4C1.html#reperes-historiques","text":"George Boole George Boole ( 1815-1864 ): math\u00e9maticien, logicien britannique, auteur d'une alg\u00e8bre binaire dite bool\u00e9enne n'acceptant que deux valeurs 0 et 1. Voir ce lien ou celui-ci vers la pr\u00e9sentation de Marie Duflot-Kremer, chercheuse en informatique l'Universit\u00e9 de Lorraine. Aujourd'hui, l'alg\u00e8bre de Boole trouve de nombreuses applications en informatique et dans la conception des circuits \u00e9lectroniques","title":"Rep\u00e8res historiques"},{"location":"NSI1/S4/S4C1.html#quelques-definitions","text":"Valeur logique (bool\u00e9enne) On appelle valeur logique ou valeur bool\u00e9enne toute valeur not\u00e9e par deux symboles. On peut utiliser par exemple un des couples de valeurs suivants : {0,1}, {vrai, faux}, {true, false} ou {ouvert, ferm\u00e9}. Exemple L'\u00e9tat d'un interrupteur a une valeur bool\u00e9enne, il peut \u00eatre ouvert ou ferm\u00e9 . Variable bool\u00e9enne Une variable bool\u00e9enne ou variable logique est une grandeur repr\u00e9sent\u00e9e par un nom et pouvant prendre des valeurs bool\u00e9ennes. L'alg\u00e8bre de Boole est caract\u00e9ris\u00e9e par la donn\u00e9e: de deux op\u00e9rations binaires or et and ( ou et et en fran\u00e7ais, correspondant respectivement, \u00e0 la somme \"+\" et au produit \".\") d'une op\u00e9ration unaire not ( en fran\u00e7ais non, correspondant au compl\u00e9mentaire \\(\\bar{}\\) ). Ces op\u00e9rations doivent v\u00e9rifier certaines conditions qui ne seront pas expos\u00e9es ici. Remarque En math\u00e9matique on trouve les notations \\(\\lor\\) ( disjonction pour le ou ), \\(\\wedge\\) ( conjonction pour le et ) et \\(\\lnot\\) ( n\u00e9gation ). Expression bool\u00e9enne On appelle expression bool\u00e9enne, l'association de variables bool\u00e9ennes et d'op\u00e9rateur(s) bool\u00e9en(s). Exemple Si \\(a\\) , \\(b\\) et \\(c\\) sont trois variables bool\u00e9ennes, (a and b and not c) or (a and not b and c) est une expression bool\u00e9enne. Remarque L'usage de parenth\u00e8ses am\u00e9liore la lisibilit\u00e9. Table de v\u00e9rit\u00e9 Dresser la table de v\u00e9rit\u00e9 d'une expression bool\u00e9enne signifie construire une table ayant autant de colonnes que de variables d'entr\u00e9e plus une colonne donnant le r\u00e9sultat ( vrai ou faux , 0 ou 1) pour chaque combinaison possible des variables d'entr\u00e9e.","title":"Quelques d\u00e9finitions"},{"location":"NSI1/S4/S4C1.html#les-operations-logiques-elementaires","text":"","title":"Les op\u00e9rations logiques \u00e9l\u00e9mentaires"},{"location":"NSI1/S4/S4C1.html#expression-booleenne-en-python","text":"Python poss\u00e8de un type de base bool . Les objets de ce type ne peuvent prendre que deux valeurs True ou False . Les op\u00e9rateurs logiques sont not\u00e9s, sans surprise: and , or et not . Exemples 1 2 3 4 5 6 7 a = 6 b = 7 c = 42 print ( '- a == 6:' , a == 6 ) print ( '- a == 7:' , a == 7 ) print ( '- a == 16 and b == 7:' , a == 16 and b == 7 ) print ( '- a == 6 or b == 67:' , a == 6 or b == 67 ) 1 2 3 4 - a == 6: True - a == 7: False - a == 16 and b == 7: False - a == 6 or b == 67: True Important Les expressions contenant les op\u00e9rateurs and et or sont \u00e9valu\u00e9es de mani\u00e8res s\u00e9quentielles . Ainsi, dans une expression du type: x and y , le deuxi\u00e8me argument y est \u00e9valu\u00e9 uniquement si x est vrai; x or y , le deuxi\u00e8me argument y est \u00e9valu\u00e9 uniquement si x est faux. Voir les exemples lignes 6 et 7 ci-dessus.","title":"Expression bool\u00e9enne en python"},{"location":"NSI1/S4/S4C2.html","text":"ARCHITECTURE DES ORDINATEURS - MODELE DE VON NEUMANN \u2693\ufe0e Ce cours comporte deux niveaux de lecture. Un premier niveau que l'on peut qualifi\u00e9 de normal et accessible \u00e0 un \u00e9l\u00e8ve de 1re sp\u00e9cialit\u00e9 NSI et un second niveau plus complet o\u00f9 apparaissent des d\u00e9tails (non exigibles \u00e0 l'\u00e9valuation) et rep\u00e9r\u00e9 par la mention \"En compl\u00e9ment\" Rep\u00e8res historiques \u2693\ufe0e L\u2019objet conceptuel. . . \u2693\ufe0e En 1936, Alan Turing - un des plus brillants math\u00e9maticiens du XX e si\u00e8cle - d\u00e9crit une machine abstraite pour donner un support formel aux notions d\u2019algorithme et de calcul : la fameuse \u00abmachine de Turing\u00bb. Tout algorithme (proc\u00e9d\u00e9 syst\u00e9matique de calcul) peut \u00eatre r\u00e9alis\u00e9 par une machine de Turing. En compl\u00e9ment Il s\u2019agit d\u2019un automate imaginaire muni d\u2019un programme (sous la forme d\u2019une table de transition entre \u00e9tats) et pouvant lire et \u00e9crire des caract\u00e8res sur un ruban de longueur illimit\u00e9e. Le coup de g\u00e9nie de Turing est de d\u00e9montrer l\u2019existence d\u2019une Machine Universelle : si on fournit \u00e0 cette derni\u00e8re la table de transition d\u2019une machine de Turing particuli\u00e8re, autrement dit le programme d\u2019un algorithme, elle est capable de reproduire le fonctionnement de cette machine, donc d\u2019ex\u00e9cuter le programme en question ! On peut \u00e9galement consulter l'article sur interstices Au mod\u00e8le d\u2019architecture de von Neumann \u2693\ufe0e En 1945, John von Neumann (1903-1957), math\u00e9maticien am\u00e9ricano-hongrois qui avait d\u00e9j\u00e0 rencontr\u00e9 Alan Turing et qui connaissait ses travaux, publia un rapport dans lequel il d\u00e9finit le mod\u00e8le de l\u2019ordinateur \u00e0 \u00abprogramme enregistr\u00e9\u00bb. La m\u00e9moire de l'ordinateur contient \u00e0 la fois les programmes et les donn\u00e9es ! Mod\u00e8le d'architecture s\u00e9quentielle ou mod\u00e8le de von Neumann \u2693\ufe0e Un des grands points faibles du premier calculateur \u00e9lectronique l\u2019 ENIAC \u00e9tait le fait que les donn\u00e9es \u00e9taient lues sur cartes perfor\u00e9es, alors que le programme \u00e9tait repr\u00e9sent\u00e9 sur un support externe , sous la forme d\u2019un panneau de connexion analogue \u00e0 celui d\u2019un standard t\u00e9l\u00e9phonique. L\u2019id\u00e9e fondamentale de John von Neumann a \u00e9t\u00e9 de stocker les donn\u00e9es et les instructions des programmes en m\u00e9moire centrale . Les composants essentiels \u2693\ufe0e En juin 1945 dans la premi\u00e8re version du rapport sur la conception de l'EDVAC John von Neumann d\u00e9crit un sch\u00e9ma d'architecture d'un calculateur organis\u00e9 autour des \u00e9l\u00e9ments suivants: une unit\u00e9 centrale ou processeur (on dit aussi CPU pour Central Processing Unit), form\u00e9e d\u2019une unit\u00e9 arithm\u00e9tique et logique ( UAL ) et d\u2019une unit\u00e9 de commande ( Control Unit ); la m\u00e9moire ; des unit\u00e9s d'entr\u00e9e/sortie qui permettent de communiquer avec l'ext\u00e9rieur. Ces \u00e9l\u00e9ments \u00e9tant reli\u00e9s entre eux par des bus . L'unit\u00e9 arithm\u00e9tique et logique (UAL) \u2693\ufe0e Elle est charg\u00e9e d'effectuer le traitements des op\u00e9rations arithm\u00e9tiques ou bool\u00e9ennes. En compl\u00e9ment L'UAL r\u00e9alise: les addition, multiplication, soustraction, division; les op\u00e9rations logiques ET, OU et NON; les d\u00e9calages de bits dans des registres ; Elle est entour\u00e9e g\u00e9n\u00e9ralement de registres de donn\u00e9es (m\u00e9moires rapides) et d'un accumulateur qui accueille les op\u00e9randes des op\u00e9rations ou le r\u00e9sultat. L'unit\u00e9 de commande ou unit\u00e9 de contr\u00f4le \u2693\ufe0e Elle est charg\u00e9e de coordonner les \u00e9changes dans les transferts entre la m\u00e9moire, les diff\u00e9rents registres et l'UAL. En compl\u00e9ment Elle joue ainsi un r\u00f4le essentiel dans le cycle de fonctionnement du processeur, c'est-\u00e0-dire pendant les phases: de r\u00e9cup\u00e9ration d'instruction en m\u00e9moire; de d\u00e9codage d'instruction; d'ex\u00e9cution d'instruction. Pour les plus curieux voir la vid\u00e9o suivante d\u00e9crivant le processus Fetch-Decode-Execute qu'un processeur effectue en permanence. Les m\u00e9moires \u2693\ufe0e Le r\u00f4le des m\u00e9moires est d'enregistrer les programmes et les donn\u00e9es pouvant \u00eatre execut\u00e9es par le microprocesseur. En compl\u00e9ment On peut classer les m\u00e9moires en deux grandes cat\u00e9gories: les m\u00e9moires de travail; les m\u00e9moires de stockage. Les registres sont des m\u00e9moires internes au microprocesseur. Ils sont tr\u00e8s rapides et en nombre limit\u00e9. La m\u00e9moire cache est un interm\u00e9diaire entre une unit\u00e9 du microprocesseur et la RAM. Elle stocke des donn\u00e9es provenant de celle-ci et permet ainsi d'acc\u00e9l\u00e9rer leurs traitements. Les m\u00e9moires vives ou RAM ( Random Access Memory ) permettent des op\u00e9rations de lecture et d'\u00e9criture. Elles sont volatiles. Les m\u00e9moires accessibles uniquement en lecture sont connues sous le nom de ROM ( Read Only Memory ). Les m\u00e9moires de stockage (ou m\u00e9moire de masse ) se pr\u00e9sentent souvent sous la forme de disque. M\u00eame si la fonction est la m\u00eame ( m\u00e9morisation de l'information ), toutes ces m\u00e9moires ont des caract\u00e9ristiques diff\u00e9rentes. Les entr\u00e9es-sorties \u2693\ufe0e Les p\u00e9riph\u00e9riques d\u2019entr\u00e9e-sortie permettent \u00e0 l\u2019ordinateur de communiquer avec l\u2019homme ou d\u2019autres machines. Ils \u00e9taient initialement command\u00e9s par l\u2019unit\u00e9 centrale. Depuis le d\u00e9but des ann\u00e9es 1960 ils sont sous le contr\u00f4le de processeurs autonomes. En compl\u00e9ment Exemple de fonctionnement d\u2019un p\u00e9riph\u00e9rique d\u2019entr\u00e9e-sortie : le disque dur. Supposons que l\u2019unit\u00e9 centrale veuille lire un bloc sur le disque dur. Les principales \u00e9tapes sont les suivantes: l\u2019unit\u00e9 centrale formule cette demande en \u00e9crivant \u00e0 l\u2019adresse m\u00e9moire du contr\u00f4leur de disque; le contr\u00f4leur de disque se charge d\u2019\u00e9crire directement en m\u00e9moire les octets lus depuis le disque; le contr\u00f4leur de disque signale la fin de la lecture sur le disque par le biais d\u2019un m\u00e9canisme d\u2019interruption (non abord\u00e9 ici) ; l\u2019unit\u00e9 centrale execute la routine d\u2019interruption puis reprend le flot d\u2019instructions o\u00f9 il a \u00e9t\u00e9 interrompu. Les bus \u2693\ufe0e Les diff\u00e9rentes unit\u00e9s sont interconnect\u00e9es par des syst\u00e8mes de c\u00e2blage appel\u00e9 bus. Autour du processeur on trouve: le bus d'adresse (unidirectionnel); le bus de donn\u00e9es (bidirectionnel); le bus de contr\u00f4le (bidirectionnel). En compl\u00e9ment Les ordinateurs r\u00e9cents poss\u00e8dent d'autres types de bus rep\u00e9r\u00e9s en trait \u00e9pais bleu sur la figure ci- dessous. Qu'en est-il aujourd'hui ? \u2693\ufe0e Presque 75 ans apr\u00e8s sa pr\u00e9sentation le mod\u00e8le d'architecture de Von Neumann est toujours valable. Cependant, les diff\u00e9rences de vitesse entre le processeur et la m\u00e9moire ont conduit les fabricants d'ordinateur \u00e0 intercaler des m\u00e9moires caches tr\u00e8s rapides entre la m\u00e9moire centrale et le processeur. Par ailleurs, les ordinateurs actuels comportent plusieurs processeurs (on dit aussi plusieurs \"coeurs\") int\u00e9gr\u00e9s sur une m\u00eame puce. Cette tendance au \"parall\u00e9lisme\" dans le traitement et la circulation des informations a conduit \u00e0 une augmentation de la puissance de calcul sans augmenter la fr\u00e9quence des processeurs individuels. Enfin, une diff\u00e9rence, peu significative, par rapport au mod\u00e8le original est que les dispositifs d'entr\u00e9es/sorties peuvent communiquer avec la m\u00e9moire par le biais de contr\u00f4leur d\u00e9di\u00e9 ( DMA ). Si bien que le sch\u00e9ma actuel serait plut\u00f4t le suivant: En compl\u00e9ment Alternative: architecture de Harvard Dans le mod\u00e8le d'architecture de Harvard les instructions et les donn\u00e9es sont situ\u00e9es dans des m\u00e9moires diff\u00e9rentes et sont v\u00e9hicul\u00e9s sur des bus ind\u00e9pendants. La vitesse d'execution est de fait am\u00e9lior\u00e9e car en un seul cycle d'horloge on peut r\u00e9cup\u00e9rer les donn\u00e9es et le code instruction. L'architecture de Harvard se retrouve beaucoup dans les syst\u00e8mes embarqu\u00e9s.","title":"COURS 2"},{"location":"NSI1/S4/S4C2.html#architecture-des-ordinateurs-modele-de-von-neumann","text":"Ce cours comporte deux niveaux de lecture. Un premier niveau que l'on peut qualifi\u00e9 de normal et accessible \u00e0 un \u00e9l\u00e8ve de 1re sp\u00e9cialit\u00e9 NSI et un second niveau plus complet o\u00f9 apparaissent des d\u00e9tails (non exigibles \u00e0 l'\u00e9valuation) et rep\u00e9r\u00e9 par la mention \"En compl\u00e9ment\"","title":"ARCHITECTURE DES ORDINATEURS - MODELE DE VON NEUMANN"},{"location":"NSI1/S4/S4C2.html#reperes-historiques","text":"","title":"Rep\u00e8res historiques"},{"location":"NSI1/S4/S4C2.html#modele-darchitecture-sequentielle-ou-modele-de-von-neumann","text":"Un des grands points faibles du premier calculateur \u00e9lectronique l\u2019 ENIAC \u00e9tait le fait que les donn\u00e9es \u00e9taient lues sur cartes perfor\u00e9es, alors que le programme \u00e9tait repr\u00e9sent\u00e9 sur un support externe , sous la forme d\u2019un panneau de connexion analogue \u00e0 celui d\u2019un standard t\u00e9l\u00e9phonique. L\u2019id\u00e9e fondamentale de John von Neumann a \u00e9t\u00e9 de stocker les donn\u00e9es et les instructions des programmes en m\u00e9moire centrale .","title":"Mod\u00e8le d'architecture s\u00e9quentielle ou mod\u00e8le de von Neumann"},{"location":"NSI1/S4/S4C2.html#quen-est-il-aujourdhui","text":"Presque 75 ans apr\u00e8s sa pr\u00e9sentation le mod\u00e8le d'architecture de Von Neumann est toujours valable. Cependant, les diff\u00e9rences de vitesse entre le processeur et la m\u00e9moire ont conduit les fabricants d'ordinateur \u00e0 intercaler des m\u00e9moires caches tr\u00e8s rapides entre la m\u00e9moire centrale et le processeur. Par ailleurs, les ordinateurs actuels comportent plusieurs processeurs (on dit aussi plusieurs \"coeurs\") int\u00e9gr\u00e9s sur une m\u00eame puce. Cette tendance au \"parall\u00e9lisme\" dans le traitement et la circulation des informations a conduit \u00e0 une augmentation de la puissance de calcul sans augmenter la fr\u00e9quence des processeurs individuels. Enfin, une diff\u00e9rence, peu significative, par rapport au mod\u00e8le original est que les dispositifs d'entr\u00e9es/sorties peuvent communiquer avec la m\u00e9moire par le biais de contr\u00f4leur d\u00e9di\u00e9 ( DMA ). Si bien que le sch\u00e9ma actuel serait plut\u00f4t le suivant: En compl\u00e9ment Alternative: architecture de Harvard Dans le mod\u00e8le d'architecture de Harvard les instructions et les donn\u00e9es sont situ\u00e9es dans des m\u00e9moires diff\u00e9rentes et sont v\u00e9hicul\u00e9s sur des bus ind\u00e9pendants. La vitesse d'execution est de fait am\u00e9lior\u00e9e car en un seul cycle d'horloge on peut r\u00e9cup\u00e9rer les donn\u00e9es et le code instruction. L'architecture de Harvard se retrouve beaucoup dans les syst\u00e8mes embarqu\u00e9s.","title":"Qu'en est-il aujourd'hui ?"},{"location":"NSI1/S4/S4E1.html","text":"Exercices de logique bool\u00e9enne en python \u2693\ufe0e L'op\u00e9rateur XOR \u2693\ufe0e En s'appuyant sur une simulation r\u00e9alis\u00e9e dans l'activit\u00e9 1 ( Dilemme ) \u00e9crire une fonction python xor qui prend en param\u00e8tre deux variables bool\u00e9ennes a et b et qui renvoie le r\u00e9sultat de a xor b . V\u00e9rifier l'\u00e9galit\u00e9 a xor b = (a and not b) or ((not a) and b) en utilisant une assertion. 1 2 3 4 5 6 def xor ( a , b ): \"\"\" renvoie a xor b a,b : variables bool\u00e9ennes \"\"\" pass 1 2 # Question 2 - d\u00e9commentez et compl\u00e9tez #assert ... L'op\u00e9rateur logique NAND \u2693\ufe0e Ecrire une fonction python nand ( pour not and ) qui prend en param\u00e8tres deux variables bool\u00e9ennes a et b et qui renvoie le r\u00e9sultat de a nand b . Ecrire la table de v\u00e9rit\u00e9. Comparer les expressions suivantes: nand(a,a) et not a ; nand(nand(a, b), nand(a, b)) et a and b ; nand(nand(a, a), nand(b, b)) et a or b 1 1 2 3 4 5 6 7 # Question 1 def nand ( a , b ): \"\"\" renvoie a nand b a,b: variables bool\u00e9ennes \"\"\" pass Question 2 1 # Question 3 L'op\u00e9rateur logique NOR \u2693\ufe0e Ecrire une fonction python nor ( pour not or ) qui prend en param\u00e8tres deux variables bool\u00e9ennes a et b et qui renvoie le r\u00e9sultat de a nor b . Ecrire la table de v\u00e9rit\u00e9. Comparer les expressions suivantes: nor(a,a) et not a ; nor(nor(a, b), nor(a, b)) et a or b ; nor(nor(a, a), nor(b, b)) et a and b 1 2 3 4 5 6 7 # Question 1 def nor ( a , b ): \"\"\" renvoie a nor b a,b: variables bool\u00e9ennes \"\"\" pass Question 2 1 # Question 3","title":"Exercices"},{"location":"NSI1/S4/S4E1.html#exercices-de-logique-booleenne-en-python","text":"","title":"Exercices de logique bool\u00e9enne en python"},{"location":"NSI1/S4/S4E1.html#loperateur-xor","text":"En s'appuyant sur une simulation r\u00e9alis\u00e9e dans l'activit\u00e9 1 ( Dilemme ) \u00e9crire une fonction python xor qui prend en param\u00e8tre deux variables bool\u00e9ennes a et b et qui renvoie le r\u00e9sultat de a xor b . V\u00e9rifier l'\u00e9galit\u00e9 a xor b = (a and not b) or ((not a) and b) en utilisant une assertion. 1 2 3 4 5 6 def xor ( a , b ): \"\"\" renvoie a xor b a,b : variables bool\u00e9ennes \"\"\" pass 1 2 # Question 2 - d\u00e9commentez et compl\u00e9tez #assert ...","title":"L'op\u00e9rateur XOR"},{"location":"NSI1/S4/S4E1.html#loperateur-logique-nand","text":"Ecrire une fonction python nand ( pour not and ) qui prend en param\u00e8tres deux variables bool\u00e9ennes a et b et qui renvoie le r\u00e9sultat de a nand b . Ecrire la table de v\u00e9rit\u00e9. Comparer les expressions suivantes: nand(a,a) et not a ; nand(nand(a, b), nand(a, b)) et a and b ; nand(nand(a, a), nand(b, b)) et a or b 1 1 2 3 4 5 6 7 # Question 1 def nand ( a , b ): \"\"\" renvoie a nand b a,b: variables bool\u00e9ennes \"\"\" pass Question 2 1 # Question 3","title":"L'op\u00e9rateur logique NAND"},{"location":"NSI1/S4/S4E1.html#loperateur-logique-nor","text":"Ecrire une fonction python nor ( pour not or ) qui prend en param\u00e8tres deux variables bool\u00e9ennes a et b et qui renvoie le r\u00e9sultat de a nor b . Ecrire la table de v\u00e9rit\u00e9. Comparer les expressions suivantes: nor(a,a) et not a ; nor(nor(a, b), nor(a, b)) et a or b ; nor(nor(a, a), nor(b, b)) et a and b 1 2 3 4 5 6 7 # Question 1 def nor ( a , b ): \"\"\" renvoie a nor b a,b: variables bool\u00e9ennes \"\"\" pass Question 2 1 # Question 3","title":"L'op\u00e9rateur logique NOR"},{"location":"NSI1/S4/S4R1.html","text":"Ce qu\u2019il faut savoir \u2693\ufe0e Logique bool\u00e9enne \u2693\ufe0e un ordinateur ne connait que 2 \u00e9tats (0/1 ou vrai/faux), un ordinateur travaille donc en binaire les op\u00e9rateurs logiques essentiels sont les op\u00e9rateurs not , or et and . \u00e0 chaque op\u00e9rateur logique est associ\u00e9 une table de v\u00e9rit\u00e9 (vous devez conna\u00eetre ces tables) en combinant les op\u00e9rations logiques, on obtient des circuits plus complexes (exemple: l'additionneur). le langage Python permet de manipuler les expressions bool\u00e9ennes; ne pas oublier le caract\u00e8re s\u00e9quentiel de leur \u00e9valuation. Les composants essentiels d\u2019un ordinateur \u2693\ufe0e La m\u00e9moire (vive ou RAM pour Random Access Memory): la m\u00e9moire vive permet de stocker des donn\u00e9es et des programmes. Le processeur ou CPU (Central Processing Unit) qui ex\u00e9cute les instructions extraites de la m\u00e9moire. Il est compos\u00e9 des 3 \u00e9l\u00e9ments suivants: les registres permettent de m\u00e9moriser de l'information (donn\u00e9e ou instruction) au sein m\u00eame du CPU. Leur nombre et leur taille sont variables en fonction du type de microprocesseur. L'unit\u00e9 arithm\u00e9tique et logique ( UAL ) est charg\u00e9e de l'ex\u00e9cution de tous les calculs. L'UAL stocke le r\u00e9sultat des calculs dans l'accumulateur. L'unit\u00e9 de commande permet de coordonner les \u00e9changes entre m\u00e9moire et registres ou UAL. Les dispositifs d'entr\u00e9e/sortie qui permettent de communiquer avec le monde ext\u00e9rieur. Le bus qui permettent la communication entre les divers composants. Architecture de von Neumann \u2693\ufe0e John von Neumann (math\u00e9maticien et physicien am\u00e9ricano-hongrois 1903-1957) proposa en 1945 un mod\u00e8le o\u00f9 donn\u00e9es et programmes seraient stock\u00e9es en m\u00e9moire. Voici un sch\u00e9ma, \u00e0 conna\u00eetre, qui repr\u00e9sente ce mod\u00e8le de von Neumann : Les ordinateurs actuels continuent de se baser sur l'architecture de von Neumann. Pendant tr\u00e8s longtemps les constructeurs ont cherch\u00e9 \u00e0 augmenter la fr\u00e9quence d\u2019horloge des CPU afin d\u2019am\u00e9liorer les performances, aujourd\u2019hui la tendance est plut\u00f4t \u00e0 l\u2019augmentation du nombre de coeurs Ce qu\u2019il faut savoir faire \u2693\ufe0e Vous devez \u00eatre capable d\u2019\u00e9crire et de lire (et comprendre) des programmes simples en assembleur (en ayant en votre possession l\u2019aide m\u00e9moire sur l\u2019assembleur)","title":"En r\u00e9sum\u00e9"},{"location":"NSI1/S4/S4R1.html#ce-quil-faut-savoir","text":"","title":"Ce qu\u2019il faut savoir"},{"location":"NSI1/S4/S4TP1.html","text":"Impl\u00e9mentation d'un additionneur complet en python \u2693\ufe0e A faire Prendre absolument connaissance des documents 1 et 2 avant de r\u00e9pondre aux questions. Ne pas h\u00e9siter \u00e0 ex\u00e9cuter les exemples fournis dans les diverses cellules. Document 1: notation des \u00e9lectroniciens \u2693\ufe0e On rappelle le sch\u00e9ma d'un additionneur complet, vu dans l'activit\u00e9 1: En logique \u00e9lectronique, il est commun de noter les op\u00e9rations logiques et et ou respectivement . et + . Quant \u00e0 la n\u00e9gation non , on la repr\u00e9sente avec une barre au dessus de la variable. Ainsi, l'expression bool\u00e9enne de la sortie \\(S_i\\) de l'additionneur complet est \\[S_i=(\\overline{A_i} \\cdot \\overline{B_i} \\cdot R_{i-1}) + (\\overline{A_i} \\cdot B_i \\cdot \\overline{R_{i-1}}) + (A_i \\cdot \\overline{B_i} \\cdot \\overline{R_{i-1}}) + (A_i \\cdot B_i \\cdot R_{i-1})\\] Celle de la retenue est: \\[R_i=(A_i \\cdot R_{i-1}) + (A_i \\cdot B_i) + (B_i \\cdot R_{i-1})\\] Document 2: connaissances du langage \u2693\ufe0e Le type bool\u00e9en \u2693\ufe0e En python, les op\u00e9rateurs bool\u00e9ens sont nomm\u00e9s and , or et not . Ainsi l'expression bool\u00e9enne \\(\\overline{A}\\cdot(B+\\overline{C})\\) se traduit en python par: 1 not A and ( B or not C ) Par ailleurs, Python poss\u00e8de un type bool\u00e9en nomm\u00e9 bool . Les valeurs bool\u00e9enne vrai et faux ou 1 et 0 se notent True et False . Voir ci-dessous. 1 2 3 print ( type ( False )) A = False print ( not A ) 1 2 B = True print ( A or B ) Python associe les valeurs bool\u00e9ennes True et False \u00e0 1 et 0 respectivement. 1 2 3 4 A = True B = False print ( A == 1 ) print ( B == 0 ) Le type cha\u00eene de caract\u00e8res \u2693\ufe0e Python poss\u00e8de un type natif pour traiter les cha\u00eenes de caract\u00e8res: le type string str . Une cha\u00eene de carat\u00e8res est d\u00e9clar\u00e9e en \u00e9tant entour\u00e9e de double quotes \" ou simple quote ' . 1 ch = \"bonjour\" On peut acc\u00e9der aux caract\u00e8res individuellement avec une notation index\u00e9e entre crochet [ ] . index 0 1 2 3 4 5 6 ch 'b' 'o' 'n' 'j' 'o' 'u' 'r' 1 2 3 ch = \"bonjour\" print ( ch [ 0 ]) print ( ch [ 3 ]) Comprendre une fonction \u2693\ufe0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def addb ( n , a , b ): \"\"\" Renvoie .... On suppose que a et b sont des chaines constitu\u00e9s des caract\u00e8res appartenant \u00e0 {'0','1'}; n est un entier naturel sup\u00e9rieur \u00e0 z\u00e9ro. \"\"\" ri_1 = False res = \"\" for i in range ( n - 1 , - 1 , - 1 ): ai = int ( a [ i ]) bi = int ( b [ i ]) si = ( not ai and not bi and ri_1 ) or ( not ai and bi and not ri_1 ) or \\ ( ai and not bi and not ri_1 ) or ( ai and bi and ri_1 ) ri_1 = ( ai and ri_1 ) or ( ai and bi ) or ( bi and ri_1 ) res = str ( int ( si )) + res if ri_1 : res = '1' + res return res 1 addb ( 8 , '11111111' , '00000001' ) Consulter la documentation officielle de python sur la fonction range afin de comprendre la construction qui apparait \u00e0 la ligne 9. Les sp\u00e9cifications \u00e9tant incompl\u00e8tes, expliquer ce que r\u00e9alise cette fonction en \u00e9tudiant le code fourni ainsi que les documents 1 & 2. V\u00e9rifier vos hypoth\u00e8ses avec quelques tests; par exemple: addb(4,'0001','0001') addb(8,'11111111','00000001') Quelle est l'utilit\u00e9 du test ligne 16 ? Un circuit important: le multiplexeur \u2693\ufe0e Le multiplexeur est un circuit logique tr\u00e8s important en architecture machine. Il permet de s\u00e9lectionner une entr\u00e9e parmi \\(N\\) et de transf\u00e9rer sa valeur sur la sortie. La s\u00e9lection se fait \u00e0 l'aide d'une entr\u00e9e Select . Principe \u2693\ufe0e La figure ci-dessous pr\u00e9sente le sch\u00e9ma de principe d'un multiplexeur \u00e0 4 entr\u00e9es \\(A_0 ... A_3\\) que vous pouvez tester avec le fichier mux1.dig . Sa r\u00e9alisation avec les portes logiques \u00e9l\u00e9mentaires: Simulation \u2693\ufe0e Ouvrir le fichier mux2.dig et passer en mode simulation. Quelle op\u00e9ration logique effectuent les 4 circuits \u00e0 3 entr\u00e9es, visibles sur la r\u00e9alisation ci-dessus? Quelles valeurs logiques doit-on porter les entr\u00e9es de ces circuits si on veut obtenir un 1 logique sur leur sortie? On souhaite s\u00e9lectionner la deuxi\u00e8me entr\u00e9e (en d'autres termes \\(S\\) doit recopier \\(A_1\\) ), quelle valeur logique doit-on affecter \u00e0 \\(Select_0\\) et \\(Select_1\\) ? R\u00e9aliser la s\u00e9lection pr\u00e9c\u00e9dente sur le simulateur. Entrer la combinaison \\((1,1,0,0)\\) pour \\((A_0,A_1,A_2,A_3)\\) . Que vaut \\(S\\) ? Expliquer. Garder la m\u00eame s\u00e9lection pour \\(Select_0\\) et \\(Select_1\\) . Donner une autre combinaison qui conduit \u00e0 \\(S=1\\) . Expliquer. 1","title":"TP 1"},{"location":"NSI1/S4/S4TP1.html#implementation-dun-additionneur-complet-en-python","text":"A faire Prendre absolument connaissance des documents 1 et 2 avant de r\u00e9pondre aux questions. Ne pas h\u00e9siter \u00e0 ex\u00e9cuter les exemples fournis dans les diverses cellules.","title":"Impl\u00e9mentation d'un additionneur complet en python"},{"location":"NSI1/S4/S4TP1.html#comprendre-une-fonction","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def addb ( n , a , b ): \"\"\" Renvoie .... On suppose que a et b sont des chaines constitu\u00e9s des caract\u00e8res appartenant \u00e0 {'0','1'}; n est un entier naturel sup\u00e9rieur \u00e0 z\u00e9ro. \"\"\" ri_1 = False res = \"\" for i in range ( n - 1 , - 1 , - 1 ): ai = int ( a [ i ]) bi = int ( b [ i ]) si = ( not ai and not bi and ri_1 ) or ( not ai and bi and not ri_1 ) or \\ ( ai and not bi and not ri_1 ) or ( ai and bi and ri_1 ) ri_1 = ( ai and ri_1 ) or ( ai and bi ) or ( bi and ri_1 ) res = str ( int ( si )) + res if ri_1 : res = '1' + res return res 1 addb ( 8 , '11111111' , '00000001' ) Consulter la documentation officielle de python sur la fonction range afin de comprendre la construction qui apparait \u00e0 la ligne 9. Les sp\u00e9cifications \u00e9tant incompl\u00e8tes, expliquer ce que r\u00e9alise cette fonction en \u00e9tudiant le code fourni ainsi que les documents 1 & 2. V\u00e9rifier vos hypoth\u00e8ses avec quelques tests; par exemple: addb(4,'0001','0001') addb(8,'11111111','00000001') Quelle est l'utilit\u00e9 du test ligne 16 ?","title":"Comprendre une fonction"},{"location":"NSI1/S4/S4TP1.html#un-circuit-important-le-multiplexeur","text":"Le multiplexeur est un circuit logique tr\u00e8s important en architecture machine. Il permet de s\u00e9lectionner une entr\u00e9e parmi \\(N\\) et de transf\u00e9rer sa valeur sur la sortie. La s\u00e9lection se fait \u00e0 l'aide d'une entr\u00e9e Select .","title":"Un circuit important: le multiplexeur"},{"location":"NSI1/S5/S5A1.html","text":"S\u00e9quence 5 - Activit\u00e9 1: le codage des caract\u00e8res \u2693\ufe0e En recherchant un extrait du \u00ab Seigneur des anneaux \u00bb sur Internet avec un navigateur mal configur\u00e9, nous sommes tomb\u00e9s sur une page web, dont le contenu est reproduit ci-dessous. Les anneaux de pouvoir (au nombre de 20) sont d'abord d\u00c3\u00a9crits au d\u00c3\u00a9but de la Communaut\u00c3\u00a9 de l'Anneau dans un po\u00c3\u00a8me, connu depuis longtemps des Elfes, \u00c3\u00a9nonc\u00c3\u00a9 par Gandalf \u00c3 Frodon Sacquet. Trois anneaux pour les rois Elfes sous le ciel, Sept pour les seigneurs Nains dans leurs demeures de pierre, Neuf pour les Hommes, mortels destin\u00c3\u00a9s au tr\u00c3\u00a9pas, Un pour le Seigneur T\u00c3\u00a9n\u00c3\u00a9breux sur son sombre tr\u00c3\u00b4ne, Dans le Pays de Mordor o\u00c3\u00b9 s'\u00c3\u00a9tendent les Ombres. Un anneau pour les gouverner tous. Un anneau pour les trouver, Un anneau pour les amener tous et dans les t\u00c3\u00a9n\u00c3\u00a8bres les lier, Au Pays de Mordor o\u00c3\u00b9 s'\u00c3\u00a9tendent les Ombres. Analyser Expliquer la situation. Pr\u00e9ciser quel type de lettres pose probl\u00e8me. Le code ASCII \u2693\ufe0e Le code ASCII ( A merican S tandard C ode for I nformation I nterchange), d\u00e9fini aux Etats-Unis en 1963, est bas\u00e9 sur un tableau contenant les caract\u00e8res les plus utilis\u00e9s en langue anglaise. Chaque caract\u00e8re est repr\u00e9sent\u00e9 par un nombre \u00e9crit sur 7 bits (ce qui donne \\(2^7=128\\) combinaisons possibles). Table de codes ascii (en hexad\u00e9cimal) Analyser et r\u00e9utiliser des solutions Coder, \u00e0 l'aide de la table ci-dessus, la phrase suivante : La compagnie de l\u2019anneau . Retrouver le texte correspondant au code ASCII suivant : (46 72 6F 64 6F 6E 20 6C 65 20 48 6F 62 62 69 74). Justifier, pourquoi il n'est pas possible de coder correctement le texte Mon pr\u00e9cieux \u00e0 l'aide du code ASCII. La norme ISO 8859-1 (latin 1) \u2693\ufe0e La n\u00e9cessit\u00e9 de repr\u00e9senter des caract\u00e8res non pr\u00e9sents dans la table ASCII tels que ceux de l\u2019alphabet latin comme le \u00ab\u00e0\u00bb, le \u00ab\u00e9\u00bb, \u00ab\u00e7\u00bb ... impose l\u2019utilisation d\u2019un autre code. Ces codes sont des extensions du code ASCII. Pour cela le 8\u00e8me bit est utilis\u00e9 ce qui permet de coder 256 caract\u00e8res (128 caract\u00e8res suppl\u00e9mentaire par rapport au code ASCII de base). On parle de code ASCII \u00e9tendu. Les tables ascii \u00e9tendu sont souvent pr\u00e9sent\u00e9s sous la forme de tableau \u00e0 double entr\u00e9es. L\u2019ISO, organisation internationale de normalisation, propose plusieurs variantes de ce code, adapt\u00e9e aux diff\u00e9rentes langues. Nous utilisons la norme ISO-8859-1 nomm\u00e9e aussi ISO-Latin1. R\u00e9utiliser des solutions Coder le texte Mon pr\u00e9cieux en utilisant la table \u00ab ASCII \u00e9tendu \u00bb pr\u00e9c\u00e9dente. La norme ISO 10646 (Unicode) \u2693\ufe0e Pr\u00e9sentation \u2693\ufe0e La g\u00e9n\u00e9ralisation de l\u2019utilisation d\u2019Internet dans le monde a ainsi n\u00e9cessit\u00e9 une prise en compte d\u2019un nombre beaucoup plus important de caract\u00e8res. Ce que permet la norme Unicode qui \u00e9tablit une correspondance unique caract\u00e8re - code num\u00e9rique (on dit aussi charset en anglais). Le r\u00e9pertoire Unicode peut contenir plus d'un million de caract\u00e8res. Unicode d\u00e9finit des m\u00e9thodes standardis\u00e9es pour coder et stocker cet index sous forme de s\u00e9quence d'octets : UTF-8, UTF-16, UTF-32 et leurs diff\u00e9rentes variantes. L\u2019UTF-8 est l\u2019encodage ( encoding en anglais) le plus r\u00e9pandu. Les navigateurs Internet utilisent le codage UTF-8 par d\u00e9faut. Le langage de programmation utilis\u00e9 en NSI (Python) g\u00e8re l'Unicode par d\u00e9faut. L\u2019index des caract\u00e8res UNICODE est disponible \u00e0 l\u2019adresse suivante http://www.unicode.org/fr/charts/charindex.html . Par ailleurs, une description d\u00e9taill\u00e9e de l'UTF-8 peut \u00eatre trouv\u00e9e sur Wikipedia https://fr.wikipedia.org/wiki/UTF-8 Description rapide et simplifi\u00e9e \u2693\ufe0e L'encodage UTF-8 utilise 1, 2, 3 ou 4 octets. Si le code du caract\u00e8re est inf\u00e9rieur ou \u00e9gal \u00e0 127, on n\u2019utilise qu'un octet avec le bit de poids fort \u00e0 0. Sinon, les bits de poids fort du premier octet forment une suite de 1 indiquant le nombre d'octets utilis\u00e9s pour coder le caract\u00e8re. Les octets suivants commencent tous par le bloc binaire 10. Analyser et mobiliser des concepts Sous Unicode le caract\u00e8re inf\u00e9rieur ou \u00e9gal a comme point de code U+2A7D. Quelle la valeur binaire de 0x2A7D ? Combien d\u2019octets seront n\u00e9cessaires pour repr\u00e9senter ce caract\u00e8re en unicode UTF-8? D\u00e9terminer la repr\u00e9sentation binaire puis hexad\u00e9cimale du caract\u00e8re inf\u00e9rieur ou \u00e9gal en Unicode UTF-8.","title":"ACTIVITE 1"},{"location":"NSI1/S5/S5A1.html#sequence-5-activite-1-le-codage-des-caracteres","text":"En recherchant un extrait du \u00ab Seigneur des anneaux \u00bb sur Internet avec un navigateur mal configur\u00e9, nous sommes tomb\u00e9s sur une page web, dont le contenu est reproduit ci-dessous. Les anneaux de pouvoir (au nombre de 20) sont d'abord d\u00c3\u00a9crits au d\u00c3\u00a9but de la Communaut\u00c3\u00a9 de l'Anneau dans un po\u00c3\u00a8me, connu depuis longtemps des Elfes, \u00c3\u00a9nonc\u00c3\u00a9 par Gandalf \u00c3 Frodon Sacquet. Trois anneaux pour les rois Elfes sous le ciel, Sept pour les seigneurs Nains dans leurs demeures de pierre, Neuf pour les Hommes, mortels destin\u00c3\u00a9s au tr\u00c3\u00a9pas, Un pour le Seigneur T\u00c3\u00a9n\u00c3\u00a9breux sur son sombre tr\u00c3\u00b4ne, Dans le Pays de Mordor o\u00c3\u00b9 s'\u00c3\u00a9tendent les Ombres. Un anneau pour les gouverner tous. Un anneau pour les trouver, Un anneau pour les amener tous et dans les t\u00c3\u00a9n\u00c3\u00a8bres les lier, Au Pays de Mordor o\u00c3\u00b9 s'\u00c3\u00a9tendent les Ombres. Analyser Expliquer la situation. Pr\u00e9ciser quel type de lettres pose probl\u00e8me.","title":"S\u00e9quence 5 - Activit\u00e9 1: le codage des caract\u00e8res"},{"location":"NSI1/S5/S5A1.html#le-code-ascii","text":"Le code ASCII ( A merican S tandard C ode for I nformation I nterchange), d\u00e9fini aux Etats-Unis en 1963, est bas\u00e9 sur un tableau contenant les caract\u00e8res les plus utilis\u00e9s en langue anglaise. Chaque caract\u00e8re est repr\u00e9sent\u00e9 par un nombre \u00e9crit sur 7 bits (ce qui donne \\(2^7=128\\) combinaisons possibles). Table de codes ascii (en hexad\u00e9cimal) Analyser et r\u00e9utiliser des solutions Coder, \u00e0 l'aide de la table ci-dessus, la phrase suivante : La compagnie de l\u2019anneau . Retrouver le texte correspondant au code ASCII suivant : (46 72 6F 64 6F 6E 20 6C 65 20 48 6F 62 62 69 74). Justifier, pourquoi il n'est pas possible de coder correctement le texte Mon pr\u00e9cieux \u00e0 l'aide du code ASCII.","title":"Le code ASCII"},{"location":"NSI1/S5/S5A1.html#la-norme-iso-8859-1-latin-1","text":"La n\u00e9cessit\u00e9 de repr\u00e9senter des caract\u00e8res non pr\u00e9sents dans la table ASCII tels que ceux de l\u2019alphabet latin comme le \u00ab\u00e0\u00bb, le \u00ab\u00e9\u00bb, \u00ab\u00e7\u00bb ... impose l\u2019utilisation d\u2019un autre code. Ces codes sont des extensions du code ASCII. Pour cela le 8\u00e8me bit est utilis\u00e9 ce qui permet de coder 256 caract\u00e8res (128 caract\u00e8res suppl\u00e9mentaire par rapport au code ASCII de base). On parle de code ASCII \u00e9tendu. Les tables ascii \u00e9tendu sont souvent pr\u00e9sent\u00e9s sous la forme de tableau \u00e0 double entr\u00e9es. L\u2019ISO, organisation internationale de normalisation, propose plusieurs variantes de ce code, adapt\u00e9e aux diff\u00e9rentes langues. Nous utilisons la norme ISO-8859-1 nomm\u00e9e aussi ISO-Latin1. R\u00e9utiliser des solutions Coder le texte Mon pr\u00e9cieux en utilisant la table \u00ab ASCII \u00e9tendu \u00bb pr\u00e9c\u00e9dente.","title":"La norme ISO 8859-1 (latin 1)"},{"location":"NSI1/S5/S5A1.html#la-norme-iso-10646-unicode","text":"","title":"La norme ISO 10646 (Unicode)"},{"location":"NSI1/S5/S5C1.html","text":"S\u00e9quence 4 - Premier type construit: le tableau \u2693\ufe0e Introduction: les structures de donn\u00e9es \u2693\ufe0e Une des probl\u00e9matiques importantes de l'informatique est le stockage de donn\u00e9es. Pour traiter efficacement ces derni\u00e8res, il faut les ranger de mani\u00e8re ad\u00e9quate en m\u00e9moire . L'objet informatique utilis\u00e9 pour stocker ces donn\u00e9es en m\u00e9moire s'appelle une structure de donn\u00e9es . Une structure de donn\u00e9e est caract\u00e9ris\u00e9e par les op\u00e9rations qu'elle permet ainsi que leur co\u00fbt (notion d\u00e9velopp\u00e9e dans le cours d'algorithmique). La premi\u00e8re structure de donn\u00e9e \u00e9tudi\u00e9e en sp\u00e9cialit\u00e9 NSI est le tableau . Qu'est-ce qu'un tableau ? \u2693\ufe0e D\u00e9finition Un tableau est une suite de valeurs de m\u00eame type, stock\u00e9es dans des cases m\u00e9moires contig\u00fces. Un tableau permet de stocker plusieurs valeurs dans une seule variable et d'y acc\u00e9der ensuite facilement. Python ne poss\u00e8de pas de type tableau , du moins pas sans utilisation de module sp\u00e9cialis\u00e9. De ce fait, on utilisera le type list en python pour construire des tableaux. En pratique, il s'agira d'\u00e9num\u00e9rer les valeurs entre crochets et s\u00e9par\u00e9es par une virgule . Ainsi, on d\u00e9clare et affecte un tableau \u00e0 la variable t en utilisant la syntaxe t = [valeur_1, valeur_2, ..., valeur_n] . 1 2 3 # Exemple t = [ 12 , 13 , 15 ] Les valeurs 12, 13 et 15 sont index\u00e9es c'est-\u00e0-dire qu'on peut les rep\u00e9rer par leur position \u00e0 l'aide d'un indice. Important Les index ( indices ) commencent partir de z\u00e9ro en python. 1 2 3 4 5 6 0 1 2 Indice | | | v v v +----+----+----+ | 12 | 13 | 15 | Tableau +----+----+----+ Seules les valeurs sont stock\u00e9es, les indices ne le sont pas. On acc\u00e8de \u00e0 une valeur \u00e0 l'aide de la notation t[indice] . Exemple 1 print ( t [ 2 ]) 1 15 Si on tente un acc\u00e8s en dehors des cases valides du tableau on obtient une erreur de type IndexError : 1 2 3 4 5 6 7 t [ 4 ] --------------------------------------------------------------------------- IndexError Traceback ( most recent call last ) < ipython - input - 4 - 5977 d405d0f2 > in < module > ----> 1 t [ 4 ] IndexError : list index out of range On obtient la taille d'un tableau avec la fonction native len . 1 len ( t ) 1 3 Le contenu d'un tableau peut \u00eatre modifi\u00e9: c'est une structure mutable . Pour cela, on utilise une affectation, exactement comme on l'a fait avec les variables jusqu'\u00e0 maintenant: 1 2 t [ 1 ] = 0 print ( t ) 1 [12, 0, 15] Remarques le terme de list bien que couramment utilis\u00e9 en python est un choix malheureux de vocabulaire; en effet la confusion peut \u00eatre faite avec une structure de donn\u00e9e qui sera vue en terminale. Aussi on privil\u00e9giera l'utilisation du terme tableau en 1re NSI; conform\u00e9ment au programme, on n'utilisera que des tableaux homog\u00e8nes (c-\u00e0-d contenant qu'un seul type de donn\u00e9e), bien que les list de python permettraient de construire des tableaux h\u00e9t\u00e9rog\u00e8nes. Comment acc\u00e9der aux \u00e9l\u00e9ments d'un tableau ? \u2693\ufe0e It\u00e9ration sur les indices \u2693\ufe0e Une premi\u00e8re possibilit\u00e9 pour parcourir les \u00e9l\u00e9ments d'un tableau est d'utiliser une boucle for sur les indices. Parcourir un tableau t en it\u00e9rant sur les indices se fait de la mani\u00e8re suivante: 1 2 for i in range ( len ( t )): traitement () Dans le code pr\u00e9c\u00e9dent, le g\u00e9n\u00e9rateur d'entier range permet d'obtenir une s\u00e9quence allant de 0 \u00e0 len(t)-1 . Par exemple, le code suivant permet d'afficher tous les \u00e9l\u00e9ments du tableau: 1 2 for i in range ( len ( t )): # parcours tout le tableau print ( t [ i ]) # affiche le i\u00e8me \u00e9l\u00e9ment 1 2 3 12 0 15 It\u00e9ration sur les \u00e9l\u00e9ments \u2693\ufe0e Une autre possibilit\u00e9 pour parcourir les \u00e9l\u00e9ments d'un tableau est d'utiliser une boucle for sur les \u00e9l\u00e9ments. Parcourir un tableau t en it\u00e9rant sur les \u00e9l\u00e9ments se fait de la mani\u00e8re suivante: 1 2 for element in t : traitement () Dans le code pr\u00e9c\u00e9dent, element est une variable qui va valoir successivement t[0] , t[1] , etc. Exemple 1 2 for elt in t : print ( elt ) 1 2 3 12 0 15 Comment construire de grands tableaux ? \u2693\ufe0e Lorsque le tableau \u00e0 construire est tr\u00e8s grand, il est difficile d'\u00e9num\u00e9rer tous ses \u00e9l\u00e9ments. On utilise alors la construction typique de Python: 1 2 3 DIM = 500 # taille du tableau t = [ 0 ] * DIM print ( len ( t )) 1 500 Supposons que l'on veuille remplir ce tableau avec le carr\u00e9 des 500 premiers entiers: 1 2 3 4 5 for i in range ( DIM ): t [ i ] = i * i ### Que vaut t[25] ? print ( t [ 25 ]) 1 625 On peut \u00e9galement concat\u00e9ner c'est-\u00e0-dire mettre bout \u00e0 bout, deux tableaux: 1 2 t2 = [ 7 , 10 , 13 ] + [ 16 , 19 ] print ( t2 ) 1 [7, 10, 13, 16, 19] Quelques subtilit\u00e9s \u2693\ufe0e Contrairement aux variables dont le type est un type de base comme int , float ou string , une variable de type tableau ne contient pas les valeurs. Elle contient une r\u00e9f\u00e9rence vers l'objet qui contient les valeurs , symbolis\u00e9 sur le sch\u00e9ma ci-dessous par un point reli\u00e9 \u00e0 une fl\u00eache. 1 2 3 4 5 x = 10 y = 15.5 ch = \"chaine\" t = [ 1 , 1 , 2 , 3 , 5 ] u = [ 2 , 8 , 16 , 32 , 64 ] Diff\u00e9rentes variables en python Remarque Ce sch\u00e9ma a \u00e9t\u00e9 obtenu avec un outil en ligne tr\u00e8s int\u00e9ressant Pythontutor et qui nous sera tr\u00e8s utile dans certaine situation. Une cons\u00e9quence importante de ce mode de repr\u00e9sentation est que l'affectation du tableau \u00e0 une autre variable ne cr\u00e9e pas un nouveau tableau , elle ne fait que recopier la r\u00e9f\u00e9rence vers l'objet list qui contient les valeurs. Ainsi, si \u00e0 la suite du code pr\u00e9c\u00e9dent, on ajoute: 1 v = u cela signifiera que v fait r\u00e9f\u00e9rence au m\u00eame objet list que u . Cas des tableaux Cela implique que toute modification de v entraine une modification de u . Par exemple, 1 v [ 0 ] = 0 entraine: Apr\u00e8s modification d'un tableau ... Recommandation Dans la mesure du possible, en sp\u00e9cialit\u00e9 NSI, on \u00e9vitera d'avoir deux variables qui r\u00e9f\u00e9rencent le m\u00eame tableau.","title":"COURS 1"},{"location":"NSI1/S5/S5C1.html#sequence-4-premier-type-construit-le-tableau","text":"","title":"S\u00e9quence 4 - Premier type construit: le tableau"},{"location":"NSI1/S5/S5C1.html#introduction-les-structures-de-donnees","text":"Une des probl\u00e9matiques importantes de l'informatique est le stockage de donn\u00e9es. Pour traiter efficacement ces derni\u00e8res, il faut les ranger de mani\u00e8re ad\u00e9quate en m\u00e9moire . L'objet informatique utilis\u00e9 pour stocker ces donn\u00e9es en m\u00e9moire s'appelle une structure de donn\u00e9es . Une structure de donn\u00e9e est caract\u00e9ris\u00e9e par les op\u00e9rations qu'elle permet ainsi que leur co\u00fbt (notion d\u00e9velopp\u00e9e dans le cours d'algorithmique). La premi\u00e8re structure de donn\u00e9e \u00e9tudi\u00e9e en sp\u00e9cialit\u00e9 NSI est le tableau .","title":"Introduction: les structures de donn\u00e9es"},{"location":"NSI1/S5/S5C1.html#quest-ce-quun-tableau","text":"D\u00e9finition Un tableau est une suite de valeurs de m\u00eame type, stock\u00e9es dans des cases m\u00e9moires contig\u00fces. Un tableau permet de stocker plusieurs valeurs dans une seule variable et d'y acc\u00e9der ensuite facilement. Python ne poss\u00e8de pas de type tableau , du moins pas sans utilisation de module sp\u00e9cialis\u00e9. De ce fait, on utilisera le type list en python pour construire des tableaux. En pratique, il s'agira d'\u00e9num\u00e9rer les valeurs entre crochets et s\u00e9par\u00e9es par une virgule . Ainsi, on d\u00e9clare et affecte un tableau \u00e0 la variable t en utilisant la syntaxe t = [valeur_1, valeur_2, ..., valeur_n] . 1 2 3 # Exemple t = [ 12 , 13 , 15 ] Les valeurs 12, 13 et 15 sont index\u00e9es c'est-\u00e0-dire qu'on peut les rep\u00e9rer par leur position \u00e0 l'aide d'un indice. Important Les index ( indices ) commencent partir de z\u00e9ro en python. 1 2 3 4 5 6 0 1 2 Indice | | | v v v +----+----+----+ | 12 | 13 | 15 | Tableau +----+----+----+ Seules les valeurs sont stock\u00e9es, les indices ne le sont pas. On acc\u00e8de \u00e0 une valeur \u00e0 l'aide de la notation t[indice] . Exemple 1 print ( t [ 2 ]) 1 15 Si on tente un acc\u00e8s en dehors des cases valides du tableau on obtient une erreur de type IndexError : 1 2 3 4 5 6 7 t [ 4 ] --------------------------------------------------------------------------- IndexError Traceback ( most recent call last ) < ipython - input - 4 - 5977 d405d0f2 > in < module > ----> 1 t [ 4 ] IndexError : list index out of range On obtient la taille d'un tableau avec la fonction native len . 1 len ( t ) 1 3 Le contenu d'un tableau peut \u00eatre modifi\u00e9: c'est une structure mutable . Pour cela, on utilise une affectation, exactement comme on l'a fait avec les variables jusqu'\u00e0 maintenant: 1 2 t [ 1 ] = 0 print ( t ) 1 [12, 0, 15] Remarques le terme de list bien que couramment utilis\u00e9 en python est un choix malheureux de vocabulaire; en effet la confusion peut \u00eatre faite avec une structure de donn\u00e9e qui sera vue en terminale. Aussi on privil\u00e9giera l'utilisation du terme tableau en 1re NSI; conform\u00e9ment au programme, on n'utilisera que des tableaux homog\u00e8nes (c-\u00e0-d contenant qu'un seul type de donn\u00e9e), bien que les list de python permettraient de construire des tableaux h\u00e9t\u00e9rog\u00e8nes.","title":"Qu'est-ce qu'un tableau ?"},{"location":"NSI1/S5/S5C1.html#comment-acceder-aux-elements-dun-tableau","text":"","title":"Comment acc\u00e9der aux \u00e9l\u00e9ments d'un tableau ?"},{"location":"NSI1/S5/S5C1.html#comment-construire-de-grands-tableaux","text":"Lorsque le tableau \u00e0 construire est tr\u00e8s grand, il est difficile d'\u00e9num\u00e9rer tous ses \u00e9l\u00e9ments. On utilise alors la construction typique de Python: 1 2 3 DIM = 500 # taille du tableau t = [ 0 ] * DIM print ( len ( t )) 1 500 Supposons que l'on veuille remplir ce tableau avec le carr\u00e9 des 500 premiers entiers: 1 2 3 4 5 for i in range ( DIM ): t [ i ] = i * i ### Que vaut t[25] ? print ( t [ 25 ]) 1 625 On peut \u00e9galement concat\u00e9ner c'est-\u00e0-dire mettre bout \u00e0 bout, deux tableaux: 1 2 t2 = [ 7 , 10 , 13 ] + [ 16 , 19 ] print ( t2 ) 1 [7, 10, 13, 16, 19]","title":"Comment construire de grands tableaux ?"},{"location":"NSI1/S5/S5C1.html#quelques-subtilites","text":"Contrairement aux variables dont le type est un type de base comme int , float ou string , une variable de type tableau ne contient pas les valeurs. Elle contient une r\u00e9f\u00e9rence vers l'objet qui contient les valeurs , symbolis\u00e9 sur le sch\u00e9ma ci-dessous par un point reli\u00e9 \u00e0 une fl\u00eache. 1 2 3 4 5 x = 10 y = 15.5 ch = \"chaine\" t = [ 1 , 1 , 2 , 3 , 5 ] u = [ 2 , 8 , 16 , 32 , 64 ] Diff\u00e9rentes variables en python Remarque Ce sch\u00e9ma a \u00e9t\u00e9 obtenu avec un outil en ligne tr\u00e8s int\u00e9ressant Pythontutor et qui nous sera tr\u00e8s utile dans certaine situation. Une cons\u00e9quence importante de ce mode de repr\u00e9sentation est que l'affectation du tableau \u00e0 une autre variable ne cr\u00e9e pas un nouveau tableau , elle ne fait que recopier la r\u00e9f\u00e9rence vers l'objet list qui contient les valeurs. Ainsi, si \u00e0 la suite du code pr\u00e9c\u00e9dent, on ajoute: 1 v = u cela signifiera que v fait r\u00e9f\u00e9rence au m\u00eame objet list que u . Cas des tableaux Cela implique que toute modification de v entraine une modification de u . Par exemple, 1 v [ 0 ] = 0 entraine: Apr\u00e8s modification d'un tableau ... Recommandation Dans la mesure du possible, en sp\u00e9cialit\u00e9 NSI, on \u00e9vitera d'avoir deux variables qui r\u00e9f\u00e9rencent le m\u00eame tableau.","title":"Quelques subtilit\u00e9s"},{"location":"NSI1/S5/S5C2.html","text":"S\u00e9quence 2 - Repr\u00e9senter du texte \u2693\ufe0e L'objectif \u2693\ufe0e Il s'agit d' associer un caract\u00e8re \u00e0 un num\u00e9ro unique : c'est ce que l'on appelle encoder . Pour \u00eatre efficace un encodage doit repr\u00e9senter le plus de caract\u00e8res possible et \u00eatre compact. L'ASCII \u2693\ufe0e \u00c0 l'origine plusieurs encodages incompatibles entre eux coexistaient jusqu'\u00e0 ce qu'une norme s'impose dans les ann\u00e9es 60: l' A merican S tandard C ode for I nformation I nterchange (ASCII). Un octet est utilis\u00e9 pour coder un caract\u00e8re. En r\u00e9alit\u00e9, seuls 7 bits sont utilis\u00e9s: on peut donc coder \\(2^7=128\\) caract\u00e8res avec cette norme. Le dernier bit \u00e9tait utilis\u00e9 \u00e0 des fins de contr\u00f4le lors des transmissions. Il faut noter que seuls les caract\u00e8res anglo-saxons sont pr\u00e9sents. Les caract\u00e8res accentu\u00e9s ne sont pas repr\u00e9sentables. \u00c9volution: la norme ISO 8859 \u2693\ufe0e Afin d'int\u00e9grer plus de caract\u00e8res ( notamment les caract\u00e8res accentu\u00e9s ), une premi\u00e8re \u00e9volution a eu lieu et a \u00e9t\u00e9 caract\u00e9ris\u00e9e par la norme ISO 8859. Il s'agit d'une extension de l'ASCII: on utilise le 8\u00e8me bit (utilis\u00e9 jusque l\u00e0 pour le contr\u00f4le de parit\u00e9) pour coder des caract\u00e8res. On a ainsi \\(2^8=256\\) possibilit\u00e9s ! Une table de correspondance code hexad\u00e9cimal ou d\u00e9cimal \\(\\longleftrightarrow\\) ASCII et ASCII \u00e9tendu peut \u00eatre trouv\u00e9e \u00e0 cette adresse Norme ISO 10646 - Standard Unicode \u2693\ufe0e Bien qu'int\u00e9ressante l'\u00e9volution vers la norme ISO 8859 ne r\u00e8gle pas tous les probl\u00e8mes et notamment l'encodage des caract\u00e8res des langues autres qu'europ\u00e9ennes ( asiatiques entre autres ). Pour tenir compte de tous les caract\u00e8res utilis\u00e9s, l'ISO proposa une nouvelle norme dans laquelle un caract\u00e8re est vu comme une entit\u00e9 poss\u00e9dant: un nom; un num\u00e9ro, appel\u00e9 encore point de code et not\u00e9 U+xxxx o\u00f9 xxxx est un nombre hexad\u00e9cimal. Voir la page wikipedia Un consortium priv\u00e9 \u00e0 but non lucratif, Unicode , proposa alors plusieurs techniques pour encoder ces points de code. La plus utilis\u00e9e est manifestement l'encodage UTF-8 (Universal Transformation Format); le 8 signifie qu'il faut au minimum 8 bits pour repr\u00e9senter le caract\u00e8re associ\u00e9 \u00e0 un point de code. Les encodages UTF-16 (complexe) et UTF-32 (peu \u00e9conome) ne seront pas abord\u00e9s ici. Principe de l'encodage UTF-8 \u2693\ufe0e Cet encodage permet de coder un caract\u00e8re sur 1, 2, 3 ou 4 octets. Si le point de code est inf\u00e9rieur ou \u00e9gal \u00e0 127 ( 7F en hexad\u00e9cimal), le caract\u00e8re est cod\u00e9 sous la forme 0xxx xxxx comme en ASCII . Sinon, on utilise la forme binaire du point de code et on d\u00e9termine ainsi le nombre de bits n\u00e9cessaire au codage du caract\u00e8re. Point de code Octets (binaire) Nb de bits utiles U+0000-U+007F 0xxx xxxx 7 U+0080-U+07FF 110x xxxx 10xx xxxx 11 U+0800-U+FFFF 1110 xxxx 10xx xxxx 10xx xxxx 16 U+10000-U+10FFFF 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx 21 L'octet de poids fort est compos\u00e9 d'une s\u00e9quence de 1 termin\u00e9 par un 0. Le nombre de 1 pr\u00e9sent dans cette s\u00e9quence indique le nombre d'octet utilis\u00e9 pour coder le caract\u00e8re. Exemple Soit \u00e0 coder le symbole de l'ensemble vide \\(\\varnothing\\) qui a pour point de code 8709 ou U+2205. Le point de code exprim\u00e9 en binaire est: 10 0010 0000 0101 . Il faut 14 bits pour coder ce nombre. D'apr\u00e8s le tableau ci-dessus, on va utiliser un codage sur 3 octets: \\[ \\mathbf{1110}\\ 0010\\ \\mathbf{10}00\\ 1000\\ \\mathbf{10}00\\ 0101 \\] Prolongement hors programme: Unicode et Python Les chaines de caract\u00e8res en python utilisent l'encodage UTF-8. Par ailleurs, on peut saisir directement une chaine \u00e0 partir de ses points de code (qu'on peut trouver sur le site https://unicode-table.com/fr/ par exemple), en proc\u00e9dant ainsi: '\\u' suivi du point de code \u00e9crit avec quatre chiffres hexad\u00e9cimaux, si sa valeur est comprise entre 0000 et FFFF ; '\\U' suivi du point de code \u00e9crit avec huit chiffres hexad\u00e9cimaux, si sa valeur est sup\u00e9rieure \u00e0 FFFF . Voir les exemples ci-apr\u00e8s. Exemples d'utilisation en python 1 2 ch1 = ' \\u0078\\u2A7E\\u0030 ' print ( ch1 ) 1 x\u2a7e0 1 2 ch2 = ' \\U0001F914 ' print ( ch2 ) 1 \ud83e\udd14 Il est possible en python de conna\u00eetre le r\u00e9sultat de l'encodage (en hexad\u00e9cimal), en utilisant la m\u00e9thode de cha\u00eene encode (le terme m\u00e9thode sera pr\u00e9cis\u00e9 en terminale). 1 2 3 tableau_octets = ch1 . encode ( 'utf8' ) # encode prend en param\u00e8tre le type d'encodage for valeur in tableau_octets : print ( hex ( valeur )) 1 2 3 4 5 0x78 0xe2 0xa9 0xbe 0x30 Remarque Le tableau d'octets et la chaine de caract\u00e8res n'ont pas m\u00eame la longueur. Cela montre qu'en UTF-8, un caract\u00e8re peut \u00eatre cod\u00e9 sur plusieurs octets. Ici, le caract\u00e8re sup\u00e9rieur ou \u00e9gal est cod\u00e9 sur trois octets. On peut \u00e9galement faire le conversion inverse (d'une chaine d'octets vers une chaine caract\u00e8res) avec la m\u00e9thode decode . 1 2 a = b ' \\x78\\xe2\\xa9\\xbe\\x30 ' # b' ' signifie qu'on traite une cha\u00eene d'octets (bytes) a . decode ( 'utf8' ) 1 'x\u2a7e0' R\u00e9f\u00e9rences Sp\u00e9cialit\u00e9 NSI 1re - Balabonski et al. - ellipses lien vers la description","title":"COURS 2"},{"location":"NSI1/S5/S5C2.html#sequence-2-representer-du-texte","text":"","title":"S\u00e9quence 2 - Repr\u00e9senter du texte"},{"location":"NSI1/S5/S5C2.html#lobjectif","text":"Il s'agit d' associer un caract\u00e8re \u00e0 un num\u00e9ro unique : c'est ce que l'on appelle encoder . Pour \u00eatre efficace un encodage doit repr\u00e9senter le plus de caract\u00e8res possible et \u00eatre compact.","title":"L'objectif"},{"location":"NSI1/S5/S5C2.html#lascii","text":"\u00c0 l'origine plusieurs encodages incompatibles entre eux coexistaient jusqu'\u00e0 ce qu'une norme s'impose dans les ann\u00e9es 60: l' A merican S tandard C ode for I nformation I nterchange (ASCII). Un octet est utilis\u00e9 pour coder un caract\u00e8re. En r\u00e9alit\u00e9, seuls 7 bits sont utilis\u00e9s: on peut donc coder \\(2^7=128\\) caract\u00e8res avec cette norme. Le dernier bit \u00e9tait utilis\u00e9 \u00e0 des fins de contr\u00f4le lors des transmissions. Il faut noter que seuls les caract\u00e8res anglo-saxons sont pr\u00e9sents. Les caract\u00e8res accentu\u00e9s ne sont pas repr\u00e9sentables.","title":"L'ASCII"},{"location":"NSI1/S5/S5C2.html#evolution-la-norme-iso-8859","text":"Afin d'int\u00e9grer plus de caract\u00e8res ( notamment les caract\u00e8res accentu\u00e9s ), une premi\u00e8re \u00e9volution a eu lieu et a \u00e9t\u00e9 caract\u00e9ris\u00e9e par la norme ISO 8859. Il s'agit d'une extension de l'ASCII: on utilise le 8\u00e8me bit (utilis\u00e9 jusque l\u00e0 pour le contr\u00f4le de parit\u00e9) pour coder des caract\u00e8res. On a ainsi \\(2^8=256\\) possibilit\u00e9s ! Une table de correspondance code hexad\u00e9cimal ou d\u00e9cimal \\(\\longleftrightarrow\\) ASCII et ASCII \u00e9tendu peut \u00eatre trouv\u00e9e \u00e0 cette adresse","title":"\u00c9volution: la norme ISO 8859"},{"location":"NSI1/S5/S5C2.html#norme-iso-10646-standard-unicode","text":"Bien qu'int\u00e9ressante l'\u00e9volution vers la norme ISO 8859 ne r\u00e8gle pas tous les probl\u00e8mes et notamment l'encodage des caract\u00e8res des langues autres qu'europ\u00e9ennes ( asiatiques entre autres ). Pour tenir compte de tous les caract\u00e8res utilis\u00e9s, l'ISO proposa une nouvelle norme dans laquelle un caract\u00e8re est vu comme une entit\u00e9 poss\u00e9dant: un nom; un num\u00e9ro, appel\u00e9 encore point de code et not\u00e9 U+xxxx o\u00f9 xxxx est un nombre hexad\u00e9cimal. Voir la page wikipedia Un consortium priv\u00e9 \u00e0 but non lucratif, Unicode , proposa alors plusieurs techniques pour encoder ces points de code. La plus utilis\u00e9e est manifestement l'encodage UTF-8 (Universal Transformation Format); le 8 signifie qu'il faut au minimum 8 bits pour repr\u00e9senter le caract\u00e8re associ\u00e9 \u00e0 un point de code. Les encodages UTF-16 (complexe) et UTF-32 (peu \u00e9conome) ne seront pas abord\u00e9s ici.","title":"Norme ISO 10646 - Standard Unicode"},{"location":"NSI1/S5/S5C2.html#principe-de-lencodage-utf-8","text":"Cet encodage permet de coder un caract\u00e8re sur 1, 2, 3 ou 4 octets. Si le point de code est inf\u00e9rieur ou \u00e9gal \u00e0 127 ( 7F en hexad\u00e9cimal), le caract\u00e8re est cod\u00e9 sous la forme 0xxx xxxx comme en ASCII . Sinon, on utilise la forme binaire du point de code et on d\u00e9termine ainsi le nombre de bits n\u00e9cessaire au codage du caract\u00e8re. Point de code Octets (binaire) Nb de bits utiles U+0000-U+007F 0xxx xxxx 7 U+0080-U+07FF 110x xxxx 10xx xxxx 11 U+0800-U+FFFF 1110 xxxx 10xx xxxx 10xx xxxx 16 U+10000-U+10FFFF 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx 21 L'octet de poids fort est compos\u00e9 d'une s\u00e9quence de 1 termin\u00e9 par un 0. Le nombre de 1 pr\u00e9sent dans cette s\u00e9quence indique le nombre d'octet utilis\u00e9 pour coder le caract\u00e8re. Exemple Soit \u00e0 coder le symbole de l'ensemble vide \\(\\varnothing\\) qui a pour point de code 8709 ou U+2205. Le point de code exprim\u00e9 en binaire est: 10 0010 0000 0101 . Il faut 14 bits pour coder ce nombre. D'apr\u00e8s le tableau ci-dessus, on va utiliser un codage sur 3 octets: \\[ \\mathbf{1110}\\ 0010\\ \\mathbf{10}00\\ 1000\\ \\mathbf{10}00\\ 0101 \\] Prolongement hors programme: Unicode et Python Les chaines de caract\u00e8res en python utilisent l'encodage UTF-8. Par ailleurs, on peut saisir directement une chaine \u00e0 partir de ses points de code (qu'on peut trouver sur le site https://unicode-table.com/fr/ par exemple), en proc\u00e9dant ainsi: '\\u' suivi du point de code \u00e9crit avec quatre chiffres hexad\u00e9cimaux, si sa valeur est comprise entre 0000 et FFFF ; '\\U' suivi du point de code \u00e9crit avec huit chiffres hexad\u00e9cimaux, si sa valeur est sup\u00e9rieure \u00e0 FFFF . Voir les exemples ci-apr\u00e8s. Exemples d'utilisation en python 1 2 ch1 = ' \\u0078\\u2A7E\\u0030 ' print ( ch1 ) 1 x\u2a7e0 1 2 ch2 = ' \\U0001F914 ' print ( ch2 ) 1 \ud83e\udd14 Il est possible en python de conna\u00eetre le r\u00e9sultat de l'encodage (en hexad\u00e9cimal), en utilisant la m\u00e9thode de cha\u00eene encode (le terme m\u00e9thode sera pr\u00e9cis\u00e9 en terminale). 1 2 3 tableau_octets = ch1 . encode ( 'utf8' ) # encode prend en param\u00e8tre le type d'encodage for valeur in tableau_octets : print ( hex ( valeur )) 1 2 3 4 5 0x78 0xe2 0xa9 0xbe 0x30 Remarque Le tableau d'octets et la chaine de caract\u00e8res n'ont pas m\u00eame la longueur. Cela montre qu'en UTF-8, un caract\u00e8re peut \u00eatre cod\u00e9 sur plusieurs octets. Ici, le caract\u00e8re sup\u00e9rieur ou \u00e9gal est cod\u00e9 sur trois octets. On peut \u00e9galement faire le conversion inverse (d'une chaine d'octets vers une chaine caract\u00e8res) avec la m\u00e9thode decode . 1 2 a = b ' \\x78\\xe2\\xa9\\xbe\\x30 ' # b' ' signifie qu'on traite une cha\u00eene d'octets (bytes) a . decode ( 'utf8' ) 1 'x\u2a7e0' R\u00e9f\u00e9rences Sp\u00e9cialit\u00e9 NSI 1re - Balabonski et al. - ellipses lien vers la description","title":"Principe de l'encodage UTF-8"},{"location":"NSI1/S5/S5C3.html","text":"D'AUTRES TYPES CONSTRUITS \u2693\ufe0e Les tableaux - part. 2: construire des tableaux en compr\u00e9hension \u2693\ufe0e Construction de tableaux en compr\u00e9hension \u2693\ufe0e Supposons le probl\u00e8me suivant: Construire un tableau des 10 premiers entiers naturels multiples de 9 . On peut construire ce tableau comme on l'a vu lors de la d\u00e9couverte des tableaux (on dit aussi construire en extension ): 1 t = [ 0 , 9 , 18 , 27 , ... ] C'est potentiellement long et pas tr\u00e8s \u00e9l\u00e9gant! Une deuxi\u00e8me solution serait d'utiliser une boucle for : 1 2 3 t = [ 0 ] * 10 for i in range ( 10 ): t [ i ] = 9 * i Python propose une syntaxe plus compacte pour r\u00e9aliser cette op\u00e9ration. Il s'agit de la construction par compr\u00e9hension (on dit aussi en intension ): 1 t = [ 9 * i for i in range ( 10 )] \u00c0 retenir Plus g\u00e9n\u00e9ralement, au lieu de d\u00e9clarer un tableau puis de le remplir avec une boucle, on pr\u00e9f\u00e8rera une construction plus concise appel\u00e9e construction par compr\u00e9hension, qui prend la forme suivante: 1 tableau = [ expr ( i ) for i in sequence ] expr(i) est une expression de la variable i qui parcourt tous les \u00e9l\u00e9ments de sequence (qui peut \u00eatre un objet range , un tableau, une chaine de caract\u00e8re ou un des types qui seront vus dans les paragraphes ci-apr\u00e8s). Modifions notre consigne de d\u00e9part: Parmi les 10 premiers entiers naturels multiples de 9, construire un tableau des entiers pairs uniquement . La construction par compr\u00e9hension permet l\u00e0 encore, une \u00e9criture compacte: 1 t = [ 9 * i for i in range ( 10 ) if 9 * i % 2 == 0 ] \u00c0 retenir La construction par compr\u00e9hension permet d'ajouter une condition bool\u00e9enne. 1 tableau = [ expr ( i ) for i in sequence if condition ] condition est exprim\u00e9e avec les op\u00e9rateurs de comparaisons habituels. 1 2 3 # Exemple t = [ 9 * i for i in range ( 20 ) if 9 * i % 2 == 0 ] print ( t ) 1 [0, 18, 36, 54, 72, 90, 108, 126, 144, 162] Compl\u00e9ment: agrandir un tableau \u2693\ufe0e Le langage python autorise un traitement particulier sur un tableau: pouvoir l'agrandir sur sa droite , m\u00eame si sa taille a d\u00e9j\u00e0 \u00e9t\u00e9 fix\u00e9e. La syntaxe fait intervenir une fonction disponible avec les objets de type list (on dit aussi une m\u00e9thode ): append . 1 2 3 tab = [ 1 , 2 , 3 ] tab . append ( 5 ) print ( tab ) 1 [1, 2, 3, 5] Attention Dans le cadre du programme de 1re NSI, on privil\u00e9giera autant que possible la compr\u00e9hension de tableau par rapport \u00e0 l'utilisation de la m\u00e9thode append . Les p-uplets \u2693\ufe0e Construction et propri\u00e9t\u00e9s d'un p-uplet \u2693\ufe0e p-uplet En math\u00e9matique, un p-uplet est une collection ordonn\u00e9e d'objets. Python fournit un type adapt\u00e9 \u00e0 la repr\u00e9sentation des p-uplets: le type tuple . On cr\u00e9\u00e9 un tuple en \u00e9crivant les composantes du p-uplet s\u00e9par\u00e9es par une virgule et de pr\u00e9f\u00e9rence entre parenth\u00e8ses : 1 notes = ( 17 , 15 , 16 ) Comme avec les tableaux, on peut obtenir la taille d'un tuple avec la fonction native len et acc\u00e9der au \\(i^{\u00e8me}\\) \u00e9l\u00e9ment avec la notation habituelle des crochets: 1 2 3 notes = ( 17 , 15 , 16 , 10 ) print ( \"Taille du p-uplet: \" , len ( notes )) print ( \"Valeur du 3\u00e8me \u00e9l\u00e9ment (index 2): \" , notes [ 2 ]) 1 2 Taille du p-uplet: 4 Valeur du 3\u00e8me \u00e9l\u00e9ment (index 2): 16 1 2 notes [ 1 ] = 7 print ( notes ) 1 2 3 4 5 6 7 8 9 10 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-8-c340dc6cd5d2> in <module> ----> 1 notes[1] = 7 2 print(notes) TypeError: 'tuple' object does not support item assignment Contrairement aux tableaux les composantes d'un tuple ne sont pas modifiables . On dit que les tuples sont des objets immuables (ou non mutables). 1 2 3 4 5 6 7 notes [ 3 ] = 16.5 --------------------------------------------------------------------------- TypeError Traceback ( most recent call last ) < ipython - input - 4 - 06e2 d03882e0 > in < module > () ----> 1 notes [ 3 ] = 16.5 TypeError : 'tuple' object does not support item assignment Parcourir un p-uplet \u2693\ufe0e Les m\u00e9thodes de parcours rencontr\u00e9es lors de la d\u00e9couverte des tableaux sont toujours valables. On peut it\u00e9rer sur les index ou sur les \u00e9l\u00e9ments. 1 2 3 4 5 6 7 8 9 print ( \"****Relev\u00e9 de notes****\" ) for n in notes : print ( n ) print ( \"****Moyenne****\" ) s = 0 for i in range ( len ( notes )): s = s + notes [ i ] m = s / len ( notes ) print ( m ) 1 2 3 4 5 6 7 ****Relev\u00e9 de notes**** 17 15 16 10 ****Moyenne**** 14.5 Insuffisance des p-uplets \u2693\ufe0e Etant donn\u00e9 le probl\u00e8me suivant: On souhaite stocker les informations concernant des fichers image dans un p-uplet. Ce dernier aura pour composante sa largeur en pixel, sa hauteur en pixel et sa taille en kilo-octet. Par exemple, soit le fichier \"dog.png\" qui a une largeur de 384 pixels, une hauteur de 576 pixels et dont la taille est de 243 ko. On peut le mod\u00e9liser par un simple tuple: 1 image = ( 384 , 576 , 243 ) Cependant cette solution n'est pas id\u00e9ale. En effet, il faut se souvenir de l'ordre dans lequel les entiers ont \u00e9t\u00e9 rentr\u00e9s ! On \u00e9vitera d'utiliser des p-uplets lorsque des ambiguit\u00e9s ou confusions sont possibles . Une solution possible \u2693\ufe0e Pour contourner le probl\u00e8me soulev\u00e9 pr\u00e9c\u00e9demment, Python a une solution: les p-uplets nomm\u00e9s . Chaque composante du p-uplet se voit donner un nom! Python poss\u00e8de un type permettant de manipuler les p-uplets nomm\u00e9s: les namedtuple du module collections . Cependant, et conform\u00e9ment au programme, en classe de 1re NSI, on utilisera des dictionnaires pour impl\u00e9menter des p-uplets nomm\u00e9s . Les dictionnaires \u2693\ufe0e On consultera au pr\u00e9alable la vid\u00e9o suivante . Construction et propri\u00e9t\u00e9s des dictionnaires \u2693\ufe0e Python poss\u00e8de une structure de donn\u00e9es tr\u00e8s importante: le dictionnaire . Contrairement aux tableaux ou aux tuples, les valeurs ne sont plus associ\u00e9es \u00e0 des index forc\u00e9ment num\u00e9riques mais \u00e0 des cl\u00e9s qui peuvent \u00eatre des nombres, des chaines de caract\u00e8res, des tuples. On d\u00e9clare un dictionnaire en pla\u00e7ant ses paires cl\u00e9-valeur entre accolades et s\u00e9par\u00e9es par une virgule. La cl\u00e9 et la valeur \u00e9tant s\u00e9par\u00e9es par le caract\u00e8re : . Ainsi, le probl\u00e8me du fichier image pr\u00e9c\u00e9dent peut \u00eatre mod\u00e9lis\u00e9 par: 1 2 3 image = { 'nom' : 'dog.png' , 'larg' : 384 , 'haut' : 576 , 'taille' : 243 } print ( \"Taille de l'image:\" , image [ 'taille' ], \"ko\" ) print ( \"Hauteur:\" , image [ 'haut' ], \"pixels\" ) 1 2 Taille de l'image: 243 ko Hauteur: 576 pixels Autre exemple On peut \u00e9galement construire un dictionnaire \u00e0 partir d'un dictionnaire vide. La syntaxe est la suivante: 1 2 3 4 5 6 cyclones_reunion = {} cyclones_reunion [ \"bejisa\" ] = ( 2 , 1 , 2014 ) cyclones_reunion [ \"dumile\" ] = ( 3 , 1 , 2013 ) cyclones_reunion [ \"dina\" ] = ( 22 , 1 , 2002 ) cyclones_reunion [ \"gamede\" ] = ( 25 , 2 , 2007 ) print ( cyclones_reunion ) 1 {'bejisa': (2, 1, 2014), 'dumile': (3, 1, 2013), 'dina': (22, 1, 2002), 'gamede': (25, 2, 2007)} Le nombre d'entr\u00e9es du dictionnaire est obtenu avec la fonction len . 1 len ( cyclones_reunion ) 1 4 On acc\u00e8de \u00e0 la valeur associ\u00e9e \u00e0 une cl\u00e9 d'un dictionnaire d avec une construction du type d[cl\u00e9] . Si la cl\u00e9 n'existe pas, python l\u00e8vera une exception KeyError . 1 print ( cyclones_reunion [ \"dina\" ]) 1 (22, 1, 2002) Si la cl\u00e9 n'existe pas: 1 2 3 4 5 6 7 print ( cyclones_reunion [ \"carlos\" ]) --------------------------------------------------------------------------- KeyError Traceback ( most recent call last ) < ipython - input - 9 - 0306 c0a2304c > in < module > () ----> 1 print ( cyclones_reunion [ \"carlos\" ]) KeyError : 'carlos' Enfin, un dictionnaire n'est pas ordonn\u00e9 . Les \u00e9l\u00e9ments ne sont pas forc\u00e9ment afich\u00e9s dans l'ordre de leur cr\u00e9ation. Parcours d'un dictionnaire \u2693\ufe0e L'appartenance \u00e0 un dictionnaire ( en r\u00e9alit\u00e9 aux cl\u00e9s d'un dictionnaire ) se fait avec le mot cl\u00e9 in . Ainsi: 1 'dina' in cyclones_reunion . keys () 1 True 1 'carlos' in cyclones_reunion . keys () 1 False Le parcours d'un dictionnaire d peut se faire en it\u00e9rant avec une boucle for sur: les cl\u00e9s 1 2 for cle in d . keys (): # souvent abr\u00e9g\u00e9 en `for cle in d` ... les valeurs 1 2 for val in d . values (): ... les couples (cl\u00e9,valeur) 1 2 for cle , val in d . items (): ... R\u00e9sum\u00e9 Tableau On peut it\u00e9rer directement sur les \u00e9l\u00e9ments d'un tableau avec la construction du type for element in tableau: . Pour remplir un tableau on peut utiliser une construction par compr\u00e9hension: 1 tableau = [ expr ( x ) for x in sequence ] p-uplet Les p-uplets sont impl\u00e9ment\u00e9s en python par le type tuple . Il s'agit d'un objet non mutable. La syntaxe pour construire un p-uplet ayant N composantes, est: 1 mon_objet = ( comp1 , comp2 , ... , compN ) Les diff\u00e9rentes composantes sont accessibles par indexation, comme pour un tableau: mon_objet[0] , mob_objet[1] etc. Le parcours est identique \u00e0 celui d'un tableau. Dictionnaires Un dictionnaire est une structure regroupant des paires \"cl\u00e9:valeur\". En python, ces paires sont situ\u00e9es entre accolades et s\u00e9par\u00e9es par une virgule. 1 image = { 'nom' : 'dog.png' , 'larg' : 384 , 'haut' : 576 , 'taille' : 243 } On peut it\u00e9rer sur les cl\u00e9s, les valeurs ou les paires cl\u00e9,valeur avec les m\u00e9thodes keys() , values() ou items() . p-uplets nomm\u00e9s En python, les p-uplets nomm\u00e9s sont impl\u00e9ment\u00e9s avec des dictionnaires.","title":"COURS 3"},{"location":"NSI1/S5/S5C3.html#dautres-types-construits","text":"","title":"D'AUTRES TYPES CONSTRUITS"},{"location":"NSI1/S5/S5C3.html#les-tableaux-part-2-construire-des-tableaux-en-comprehension","text":"","title":"Les tableaux - part. 2: construire des tableaux en compr\u00e9hension"},{"location":"NSI1/S5/S5C3.html#les-p-uplets","text":"","title":"Les p-uplets"},{"location":"NSI1/S5/S5C3.html#les-dictionnaires","text":"On consultera au pr\u00e9alable la vid\u00e9o suivante .","title":"Les dictionnaires"},{"location":"NSI1/S5/S5C3a.html","text":"S\u00e9quence 4 - Aller plus loin avec les tableaux \u2693\ufe0e Construction de tableaux en compr\u00e9hension \u2693\ufe0e Supposons le probl\u00e8me suivant: Construire un tableau des 10 premiers entiers naturels multiples de 9 . On peut construire ce tableau comme on l'a vu lors de la d\u00e9couverte des tableaux (on dit aussi construire en extension ): 1 t = [ 0 , 9 , 18 , 27 , ... ] C'est potentiellement long et pas tr\u00e8s \u00e9l\u00e9gant! Une deuxi\u00e8me solution serait d'utiliser une boucle for : 1 2 3 t = [ 0 ] * 10 for i in range ( 10 ): t [ i ] = 9 * i Python propose une syntaxe plus compacte pour r\u00e9aliser cette op\u00e9ration. Il s'agit de la construction par compr\u00e9hension (on dit aussi en intension ): 1 t = [ 9 * i for i in range ( 10 )] \u00c0 retenir Plus g\u00e9n\u00e9ralement, au lieu de d\u00e9clarer un tableau puis de le remplir avec une boucle, on pr\u00e9f\u00e8rera une construction plus concise appel\u00e9e construction par compr\u00e9hension, qui prend la forme suivante: 1 tableau = [ expr ( i ) for i in sequence ] expr(i) est une expression de la variable i qui parcourt tous les \u00e9l\u00e9ments de sequence (qui peut \u00eatre un objet range , un tableau, une chaine de caract\u00e8re ou un des types qui seront vus dans les paragraphes ci-apr\u00e8s). Modifions notre consigne de d\u00e9part: Parmi les 10 premiers entiers naturels multiples de 9, construire un tableau des entiers pairs uniquement . La construction par compr\u00e9hension permet l\u00e0 encore, une \u00e9criture compacte: 1 t = [ 9 * i for i in range ( 10 ) if 9 * i % 2 == 0 ] \u00c0 retenir La construction par compr\u00e9hension permet d'ajouter une condition bool\u00e9enne. 1 tableau = [ expr ( i ) for i in sequence if condition ] condition est exprim\u00e9e avec les op\u00e9rateurs de comparaisons habituels. 1 2 3 # Exemple t = [ 9 * i for i in range ( 20 ) if 9 * i % 2 == 0 ] print ( t ) 1 [0, 18, 36, 54, 72, 90, 108, 126, 144, 162] Compl\u00e9ment: agrandir un tableau \u2693\ufe0e Le langage python autorise un traitement particulier sur un tableau: pouvoir l'agrandir sur sa droite , m\u00eame si sa taille a d\u00e9j\u00e0 \u00e9t\u00e9 fix\u00e9e. La syntaxe fait intervenir une fonction disponible avec les objets de type list (on dit aussi une m\u00e9thode ): append . 1 2 3 tab = [ 1 , 2 , 3 ] tab . append ( 5 ) print ( tab ) 1 [1, 2, 3, 5] Attention Dans le cadre du programme de 1re NSI, on privil\u00e9giera autant que possible la compr\u00e9hension de tableau par rapport \u00e0 l'utilisation de la m\u00e9thode append .","title":"COURS 3a"},{"location":"NSI1/S5/S5C3a.html#sequence-4-aller-plus-loin-avec-les-tableaux","text":"","title":"S\u00e9quence 4 - Aller plus loin avec les tableaux"},{"location":"NSI1/S5/S5C3a.html#construction-de-tableaux-en-comprehension","text":"Supposons le probl\u00e8me suivant: Construire un tableau des 10 premiers entiers naturels multiples de 9 . On peut construire ce tableau comme on l'a vu lors de la d\u00e9couverte des tableaux (on dit aussi construire en extension ): 1 t = [ 0 , 9 , 18 , 27 , ... ] C'est potentiellement long et pas tr\u00e8s \u00e9l\u00e9gant! Une deuxi\u00e8me solution serait d'utiliser une boucle for : 1 2 3 t = [ 0 ] * 10 for i in range ( 10 ): t [ i ] = 9 * i Python propose une syntaxe plus compacte pour r\u00e9aliser cette op\u00e9ration. Il s'agit de la construction par compr\u00e9hension (on dit aussi en intension ): 1 t = [ 9 * i for i in range ( 10 )] \u00c0 retenir Plus g\u00e9n\u00e9ralement, au lieu de d\u00e9clarer un tableau puis de le remplir avec une boucle, on pr\u00e9f\u00e8rera une construction plus concise appel\u00e9e construction par compr\u00e9hension, qui prend la forme suivante: 1 tableau = [ expr ( i ) for i in sequence ] expr(i) est une expression de la variable i qui parcourt tous les \u00e9l\u00e9ments de sequence (qui peut \u00eatre un objet range , un tableau, une chaine de caract\u00e8re ou un des types qui seront vus dans les paragraphes ci-apr\u00e8s). Modifions notre consigne de d\u00e9part: Parmi les 10 premiers entiers naturels multiples de 9, construire un tableau des entiers pairs uniquement . La construction par compr\u00e9hension permet l\u00e0 encore, une \u00e9criture compacte: 1 t = [ 9 * i for i in range ( 10 ) if 9 * i % 2 == 0 ] \u00c0 retenir La construction par compr\u00e9hension permet d'ajouter une condition bool\u00e9enne. 1 tableau = [ expr ( i ) for i in sequence if condition ] condition est exprim\u00e9e avec les op\u00e9rateurs de comparaisons habituels. 1 2 3 # Exemple t = [ 9 * i for i in range ( 20 ) if 9 * i % 2 == 0 ] print ( t ) 1 [0, 18, 36, 54, 72, 90, 108, 126, 144, 162]","title":"Construction de tableaux en compr\u00e9hension"},{"location":"NSI1/S5/S5C3a.html#complement-agrandir-un-tableau","text":"Le langage python autorise un traitement particulier sur un tableau: pouvoir l'agrandir sur sa droite , m\u00eame si sa taille a d\u00e9j\u00e0 \u00e9t\u00e9 fix\u00e9e. La syntaxe fait intervenir une fonction disponible avec les objets de type list (on dit aussi une m\u00e9thode ): append . 1 2 3 tab = [ 1 , 2 , 3 ] tab . append ( 5 ) print ( tab ) 1 [1, 2, 3, 5] Attention Dans le cadre du programme de 1re NSI, on privil\u00e9giera autant que possible la compr\u00e9hension de tableau par rapport \u00e0 l'utilisation de la m\u00e9thode append .","title":"Compl\u00e9ment: agrandir un tableau"},{"location":"NSI1/S5/S5C3b.html","text":"S\u00e9quence 4 - Deuxi\u00e8me type construit: les p-uplets \u2693\ufe0e Construction et propri\u00e9t\u00e9s d'un p-uplet \u2693\ufe0e p-uplet En math\u00e9matique, un p-uplet est une collection ordonn\u00e9e d'objets. Python fournit un type adapt\u00e9 \u00e0 la repr\u00e9sentation des p-uplets: le type tuple . On cr\u00e9\u00e9 un tuple en \u00e9crivant les composantes du p-uplet s\u00e9par\u00e9es par une virgule et de pr\u00e9f\u00e9rence entre parenth\u00e8ses : 1 notes = ( 17 , 15 , 16 ) Comme avec les tableaux, on peut obtenir la taille d'un tuple avec la fonction native len et acc\u00e9der au \\(i^{\u00e8me}\\) \u00e9l\u00e9ment avec la notation habituelle des crochets: 1 2 3 notes = ( 17 , 15 , 16 , 10 ) print ( \"Taille du p-uplet: \" , len ( notes )) print ( \"Valeur du 3\u00e8me \u00e9l\u00e9ment (index 2): \" , notes [ 2 ]) 1 2 Taille du p-uplet: 4 Valeur du 3\u00e8me \u00e9l\u00e9ment (index 2): 16 1 2 notes [ 1 ] = 7 print ( notes ) 1 2 3 4 5 6 7 8 9 10 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-8-c340dc6cd5d2> in <module> ----> 1 notes[1] = 7 2 print(notes) TypeError: 'tuple' object does not support item assignment Contrairement aux tableaux les composantes d'un tuple ne sont pas modifiables . On dit que les tuples sont des objets immuables (ou non mutables). 1 2 3 4 5 6 7 notes [ 3 ] = 16.5 --------------------------------------------------------------------------- TypeError Traceback ( most recent call last ) < ipython - input - 4 - 06e2 d03882e0 > in < module > () ----> 1 notes [ 3 ] = 16.5 TypeError : 'tuple' object does not support item assignment Parcourir un p-uplet \u2693\ufe0e Les m\u00e9thodes de parcours rencontr\u00e9es lors de la d\u00e9couverte des tableaux sont toujours valables. On peut it\u00e9rer sur les index ou sur les \u00e9l\u00e9ments. 1 2 3 4 5 6 7 8 9 print ( \"****Relev\u00e9 de notes****\" ) for n in notes : print ( n ) print ( \"****Moyenne****\" ) s = 0 for i in range ( len ( notes )): s = s + notes [ i ] m = s / len ( notes ) print ( m ) 1 2 3 4 5 6 7 ****Relev\u00e9 de notes**** 17 15 16 10 ****Moyenne**** 14.5 Insuffisance des p-uplets \u2693\ufe0e Etant donn\u00e9 le probl\u00e8me suivant: On souhaite stocker les informations concernant des fichers image dans un p-uplet. Ce dernier aura pour composante sa largeur en pixel, sa hauteur en pixel et sa taille en kilo-octet. Par exemple, soit le fichier \"dog.png\" qui a une largeur de 384 pixels, une hauteur de 576 pixels et dont la taille est de 243 ko. On peut le mod\u00e9liser par un simple tuple: 1 image = ( 384 , 576 , 243 ) Cependant cette solution n'est pas id\u00e9ale. En effet, il faut se souvenir de l'ordre dans lequel les entiers ont \u00e9t\u00e9 rentr\u00e9s ! On \u00e9vitera d'utiliser des p-uplets lorsque des ambiguit\u00e9s ou confusions sont possibles . Une solution possible \u2693\ufe0e Pour contourner le probl\u00e8me soulev\u00e9 pr\u00e9c\u00e9demment, Python a une solution: les p-uplets nomm\u00e9s . Chaque composante du p-uplet se voit donner un nom! Python poss\u00e8de un type permettant de manipuler les p-uplets nomm\u00e9s: les namedtuple du module collections . Cependant, et conform\u00e9ment au programme, en classe de 1re NSI, on utilisera des dictionnaires pour impl\u00e9menter des p-uplets nomm\u00e9s ( voir cours dictionnaires ).","title":"COURS 3b"},{"location":"NSI1/S5/S5C3b.html#sequence-4-deuxieme-type-construit-les-p-uplets","text":"","title":"S\u00e9quence 4 - Deuxi\u00e8me type construit: les p-uplets"},{"location":"NSI1/S5/S5C3b.html#construction-et-proprietes-dun-p-uplet","text":"p-uplet En math\u00e9matique, un p-uplet est une collection ordonn\u00e9e d'objets. Python fournit un type adapt\u00e9 \u00e0 la repr\u00e9sentation des p-uplets: le type tuple . On cr\u00e9\u00e9 un tuple en \u00e9crivant les composantes du p-uplet s\u00e9par\u00e9es par une virgule et de pr\u00e9f\u00e9rence entre parenth\u00e8ses : 1 notes = ( 17 , 15 , 16 ) Comme avec les tableaux, on peut obtenir la taille d'un tuple avec la fonction native len et acc\u00e9der au \\(i^{\u00e8me}\\) \u00e9l\u00e9ment avec la notation habituelle des crochets: 1 2 3 notes = ( 17 , 15 , 16 , 10 ) print ( \"Taille du p-uplet: \" , len ( notes )) print ( \"Valeur du 3\u00e8me \u00e9l\u00e9ment (index 2): \" , notes [ 2 ]) 1 2 Taille du p-uplet: 4 Valeur du 3\u00e8me \u00e9l\u00e9ment (index 2): 16 1 2 notes [ 1 ] = 7 print ( notes ) 1 2 3 4 5 6 7 8 9 10 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-8-c340dc6cd5d2> in <module> ----> 1 notes[1] = 7 2 print(notes) TypeError: 'tuple' object does not support item assignment Contrairement aux tableaux les composantes d'un tuple ne sont pas modifiables . On dit que les tuples sont des objets immuables (ou non mutables). 1 2 3 4 5 6 7 notes [ 3 ] = 16.5 --------------------------------------------------------------------------- TypeError Traceback ( most recent call last ) < ipython - input - 4 - 06e2 d03882e0 > in < module > () ----> 1 notes [ 3 ] = 16.5 TypeError : 'tuple' object does not support item assignment","title":"Construction et propri\u00e9t\u00e9s d'un p-uplet"},{"location":"NSI1/S5/S5C3b.html#parcourir-un-p-uplet","text":"Les m\u00e9thodes de parcours rencontr\u00e9es lors de la d\u00e9couverte des tableaux sont toujours valables. On peut it\u00e9rer sur les index ou sur les \u00e9l\u00e9ments. 1 2 3 4 5 6 7 8 9 print ( \"****Relev\u00e9 de notes****\" ) for n in notes : print ( n ) print ( \"****Moyenne****\" ) s = 0 for i in range ( len ( notes )): s = s + notes [ i ] m = s / len ( notes ) print ( m ) 1 2 3 4 5 6 7 ****Relev\u00e9 de notes**** 17 15 16 10 ****Moyenne**** 14.5","title":"Parcourir un p-uplet"},{"location":"NSI1/S5/S5C3b.html#insuffisance-des-p-uplets","text":"Etant donn\u00e9 le probl\u00e8me suivant: On souhaite stocker les informations concernant des fichers image dans un p-uplet. Ce dernier aura pour composante sa largeur en pixel, sa hauteur en pixel et sa taille en kilo-octet. Par exemple, soit le fichier \"dog.png\" qui a une largeur de 384 pixels, une hauteur de 576 pixels et dont la taille est de 243 ko. On peut le mod\u00e9liser par un simple tuple: 1 image = ( 384 , 576 , 243 ) Cependant cette solution n'est pas id\u00e9ale. En effet, il faut se souvenir de l'ordre dans lequel les entiers ont \u00e9t\u00e9 rentr\u00e9s ! On \u00e9vitera d'utiliser des p-uplets lorsque des ambiguit\u00e9s ou confusions sont possibles .","title":"Insuffisance des p-uplets"},{"location":"NSI1/S5/S5C4.html","text":"TABLES DE DONNEES \u2693\ufe0e Les tableaux (suite et fin) \u2693\ufe0e Qu'est-ce qu'un tableau de tableaux? \u2693\ufe0e Les \u00e9l\u00e9ments d'un tableau peuvent \u00eatre des entiers, des flottants, des chaines de caract\u00e8res, mais aussi ... des tableaux! Ainsi, l'\u00e9criture suivante est parfaitement valide: 1 t = [[ 1 , 2 , 3 , 4 ], [ 5 , 6 , 7 , 8 ]] t est un tableau compos\u00e9 de deux tableaux de quatre entiers. Pour faciliter la compr\u00e9hension, on aussi saisir t de la mani\u00e8re suivante: 1 2 t = [[ 1 , 2 , 3 , 4 ], [ 5 , 6 , 7 , 8 ]] Cette pr\u00e9sentation met bien en \u00e9vidence une structure \u00e0 deux lignes et quatre colonnes. Un tel tableau, dont les lignes ont la m\u00eame taille, est appel\u00e9 une matrice . Les tableaux de tableaux sont utilis\u00e9s, entre autres, pour les manipulations des donn\u00e9es tabul\u00e9es (voir ci-dessous) ou des images. Comment acc\u00e9der aux \u00e9l\u00e9ments d'un tableau de tableaux? \u2693\ufe0e On peut envisager un acc\u00e8s index\u00e9 . Ce qui revient \u00e0 dire que l'acc\u00e8s \u00e0 un \u00e9l\u00e9ment du tableau t[i][j] se fera gr\u00e2ce \u00e0 deux index \\(i\\) et \\(j\\) qui repr\u00e9sentent respectivement le num\u00e9ro de la ligne et le num\u00e9ro de la colonne. Exemples 1 2 3 4 5 6 t = [[ 1 , 2 , 3 , 4 ], [ 5 , 6 , 7 , 8 ]] #El\u00e9ment de la 2\u00e8me ligne, 3\u00e8me colonne --> i=1, j=2 print ( t [ 1 ][ 2 ]) 7 On peut aussi envisager de modifier la valeur situ\u00e9e \u00e0 la ligne \\(i\\) et \u00e0 la colonne \\(j\\) . 1 2 3 4 5 #Modification de la valeur de la 1ere ligne, 4eme colonne --> i=0, j=3 t [ 0 ][ 3 ] = 10 print ( t ) [[ 1 , 2 , 3 , 10 ], [ 5 , 6 , 7 , 8 ]] \u00c0 faire Exercice d'application directe Soit la matrice: 1 2 3 t = [[ 15 , 17 , 22 ], [ 17 , 25 , 27 ], [ 31 , 33 , 35 ]] Que vaut t[1][2] ? Que doit-on modifier pour avoir [[15, 17, 22], [17, 25, 45], [31, 33, 35]] ? Comment construire un tableau de tableaux en compr\u00e9hension? \u2693\ufe0e Pour construire un tableau t ayant \\(n\\) lignes et \\(p\\) colonnes initialis\u00e9 avec des z\u00e9ros par exemple, on peut proc\u00e9der comme suit: 1 2 3 4 n = 3 p = 4 t = [[ 0 ] * p for i in range ( n )] Notation L'instruction [0]*p est \u00e9quivalente \u00e0 [0] + [0] + ... + [0] c'est \u00e0 dire p tableaux [0] ) soit [0, 0, ..., 0] compos\u00e9 de p z\u00e9ros. \u00c0 faire Application directe Que vaut t apr\u00e8s l'instruction t = [[i, i+1] for i in range(2)] ? Organisation des donn\u00e9es sous forme de tables \u2693\ufe0e Rep\u00e8res historiques \u2693\ufe0e Le compilateur fortran de l' IBM OS/360 supportait d\u00e8s 1972 des donn\u00e9es tabul\u00e9es, au format csv (comma-separated values) . Source Qu'est-ce qu'une table de donn\u00e9es? \u2693\ufe0e Une table de donn\u00e9es est un arrangement de lignes et de colonnes . Les lignes ont divers synonymes: enregistrement, p-uplet, vecteur, etc. . Il en est de m\u00eame pour les colonnes: champ, propri\u00e9t\u00e9, attribut, etc. L'organisation des donn\u00e9es sous forme de table (on dit aussi sous forme tabul\u00e9e ) est tr\u00e8s r\u00e9pandue. Exemple : un jeu de donn\u00e9es en lien avec des artistes \u00e9voluant dans le milieu du rap durant ces 30 derni\u00e8res ann\u00e9es. Les donn\u00e9es sont disponibles \u00e0 cette adresse et on peut les r\u00e9cup\u00e9rer sous forme de fichier csv . Le fichier comporte 581 enregistrements qui ont 12 champs . En voici un aper\u00e7u: Name Categories URL Years Active Start Birthdate Summary 0 Trae Tha Truth rapper https://en.wikipedia.org/wiki/Trae_tha_Truth 1998 1980-07-03 Frazier Othel Thompson III (born July 3, 1980), better known by his stage name Trae tha Truth or simply Trae, is an American hip hop recording artist from Houston, Texas. 1 13 Block group https://genius.com/artists/13-block 2014 13 Block is a french Hip Hop group from Sevran, Seine-Saint-Denis. The group is composed of DeTess, OldPee, Zefor, et Zed. 2 Jay Rock rapper https://en.wikipedia.org/wiki/Jay_Rock 2003 1985-03-31 Johnny Reed McKinzie, Jr., (born March 31, 1985), better known by his stage name Jay Rock, is an American hip hop recording artist from Watts, California. 3 Droogz Brigade group https://genius.com/artists/Droogz-brigade 2008 Droogz Brigade is french hiphop group from Toulouse. The group is composed by Sad Vicious, Staff l\u2019instable, Al\u2019tarba, Rhama le singe and Herken. 4 Jeff le Nerf rapper https://fr.wikipedia.org/wiki/Jeff_Le_Nerf 1997 1982-03-17 Jeff Le Nerf is a french rapper from Grenoble. He is a member of the crew Collal-Shit. In 2005 he join the label IV My People, released the \"Le Nerf \u00e0 vif\" album, after what he continue is carrier has an independant artist. ... Years Active End Deathdate Clip Example YouTube City Neighborhood Coordinates 0 https://www.youtube.com/embed/QqKh5Bhx3YE Houston 29.674552,-95.363456 1 https://www.youtube.com/embed/ewExz3cx_RM Sevran 48.929103,2.533054 2 https://www.youtube.com/embed/fk10RoZV4fw Watts Nickerson Gardens projects 33.930751,-118.24893 3 https://www.youtube.com/embed/e9UbNKuxzzk Toulouse 43.582029,1.458244 4 https://www.youtube.com/embed/kSiLpodQTBQ Grenoble 45.189542,5.707799 Remarque il n'est pas rare dans des jeux de donn\u00e9es r\u00e9els, d'avoir des champs vides. Il faudra, peut \u00eatre en tenir compte lors des traitements. Les donn\u00e9es tabul\u00e9es sont tr\u00e8s importantes en informatique: on les utilise dans de nombreux domaines (web, IA, calcul scientifique, etc.). Quelle structure de donn\u00e9es pour repr\u00e9senter une table ? \u2693\ufe0e Les donn\u00e9es sont habituellement s\u00e9par\u00e9es des programmes qui les traitent, dans un fichier texte. On utilise souvent des fichiers au format csv ( comma separated values ). Chaque ligne de ce fichier correspond \u00e0 un enregistrement ( p-uplet ). Les diff\u00e9rents champs ( attributs ) \u00e9tant s\u00e9par\u00e9s par un d\u00e9limiteur ( virgule, point-virgule, tabulation, etc. ). La librairie standard de python poss\u00e8de un module adapt\u00e9 \u00e0 la lecture ( et \u00e0 l'\u00e9criture ) de ce type de fichiers: le module csv . Importation sous forme de tableau de tableaux \u2693\ufe0e On souhaite importer le fichier pr\u00e9c\u00e9dent regroupant des artistes: rapworld.csv situ\u00e9 dans le dossier data , sous la forme d'un tableau de tableaux. Une bonne pratique pour ouvrir le fichier et y r\u00e9aliser des op\u00e9rations consiste \u00e0 utiliser la structure suivante: \u00c0 conna\u00eetre 1 2 3 4 5 import csv with open ( 'data/rapworld.csv' , newline = '' , encoding = 'utf8' ) as f : table = [ ligne for ligne in csv . reader ( f , delimiter = ';' )] Utilisons cette fa\u00e7on de proc\u00e9der pour afficher les 3 premi\u00e8res lignes de cette table: 1 2 3 4 5 6 7 8 9 import csv with open ( 'data/rapworld.csv' , newline = '' , encoding = 'utf8' ) as f : table = [ ligne for ligne in csv . reader ( f , delimiter = ';' )] for i in range ( 3 ): print ( i , '-' , table [ i ]) print () # ins\u00e8re une ligne vide pour plus de lisibilit\u00e9 1 2 3 4 5 0 - ['Name', 'Categories', 'URL', 'Years Active Start', 'Birthdate', 'Summary', 'Years Active End', 'Deathdate', 'Clip Example YouTube', 'City', 'Neighborhood', 'Coordinates'] 1 - ['Trae Tha Truth', 'rapper', 'https://en.wikipedia.org/wiki/Trae_tha_Truth', '1998', '1980-07-03', 'Frazier Othel Thompson III (born July 3, 1980), better known by his stage name Trae tha Truth or simply Trae, is an American hip hop recording artist from Houston, Texas.', '', '', 'https://www.youtube.com/embed/QqKh5Bhx3YE', 'Houston', '', '29.674552,-95.363456'] 2 - ['13 Block', 'group', 'https://genius.com/artists/13-block', '2014', '', '13 Block is a french Hip Hop group from Sevran, Seine-Saint-Denis. The group is composed of DeTess, OldPee, Zefor, et Zed.', '', '', 'https://www.youtube.com/embed/ewExz3cx_RM', 'Sevran', '', '48.929103,2.533054'] Bilan Cette premi\u00e8re solution est simple \u00e0 mettre en oeuvre, cependant elle souffre de deux d\u00e9fauts: on doit m\u00e9moriser l'ordre des attributs; la premi\u00e8re ligne apparait comme une ligne de donn\u00e9es, il va falloir l'ignorer lors des traitements. \u00c0 faire Application directe \u00c0 l'index 533 de la table pr\u00e9c\u00e9dente, on trouve un groupe r\u00e9unionnais. De quelle ville ce groupe est-il originaire? Importation sous forme de tableau de n-uplets nomm\u00e9s \u2693\ufe0e Pour \u00e9viter les inconv\u00e9nients pr\u00e9c\u00e9dents, on peut importer les donn\u00e9es tabul\u00e9es sous forme de tableau de p-uplets nomm\u00e9s. Un code python typique est le suivant: \u00c0 conna\u00eetre 1 2 3 4 5 import csv with open ( 'data/rapworld.csv' , newline = '' , encoding = 'utf8' ) as f : table = [ dict ( ligne ) for ligne in csv . DictReader ( f , delimiter = ';' )] Les premiers \u00e9l\u00e9ments affich\u00e9s confirment que l'on a bien un tableau de dictionnaire: 1 2 3 4 5 6 7 8 9 import csv with open ( 'data/rapworld.csv' , newline = '' , encoding = 'utf8' ) as f : table = [ dict ( ligne ) for ligne in csv . DictReader ( f , delimiter = ';' )] for i in range ( 3 ): print ( table [ i ]) print () 1 2 3 4 5 {'Name': 'Trae Tha Truth', 'Categories': 'rapper', 'URL': 'https://en.wikipedia.org/wiki/Trae_tha_Truth', 'Years Active Start': '1998', 'Birthdate': '1980-07-03', 'Summary': 'Frazier Othel Thompson III (born July 3, 1980), better known by his stage name Trae tha Truth or simply Trae, is an American hip hop recording artist from Houston, Texas.', 'Years Active End': '', 'Deathdate': '', 'Clip Example YouTube': 'https://www.youtube.com/embed/QqKh5Bhx3YE', 'City': 'Houston', 'Neighborhood': '', 'Coordinates': '29.674552,-95.363456'} {'Name': '13 Block', 'Categories': 'group', 'URL': 'https://genius.com/artists/13-block', 'Years Active Start': '2014', 'Birthdate': '', 'Summary': '13 Block is a french Hip Hop group from Sevran, Seine-Saint-Denis. The group is composed of DeTess, OldPee, Zefor, et Zed.', 'Years Active End': '', 'Deathdate': '', 'Clip Example YouTube': 'https://www.youtube.com/embed/ewExz3cx_RM', 'City': 'Sevran', 'Neighborhood': '', 'Coordinates': '48.929103,2.533054'} {'Name': 'Jay Rock', 'Categories': 'rapper', 'URL': 'https://en.wikipedia.org/wiki/Jay_Rock', 'Years Active Start': '2003', 'Birthdate': '1985-03-31', 'Summary': 'Johnny Reed McKinzie, Jr., (born March 31, 1985), better known by his stage name Jay Rock, is an American hip hop recording artist from Watts, California.', 'Years Active End': '', 'Deathdate': '', 'Clip Example YouTube': 'https://www.youtube.com/embed/fk10RoZV4fw', 'City': 'Watts', 'Neighborhood': 'Nickerson Gardens projects', 'Coordinates': '33.930751,-118.24893'} On remarque que ce tableau ne contient plus la premi\u00e8re ligne. Cette derni\u00e8re a servi \u00e0 fournir les cl\u00e9s du dictionnaire cr\u00e9\u00e9. Note L'instruction dict du tableau construit en compr\u00e9hension est n\u00e9cessaire avec les derni\u00e8res versions de python, afin d'avoir des \u00e9l\u00e9ments de type dictionnaire. \u00c0 faire Application directe Les informations concernant Future Crew se trouvent maintenant \u00e0 l'index 532 de cette table (rappel: la 1ere ligne a servi pour cr\u00e9er les cl\u00e9s du dictionnaire). Afficher l'URL de Wikipedia concernant ce groupe. R\u00e9sum\u00e9 \u2693\ufe0e \u00c0 retenir Les tableaux peuvent contenir aussi des tableaux. Il est commode de les pr\u00e9senter sur plusieurs lignes. Un \u00e9l\u00e9ment sera alors rep\u00e9r\u00e9 par t[i][j] (i et j repr\u00e9sentant la ligne et la colonne). Une table de donn\u00e9es est un arrangement de lignes et de colonnes. Les donn\u00e9es sont souvent situ\u00e9es dans des fichiers csv. On peut les importer de deux mani\u00e8res: 1 2 3 4 5 import csv with open ( fichier , newline = '' , encoding = 'utf8' ) as f : table = [ ligne for ligne in csv . reader ( f , delimiter = ';' )] ou 1 2 3 4 5 import csv with open ( fichier , newline = '' , encoding = 'utf8' ) as f : table = [ dict ( ligne ) for ligne in csv . DictReader ( f , delimiter = ';' )] Attention \u00e0 bien ajuster le d\u00e9limiteur (au besoin, ouvrir le fichier csv pour v\u00e9rification).","title":"COURS 4"},{"location":"NSI1/S5/S5C4.html#tables-de-donnees","text":"","title":"TABLES DE DONNEES"},{"location":"NSI1/S5/S5C4.html#les-tableaux-suite-et-fin","text":"","title":"Les tableaux (suite et fin)"},{"location":"NSI1/S5/S5C4.html#organisation-des-donnees-sous-forme-de-tables","text":"","title":"Organisation des donn\u00e9es sous forme de tables"},{"location":"NSI1/S5/S5C4.html#quelle-structure-de-donnees-pour-representer-une-table","text":"Les donn\u00e9es sont habituellement s\u00e9par\u00e9es des programmes qui les traitent, dans un fichier texte. On utilise souvent des fichiers au format csv ( comma separated values ). Chaque ligne de ce fichier correspond \u00e0 un enregistrement ( p-uplet ). Les diff\u00e9rents champs ( attributs ) \u00e9tant s\u00e9par\u00e9s par un d\u00e9limiteur ( virgule, point-virgule, tabulation, etc. ). La librairie standard de python poss\u00e8de un module adapt\u00e9 \u00e0 la lecture ( et \u00e0 l'\u00e9criture ) de ce type de fichiers: le module csv .","title":"Quelle structure de donn\u00e9es pour  repr\u00e9senter une table ?"},{"location":"NSI1/S5/S5C4.html#resume","text":"\u00c0 retenir Les tableaux peuvent contenir aussi des tableaux. Il est commode de les pr\u00e9senter sur plusieurs lignes. Un \u00e9l\u00e9ment sera alors rep\u00e9r\u00e9 par t[i][j] (i et j repr\u00e9sentant la ligne et la colonne). Une table de donn\u00e9es est un arrangement de lignes et de colonnes. Les donn\u00e9es sont souvent situ\u00e9es dans des fichiers csv. On peut les importer de deux mani\u00e8res: 1 2 3 4 5 import csv with open ( fichier , newline = '' , encoding = 'utf8' ) as f : table = [ ligne for ligne in csv . reader ( f , delimiter = ';' )] ou 1 2 3 4 5 import csv with open ( fichier , newline = '' , encoding = 'utf8' ) as f : table = [ dict ( ligne ) for ligne in csv . DictReader ( f , delimiter = ';' )] Attention \u00e0 bien ajuster le d\u00e9limiteur (au besoin, ouvrir le fichier csv pour v\u00e9rification).","title":"R\u00e9sum\u00e9"},{"location":"NSI1/S5/S5C5.html","text":"Recherche dans une table \u2693\ufe0e Lien vers les fichiers de travail 1 2 3 4 5 import csv with open ( 'data/rapworld.csv' , newline = '' , encoding = 'utf8' ) as f : t = [ dict ( ligne ) for ligne in csv . DictReader ( f , delimiter = ';' )] Coh\u00e9rence d'une table \u2693\ufe0e Les donn\u00e9es sont-elles valides? \u2693\ufe0e Dans le cours pr\u00e9c\u00e9dent on a import\u00e9 les donn\u00e9es d'un fichier csv dans un tableau. Cependant, rien ne garantit la validit\u00e9 des lignes. Les informations peuvent \u00eatre manquantes ou incoh\u00e9rentes. Pour faire un traitement sur l'\u00e2ge des artistes par exemple, on s'assurera que ce champ est bien renseign\u00e9. 1 2 3 4 5 6 7 def est_valide_age ( artiste ): \"\"\" Renvoie True si l'\u00e2ge est renseign\u00e9. \"\"\" if artiste [ 'Birthdate' ] != '' : return True return False 1 2 table_conforme_age = [ art for art in t if est_valide_age ( art ) is True ] len ( table_conforme_age ) 1 277 On pourrait v\u00e9rifier que les date d'anniversaire et de d\u00e9c\u00e8s ( si pr\u00e9sente ) sont bien coh\u00e9rentes. 1 2 3 4 5 6 def est_valide_dc ( artiste ): \"\"\" Renvoie True si les dates de d\u00e9c\u00e8s et d'anniversaire sont coh\u00e9rentes\"\"\" if artiste [ 'Deathdate' ] != '' and artiste [ 'Birthdate' ] != '' : if int ( artiste [ 'Deathdate' ][ 0 : 4 ]) > int ( artiste [ 'Birthdate' ][ 0 : 4 ]): return True return False 1 2 table_conforme_dc = [ art for art in t if est_valide_dc ( art ) is True ] len ( table_conforme_dc ) 1 18 La table comporte-t-elle des doublons? \u2693\ufe0e Les tables de donn\u00e9es ne doivent g\u00e9n\u00e9ralement pas comporter de doublons. La fonction suivante v\u00e9rifie la pr\u00e9sence de doublons dans une table. 1 2 3 4 5 6 7 8 9 10 def doublon ( t ): \"\"\" Renvoie un bool\u00e9en correspond \u00e0 la pr\u00e9sence ou non de doublons dans la table. t: tableau de dictionnaires \"\"\" for i in range ( len ( t ) - 1 ): for j in range ( i + 1 , len ( t )): if t [ i ] == t [ j ]: return True return False 1 doublon ( t ) 1 False Note Cette fonction n'est pas tr\u00e8s efficace, notamment sur des tables volumineuses. S\u00e9lection de lignes ou de colonnes \u2693\ufe0e Comment s\u00e9lectionner des lignes d'une table? \u2693\ufe0e Les op\u00e9rations faites sur les tables sont en nombre tr\u00e8s limit\u00e9. Parmi celles-ci, on trouve la s\u00e9lection de lignes qui r\u00e9pondent \u00e0 certain(s) crit\u00e8re(s). Ces crit\u00e8res sont exprim\u00e9s avec des bool\u00e9ens. En python, on exprimera ces crit\u00e8res avec des fonctions condition_ renvoyant un bool\u00e9en. Exemple 1 \u2693\ufe0e On souhaite s\u00e9lectionner les artistes dont le d\u00e9but de carri\u00e8re se situe apr\u00e8s une ann\u00e9e donn\u00e9e. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def verifie_condition_1 ( p_uplet , date ): \"\"\" Renvoie True si le d\u00e9but de carri\u00e8re de l'artiste 'art' a eu lieu apr\u00e8s 'date' p_uplet: dictionnaire date: entier \"\"\" cond = False if p_uplet [ 'Years Active Start' ] != '' and int ( p_uplet [ 'Years Active Start' ]) >= date : cond = True return cond def select_1 ( t , date ): \"\"\" Renvoie une table dont les lignes v\u00e9rifient la 'condition_1'. t: tableau de dictionnaires date: entier \"\"\" return [ art for art in t if verifie_condition_1 ( art , date ) is True ] 1 2 3 4 # Artiste dont le d\u00e9but de carri\u00e8re remonte \u00e0 2017 t_2017 = select_1 ( t , 2017 ) t_2017 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 [{'Name': 'Original Flow Mastaz', 'Categories': 'group', 'URL': 'https://www.facebook.com/OriginalFlowMastaz/', 'Years Active Start': '2017', 'Birthdate': '', 'Summary': \"Original Flow Mastaz is a Hip Hop band from Neuch\u00e2tel formed by Akim, Le R', Seko and Askaine.\", 'Years Active End': '', 'Deathdate': '', 'Clip Example YouTube': 'https://www.youtube.com/embed/iTJu8uDyJ8E', 'City': 'Neuch\u00e2tel', 'Neighborhood': '', 'Coordinates': '46.999944,6.917182'}, {'Name': 'Sinya', 'Categories': 'rapper', 'URL': 'https://genius.com/Sinyasound-rafale-2-dz-lyrics', 'Years Active Start': '2017', 'Birthdate': '1995-08-05', 'Summary': 'Yassine Benhadji (born 5th august 1995) is a french rappeur of algerian descent who grew up in Perpignan.', 'Years Active End': '', 'Deathdate': '', 'Clip Example YouTube': 'https://www.youtube.com/embed/WkQveBSw_gI', 'City': 'Perpignan', 'Neighborhood': 'Toulouges', 'Coordinates': '42.670169,2.831146'}] Exemple 2 \u2693\ufe0e On souhaite s\u00e9lectionner les artistes originaires de Lyon. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 def verifie_condition_2 ( p_uplet , v ): \"\"\" Renvoie True si l'artiste vie dans la ville 'v' p_uplet: dictionnaire v: cha\u00eene \"\"\" cond = False if p_uplet [ 'City' ] != '' and p_uplet [ 'City' ] == v : cond = True return cond def select_2 ( t , v ): \"\"\" Renvoie une table dont les lignes v\u00e9rifient la 'condition_2'. t: tableau de dictionnaires v: cha\u00eene \"\"\" return [ art for art in t if verifie_condition_2 ( art , v ) is True ] 1 2 3 4 # Artistes originaires de Lyon t_lyon = select_2 ( t , 'Lyon' ) t_lyon 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 [{'Name': 'Kacem Wapalek', 'Categories': 'rapper', 'URL': 'https://www.chantefrance.com/artist/4568059-kacem-wapalek/biographie', 'Years Active Start': '2009', 'Birthdate': '', 'Summary': 'Kacem Wapalek is a french rapper from Lyon. He is a member of the Amasseurs de Mots (S.L.A.M.) crew.', 'Years Active End': '', 'Deathdate': '', 'Clip Example YouTube': 'https://www.youtube.com/embed/D19OwfGaNvE', 'City': 'Lyon', 'Neighborhood': '', 'Coordinates': '45.745237,4.839238'}, {'Name': 'Jorrdee', 'Categories': 'producer / dj;rapper', 'URL': 'https://fr.wikipedia.org/wiki/Jorrdee', 'Years Active Start': '2011', 'Birthdate': '', 'Summary': \"Jorrdee, born Jordan Bourgeois is a French rapper from Lyon. He's a original member of the rap crew 667.\", 'Years Active End': '', 'Deathdate': '', 'Clip Example YouTube': 'https://www.youtube.com/embed/zvtHEJ6DsK0', 'City': 'Lyon', 'Neighborhood': 'Mermoz', 'Coordinates': '45.731094,4.885971'}, {'Name': 'Lucio Bukowski', 'Categories': 'rapper', 'URL': 'https://genius.com/artists/Lucio-bukowski', 'Years Active Start': '2007', 'Birthdate': '', 'Summary': \"Ludovic Villard (better know has Lucio Bukowski) is a French rapper from Lyon, member of the crew L'animalerie.\", 'Years Active End': '', 'Deathdate': '', 'Clip Example YouTube': 'https://www.youtube.com/embed/zsWiNkt9fIw', 'City': 'Lyon', 'Neighborhood': '', 'Coordinates': '45.769508,4.831418'}] Comment s\u00e9lectionner des colonnes d'une table? \u2693\ufe0e La s\u00e9lection de colonnes est une op\u00e9ration appel\u00e9e couramment projection . D'un point de vue pratique, on boucle sur la table originale et on sauvegarde les champs qui nous int\u00e9ressent dans un tableau annexe. 1 2 3 4 5 6 7 8 9 10 11 12 13 def projection ( t , col ): \"\"\" R\u00e9alise la projection de 't' sur les champs d\u00e9finis dans 'col' et renvoie un nouveau tableau; t: tableau de dictionnaire col: tableau contenant les colonnes \u00e0 garder \"\"\" # Cr\u00e9ation du tableau annexe t_fin = [{} for _ in range ( len ( t ))] for i in range ( len ( t )): for champ in col : t_fin [ i ][ champ ] = t [ i ][ champ ] return t_fin 1 2 3 t2 = projection ( t , [ 'Name' , 'Categories' , 'City' ]) for i in range ( 8 ): print ( t2 [ i ]) 1 2 3 4 5 6 7 8 {'Name': 'Trae Tha Truth', 'Categories': 'rapper', 'City': 'Houston'} {'Name': '13 Block', 'Categories': 'group', 'City': 'Sevran'} {'Name': 'Jay Rock', 'Categories': 'rapper', 'City': 'Watts'} {'Name': 'Droogz Brigade', 'Categories': 'group', 'City': 'Toulouse'} {'Name': 'Jeff le Nerf', 'Categories': 'rapper', 'City': 'Grenoble'} {'Name': 'Bitsu', 'Categories': 'rapper', 'City': 'Toulouse'} {'Name': 'The Opposites', 'Categories': 'group', 'City': 'Amsterdam'} {'Name': 'Stormzy', 'Categories': 'rapper', 'City': 'London'} Attention Une projection peut entrainer la pr\u00e9sence de doublons 1 doublon ( projection ( t , [ 'Categories' , 'City' ])) 1 True","title":"COURS 5"},{"location":"NSI1/S5/S5C5.html#recherche-dans-une-table","text":"Lien vers les fichiers de travail 1 2 3 4 5 import csv with open ( 'data/rapworld.csv' , newline = '' , encoding = 'utf8' ) as f : t = [ dict ( ligne ) for ligne in csv . DictReader ( f , delimiter = ';' )]","title":"Recherche dans une table"},{"location":"NSI1/S5/S5C5.html#coherence-dune-table","text":"","title":"Coh\u00e9rence d'une table"},{"location":"NSI1/S5/S5C5.html#les-donnees-sont-elles-valides","text":"Dans le cours pr\u00e9c\u00e9dent on a import\u00e9 les donn\u00e9es d'un fichier csv dans un tableau. Cependant, rien ne garantit la validit\u00e9 des lignes. Les informations peuvent \u00eatre manquantes ou incoh\u00e9rentes. Pour faire un traitement sur l'\u00e2ge des artistes par exemple, on s'assurera que ce champ est bien renseign\u00e9. 1 2 3 4 5 6 7 def est_valide_age ( artiste ): \"\"\" Renvoie True si l'\u00e2ge est renseign\u00e9. \"\"\" if artiste [ 'Birthdate' ] != '' : return True return False 1 2 table_conforme_age = [ art for art in t if est_valide_age ( art ) is True ] len ( table_conforme_age ) 1 277 On pourrait v\u00e9rifier que les date d'anniversaire et de d\u00e9c\u00e8s ( si pr\u00e9sente ) sont bien coh\u00e9rentes. 1 2 3 4 5 6 def est_valide_dc ( artiste ): \"\"\" Renvoie True si les dates de d\u00e9c\u00e8s et d'anniversaire sont coh\u00e9rentes\"\"\" if artiste [ 'Deathdate' ] != '' and artiste [ 'Birthdate' ] != '' : if int ( artiste [ 'Deathdate' ][ 0 : 4 ]) > int ( artiste [ 'Birthdate' ][ 0 : 4 ]): return True return False 1 2 table_conforme_dc = [ art for art in t if est_valide_dc ( art ) is True ] len ( table_conforme_dc ) 1 18","title":"Les donn\u00e9es sont-elles valides?"},{"location":"NSI1/S5/S5C5.html#la-table-comporte-t-elle-des-doublons","text":"Les tables de donn\u00e9es ne doivent g\u00e9n\u00e9ralement pas comporter de doublons. La fonction suivante v\u00e9rifie la pr\u00e9sence de doublons dans une table. 1 2 3 4 5 6 7 8 9 10 def doublon ( t ): \"\"\" Renvoie un bool\u00e9en correspond \u00e0 la pr\u00e9sence ou non de doublons dans la table. t: tableau de dictionnaires \"\"\" for i in range ( len ( t ) - 1 ): for j in range ( i + 1 , len ( t )): if t [ i ] == t [ j ]: return True return False 1 doublon ( t ) 1 False Note Cette fonction n'est pas tr\u00e8s efficace, notamment sur des tables volumineuses.","title":"La table comporte-t-elle des doublons?"},{"location":"NSI1/S5/S5C5.html#selection-de-lignes-ou-de-colonnes","text":"","title":"S\u00e9lection de lignes ou de colonnes"},{"location":"NSI1/S5/S5C5.html#comment-selectionner-des-lignes-dune-table","text":"Les op\u00e9rations faites sur les tables sont en nombre tr\u00e8s limit\u00e9. Parmi celles-ci, on trouve la s\u00e9lection de lignes qui r\u00e9pondent \u00e0 certain(s) crit\u00e8re(s). Ces crit\u00e8res sont exprim\u00e9s avec des bool\u00e9ens. En python, on exprimera ces crit\u00e8res avec des fonctions condition_ renvoyant un bool\u00e9en.","title":"Comment s\u00e9lectionner des lignes d'une table?"},{"location":"NSI1/S5/S5C5.html#comment-selectionner-des-colonnes-dune-table","text":"La s\u00e9lection de colonnes est une op\u00e9ration appel\u00e9e couramment projection . D'un point de vue pratique, on boucle sur la table originale et on sauvegarde les champs qui nous int\u00e9ressent dans un tableau annexe. 1 2 3 4 5 6 7 8 9 10 11 12 13 def projection ( t , col ): \"\"\" R\u00e9alise la projection de 't' sur les champs d\u00e9finis dans 'col' et renvoie un nouveau tableau; t: tableau de dictionnaire col: tableau contenant les colonnes \u00e0 garder \"\"\" # Cr\u00e9ation du tableau annexe t_fin = [{} for _ in range ( len ( t ))] for i in range ( len ( t )): for champ in col : t_fin [ i ][ champ ] = t [ i ][ champ ] return t_fin 1 2 3 t2 = projection ( t , [ 'Name' , 'Categories' , 'City' ]) for i in range ( 8 ): print ( t2 [ i ]) 1 2 3 4 5 6 7 8 {'Name': 'Trae Tha Truth', 'Categories': 'rapper', 'City': 'Houston'} {'Name': '13 Block', 'Categories': 'group', 'City': 'Sevran'} {'Name': 'Jay Rock', 'Categories': 'rapper', 'City': 'Watts'} {'Name': 'Droogz Brigade', 'Categories': 'group', 'City': 'Toulouse'} {'Name': 'Jeff le Nerf', 'Categories': 'rapper', 'City': 'Grenoble'} {'Name': 'Bitsu', 'Categories': 'rapper', 'City': 'Toulouse'} {'Name': 'The Opposites', 'Categories': 'group', 'City': 'Amsterdam'} {'Name': 'Stormzy', 'Categories': 'rapper', 'City': 'London'} Attention Une projection peut entrainer la pr\u00e9sence de doublons 1 doublon ( projection ( t , [ 'Categories' , 'City' ])) 1 True","title":"Comment s\u00e9lectionner des colonnes d'une table?"},{"location":"NSI1/S5/S5C6.html","text":"TRI & FUSION DE TABLES \u2693\ufe0e Tri d'une table en python \u2693\ufe0e Lorsqu'on manipule des donn\u00e9es en tables, il est fr\u00e9quent de vouloir les trier . Le langage python offre quelques possibilit\u00e9s de tri: m\u00e9thode sort des tableaux; fonction sorted de la librairie standard - qui sera privil\u00e9gi\u00e9e ici -. Quels objets peuvent \u00eatre compar\u00e9s ? \u2693\ufe0e Python sait comparer \u00e9videmment des nombres et des chaines de caract\u00e8res , mais aussi des p-uplets . Voici quelques exemples: 1 2 # Comparaison de chaine print ( \"'abc' > 'aac': \" , 'abc' > 'aac' ) 1 'abc' > 'aac': True 1 2 3 4 5 # Comparaison de p-uplets print ( '(5,4) > (5,3): ' , ( 5 , 4 ) > ( 5 , 3 )) print ( '(5,4,6) > (5,4,8): ' , ( 5 , 4 , 6 ) > ( 5 , 4 , 8 )) print ( \"(6, 'c') < (5, 'c'): \" , ( 6 , 'c' ) < ( 5 , 'c' )) print ( \"(6, 'c') < (6, 'e'): \" , ( 6 , 'c' ) < ( 6 , 'e' )) 1 2 3 4 (5,4) > (5,3): True (5,4,6) > (5,4,8): False (6, 'c') < (5, 'c'): False (6, 'c') < (6, 'e'): True Qu'en est-il des p-uplets nomm\u00e9s repr\u00e9sent\u00e9s par des dictionnaires? 1 2 3 e1 = { 'nom' : 'bob' , 'age' : 20 , 'domaine' : 'ia' } e2 = { 'nom' : 'alice' , 'age' : 23 , 'domaine' : 'algorithmique' } print ( 'e1 < e2: ' , e1 < e2 ) 1 2 3 4 5 6 7 8 9 10 11 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-3-7ea8c292dfb3> in <module> 1 e1 = {'nom':'bob', 'age':20, 'domaine':'ia'} 2 e2 = {'nom':'alice', 'age':23, 'domaine':'algorithmique'} ----> 3 print('e1 < e2: ', e1 < e2) TypeError: '<' not supported between instances of 'dict' and 'dict' Les p-uplets nomm\u00e9s impl\u00e9ment\u00e9s en 1\u00e8re par des dictionnaires ne peuvent pas \u00eatre compar\u00e9s . Comment utiliser la fonction 'sorted' de la librairie standard? \u2693\ufe0e La fonction sorted prend en param\u00e8tre obligatoire un it\u00e9rable , comme un tableau ou un tuple par exemple, et renvoie un nouveau tableau tri\u00e9 par ordre croissant . Application directe L'une des deux instructions suivantes provoque une erreur. Laquelle et pourquoi? 1 2 t1 = sorted ( 8 , 56 , 9 , 2 , 15 ) t2 = sorted (( 8 , 56 , 9 , 2 , 15 )) Que renvoie l'instruction correcte? La fonction sorted poss\u00e8de un param\u00e8tre optionnel key qui est utile lorsque python ne sait pas comparer des objets comme les dictionnaires. On affecte \u00e0 ce param\u00e8tre le nom de la fonction charg\u00e9e d'indiquer la cl\u00e9 suivant laquelle on trie. Exemple \u2693\ufe0e Soit \u00e0 ranger le tableau t suivant par ordre croissant d'\u00e2ge: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 t = [{ 'nom' : 'bob' , 'age' : 24 , 'domaine' : 'IA' }, { 'nom' : 'alex' , 'age' : 23 , 'domaine' : 'web' }, { 'nom' : 'sara' , 'age' : 21 , 'domaine' : 'web' }, { 'nom' : 'alice' , 'age' : 23 , 'domaine' : 'algorithmique' }, { 'nom' : 'lisa' , 'age' : 23 , 'domaine' : 'robotique' }] #On d\u00e9finit une fonction qui renvoie un crit\u00e8re de tri def suivant_age ( dico ): return dico [ 'age' ] #On appelle 'sorted' en affectant \u00e0 'key' le nom de la fonction de tri t_trie = sorted ( t , key = suivant_age ) #Affichage for e in t_trie : print ( e ) 1 2 3 4 5 {'nom': 'sara', 'age': 21, 'domaine': 'web'} {'nom': 'alex', 'age': 23, 'domaine': 'web'} {'nom': 'alice', 'age': 23, 'domaine': 'algorithmique'} {'nom': 'lisa', 'age': 23, 'domaine': 'robotique'} {'nom': 'bob', 'age': 24, 'domaine': 'IA'} On peut vouloir rajouter un deuxi\u00e8me crit\u00e8re de tri, en cas d'\u00e9galit\u00e9 par exemple. Il suffit alors de placer ce deuxi\u00e8me crit\u00e8re dans un tuple (que python sait trier!) renvoy\u00e9 par la fonction. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 t = [{ 'nom' : 'bob' , 'age' : 24 , 'domaine' : 'IA' }, { 'nom' : 'alex' , 'age' : 23 , 'domaine' : 'web' }, { 'nom' : 'sara' , 'age' : 21 , 'domaine' : 'web' }, { 'nom' : 'alice' , 'age' : 23 , 'domaine' : 'algorithmique' }, { 'nom' : 'lisa' , 'age' : 23 , 'domaine' : 'robotique' }] #On d\u00e9finit une fonction qui renvoie le crit\u00e8re de tri def suivant_age_puis_nom ( dico ): return ( dico [ 'age' ], dico [ 'nom' ]) #On appelle 'sorted' en affectant \u00e0 'key' le nom de la fonction de tri t_trie = sorted ( t , key = suivant_age_puis_nom ) #Affichage for e in t_trie : print ( e ) 1 2 3 4 5 {'nom': 'sara', 'age': 21, 'domaine': 'web'} {'nom': 'alex', 'age': 23, 'domaine': 'web'} {'nom': 'alice', 'age': 23, 'domaine': 'algorithmique'} {'nom': 'lisa', 'age': 23, 'domaine': 'robotique'} {'nom': 'bob', 'age': 24, 'domaine': 'IA'} La fonction sorted poss\u00e8de un dernier param\u00e8tre optionnel: reverse . On lui donnera la valeur True si on veut un classement d\u00e9croissant. Application directe Modifier le code pr\u00e9c\u00e9dent pour trier t par domaine, puis par nom en cas d'\u00e9galit\u00e9. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 t = [{ 'nom' : 'bob' , 'age' : 24 , 'domaine' : 'IA' }, { 'nom' : 'alex' , 'age' : 23 , 'domaine' : 'web' }, { 'nom' : 'sara' , 'age' : 21 , 'domaine' : 'web' }, { 'nom' : 'alice' , 'age' : 23 , 'domaine' : 'algorithmique' }, { 'nom' : 'lisa' , 'age' : 23 , 'domaine' : 'robotique' }] def suivant_domaine_puis_nom ( e ): #######A compl\u00e9ter######### return ... #D\u00e9commentez la ligne ci-dessous et compl\u00e9tez! #t_trie = sorted(..., ...) #Affichage for e in t_trie : print ( e ) Fusion \u2693\ufe0e L'objectif est de r\u00e9unir dans une seule table les donn\u00e9es de deux tables existantes. On examinera deux cas simples: tables ayant les m\u00eames attributs; tables ayant au moins un attribut en commun 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # les tables de travail import csv from pprint import pprint # table des pr\u00e9noms d'enfants n\u00e9s \u00e0 Paris en 2020 with open ( 'data/prenoms2020.csv' , newline = '' , encoding = 'utf8' ) as f1 : t_2020 = [ dict ( ligne ) for ligne in csv . DictReader ( f1 , delimiter = ';' )] # table des pr\u00e9noms d'enfants n\u00e9s \u00e0 Paris en 2021 with open ( 'data/prenoms2021.csv' , newline = '' , encoding = 'utf8' ) as f2 : t_2021 = [ dict ( ligne ) for ligne in csv . DictReader ( f2 , delimiter = ';' )] # table de films with open ( 'data/Film.csv' , newline = '' , encoding = 'utf8' ) as f2 : t_film = [ dict ( ligne ) for ligne in csv . DictReader ( f2 , delimiter = ',' )] # table d'artistes du cin\u00e9ma with open ( 'data/Artiste.csv' , newline = '' , encoding = 'utf8' ) as f2 : t_artiste = [ dict ( ligne ) for ligne in csv . DictReader ( f2 , delimiter = ',' )] Comment fusionner des tables ayant les m\u00eames attributs? \u2693\ufe0e Lorsque des tables poss\u00e8dent les m\u00eames attributs, leur fusion ne pose aucun probl\u00e8me. On utilise l'op\u00e9rateur + ( rencontr\u00e9 dans le cours pr\u00e9c\u00e9dent ) sur les deux tableaux existants. 1 2 3 # On v\u00e9rifie que les deux tables ont les m\u00eames attributs print ( t_2020 [ 0 ] . keys ()) print ( t_2021 [ 0 ] . keys ()) 1 2 dict_keys(['Nombre pr\u00e9noms d\u00e9clar\u00e9s', 'Sexe', 'Annee', 'Prenoms']) dict_keys(['Nombre pr\u00e9noms d\u00e9clar\u00e9s', 'Sexe', 'Annee', 'Prenoms']) 1 2 3 4 t_prenoms = t_2020 + t_2021 print ( len ( t_2020 )) print ( len ( t_2021 )) print ( len ( t_prenoms )) 1 2 3 1271 1270 2541 Comment fusionner des tables ayant des attributs diff\u00e9rents? \u2693\ufe0e On se limite au cas simple o\u00f9 les deux tables ont un attribut en commun. L'op\u00e9ration de fusion de table de donn\u00e9es est appel\u00e9e aussi jointure . 1 2 print ( t_film [ 0 ] . keys ()) print ( t_artiste [ 0 ] . keys ()) 1 2 dict_keys(['idFilm', 'titre', 'ann\u00e9e', 'genre', 'r\u00e9sum\u00e9', 'codePays', 'idArtiste']) dict_keys(['idArtiste', 'nom', 'pr\u00e9nom']) On remarque que les tables Film et Artiste ont l'attribut idArtiste en commun. Affichons un \u00e9l\u00e9ment de chaque table. 1 2 3 4 #Affichage de la structure des deux tables pprint ( t_film [ 0 ]) print () pprint ( t_artiste [ 0 ]) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 {'ann\u00e9e': '1977', 'codePays': 'US', 'genre': 'Aventure', 'idArtiste': '1', 'idFilm': '11', 'r\u00e9sum\u00e9': 'Il y a bien longtemps, dans une galaxie tr\u00e8s lointaine... La ' \"guerre civile fait rage entre l'Empire galactique et l'Alliance \" \"rebelle. Captur\u00e9e par les troupes de choc de l'Empereur men\u00e9es par \" 'le sombre et impitoyable Dark Vador, la princesse Leia Organa ' 'dissimule les plans de l\u2019\u00c9toile Noire, une station spatiale ' 'invuln\u00e9rable, \u00e0 son dro\u00efde R2-D2 avec pour mission de les remettre ' 'au Jedi Obi-Wan Kenobi. Accompagn\u00e9 de son fid\u00e8le compagnon, le ' \"dro\u00efde de protocole C-3PO, R2-D2 s'\u00e9choue sur la plan\u00e8te Tatooine \" 'et termine sa qu\u00eate chez le jeune Luke Skywalker. R\u00eavant de ' 'devenir pilote mais confin\u00e9 aux travaux de la ferme, ce dernier se ' 'lance \u00e0 la recherche de ce myst\u00e9rieux Obi-Wan Kenobi, devenu ' 'ermite au c\u0153ur des montagnes d\u00e9sertiques de Tatooine...', 'titre': 'La Guerre des \u00e9toiles'} {'idArtiste': '1', 'nom': 'Lucas', 'pr\u00e9nom': 'George'} On d\u00e9cide de fusionner les deux tables sur l'attribut idArtiste ( qui sera ici le r\u00e9alisateur du film ). L'algorithme de fusion est le suivant: 1 2 3 4 Pour chaque ligne de la table film: Parcourir chaque ligne de la table artiste. Si les attributs 'idArtiste' sont les m\u00eames: fusionner les lignes et sauver le r\u00e9sultat. Ecrivons d'abord une fonction qui permet de fusionner deux lignes des deux tables pr\u00e9c\u00e9dentes. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 def fusion ( f , a ): \"\"\" Renvoie un dictionnaire, r\u00e9sultat de la fusion des deux lignes e et o; f: ligne de la table film (dictionnaire); a: ligne de la table artiste (dictionnaire); \"\"\" return { 'ann\u00e9e' : f [ 'ann\u00e9e' ], 'codePays' : f [ 'codePays' ], 'genre' : f [ 'genre' ], 'idFilm' : f [ 'idFilm' ], 'r\u00e9sum\u00e9' : f [ 'r\u00e9sum\u00e9' ], 'titre' : f [ 'titre' ], 'nom' : a [ 'nom' ], 'pr\u00e9nom' : a [ 'pr\u00e9nom' ]} On peut impl\u00e9menter l'algorithme d\u00e9crit pr\u00e9c\u00e9demment de deux mani\u00e8res en python: en utilisant le type list de python et sa m\u00e9thode append ( qui permet d'ajouter un \u00e9l\u00e9ment \u00e0 la fin de la liste ); en utilisant un tableau construit en compr\u00e9hension. 1 2 3 4 5 6 7 8 9 10 # 1ere fa\u00e7on def jointure_1 ( tf , ta ): \"\"\" R\u00e9alise la fusion entre tf et ta; renvoie un tableau de dictionnaire\"\"\" t = [] for f in tf : for a in ta : if a [ 'idArtiste' ] == f [ 'idArtiste' ]: t . append ( fusion ( f , a )) return t 1 2 3 t1 = jointure_1 ( t_film , t_artiste ) print ( len ( t1 )) pprint ( t1 [ 0 ]) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 233 {'ann\u00e9e': '1977', 'codePays': 'US', 'genre': 'Aventure', 'idFilm': '11', 'nom': 'Lucas', 'pr\u00e9nom': 'George', 'r\u00e9sum\u00e9': 'Il y a bien longtemps, dans une galaxie tr\u00e8s lointaine... La ' \"guerre civile fait rage entre l'Empire galactique et l'Alliance \" \"rebelle. Captur\u00e9e par les troupes de choc de l'Empereur men\u00e9es par \" 'le sombre et impitoyable Dark Vador, la princesse Leia Organa ' 'dissimule les plans de l\u2019\u00c9toile Noire, une station spatiale ' 'invuln\u00e9rable, \u00e0 son dro\u00efde R2-D2 avec pour mission de les remettre ' 'au Jedi Obi-Wan Kenobi. Accompagn\u00e9 de son fid\u00e8le compagnon, le ' \"dro\u00efde de protocole C-3PO, R2-D2 s'\u00e9choue sur la plan\u00e8te Tatooine \" 'et termine sa qu\u00eate chez le jeune Luke Skywalker. R\u00eavant de ' 'devenir pilote mais confin\u00e9 aux travaux de la ferme, ce dernier se ' 'lance \u00e0 la recherche de ce myst\u00e9rieux Obi-Wan Kenobi, devenu ' 'ermite au c\u0153ur des montagnes d\u00e9sertiques de Tatooine...', 'titre': 'La Guerre des \u00e9toiles'} 1 2 3 4 5 6 # 2eme fa\u00e7on (plus \u00e9l\u00e9gante) def jointure_2 ( tf , ta ): \"\"\" R\u00e9alise la fusion entre tf et ta; renvoie un tableau de dictionnaire\"\"\" t = [ fusion ( f , a ) for f in tf for a in ta if a [ 'idArtiste' ] == f [ 'idArtiste' ]] return t 1 2 3 t2 = jointure_1 ( t_film , t_artiste ) print ( len ( t2 )) pprint ( t2 [ 0 ]) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 233 {'ann\u00e9e': '1977', 'codePays': 'US', 'genre': 'Aventure', 'idFilm': '11', 'nom': 'Lucas', 'pr\u00e9nom': 'George', 'r\u00e9sum\u00e9': 'Il y a bien longtemps, dans une galaxie tr\u00e8s lointaine... La ' \"guerre civile fait rage entre l'Empire galactique et l'Alliance \" \"rebelle. Captur\u00e9e par les troupes de choc de l'Empereur men\u00e9es par \" 'le sombre et impitoyable Dark Vador, la princesse Leia Organa ' 'dissimule les plans de l\u2019\u00c9toile Noire, une station spatiale ' 'invuln\u00e9rable, \u00e0 son dro\u00efde R2-D2 avec pour mission de les remettre ' 'au Jedi Obi-Wan Kenobi. Accompagn\u00e9 de son fid\u00e8le compagnon, le ' \"dro\u00efde de protocole C-3PO, R2-D2 s'\u00e9choue sur la plan\u00e8te Tatooine \" 'et termine sa qu\u00eate chez le jeune Luke Skywalker. R\u00eavant de ' 'devenir pilote mais confin\u00e9 aux travaux de la ferme, ce dernier se ' 'lance \u00e0 la recherche de ce myst\u00e9rieux Obi-Wan Kenobi, devenu ' 'ermite au c\u0153ur des montagnes d\u00e9sertiques de Tatooine...', 'titre': 'La Guerre des \u00e9toiles'} R\u00e9sum\u00e9 Python poss\u00e8de une fonction de tri sorted qui retourne un tableau tri\u00e9, par d\u00e9faut par ordre croissant. Pour trier un tableau de dictionnaires, on doit utiliser le param\u00e8tre key qui indique \u00e0 la fonction sorted le nom d'une fonction qui retournera un ou des crit\u00e8res de tri. Pour fusionner deux tables ayant les m\u00eames attributs on utilise simplement la concat\u00e9nation (+) de tableaux. Si on a un attribut en commun, on utilise un algorithme adapt\u00e9 pour r\u00e9aliser la jointure","title":"COURS 6"},{"location":"NSI1/S5/S5C6.html#tri-fusion-de-tables","text":"","title":"TRI &amp; FUSION DE TABLES"},{"location":"NSI1/S5/S5C6.html#tri-dune-table-en-python","text":"Lorsqu'on manipule des donn\u00e9es en tables, il est fr\u00e9quent de vouloir les trier . Le langage python offre quelques possibilit\u00e9s de tri: m\u00e9thode sort des tableaux; fonction sorted de la librairie standard - qui sera privil\u00e9gi\u00e9e ici -.","title":"Tri d'une table en python"},{"location":"NSI1/S5/S5C6.html#quels-objets-peuvent-etre-compares","text":"Python sait comparer \u00e9videmment des nombres et des chaines de caract\u00e8res , mais aussi des p-uplets . Voici quelques exemples: 1 2 # Comparaison de chaine print ( \"'abc' > 'aac': \" , 'abc' > 'aac' ) 1 'abc' > 'aac': True 1 2 3 4 5 # Comparaison de p-uplets print ( '(5,4) > (5,3): ' , ( 5 , 4 ) > ( 5 , 3 )) print ( '(5,4,6) > (5,4,8): ' , ( 5 , 4 , 6 ) > ( 5 , 4 , 8 )) print ( \"(6, 'c') < (5, 'c'): \" , ( 6 , 'c' ) < ( 5 , 'c' )) print ( \"(6, 'c') < (6, 'e'): \" , ( 6 , 'c' ) < ( 6 , 'e' )) 1 2 3 4 (5,4) > (5,3): True (5,4,6) > (5,4,8): False (6, 'c') < (5, 'c'): False (6, 'c') < (6, 'e'): True Qu'en est-il des p-uplets nomm\u00e9s repr\u00e9sent\u00e9s par des dictionnaires? 1 2 3 e1 = { 'nom' : 'bob' , 'age' : 20 , 'domaine' : 'ia' } e2 = { 'nom' : 'alice' , 'age' : 23 , 'domaine' : 'algorithmique' } print ( 'e1 < e2: ' , e1 < e2 ) 1 2 3 4 5 6 7 8 9 10 11 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-3-7ea8c292dfb3> in <module> 1 e1 = {'nom':'bob', 'age':20, 'domaine':'ia'} 2 e2 = {'nom':'alice', 'age':23, 'domaine':'algorithmique'} ----> 3 print('e1 < e2: ', e1 < e2) TypeError: '<' not supported between instances of 'dict' and 'dict' Les p-uplets nomm\u00e9s impl\u00e9ment\u00e9s en 1\u00e8re par des dictionnaires ne peuvent pas \u00eatre compar\u00e9s .","title":"Quels objets peuvent \u00eatre compar\u00e9s ?"},{"location":"NSI1/S5/S5C6.html#comment-utiliser-la-fonction-sorted-de-la-librairie-standard","text":"La fonction sorted prend en param\u00e8tre obligatoire un it\u00e9rable , comme un tableau ou un tuple par exemple, et renvoie un nouveau tableau tri\u00e9 par ordre croissant . Application directe L'une des deux instructions suivantes provoque une erreur. Laquelle et pourquoi? 1 2 t1 = sorted ( 8 , 56 , 9 , 2 , 15 ) t2 = sorted (( 8 , 56 , 9 , 2 , 15 )) Que renvoie l'instruction correcte? La fonction sorted poss\u00e8de un param\u00e8tre optionnel key qui est utile lorsque python ne sait pas comparer des objets comme les dictionnaires. On affecte \u00e0 ce param\u00e8tre le nom de la fonction charg\u00e9e d'indiquer la cl\u00e9 suivant laquelle on trie.","title":"Comment utiliser la fonction 'sorted' de la librairie standard?"},{"location":"NSI1/S5/S5C6.html#fusion","text":"L'objectif est de r\u00e9unir dans une seule table les donn\u00e9es de deux tables existantes. On examinera deux cas simples: tables ayant les m\u00eames attributs; tables ayant au moins un attribut en commun 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # les tables de travail import csv from pprint import pprint # table des pr\u00e9noms d'enfants n\u00e9s \u00e0 Paris en 2020 with open ( 'data/prenoms2020.csv' , newline = '' , encoding = 'utf8' ) as f1 : t_2020 = [ dict ( ligne ) for ligne in csv . DictReader ( f1 , delimiter = ';' )] # table des pr\u00e9noms d'enfants n\u00e9s \u00e0 Paris en 2021 with open ( 'data/prenoms2021.csv' , newline = '' , encoding = 'utf8' ) as f2 : t_2021 = [ dict ( ligne ) for ligne in csv . DictReader ( f2 , delimiter = ';' )] # table de films with open ( 'data/Film.csv' , newline = '' , encoding = 'utf8' ) as f2 : t_film = [ dict ( ligne ) for ligne in csv . DictReader ( f2 , delimiter = ',' )] # table d'artistes du cin\u00e9ma with open ( 'data/Artiste.csv' , newline = '' , encoding = 'utf8' ) as f2 : t_artiste = [ dict ( ligne ) for ligne in csv . DictReader ( f2 , delimiter = ',' )]","title":"Fusion"},{"location":"NSI1/S5/S5E1.html","text":"Les tableaux \u2693\ufe0e Extrait NSI 1re Ed. Ellipses Exercice 69 \u2693\ufe0e On souhaite \u00e9crire un programme python permettant de travailler sur la pyramide des \u00e2ges des fran\u00e7ais. Il fait intervenir un tableau PDA = [691165, 710534, 728579, ...] dans lequel la case d'index \\(i\\) contient le nombre de fran\u00e7ais ayant l'\u00e2ge \\(i\\) . 1 2 3 4 5 6 7 8 9 10 PDA = [ 691165 , 710534 , 728579 , ... , 2160 ] # 106 valeurs def examen_pda ( tab_pda , age_min , age_max ): \"\"\" renvoie ... \"\"\" n = 0 for age in range ( age_min , age_max ): n = n + tab_pda [ age ] return n Que fait la fonction examen_pda ? Cette fonction n'est pas tr\u00e8s robuste. En effet, si l'utilisateur l'appelle avec une valeur de age_max plus grande que 106 ( la taille du tableau PDA ), alors le programme va \u00e9chouer suite \u00e0 un acc\u00e8s en dehors des limites du tableau. Am\u00e9liorer ce programme pour que l'utilisateur puisse sp\u00e9cifier une valeur de age_max arbitrairement grande, sans pour autant que le programme n'\u00e9choue. 1 2 3 4 5 6 def examen_pda ( tab_pda , age_min , age_max ): \"\"\" renvoie ... \"\"\" # Supprimer 'pass' et compl\u00e9ter pass Exercice 70 \u2693\ufe0e \u00c9crire une fonction occurrences(v, t) qui renvoie le nombre d'occurrences de la valeur v dans le tableau t . 1 2 3 4 5 6 7 8 def occurences ( v , t ): \"\"\" renvoie le nombre d'occurence de v dans le tableau t v: entier t: tableau non vide \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 2 3 # CELLULE DE TESTS - A DECOMMENTER PUIS EXECUTER assert occurences ( - 1 , [ 2 , 3 , 4 , 5 , - 1 , 6 , 7 , - 1 ]) == 2 print ( \"Valid\u00e9\" ) Exercice 72 \u2693\ufe0e Ecrire une fonction max_tab(t) qui prend un tableau t non vide en param\u00e8tre et qui renvoie l'\u00e9l\u00e9ment maximum de ce tableau. Interdiction d'utiliser la fonction native max de python. 1 2 3 4 5 6 7 8 def max_tab ( t ): \"\"\" renvoie la valeur maximale rencontr\u00e9e dans t t: tableau non vide \"\"\" assert len ( t ) > 0 , \"Erreur: tableau vide\" # Supprimer 'pass' et compl\u00e9ter pass 1 2 3 4 5 # CELLULE DE TESTS - A DECOMMENTER PUIS EXECUTER from random import randint test = [ randint ( - 10 , 10 ) for i in range ( 20 )] assert max_tab ( test ) == max ( test ) print ( \"Valid\u00e9\" ) Exercice 73 \u2693\ufe0e \u00c9crire une fonction hasard qui tire au hasard mille entiers entre 1 et 10 et renvoie ensuite le nombre de fois que chaque nombre a \u00e9t\u00e9 tir\u00e9. Appeler la fonction plusieurs fois. Conseil: penser \u00e0 renvoyer un tableau. 1 2 3 4 5 6 7 8 9 10 from random import randint def hasard (): \"\"\" renvoie le nombre de tirage al\u00e9atoire de nombres compris 1 et 10 \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 2 3 # CELLULE DE TESTS - A DECOMMENTER PUIS EXECUTER assert sum ( hasard ()) == 1000 print ( \"OK\" ) Exercice 74 \u2693\ufe0e En math\u00e9matiques, la tr\u00e8s c\u00e9l\u00e8bre suite de Fibonacci est une s\u00e9quence infinie d'entiers d\u00e9finie de la fa\u00e7on suivante : on part des deux entiers 0 et 1 puis on construit \u00e0 chaque fois l'entier suivant comme la somme des deux entiers pr\u00e9c\u00e9dents . 0, 1, 1, 2, 3, 5, ... \u00c9crire une fonction fibo(k) qui construit puis renvoie un tableau contenant les \\(k\\) premiers termes de la suite. V\u00e9rifier avec la cellule de test. 1 2 3 4 5 6 def fibo ( k ): \"\"\" renvoie les k premiers termes de la suite de fibonacci \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 2 # CELLULE DE TESTS - A DECOMMENTER PUIS EXECUTER assert fibo ( 30 )[ - 1 ] == 514229 Exercice 75 \u2693\ufe0e \u00c9crire une fonction copie(t) qui prend en param\u00e8tre un tableau t et renvoie une copie de ce tableau. Quelle exp\u00e9rience peut-on faire pour s'assurer qu'on ne s'est pas tromp\u00e9 ? 1 2 3 4 5 6 7 def copie ( t ): \"\"\" renvoie une copie de t; t: tableau \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 2 3 4 5 6 # Comment \u00eatre s\u00fbr que c'est une copie ? t1 = [ 1 , 2 , 3 , 4 ] t2 = copie ( t1 ) t2 [ 0 ] = - 100 # On modifie le 1er \u00e9l\u00e9ment de t2 print ( f \"t1 = { t1 } \" ) print ( f \"t2 = { t2 } \" ) Exercice 76 \u2693\ufe0e \u00c9crire une fonction ajout(v, t) qui cr\u00e9e un nouveau tableau contenant d'abord tous les \u00e9l\u00e9ments de t puis v puis qui renvoie ce tableau. 1 2 3 4 5 6 7 8 def ajout ( v , t ): \"\"\" ajoute un \u00e9l\u00e9ment \u00e0 la copie d'un tableau et renvoie ce dernier t: tableau v: \u00e9l\u00e9ment de type quelconque \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 2 3 4 # CELLULE DE TESTS - A DECOMMENTER PUIS EXECUTER assert ajout ( 1 , []) == [ 1 ] assert ajout ( 3 , [ 1 , 2 ]) == [ 1 , 2 , 3 ] print ( \"valid\u00e9\" ) Exercice 77 \u2693\ufe0e \u00c9crire une fonction concatenation(t1, t2) qui cr\u00e9e un nouveau tableau contenant, dans l'ordre, tous les \u00e9l\u00e9ments de t1 puis tous les \u00e9l\u00e9ments de t2 . 1 2 3 4 5 6 7 def concatenation ( t1 , t2 ): \"\"\" renvoie un tableau contenant la concat\u00e9nation de t1 et t2 t1, t2: tableau \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 2 3 4 # CELLULE DE TESTS - A DECOMMENTER PUIS EXECUTER assert concatenation ([ - 1 , 3 ], [ 8 , 90 ]) == [ - 1 , 3 , 8 , 90 ] assert concatenation ([], []) == [] print ( \"Valid\u00e9\" ) Exercice 78 \u2693\ufe0e \u00c9crire une fonction tableau_aleatoire(n, a, b) qui renvoie un tableau de taille n contenant des entiers tir\u00e9s au hasard entre a et b . 1 2 3 4 5 6 7 8 9 10 11 from random import randint def tableau_aleatoire ( n , a , b ): \"\"\" renvoie un tableau de taille n contenant des valeurs al\u00e9atoires n: entier positif a, b: entiers \"\"\" # Supprimer 'pass' et compl\u00e9ter pass Exercice 79 \u2693\ufe0e \u00c9crire une fonction tableau_croissant(n) qui renvoie un tableau de taille n contenant des entiers tir\u00e9s au hasard et ayant la propri\u00e9t\u00e9 d'\u00eatre tri\u00e9 par ordre croissant. Pour faire cela, on pourrait utiliser l'exercice pr\u00e9c\u00e9dent pour construire un tableau al\u00e9atoire, puis le trier avec un algorithme de tri (ce que nous verrons au cours de l'ann\u00e9e en NSI). Il y a n\u00e9anmoins une fa\u00e7on plus simple de proc\u00e9der, consistant \u00e0 remplir le tableau de gauche \u00e0 droite en ajoutant \u00e0 chaque fois un entier positif ou nul \u00e0 l'\u00e9l\u00e9ment pr\u00e9c\u00e9dent . Ainsi, le tableau est tri\u00e9 par construction. 1 2 3 4 5 6 7 def tableau_croissant ( n ): \"\"\" renvoie un tableau croissant de taille n; n: entier positif \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 tableau_croissant ( 8 ) Exercice 80 \u2693\ufe0e \u00c9crire une fonction echange(tab, i, j) qui \u00e9change dans le tableau tab les \u00e9l\u00e9ments aux indices i et j . 1 2 3 4 5 6 7 8 def echange_tab ( tab , i , j ): \"\"\" \u00e9change les \u00e9l\u00e9ments d'indice i et j d'un tableau; tab: tableau non vide i, j: entiers naturels \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 2 3 t = [ 1 , 2 , 3 , 4 , 5 , 6 , 10 ] echange_tab ( t , 1 , 6 ) print ( t ) Exercice 81 \u2693\ufe0e \u00c9crire une fonction somme(tab) qui calcule et renvoie la somme des \u00e9l\u00e9ments d'un tableau d'entiers. En d\u00e9duire une fonction moyenne(tab) qui calcule et renvoie la moyenne des \u00e9l\u00e9ments du tableau tab , suppos\u00e9 non vide. Interdiction d'utiliser des fonctions natives de python . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 def somme ( tab ): \"\"\" renvoie la somme des \u00e9l\u00e9ments d'un tableau; tab: tableau \"\"\" # Supprimer 'pass' et compl\u00e9ter pass def moyenne ( tab ): \"\"\" renvoie la moyenne des \u00e9l\u00e9ments d'un tableau tab: tableau \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 moyenne ([ 10 , 12.5 , 3 , 7.5 ]) Exercice 82 \u2693\ufe0e \u00c9crire une fonction produit(tab) qui calcule et renvoie le produit des \u00e9l\u00e9ments d'un tableau d'entiers. Si le tableau contient 0, la fonction devra renvoyer 0 sans terminer le calcul. Interdiction d'utiliser des fonctions de biblioth\u00e8ques python 1 2 3 4 5 6 7 def produit ( tab ): \"\"\" renvoie le produit des \u00e9l\u00e9ments d'un tableau tab: tableau \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 produit ([ 1 , 2 , 3 , 4 , 5 , 6 ])","title":"EXERCICES E1"},{"location":"NSI1/S5/S5E1.html#les-tableaux","text":"Extrait NSI 1re Ed. Ellipses","title":"Les tableaux"},{"location":"NSI1/S5/S5E1.html#exercice-69","text":"On souhaite \u00e9crire un programme python permettant de travailler sur la pyramide des \u00e2ges des fran\u00e7ais. Il fait intervenir un tableau PDA = [691165, 710534, 728579, ...] dans lequel la case d'index \\(i\\) contient le nombre de fran\u00e7ais ayant l'\u00e2ge \\(i\\) . 1 2 3 4 5 6 7 8 9 10 PDA = [ 691165 , 710534 , 728579 , ... , 2160 ] # 106 valeurs def examen_pda ( tab_pda , age_min , age_max ): \"\"\" renvoie ... \"\"\" n = 0 for age in range ( age_min , age_max ): n = n + tab_pda [ age ] return n Que fait la fonction examen_pda ? Cette fonction n'est pas tr\u00e8s robuste. En effet, si l'utilisateur l'appelle avec une valeur de age_max plus grande que 106 ( la taille du tableau PDA ), alors le programme va \u00e9chouer suite \u00e0 un acc\u00e8s en dehors des limites du tableau. Am\u00e9liorer ce programme pour que l'utilisateur puisse sp\u00e9cifier une valeur de age_max arbitrairement grande, sans pour autant que le programme n'\u00e9choue. 1 2 3 4 5 6 def examen_pda ( tab_pda , age_min , age_max ): \"\"\" renvoie ... \"\"\" # Supprimer 'pass' et compl\u00e9ter pass","title":"Exercice 69"},{"location":"NSI1/S5/S5E1.html#exercice-70","text":"\u00c9crire une fonction occurrences(v, t) qui renvoie le nombre d'occurrences de la valeur v dans le tableau t . 1 2 3 4 5 6 7 8 def occurences ( v , t ): \"\"\" renvoie le nombre d'occurence de v dans le tableau t v: entier t: tableau non vide \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 2 3 # CELLULE DE TESTS - A DECOMMENTER PUIS EXECUTER assert occurences ( - 1 , [ 2 , 3 , 4 , 5 , - 1 , 6 , 7 , - 1 ]) == 2 print ( \"Valid\u00e9\" )","title":"Exercice 70"},{"location":"NSI1/S5/S5E1.html#exercice-72","text":"Ecrire une fonction max_tab(t) qui prend un tableau t non vide en param\u00e8tre et qui renvoie l'\u00e9l\u00e9ment maximum de ce tableau. Interdiction d'utiliser la fonction native max de python. 1 2 3 4 5 6 7 8 def max_tab ( t ): \"\"\" renvoie la valeur maximale rencontr\u00e9e dans t t: tableau non vide \"\"\" assert len ( t ) > 0 , \"Erreur: tableau vide\" # Supprimer 'pass' et compl\u00e9ter pass 1 2 3 4 5 # CELLULE DE TESTS - A DECOMMENTER PUIS EXECUTER from random import randint test = [ randint ( - 10 , 10 ) for i in range ( 20 )] assert max_tab ( test ) == max ( test ) print ( \"Valid\u00e9\" )","title":"Exercice 72"},{"location":"NSI1/S5/S5E1.html#exercice-73","text":"\u00c9crire une fonction hasard qui tire au hasard mille entiers entre 1 et 10 et renvoie ensuite le nombre de fois que chaque nombre a \u00e9t\u00e9 tir\u00e9. Appeler la fonction plusieurs fois. Conseil: penser \u00e0 renvoyer un tableau. 1 2 3 4 5 6 7 8 9 10 from random import randint def hasard (): \"\"\" renvoie le nombre de tirage al\u00e9atoire de nombres compris 1 et 10 \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 2 3 # CELLULE DE TESTS - A DECOMMENTER PUIS EXECUTER assert sum ( hasard ()) == 1000 print ( \"OK\" )","title":"Exercice 73"},{"location":"NSI1/S5/S5E1.html#exercice-74","text":"En math\u00e9matiques, la tr\u00e8s c\u00e9l\u00e8bre suite de Fibonacci est une s\u00e9quence infinie d'entiers d\u00e9finie de la fa\u00e7on suivante : on part des deux entiers 0 et 1 puis on construit \u00e0 chaque fois l'entier suivant comme la somme des deux entiers pr\u00e9c\u00e9dents . 0, 1, 1, 2, 3, 5, ... \u00c9crire une fonction fibo(k) qui construit puis renvoie un tableau contenant les \\(k\\) premiers termes de la suite. V\u00e9rifier avec la cellule de test. 1 2 3 4 5 6 def fibo ( k ): \"\"\" renvoie les k premiers termes de la suite de fibonacci \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 2 # CELLULE DE TESTS - A DECOMMENTER PUIS EXECUTER assert fibo ( 30 )[ - 1 ] == 514229","title":"Exercice 74"},{"location":"NSI1/S5/S5E1.html#exercice-75","text":"\u00c9crire une fonction copie(t) qui prend en param\u00e8tre un tableau t et renvoie une copie de ce tableau. Quelle exp\u00e9rience peut-on faire pour s'assurer qu'on ne s'est pas tromp\u00e9 ? 1 2 3 4 5 6 7 def copie ( t ): \"\"\" renvoie une copie de t; t: tableau \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 2 3 4 5 6 # Comment \u00eatre s\u00fbr que c'est une copie ? t1 = [ 1 , 2 , 3 , 4 ] t2 = copie ( t1 ) t2 [ 0 ] = - 100 # On modifie le 1er \u00e9l\u00e9ment de t2 print ( f \"t1 = { t1 } \" ) print ( f \"t2 = { t2 } \" )","title":"Exercice 75"},{"location":"NSI1/S5/S5E1.html#exercice-76","text":"\u00c9crire une fonction ajout(v, t) qui cr\u00e9e un nouveau tableau contenant d'abord tous les \u00e9l\u00e9ments de t puis v puis qui renvoie ce tableau. 1 2 3 4 5 6 7 8 def ajout ( v , t ): \"\"\" ajoute un \u00e9l\u00e9ment \u00e0 la copie d'un tableau et renvoie ce dernier t: tableau v: \u00e9l\u00e9ment de type quelconque \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 2 3 4 # CELLULE DE TESTS - A DECOMMENTER PUIS EXECUTER assert ajout ( 1 , []) == [ 1 ] assert ajout ( 3 , [ 1 , 2 ]) == [ 1 , 2 , 3 ] print ( \"valid\u00e9\" )","title":"Exercice 76"},{"location":"NSI1/S5/S5E1.html#exercice-77","text":"\u00c9crire une fonction concatenation(t1, t2) qui cr\u00e9e un nouveau tableau contenant, dans l'ordre, tous les \u00e9l\u00e9ments de t1 puis tous les \u00e9l\u00e9ments de t2 . 1 2 3 4 5 6 7 def concatenation ( t1 , t2 ): \"\"\" renvoie un tableau contenant la concat\u00e9nation de t1 et t2 t1, t2: tableau \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 2 3 4 # CELLULE DE TESTS - A DECOMMENTER PUIS EXECUTER assert concatenation ([ - 1 , 3 ], [ 8 , 90 ]) == [ - 1 , 3 , 8 , 90 ] assert concatenation ([], []) == [] print ( \"Valid\u00e9\" )","title":"Exercice 77"},{"location":"NSI1/S5/S5E1.html#exercice-78","text":"\u00c9crire une fonction tableau_aleatoire(n, a, b) qui renvoie un tableau de taille n contenant des entiers tir\u00e9s au hasard entre a et b . 1 2 3 4 5 6 7 8 9 10 11 from random import randint def tableau_aleatoire ( n , a , b ): \"\"\" renvoie un tableau de taille n contenant des valeurs al\u00e9atoires n: entier positif a, b: entiers \"\"\" # Supprimer 'pass' et compl\u00e9ter pass","title":"Exercice 78"},{"location":"NSI1/S5/S5E1.html#exercice-79","text":"\u00c9crire une fonction tableau_croissant(n) qui renvoie un tableau de taille n contenant des entiers tir\u00e9s au hasard et ayant la propri\u00e9t\u00e9 d'\u00eatre tri\u00e9 par ordre croissant. Pour faire cela, on pourrait utiliser l'exercice pr\u00e9c\u00e9dent pour construire un tableau al\u00e9atoire, puis le trier avec un algorithme de tri (ce que nous verrons au cours de l'ann\u00e9e en NSI). Il y a n\u00e9anmoins une fa\u00e7on plus simple de proc\u00e9der, consistant \u00e0 remplir le tableau de gauche \u00e0 droite en ajoutant \u00e0 chaque fois un entier positif ou nul \u00e0 l'\u00e9l\u00e9ment pr\u00e9c\u00e9dent . Ainsi, le tableau est tri\u00e9 par construction. 1 2 3 4 5 6 7 def tableau_croissant ( n ): \"\"\" renvoie un tableau croissant de taille n; n: entier positif \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 tableau_croissant ( 8 )","title":"Exercice 79"},{"location":"NSI1/S5/S5E1.html#exercice-80","text":"\u00c9crire une fonction echange(tab, i, j) qui \u00e9change dans le tableau tab les \u00e9l\u00e9ments aux indices i et j . 1 2 3 4 5 6 7 8 def echange_tab ( tab , i , j ): \"\"\" \u00e9change les \u00e9l\u00e9ments d'indice i et j d'un tableau; tab: tableau non vide i, j: entiers naturels \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 2 3 t = [ 1 , 2 , 3 , 4 , 5 , 6 , 10 ] echange_tab ( t , 1 , 6 ) print ( t )","title":"Exercice 80"},{"location":"NSI1/S5/S5E1.html#exercice-81","text":"\u00c9crire une fonction somme(tab) qui calcule et renvoie la somme des \u00e9l\u00e9ments d'un tableau d'entiers. En d\u00e9duire une fonction moyenne(tab) qui calcule et renvoie la moyenne des \u00e9l\u00e9ments du tableau tab , suppos\u00e9 non vide. Interdiction d'utiliser des fonctions natives de python . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 def somme ( tab ): \"\"\" renvoie la somme des \u00e9l\u00e9ments d'un tableau; tab: tableau \"\"\" # Supprimer 'pass' et compl\u00e9ter pass def moyenne ( tab ): \"\"\" renvoie la moyenne des \u00e9l\u00e9ments d'un tableau tab: tableau \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 moyenne ([ 10 , 12.5 , 3 , 7.5 ])","title":"Exercice 81"},{"location":"NSI1/S5/S5E1.html#exercice-82","text":"\u00c9crire une fonction produit(tab) qui calcule et renvoie le produit des \u00e9l\u00e9ments d'un tableau d'entiers. Si le tableau contient 0, la fonction devra renvoyer 0 sans terminer le calcul. Interdiction d'utiliser des fonctions de biblioth\u00e8ques python 1 2 3 4 5 6 7 def produit ( tab ): \"\"\" renvoie le produit des \u00e9l\u00e9ments d'un tableau tab: tableau \"\"\" # Supprimer 'pass' et compl\u00e9ter pass 1 produit ([ 1 , 2 , 3 , 4 , 5 , 6 ])","title":"Exercice 82"},{"location":"NSI1/S5/S5E2.html","text":"Exercices - Encodage de texte \u2693\ufe0e Compl\u00e9ments python \u2693\ufe0e La fonction ord permet d'avoir le point de code d'un caract\u00e8re, en d\u00e9cimal. On rappelle qu'Unicode est compatible avec l'ascii et l'ascii \u00e9tendu. De ce fait les codes ascii et les points de code correspondent pour les caract\u00e8res de code ascii inf\u00e9rieur \u00e0 255. 1 ord ( 'y' ) 1 121 Une conversion entier \\(\\longrightarrow\\) hexad\u00e9cimal peut \u00eatre r\u00e9alis\u00e9e avec la fonction hex . 1 hex ( 121 ) 1 '0x79' Une cha\u00eene de caract\u00e8res peut \u00eatre index\u00e9e comme les tableaux. On peut alors y r\u00e9aliser des it\u00e9rations. 1 2 3 4 ch1 = \"Ma cha\u00eene\" print ( 'longueur: ' , len ( ch1 )) for i in range ( len ( ch1 )): print ( ch1 [ i ]) 1 2 3 4 5 6 7 8 9 10 longueur: 9 M a c h a \u00ee n e Comme avec les tableaux, on peut aussi r\u00e9aliser une it\u00e9ration sur les \u00e9l\u00e9ments. 1 2 for lettre in ch1 : print ( lettre ) 1 2 3 4 5 6 7 8 9 M a c h a \u00ee n e Exercice 1 \u2693\ufe0e Donner le codage ASCII des deux cha\u00eenes de caract\u00e8res Python ci-dessous. Attention, on ne code pas les marques de cha\u00eene ' ou \" ! 1 'bonjour tout le monde!' 1 2 \"\"\"programmer en Python\"\"\" Exercice 2 \u2693\ufe0e \u00c9crire une fonction printASCII(s) qui renvoie un tableau contenant les codes ASCII au format hexad\u00e9cimal, d'une cha\u00eene de caract\u00e8res s pass\u00e9e en param\u00e8tre. Utiliser cette fonction pour v\u00e9rifier les r\u00e9ponses de l'exercice pr\u00e9c\u00e9dent. On pourra utiliser la cellule suivante en compl\u00e9tant les zones o\u00f9 ... apparaissent . 1 2 3 4 5 6 7 8 9 def printASCII ( s ): \"\"\" renvoie un tableau contenant le code ascii d'une chaine s, sous forme hexad\u00e9cimale; s: chaine (str) \"\"\" code_ascii = [ 0 ] * ... # Cr\u00e9ation d'un tableau de ... \u00e9l\u00e9ments for i in range ( len ( s )): code_ascii [ i ] = ... return ... Exercice 3 \u2693\ufe0e \u00c9crire une fonction printUTF8(s) qui prend une cha\u00eene s en param\u00e8tre et qui renvoie un tableau contenant les octets \u00e9crits en binaire r\u00e9sultant de l'encodage de s en UTF-8. Tester votre fonction sur le mot \u00e9l\u00e9gance . Utiliser la fonction bin_8bits qui permet de convertir un entier \\(n\\) en binaire sur 8 bits (un octet). On pourra utiliser la cellule suivante en compl\u00e9tant les zones o\u00f9 ... apparaissent . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 def bin_8bits ( n ): \"\"\" Renvoie la repr\u00e9sentation binaire de n sur 1 octet. \"\"\" return f \" { n : 08b } \" def printUTF8 ( s ): \"\"\" Renvoie la repr\u00e9sentation binaire d'une cha\u00eene s, encod\u00e9e en utf-8, sous la forme d'un tableau d'octets \u00e9crits en binaire. s: chaine (str) \"\"\" octets = s . encode ( 'utf8' ) # Encodage de s en utf-8 dans un tableau d'octets repr_binaire = [ 0 ] * ... for i in range ( ... ): repr_binaire [ i ] = bin_8bits ( ... ) return ... 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # Cellule de TEST res = [ '11000011' , '10101001' , '01101100' , '11000011' , '10101001' , '01100111' , '01100001' , '01101110' , '01100011' , '01100101' ] assert printUTF8 ( \"\u00e9l\u00e9gance\" ) == res print ( \"Valid\u00e9\" ) Exercice 4** \u2693\ufe0e Ecrire une fonction est_utf8_valide(n1, n2, n3) qui renvoie True si la suite d'octets ( repr\u00e9sent\u00e9e en base 10 ) n1 , n2 , n3 repr\u00e9sente une s\u00e9quence valide UTF-8. Elle renvoie False sinon. Quelques indices Une suite de 3 octets est un encodage UTF-8 valide si elle poss\u00e8de une des formes suivantes: 1110 xxxx 10xx xxxx 10xx xxxx : 1 caract\u00e8re cod\u00e9 sur 3 octets; 110x xxxx 10xx xxxx 0xxx xxxx : 1 caract\u00e8re cod\u00e9 sur 2 octets suivi de 1 caract\u00e8re cod\u00e9 sur 1 octet; 0xxx xxxx 110x xxxx 10xx xxxx : 1 caract\u00e8re cod\u00e9 sur 1 octet suivi de 1 caract\u00e8re cod\u00e9 sur 2 octets; 0xxx xxxx 0xxx xxxx 0xxx xxxx : 3 caract\u00e8res cod\u00e9s chacun sur 1 octet. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 def est_utf8_valide ( n1 , n2 , n3 ): \"\"\" renvoie True si n1, n2, n3 est une suite valide en UTF-8, False sinon. n1, n2, n3: entiers naturels strictement inf\u00e9rieurs \u00e0 256. \"\"\" # On stoppe la fonction si la pr\u00e9condition n'est pas assur\u00e9e. assert n1 < 256 and n2 < 256 and n3 < 256 # Cas 3 & 4 --> le 1er octet est compris entre 0 et 0111 1111 soit 127 en d\u00e9cimal if n1 < ... : if n2 < ... and n3 < 128 : # Cas n\u00b0 4 return True if ( 191 < n2 < 224 ) and ( 127 < n3 < 192 ): # Cas n\u00b0 3 return True # Cas 2 if ... < n1 < ... : if ( 127 < n2 < 192 ) and ( n3 < 128 ): return True # Cas 1 (forc\u00e9) if ( ... < n1 ) and ( 127 < n2 < 192 and 127 < n3 < 192 ): return True return False 1 2 3 4 5 # Cellule de TESTS assert est_utf8_valide ( 227 , 180 , 140 ) assert est_utf8_valide ( 126 , 64 , 100 ) assert not est_utf8_valide ( 198 , 129 , 129 ) print ( \"Valid\u00e9 !\" )","title":"EXERCICES E2"},{"location":"NSI1/S5/S5E2.html#exercices-encodage-de-texte","text":"","title":"Exercices - Encodage de texte"},{"location":"NSI1/S5/S5E2.html#complements-python","text":"La fonction ord permet d'avoir le point de code d'un caract\u00e8re, en d\u00e9cimal. On rappelle qu'Unicode est compatible avec l'ascii et l'ascii \u00e9tendu. De ce fait les codes ascii et les points de code correspondent pour les caract\u00e8res de code ascii inf\u00e9rieur \u00e0 255. 1 ord ( 'y' ) 1 121 Une conversion entier \\(\\longrightarrow\\) hexad\u00e9cimal peut \u00eatre r\u00e9alis\u00e9e avec la fonction hex . 1 hex ( 121 ) 1 '0x79' Une cha\u00eene de caract\u00e8res peut \u00eatre index\u00e9e comme les tableaux. On peut alors y r\u00e9aliser des it\u00e9rations. 1 2 3 4 ch1 = \"Ma cha\u00eene\" print ( 'longueur: ' , len ( ch1 )) for i in range ( len ( ch1 )): print ( ch1 [ i ]) 1 2 3 4 5 6 7 8 9 10 longueur: 9 M a c h a \u00ee n e Comme avec les tableaux, on peut aussi r\u00e9aliser une it\u00e9ration sur les \u00e9l\u00e9ments. 1 2 for lettre in ch1 : print ( lettre ) 1 2 3 4 5 6 7 8 9 M a c h a \u00ee n e","title":"Compl\u00e9ments python"},{"location":"NSI1/S5/S5E2.html#exercice-1","text":"Donner le codage ASCII des deux cha\u00eenes de caract\u00e8res Python ci-dessous. Attention, on ne code pas les marques de cha\u00eene ' ou \" ! 1 'bonjour tout le monde!' 1 2 \"\"\"programmer en Python\"\"\"","title":"Exercice 1"},{"location":"NSI1/S5/S5E2.html#exercice-2","text":"\u00c9crire une fonction printASCII(s) qui renvoie un tableau contenant les codes ASCII au format hexad\u00e9cimal, d'une cha\u00eene de caract\u00e8res s pass\u00e9e en param\u00e8tre. Utiliser cette fonction pour v\u00e9rifier les r\u00e9ponses de l'exercice pr\u00e9c\u00e9dent. On pourra utiliser la cellule suivante en compl\u00e9tant les zones o\u00f9 ... apparaissent . 1 2 3 4 5 6 7 8 9 def printASCII ( s ): \"\"\" renvoie un tableau contenant le code ascii d'une chaine s, sous forme hexad\u00e9cimale; s: chaine (str) \"\"\" code_ascii = [ 0 ] * ... # Cr\u00e9ation d'un tableau de ... \u00e9l\u00e9ments for i in range ( len ( s )): code_ascii [ i ] = ... return ...","title":"Exercice 2"},{"location":"NSI1/S5/S5E2.html#exercice-3","text":"\u00c9crire une fonction printUTF8(s) qui prend une cha\u00eene s en param\u00e8tre et qui renvoie un tableau contenant les octets \u00e9crits en binaire r\u00e9sultant de l'encodage de s en UTF-8. Tester votre fonction sur le mot \u00e9l\u00e9gance . Utiliser la fonction bin_8bits qui permet de convertir un entier \\(n\\) en binaire sur 8 bits (un octet). On pourra utiliser la cellule suivante en compl\u00e9tant les zones o\u00f9 ... apparaissent . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 def bin_8bits ( n ): \"\"\" Renvoie la repr\u00e9sentation binaire de n sur 1 octet. \"\"\" return f \" { n : 08b } \" def printUTF8 ( s ): \"\"\" Renvoie la repr\u00e9sentation binaire d'une cha\u00eene s, encod\u00e9e en utf-8, sous la forme d'un tableau d'octets \u00e9crits en binaire. s: chaine (str) \"\"\" octets = s . encode ( 'utf8' ) # Encodage de s en utf-8 dans un tableau d'octets repr_binaire = [ 0 ] * ... for i in range ( ... ): repr_binaire [ i ] = bin_8bits ( ... ) return ... 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # Cellule de TEST res = [ '11000011' , '10101001' , '01101100' , '11000011' , '10101001' , '01100111' , '01100001' , '01101110' , '01100011' , '01100101' ] assert printUTF8 ( \"\u00e9l\u00e9gance\" ) == res print ( \"Valid\u00e9\" )","title":"Exercice 3"},{"location":"NSI1/S5/S5E2.html#exercice-4","text":"Ecrire une fonction est_utf8_valide(n1, n2, n3) qui renvoie True si la suite d'octets ( repr\u00e9sent\u00e9e en base 10 ) n1 , n2 , n3 repr\u00e9sente une s\u00e9quence valide UTF-8. Elle renvoie False sinon. Quelques indices Une suite de 3 octets est un encodage UTF-8 valide si elle poss\u00e8de une des formes suivantes: 1110 xxxx 10xx xxxx 10xx xxxx : 1 caract\u00e8re cod\u00e9 sur 3 octets; 110x xxxx 10xx xxxx 0xxx xxxx : 1 caract\u00e8re cod\u00e9 sur 2 octets suivi de 1 caract\u00e8re cod\u00e9 sur 1 octet; 0xxx xxxx 110x xxxx 10xx xxxx : 1 caract\u00e8re cod\u00e9 sur 1 octet suivi de 1 caract\u00e8re cod\u00e9 sur 2 octets; 0xxx xxxx 0xxx xxxx 0xxx xxxx : 3 caract\u00e8res cod\u00e9s chacun sur 1 octet. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 def est_utf8_valide ( n1 , n2 , n3 ): \"\"\" renvoie True si n1, n2, n3 est une suite valide en UTF-8, False sinon. n1, n2, n3: entiers naturels strictement inf\u00e9rieurs \u00e0 256. \"\"\" # On stoppe la fonction si la pr\u00e9condition n'est pas assur\u00e9e. assert n1 < 256 and n2 < 256 and n3 < 256 # Cas 3 & 4 --> le 1er octet est compris entre 0 et 0111 1111 soit 127 en d\u00e9cimal if n1 < ... : if n2 < ... and n3 < 128 : # Cas n\u00b0 4 return True if ( 191 < n2 < 224 ) and ( 127 < n3 < 192 ): # Cas n\u00b0 3 return True # Cas 2 if ... < n1 < ... : if ( 127 < n2 < 192 ) and ( n3 < 128 ): return True # Cas 1 (forc\u00e9) if ( ... < n1 ) and ( 127 < n2 < 192 and 127 < n3 < 192 ): return True return False 1 2 3 4 5 # Cellule de TESTS assert est_utf8_valide ( 227 , 180 , 140 ) assert est_utf8_valide ( 126 , 64 , 100 ) assert not est_utf8_valide ( 198 , 129 , 129 ) print ( \"Valid\u00e9 !\" )","title":"Exercice 4**"},{"location":"NSI1/S5/S5E3.html","text":"Types construits - Exercices \u2693\ufe0e Tableau d\u00e9fini en compr\u00e9hension \u2693\ufe0e Que construit l'expression ci-dessous? 1 t = [ i % 3 for i in range ( 100 )] On d\u00e9fini une fonction \\(f\\) telle que: 1 2 3 4 5 def f ( t ): \"\"\" renvoie ...? \"\"\" return [ n for n in t if n > 0 ] Etant donn\u00e9 x = [-5, 2, 3, -7, 42, 7] . Que vaut f(x) ? Utilisation des tableaux en compr\u00e9hension \u2693\ufe0e On souhaite \u00e9crire un programme donnant le graphe d'une fonction \\(f\\) sur un intervalle donn\u00e9. On d\u00e9finit d'abord la fonction \\(f\\) . 1 2 def f ( x ): return x ** 2 + x - 4 Que r\u00e9alise l'instruction X = [0.1 * n for n in range(-30, 31)] ? Construire un tableau Y par compr\u00e9hension, qui correspond \u00e0 l'image de X par \\(f\\) . En d'autres termes, on devra appliquer la fonction \\(f\\) \u00e0 chaque \u00e9l\u00e9ment de X pour construire le tableau Y . 1 2 X = [ 0.1 * n for n in range ( - 30 , 31 )] # ENTRER VOTRE CODE ICI 3 . \u00c9xecuter la cellule ci-dessous. Le r\u00e9sultat obtenu est-il conforme \u00e0 la demande ? 1 2 3 4 5 6 7 8 9 10 import matplotlib.pyplot as plt def tracer ( t_x , t_y ): assert len ( t_x ) == len ( t_y ), \"Erreur: tableaux incoh\u00e9rents\" plt . plot ( t_x , t_y ) plt . grid () plt . show () tracer ( X , Y ) Composantes d'un vecteur \u2693\ufe0e Ecrire une fonction vecteur qui prend en param\u00e8tres deux p-uplets qui correspondent aux coordonn\u00e9es dans le plan de deux points A et B et qui renvoie un p-uplet correspondant aux coordonn\u00e9es du vecteur \\(\\overrightarrow{AB}\\) dans le plan. 1 2 3 4 5 6 7 8 9 10 11 12 13 #Votre code dans cette cellule def vecteur ( pt_A , pt_B ): \"\"\" Renvoie un p-uplet ayant deux composantes correspondant aux coordonn\u00e9es d'un vecteur AB. pt_A, pt_B: tuple \u00e0 deux \u00e9l\u00e9ments, correspondant aux coordonn\u00e9es (xA, yA) et (xB, yB) de deux points A et B. \"\"\" # Indications # pt_A: ce sont les coordonn\u00e9es de A. Exemple: # pt_A = (2, 5); on a donc xA = 2 et yA = 5 # Il en est de m\u00eame pour B; # On doit renvoyer (xB - xA, yB - yA) pass 1 2 # TEST - DECOMMENTER et EXECUTER assert vecteur (( 5 , 1 ), ( 3 , 4 )) == ( - 2 , 3 ), \"La fonction ne passe pas le test\" Trouver le jour correspondant \u00e0 une date \u2693\ufe0e Python poss\u00e8de un module permettant de g\u00e9rer les dates. Il s'agit du module datetime . On y trouve, entre autres, une classe ( ce mot sera d\u00e9fini en terminale ) qui permet la cr\u00e9ation d'objet date \u00e0 partir d'entiers naturels repr\u00e9sentant l'ann\u00e9e, le mois et le jour . On y trouve aussi une m\u00e9thode today() dont on verra une utilisation plus loin. Par exemple, pour cr\u00e9er un objet date correspondant au 31 d\u00e9cembre 2019, on proc\u00e8dera de la mani\u00e8re suivante: 1 2 3 4 from datetime import date d = date ( 2019 , 12 , 31 ) Les attributs year ( ann\u00e9e ), month ( mois ) et day ( jour ) d'un objet date d peuvent \u00eatre obtenus par d.year , d.month et d.day . 1 . Consulter la documentation relative aux objets de type date et notamment la m\u00e9thode today() et weekday() . Indication: utiliser la fonction help de python. 2 . \u00c9x\u00e9cuter la cellule suivante qui utilise des objets date . 1 2 3 4 5 6 7 8 from datetime import date d1 = date ( 2019 , 12 , 31 ) d2 = date . today () # date d'aujourd'hui print ( d1 . day , '/' , d1 . month , '/' , d1 . year ) print ( \"Aujourd'hui, on est le \" , end = '' ) print ( d2 . day , '/' , d2 . month , '/' , d2 . year ) 3 . \u00c0 partir des exemples pr\u00e9c\u00e9dents, cr\u00e9er un objet date_an de type date et correspondant \u00e0 votre date d'anniversaire. 1 2 3 # \u00c0 compl\u00e9ter date_an = ... 4 . \u00c9crire une fonction trouver_jour ( en compl\u00e9tant la cellule suivante ) qui prend en param\u00e8tre un objet de type date et qui renvoie un p-uplet \u00e0 4 composantes, qui sont dans l'ordre: le jour, ici une chaine de caract\u00e8res valant 'lundi', 'mardi', etc. le jour dans le mois, ici un entier valant 1, 2, .., 30 ou 31 selon le mois; le mois, une cha\u00eene de caract\u00e8re valant 'janvier', 'f\u00e9vrier', etc. l'ann\u00e9e, un entier positif. Aide: m\u00e9thode weekday() Cette m\u00e9thode permet d'obtenir le jour correspondant \u00e0 une date . Par exemple, le premier jour de l'an 2000 correspondait \u00e0 : 1 2 3 4 5 6 from datetime import date d2000 = date ( 2000 , 1 , 1 ) print ( d2000 . weekday ()) 5 D'apr\u00e8s la documentation, si lundi correspond \u00e0 0 alors 5 correspond \u00e0 un samedi 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #Votre code ici def trouver_jour ( d ): \"\"\" Renvoie le jour sous la forme d'un p-uplet \u00e0 4 composantes: jour de la semaine (string), jour dans le mois (int), mois (int) et ann\u00e9e (int). d: objet de type date \"\"\" # Constantes de type p-uplet \u00e0 utiliser SEMAINE = ( 'lundi' , 'mardi' , 'mercredi' , 'jeudi' , 'vendredi' , 'samedi' , 'dimanche' ) MOIS = ( 'janvier' , 'f\u00e9vrier' , 'mars' , 'avril' , 'mai' , 'juin' , 'juillet' , 'ao\u00fbt' , 'septembre' , 'octobre' , 'novembre' , 'd\u00e9cembre' ) #A compl\u00e9ter pass 1 2 # TEST - DECOMMENTER et EXECUTER assert trouver_jour ( date ( 2021 , 12 , 6 )) == ( 'lundi' , 6 , 'd\u00e9cembre' , 2021 ), \"La fonction ne passe pas le test\" 5 . Trouver le jour de votre naissance. 1 # Votre code ici Analyse d'un tableau de notes \u2693\ufe0e On souhaite analyser les notes obtenues par un groupe de sp\u00e9cialit\u00e9 NSI. Ces r\u00e9sultats sont mod\u00e9lis\u00e9s sous la forme d'un tableau de nombres flottants compris entre 0 et 20. Ecrire une fonction analyse_note qui prend comme param\u00e8tre un tableau de notes et qui renvoie un p-uplet compos\u00e9 de la m\u00e9diane, la moyenne et l'\u00e9cart type. On utilisera des fonctions disponibles dans la librairie standard de python, plus pr\u00e9cisemment dans le module statistics : median , mean et stdev . Prendre connaissance de la documentation sur les fonctions median , mean et stdev du module statistics . L'\u00e9cart type est d\u00e9fini comme la racine carr\u00e9e de la variance. La fonction racine carr\u00e9e sqrt peut \u00eatre import\u00e9e depuis le module math . Compl\u00e9ter la fonction analyse_note dans la cellule d\u00e9j\u00e0 pr\u00e9par\u00e9e ci-dessous, puis tester votre code. 1 #1. Afficher l'aide sur les fonctions median, mean et variance du module statistics 1 2 3 4 5 6 7 8 9 10 11 12 #2. Votre code dans cette cellule from math import sqrt from statistics import median , mean , stdev def analyse_note ( t ): \"\"\" Renvoie un p-uplet compos\u00e9 de la m\u00e9diane, la moyenne et l'\u00e9cart type d'\u00e9chantillon de notes. t: tableau de nombres flottants compris entre 0.0 et 20.0 \"\"\" #A compl\u00e9ter pass 1 2 3 4 5 6 7 8 9 # TEST - DECOMMENTER et EXECUTER from math import fabs notes = [ 15 , 10 , 3 , 9 , 5 , 13 , 2 ] epsilon = 1e-5 assert fabs ( analyse_note ( notes )[ 0 ] - 9.0 ) < epsilon , \"La fonction ne passe pas le test\" assert fabs ( analyse_note ( notes )[ 1 ] - 8.14285 ) < epsilon , \"La fonction ne passe pas le test\" assert fabs ( analyse_note ( notes )[ 2 ] - 4.98091 ) < epsilon , \"La fonction ne passe pas le test\" It\u00e9rer sur les \u00e9l\u00e9ments d'un dictionnaire \u2693\ufe0e Au zoo de Beauval, il y a 5 \u00e9l\u00e9phants d'Asie, 17 \u00e9cureuils d'Asie, 2 pandas d'Asie, etc. On mod\u00e9lise cet inventaire avec un dictionnaire, de la fa\u00e7on suivante: 1 2 3 4 5 6 zoo_Beauval = { \"\u00e9l\u00e9phant\" : ( \"Asie\" , 5 ), \"\u00e9cureuil\" : ( \"Asie\" , 17 ), \"panda\" : ( \"Asie\" , 2 ), \"hippopotame\" : ( \"Afrique\" , 7 ), \"girafe\" : ( \"Afrique\" , 4 )} De la m\u00eame fa\u00e7on on repr\u00e9sente le zoo de La Fl\u00e8che: 1 2 3 4 5 zoo_LaFleche = { \"ours\" : ( \"Europe\" , 4 ), \"tigre\" : ( \"Asie\" , 7 ), \"hippopotame\" : ( \"Afrique\" , 3 ), \"girafe\" : ( \"Afrique\" , 11 )} 1 2 3 4 5 6 maxi = 0 nom_animal = '' for categorie in zoo_Beauval . items (): if categorie [ 1 ][ 1 ] > maxi : maxi = categorie [ 1 ][ 1 ] nom_animal = categorie [ 0 ] 1 2 3 4 5 Asie Asie Asie Afrique Afrique On souhaite \u00e9crire une fonction plus_grand_nombre qui prend un zoo en param\u00e8tre et qui retourne le nom de l'animal le plus repr\u00e9sent\u00e9 dans ce zoo. 1 . Quel type d'it\u00e9ration doit-on utiliser dans cette fonction? for cle in d.keys() for val in d.values() for cle,val in d.items() Aucune it\u00e9ration 2 . \u00c9crire cette fonction 1 2 3 4 5 6 7 #Votre code dans cette cellule def plus_grand_nombre ( zoo ): \"\"\" Renvoie le nom de l'animal (string) le plus repr\u00e9sent\u00e9 dans le zoo pass\u00e9 en param\u00e8tre. zoo: dictionnaire \"\"\" pass 1 2 3 # TEST - DECOMMENTER et EXECUTER assert plus_grand_nombre ( zoo_LaFleche ) == \"girafe\" , \"La fonction ne passe pas le test\" assert plus_grand_nombre ( zoo_Beauval ) == \"\u00e9cureuil\" , \"La fonction ne passe pas le test\" 3 . On souhaite \u00e9crire une fonction nombre_total qui prend en param\u00e8tres un zoo et un nom de continent. Cette fonction doit renvoyer le nombre total d'animaux originaires de ce continent. Quel type d'it\u00e9ration doit-on utiliser dans cette fonction? for cle in d.keys() for val in d.values() for cle,val in d.items() Aucune it\u00e9ration 4 . \u00c9crire cette fonction 1 2 3 4 5 6 7 8 9 10 #Votre code dans cette cellule def nombre_total ( zoo , continent ): \"\"\" Renvoie le nombre total d'animaux (entier naturel) pr\u00e9sents dans le zoo et originaire du continent. zoo: dictionnaire continent: string \"\"\" #A compl\u00e9ter pass 1 2 3 # TEST - DECOMMENTER et EXECUTER assert nombre_total ( zoo_LaFleche , \"Afrique\" ) == 14 , \"La fonction ne passe pas le test\" assert nombre_total ( zoo_Beauval , \"Asie\" ) == 24 , \"La fonction ne passe pas le test\" 5 . On souhaite \u00e9crire une fonction nombre qui prend en param\u00e8tres un zoo et un nom d'animal. La fonction doit renvoyer le nombre de repr\u00e9sentant de cet animal (entier naturel) dans le zoo. Quel type d'it\u00e9ration doit-on utiliser dans cette fonction? for cle in d.keys() for val in d.values() for cle,val in d.items() Aucune it\u00e9ration 6 . \u00c9crire cette fonction 1 2 3 4 5 6 7 8 9 10 #Votre code dans cette cellule def nombre ( zoo , animal ): \"\"\" Renvoie le nombre total d'animaux (entier naturel) pr\u00e9sents dans le zoo et originaire du continent. zoo: dictionnaire continent: string \"\"\" #A compl\u00e9ter pass 1 2 3 # TEST - DECOMMENTER et EXECUTER assert nombre_total ( zoo_LaFleche , \"Afrique\" ) == 14 , \"La fonction ne passe pas le test\" assert nombre_total ( zoo_Beauval , \"Asie\" ) == 24 , \"La fonction ne passe pas le test\"","title":"EXERCICES E3"},{"location":"NSI1/S5/S5E3.html#types-construits-exercices","text":"","title":"Types construits - Exercices"},{"location":"NSI1/S5/S5E3.html#tableau-defini-en-comprehension","text":"Que construit l'expression ci-dessous? 1 t = [ i % 3 for i in range ( 100 )] On d\u00e9fini une fonction \\(f\\) telle que: 1 2 3 4 5 def f ( t ): \"\"\" renvoie ...? \"\"\" return [ n for n in t if n > 0 ] Etant donn\u00e9 x = [-5, 2, 3, -7, 42, 7] . Que vaut f(x) ?","title":"Tableau d\u00e9fini en compr\u00e9hension"},{"location":"NSI1/S5/S5E3.html#utilisation-des-tableaux-en-comprehension","text":"On souhaite \u00e9crire un programme donnant le graphe d'une fonction \\(f\\) sur un intervalle donn\u00e9. On d\u00e9finit d'abord la fonction \\(f\\) . 1 2 def f ( x ): return x ** 2 + x - 4 Que r\u00e9alise l'instruction X = [0.1 * n for n in range(-30, 31)] ? Construire un tableau Y par compr\u00e9hension, qui correspond \u00e0 l'image de X par \\(f\\) . En d'autres termes, on devra appliquer la fonction \\(f\\) \u00e0 chaque \u00e9l\u00e9ment de X pour construire le tableau Y . 1 2 X = [ 0.1 * n for n in range ( - 30 , 31 )] # ENTRER VOTRE CODE ICI 3 . \u00c9xecuter la cellule ci-dessous. Le r\u00e9sultat obtenu est-il conforme \u00e0 la demande ? 1 2 3 4 5 6 7 8 9 10 import matplotlib.pyplot as plt def tracer ( t_x , t_y ): assert len ( t_x ) == len ( t_y ), \"Erreur: tableaux incoh\u00e9rents\" plt . plot ( t_x , t_y ) plt . grid () plt . show () tracer ( X , Y )","title":"Utilisation des tableaux en compr\u00e9hension"},{"location":"NSI1/S5/S5E3.html#composantes-dun-vecteur","text":"Ecrire une fonction vecteur qui prend en param\u00e8tres deux p-uplets qui correspondent aux coordonn\u00e9es dans le plan de deux points A et B et qui renvoie un p-uplet correspondant aux coordonn\u00e9es du vecteur \\(\\overrightarrow{AB}\\) dans le plan. 1 2 3 4 5 6 7 8 9 10 11 12 13 #Votre code dans cette cellule def vecteur ( pt_A , pt_B ): \"\"\" Renvoie un p-uplet ayant deux composantes correspondant aux coordonn\u00e9es d'un vecteur AB. pt_A, pt_B: tuple \u00e0 deux \u00e9l\u00e9ments, correspondant aux coordonn\u00e9es (xA, yA) et (xB, yB) de deux points A et B. \"\"\" # Indications # pt_A: ce sont les coordonn\u00e9es de A. Exemple: # pt_A = (2, 5); on a donc xA = 2 et yA = 5 # Il en est de m\u00eame pour B; # On doit renvoyer (xB - xA, yB - yA) pass 1 2 # TEST - DECOMMENTER et EXECUTER assert vecteur (( 5 , 1 ), ( 3 , 4 )) == ( - 2 , 3 ), \"La fonction ne passe pas le test\"","title":"Composantes d'un vecteur"},{"location":"NSI1/S5/S5E3.html#trouver-le-jour-correspondant-a-une-date","text":"Python poss\u00e8de un module permettant de g\u00e9rer les dates. Il s'agit du module datetime . On y trouve, entre autres, une classe ( ce mot sera d\u00e9fini en terminale ) qui permet la cr\u00e9ation d'objet date \u00e0 partir d'entiers naturels repr\u00e9sentant l'ann\u00e9e, le mois et le jour . On y trouve aussi une m\u00e9thode today() dont on verra une utilisation plus loin. Par exemple, pour cr\u00e9er un objet date correspondant au 31 d\u00e9cembre 2019, on proc\u00e8dera de la mani\u00e8re suivante: 1 2 3 4 from datetime import date d = date ( 2019 , 12 , 31 ) Les attributs year ( ann\u00e9e ), month ( mois ) et day ( jour ) d'un objet date d peuvent \u00eatre obtenus par d.year , d.month et d.day . 1 . Consulter la documentation relative aux objets de type date et notamment la m\u00e9thode today() et weekday() . Indication: utiliser la fonction help de python. 2 . \u00c9x\u00e9cuter la cellule suivante qui utilise des objets date . 1 2 3 4 5 6 7 8 from datetime import date d1 = date ( 2019 , 12 , 31 ) d2 = date . today () # date d'aujourd'hui print ( d1 . day , '/' , d1 . month , '/' , d1 . year ) print ( \"Aujourd'hui, on est le \" , end = '' ) print ( d2 . day , '/' , d2 . month , '/' , d2 . year ) 3 . \u00c0 partir des exemples pr\u00e9c\u00e9dents, cr\u00e9er un objet date_an de type date et correspondant \u00e0 votre date d'anniversaire. 1 2 3 # \u00c0 compl\u00e9ter date_an = ... 4 . \u00c9crire une fonction trouver_jour ( en compl\u00e9tant la cellule suivante ) qui prend en param\u00e8tre un objet de type date et qui renvoie un p-uplet \u00e0 4 composantes, qui sont dans l'ordre: le jour, ici une chaine de caract\u00e8res valant 'lundi', 'mardi', etc. le jour dans le mois, ici un entier valant 1, 2, .., 30 ou 31 selon le mois; le mois, une cha\u00eene de caract\u00e8re valant 'janvier', 'f\u00e9vrier', etc. l'ann\u00e9e, un entier positif. Aide: m\u00e9thode weekday() Cette m\u00e9thode permet d'obtenir le jour correspondant \u00e0 une date . Par exemple, le premier jour de l'an 2000 correspondait \u00e0 : 1 2 3 4 5 6 from datetime import date d2000 = date ( 2000 , 1 , 1 ) print ( d2000 . weekday ()) 5 D'apr\u00e8s la documentation, si lundi correspond \u00e0 0 alors 5 correspond \u00e0 un samedi 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #Votre code ici def trouver_jour ( d ): \"\"\" Renvoie le jour sous la forme d'un p-uplet \u00e0 4 composantes: jour de la semaine (string), jour dans le mois (int), mois (int) et ann\u00e9e (int). d: objet de type date \"\"\" # Constantes de type p-uplet \u00e0 utiliser SEMAINE = ( 'lundi' , 'mardi' , 'mercredi' , 'jeudi' , 'vendredi' , 'samedi' , 'dimanche' ) MOIS = ( 'janvier' , 'f\u00e9vrier' , 'mars' , 'avril' , 'mai' , 'juin' , 'juillet' , 'ao\u00fbt' , 'septembre' , 'octobre' , 'novembre' , 'd\u00e9cembre' ) #A compl\u00e9ter pass 1 2 # TEST - DECOMMENTER et EXECUTER assert trouver_jour ( date ( 2021 , 12 , 6 )) == ( 'lundi' , 6 , 'd\u00e9cembre' , 2021 ), \"La fonction ne passe pas le test\" 5 . Trouver le jour de votre naissance. 1 # Votre code ici","title":"Trouver le jour correspondant \u00e0 une date"},{"location":"NSI1/S5/S5E3.html#analyse-dun-tableau-de-notes","text":"On souhaite analyser les notes obtenues par un groupe de sp\u00e9cialit\u00e9 NSI. Ces r\u00e9sultats sont mod\u00e9lis\u00e9s sous la forme d'un tableau de nombres flottants compris entre 0 et 20. Ecrire une fonction analyse_note qui prend comme param\u00e8tre un tableau de notes et qui renvoie un p-uplet compos\u00e9 de la m\u00e9diane, la moyenne et l'\u00e9cart type. On utilisera des fonctions disponibles dans la librairie standard de python, plus pr\u00e9cisemment dans le module statistics : median , mean et stdev . Prendre connaissance de la documentation sur les fonctions median , mean et stdev du module statistics . L'\u00e9cart type est d\u00e9fini comme la racine carr\u00e9e de la variance. La fonction racine carr\u00e9e sqrt peut \u00eatre import\u00e9e depuis le module math . Compl\u00e9ter la fonction analyse_note dans la cellule d\u00e9j\u00e0 pr\u00e9par\u00e9e ci-dessous, puis tester votre code. 1 #1. Afficher l'aide sur les fonctions median, mean et variance du module statistics 1 2 3 4 5 6 7 8 9 10 11 12 #2. Votre code dans cette cellule from math import sqrt from statistics import median , mean , stdev def analyse_note ( t ): \"\"\" Renvoie un p-uplet compos\u00e9 de la m\u00e9diane, la moyenne et l'\u00e9cart type d'\u00e9chantillon de notes. t: tableau de nombres flottants compris entre 0.0 et 20.0 \"\"\" #A compl\u00e9ter pass 1 2 3 4 5 6 7 8 9 # TEST - DECOMMENTER et EXECUTER from math import fabs notes = [ 15 , 10 , 3 , 9 , 5 , 13 , 2 ] epsilon = 1e-5 assert fabs ( analyse_note ( notes )[ 0 ] - 9.0 ) < epsilon , \"La fonction ne passe pas le test\" assert fabs ( analyse_note ( notes )[ 1 ] - 8.14285 ) < epsilon , \"La fonction ne passe pas le test\" assert fabs ( analyse_note ( notes )[ 2 ] - 4.98091 ) < epsilon , \"La fonction ne passe pas le test\"","title":"Analyse d'un tableau de notes"},{"location":"NSI1/S5/S5E3.html#iterer-sur-les-elements-dun-dictionnaire","text":"Au zoo de Beauval, il y a 5 \u00e9l\u00e9phants d'Asie, 17 \u00e9cureuils d'Asie, 2 pandas d'Asie, etc. On mod\u00e9lise cet inventaire avec un dictionnaire, de la fa\u00e7on suivante: 1 2 3 4 5 6 zoo_Beauval = { \"\u00e9l\u00e9phant\" : ( \"Asie\" , 5 ), \"\u00e9cureuil\" : ( \"Asie\" , 17 ), \"panda\" : ( \"Asie\" , 2 ), \"hippopotame\" : ( \"Afrique\" , 7 ), \"girafe\" : ( \"Afrique\" , 4 )} De la m\u00eame fa\u00e7on on repr\u00e9sente le zoo de La Fl\u00e8che: 1 2 3 4 5 zoo_LaFleche = { \"ours\" : ( \"Europe\" , 4 ), \"tigre\" : ( \"Asie\" , 7 ), \"hippopotame\" : ( \"Afrique\" , 3 ), \"girafe\" : ( \"Afrique\" , 11 )} 1 2 3 4 5 6 maxi = 0 nom_animal = '' for categorie in zoo_Beauval . items (): if categorie [ 1 ][ 1 ] > maxi : maxi = categorie [ 1 ][ 1 ] nom_animal = categorie [ 0 ] 1 2 3 4 5 Asie Asie Asie Afrique Afrique On souhaite \u00e9crire une fonction plus_grand_nombre qui prend un zoo en param\u00e8tre et qui retourne le nom de l'animal le plus repr\u00e9sent\u00e9 dans ce zoo. 1 . Quel type d'it\u00e9ration doit-on utiliser dans cette fonction? for cle in d.keys() for val in d.values() for cle,val in d.items() Aucune it\u00e9ration 2 . \u00c9crire cette fonction 1 2 3 4 5 6 7 #Votre code dans cette cellule def plus_grand_nombre ( zoo ): \"\"\" Renvoie le nom de l'animal (string) le plus repr\u00e9sent\u00e9 dans le zoo pass\u00e9 en param\u00e8tre. zoo: dictionnaire \"\"\" pass 1 2 3 # TEST - DECOMMENTER et EXECUTER assert plus_grand_nombre ( zoo_LaFleche ) == \"girafe\" , \"La fonction ne passe pas le test\" assert plus_grand_nombre ( zoo_Beauval ) == \"\u00e9cureuil\" , \"La fonction ne passe pas le test\" 3 . On souhaite \u00e9crire une fonction nombre_total qui prend en param\u00e8tres un zoo et un nom de continent. Cette fonction doit renvoyer le nombre total d'animaux originaires de ce continent. Quel type d'it\u00e9ration doit-on utiliser dans cette fonction? for cle in d.keys() for val in d.values() for cle,val in d.items() Aucune it\u00e9ration 4 . \u00c9crire cette fonction 1 2 3 4 5 6 7 8 9 10 #Votre code dans cette cellule def nombre_total ( zoo , continent ): \"\"\" Renvoie le nombre total d'animaux (entier naturel) pr\u00e9sents dans le zoo et originaire du continent. zoo: dictionnaire continent: string \"\"\" #A compl\u00e9ter pass 1 2 3 # TEST - DECOMMENTER et EXECUTER assert nombre_total ( zoo_LaFleche , \"Afrique\" ) == 14 , \"La fonction ne passe pas le test\" assert nombre_total ( zoo_Beauval , \"Asie\" ) == 24 , \"La fonction ne passe pas le test\" 5 . On souhaite \u00e9crire une fonction nombre qui prend en param\u00e8tres un zoo et un nom d'animal. La fonction doit renvoyer le nombre de repr\u00e9sentant de cet animal (entier naturel) dans le zoo. Quel type d'it\u00e9ration doit-on utiliser dans cette fonction? for cle in d.keys() for val in d.values() for cle,val in d.items() Aucune it\u00e9ration 6 . \u00c9crire cette fonction 1 2 3 4 5 6 7 8 9 10 #Votre code dans cette cellule def nombre ( zoo , animal ): \"\"\" Renvoie le nombre total d'animaux (entier naturel) pr\u00e9sents dans le zoo et originaire du continent. zoo: dictionnaire continent: string \"\"\" #A compl\u00e9ter pass 1 2 3 # TEST - DECOMMENTER et EXECUTER assert nombre_total ( zoo_LaFleche , \"Afrique\" ) == 14 , \"La fonction ne passe pas le test\" assert nombre_total ( zoo_Beauval , \"Asie\" ) == 24 , \"La fonction ne passe pas le test\"","title":"It\u00e9rer sur les \u00e9l\u00e9ments d'un dictionnaire"},{"location":"NSI1/S5/S5E4.html","text":"Donn\u00e9es tabul\u00e9es - Exercices \u2693\ufe0e Fichiers de travail \u00e0 t\u00e9l\u00e9charger \u2693\ufe0e Lien Exercice 1: Utilisation d'un tableau de dictionnaires \u2693\ufe0e On utilise le fichier csv data/rapworld.csv rencontr\u00e9 dans le cours 4 . On importe ce fichier vers une structure de tableau de dictionnaire. 1 2 3 4 5 6 7 8 9 10 11 12 # Cellule \u00e0 ex\u00e9cuter import csv def import_table ( f ): \"\"\" Importe le fichier csv 'f' et renvoie un tableau de dictionnaire, correspondant \u00e0 chaque ligne du fichier. \"\"\" with open ( f , newline = '' , encoding = 'utf8' ) as f_ob : return [ dict ( ligne ) for ligne in csv . DictReader ( f_ob , delimiter = ';' )] t = import_table ( 'data/rapworld.csv' ) 1. Afficher tous les champs de la table t . 1 Coup de pouce On peut afficher le type du premier \u00e9l\u00e9ment du tableau t avec print(type(t[0]) . 2. On souhaiterait connaitre le nombre d'artistes vivant \u00e0 Paris ou Houston. Compl\u00e9ter la fonction ville ci dessous permettant de r\u00e9soudre ce probl\u00e8me. 1 2 3 4 5 6 7 8 9 10 def ville ( t , v ): \"\"\" Renvoie le nombre d'artiste de la table 't' vivant dans la ville 'v'. t: table de donn\u00e9es (tableau de dictionnaire) v: ville (str) \"\"\" nb_artiste = 0 for artiste in ... : if v in ... : nb_artiste = nb_artiste + 1 return nb_artiste 1 2 3 4 5 # TESTS assert ville ( t , 'London' ) == 13 assert ville ( t , 'Paris' ) == 36 assert ville ( t , 'Houston' ) == 21 print ( 'Valid\u00e9 !' ) 3. On souhaiterait obtenir la liste des artistes d\u00e9c\u00e9d\u00e9s ainsi que la date de leur d\u00e9c\u00e8s. Compl\u00e9ter la fonction suivante. 1 2 3 4 5 6 def nb_dcd ( t ): \"\"\" Renvoie un tableau de p-uplets dont les composantes sont (nom, date de d\u00e9c\u00e8s). t: table de donn\u00e9es (tableau de dictionnaire) \"\"\" return [( artiste [ 'Name' ], artiste [ 'Deathdate' ]) for ... in ... if ... != '' ] 1 print ( nb_dcd ( t )) Exercice 2 Modifier un champ \u2693\ufe0e Lors de la cr\u00e9ation de la structure de donn\u00e9es associ\u00e9e \u00e0 l'ensemble des donn\u00e9es tabul\u00e9es, tous les champs enregistr\u00e9s sont de type chaine de caract\u00e8res ( string ). Cependant, il serait plus judicieux quelques fois, d'avoir des attributs de type num\u00e9rique ( entiers ou flottants ). Cet exercice pr\u00e9sente une situation de ce genre. 1 2 3 4 5 6 7 8 9 10 11 12 # Cellule \u00e0 ex\u00e9cuter import csv def import_table ( f ): \"\"\" Importe le fichier csv 'f' et renvoie un tableau de tableaux, dont les \u00e9l\u00e9ments correspondent \u00e0 une ligne du fichier. \"\"\" with open ( f , newline = '' , encoding = 'utf8' ) as f_ob : return [ ligne for ligne in csv . reader ( f_ob , delimiter = ';' )] t = import_table ( 'data/rapworld.csv' ) 1. En examinant le code ci-dessous, dire quelle(s) modification(s) apporte la fonction modifier_col \u00e0 une table t ? 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 def extrait_annee ( date , i , j ): \"\"\" Extrait l'ann\u00e9e de la chaine 'date' pass\u00e9e en param\u00e8tre sachant que celle-ci est comprise entre les index i et j exclus. Renvoie un entier. date: chaine (str) i, j: index (int) \"\"\" # R\u00e9cup\u00e9rer une \"tranche\" d'une chaine (on dit aussi faire du \"slicing\"), n'est # pas exigible en 1re NSI. return int ( date [ i : j ]) def modifier_col ( t , colonnes ): \"\"\" .... t: table de donn\u00e9e (tableau de tableaux) colonnes: tableau d'entier(s) correspondant aux colonnes \u00e0 modifier. \"\"\" t_fin = [ None for _ in range ( len ( t ))] for i in range ( len ( t )): t_fin [ i ] = [ champ for champ in t [ i ]] if i != 0 : for j in colonnes : if t [ i ][ j ] != '' : t_fin [ i ][ j ] = extrait_annee ( t [ i ][ j ], 0 , 4 ) else : t_fin [ i ][ j ] = - 1 return t_fin Coup de pouce L'instruction print(t[0]) fournit: 1 2 3 4 5 6 7 8 9 10 11 12 [ 'Name' , 'Categories' , 'URL' , 'Years Active Start' , 'Birthdate' , 'Summary' , 'Years Active End' , 'Deathdate' , 'Clip Example YouTube' , 'City' , 'Neighborhood' , 'Coordinates' ] 2. \u00c9crire le code qui produit \u00e0 l'ex\u00e9cution l'affichage suivant: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 18 - J Dilla : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 32 ans 90 - Coyote Jo Bastard : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 0 ans 110 - Lord Infamous : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 40 ans 159 - The Jacka : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 38 ans 210 - The Notorious B.I.G. : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 25 ans 312 - Proof : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 33 ans 318 - Nate Dogg : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 42 ans 326 - Big Hawk : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 37 ans 327 - Fat Pat : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 28 ans 353 - Soulja Slim : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 26 ans 358 - Koopsta Knicca : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 40 ans 409 - Big Pun : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 29 ans 433 - Aaliyah : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 22 ans 457 - DJ Screw : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 29 ans 502 - Big L : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 25 ans 514 - Big Moe : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 33 ans 526 - Pimp C : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 34 ans 550 - Guru : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 49 ans 578 - Ol' Dirty Bastard : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 36 ans 3. Commenter la deuxi\u00e8me ligne. Exercice 3 Ajouter un champ ou un enregistrement \u00e0 une table \u2693\ufe0e Dans le r\u00e9pertoire ./data on dispose d'un fichier groupe1.csv qui regroupe les donn\u00e9es tabul\u00e9es suivantes: Nom LV1 NSI Math Alex 17 16 16 Zo\u00e9 15 7 9 Max 13 19 14 1. Ecrire la fonction lire_table qui prend en param\u00e8tre un nom de fichier ( string ) et qui renvoie un tableau de p-uplets nomm\u00e9s ( des dictionnaires ici ) qui repr\u00e9sente la table ci-dessus. Attention Le caract\u00e8re s\u00e9parateur est la virgule dans cet exercice. 1 2 3 4 5 6 7 8 9 10 11 import csv def lire_table ( f ): \"\"\" \"\"\" # A compl\u00e9ter pass t1 = lire_table ( 'data/groupe1.csv' ) print ( t1 ) Suggestions pour la suite Pour r\u00e9aliser une copie d'un objet complexe comme notre table, on pourra utiliser la fonction copie_tab_dict ci-dessous. En python, on peut concat\u00e9ner deux tableaux a et b pour former un nouveau tableau c qui contienne les \u00e9l\u00e9ments de a et les \u00e9l\u00e9ments de b en utilisant la construction c = a + b . Cela \u00e9vite de boucler sur les \u00e9l\u00e9ments de a et de b pour construire c . 1 2 3 4 5 6 7 8 9 10 def copie_tab_dict ( t ): \"\"\" Renvoie une copie du tableau de dictionnaires t \"\"\" # Cr\u00e9ation d'un tableau de dictionnaires vides t_fin = [{} for _ in range ( len ( t ))] # Recopie des couples cle, valeur de chaque ligne (dictionnaire) for i in range ( len ( t )): for cle in t [ i ] . keys (): t_fin [ i ][ cle ] = t [ i ][ cle ] return t_fin 2. Compl\u00e9ter la fonction inserer_ligne qui prend une table de donn\u00e9es t en param\u00e8tre, ainsi que les notes d'un eleve e et qui renvoie un nouvelle table qui contient les \u00e9l\u00e9ments de t mais aussi la ligne correspondant \u00e0 e . Ex\u00e9cuter la cellule de tests qui v\u00e9rifiera si les notes de Chlo\u00e9: 17 en math, 19 en LV1 et 18 en NSI, sont bien ins\u00e9r\u00e9es dans la table t . 1 2 3 4 5 6 7 8 def inserer_ligne ( t , e ): \"\"\" Renvoie un nouveau tableau qui contient les \u00e9l\u00e9ments de 't' ansi que l'\u00e9l\u00e9ment e t: tableau de dictionnaires e: dictionnaire \"\"\" t_fin = ... return t_fin 1 2 3 4 5 6 # TESTS chloe = { 'Nom' : 'Chlo\u00e9' , 'LV1' : '19' , 'NSI' : '18' , 'Math' : '17' } t_modif = ajouter_ligne ( t1 , chloe ) assert t_modif [ 3 ][ 'Nom' ] == 'Chlo\u00e9' , \"Erreur: la fonction ne passe pas les tests\" assert t_modif [ 3 ][ 'NSI' ] == '18' , \"Erreur: la fonction ne passe pas les tests\" print ( 'Valid\u00e9 !' ) On voudrait ajouter une colonne contenant les moyennes de chaque \u00e9l\u00e8ve, comme dans la table ci-dessous: Nom LV1 NSI Math Moyenne Alex 17 16 16 16.3 Zo\u00e9 15 7 9 10.3 Max 13 19 14 15.3 Chlo\u00e9 19 18 17 18.0 La strat\u00e9gie propos\u00e9e est la suivante: On modifie le type des colonnes de notes, en entier par exemple; Pour chaque \u00e9l\u00e8ve ( en r\u00e9alit\u00e9 chaque ligne du tableau ), on calcule la moyenne et on ajoute la paire 'Moyenne':valeur \u00e0 la ligne. Chacun des deux points pr\u00e9c\u00e9dents sera r\u00e9solu en \u00e9crivant une fonction renvoyant un nouveau tableau . a. Compl\u00e9ter la fonction changer_type_col afin que celle-ci renvoie une nouvelle table dont les colonnes num\u00e9riques sont de type entier. 1 2 3 4 5 6 7 8 9 10 11 12 13 def changer_type_col ( t ): \"\"\" Change le type des colonnes de 't' autres que le nom en entier, et renvoie un nouveau tableau. \"\"\" nb_ligne = len ( t ) # R\u00e9cup\u00e9ration du nom des mati\u00e8res matieres = [ m for m in t [ 0 ] . keys () if m != 'Nom' ] # Travail sur une copie de 't' t_fin = copie_tab_dict ( t ) for i in range ( nb_ligne ): for m in ... : t_fin [ i ][ m ] = ... return t_fin b. Compl\u00e9ter la fonction ajouter_col_moyenne . Astuce Pour obtenir un nombre flottant avec un nombre de d\u00e9cimal bien d\u00e9termin\u00e9, on peut utiliser la fonction round . Exemple round(3.14159, 2) >>> 3.14 1 2 3 4 5 6 7 8 9 10 11 12 def ajouter_col_moyenne ( t ): \"\"\" Ajoute une colonne moyenne au tableau 't' et renvoie un nouveau tableau. \"\"\" nb_ligne = len ( t ) matieres = [ m for m in t [ 0 ] . keys () if m != 'Nom' ] t_fin = copie_tab_dict ( t ) for i in range ( nb_ligne ): somme = 0 for m in ... : somme = somme + ... t_fin [ i ][ 'Moyenne' ] = round ( ... , ... ) return t_fin 1 2 3 4 5 6 # TESTS t3 = changer_type_col ( t_modif ) tm = ajouter_col_moyenne ( t3 ) assert tm [ 0 ][ 'Moyenne' ] == 16.3 , \"Erreur: la fonction ne passe pas les tests\" assert tm [ 1 ][ 'Moyenne' ] == 10.3 , \"Erreur: la fonction ne passe pas les tests\" print ( 'Valid\u00e9' ) c. ( A faire \u00e0 la maison ) On voudrait rajouter un enregistrement qui donne la moyenne par mati\u00e8re, comme dans la table suivante: Nom LV1 NSI Math Moyenne Alex 17 16 16 16.3 Zo\u00e9 15 7 9 10.3 Max 13 19 14 15.3 Chlo\u00e9 19 18 17 18 moy_mat 16.0 15.0 14.0 15.0 \u00c9crire une fonction ajoute_moy_matieres qui prend en param\u00e8tre une table (de type tableau de dictionnaire et ayant la forme que tm de la question pr\u00e9c\u00e9dente) et qui renvoit une nouvelle table en y ajoutant une ligne comportant les moyennes par mati\u00e8re.","title":"EXERCICES E4"},{"location":"NSI1/S5/S5E4.html#donnees-tabulees-exercices","text":"","title":"Donn\u00e9es tabul\u00e9es - Exercices"},{"location":"NSI1/S5/S5E4.html#fichiers-de-travail-a-telecharger","text":"Lien","title":"Fichiers de travail \u00e0 t\u00e9l\u00e9charger"},{"location":"NSI1/S5/S5E4.html#exercice-1-utilisation-dun-tableau-de-dictionnaires","text":"On utilise le fichier csv data/rapworld.csv rencontr\u00e9 dans le cours 4 . On importe ce fichier vers une structure de tableau de dictionnaire. 1 2 3 4 5 6 7 8 9 10 11 12 # Cellule \u00e0 ex\u00e9cuter import csv def import_table ( f ): \"\"\" Importe le fichier csv 'f' et renvoie un tableau de dictionnaire, correspondant \u00e0 chaque ligne du fichier. \"\"\" with open ( f , newline = '' , encoding = 'utf8' ) as f_ob : return [ dict ( ligne ) for ligne in csv . DictReader ( f_ob , delimiter = ';' )] t = import_table ( 'data/rapworld.csv' ) 1. Afficher tous les champs de la table t . 1 Coup de pouce On peut afficher le type du premier \u00e9l\u00e9ment du tableau t avec print(type(t[0]) . 2. On souhaiterait connaitre le nombre d'artistes vivant \u00e0 Paris ou Houston. Compl\u00e9ter la fonction ville ci dessous permettant de r\u00e9soudre ce probl\u00e8me. 1 2 3 4 5 6 7 8 9 10 def ville ( t , v ): \"\"\" Renvoie le nombre d'artiste de la table 't' vivant dans la ville 'v'. t: table de donn\u00e9es (tableau de dictionnaire) v: ville (str) \"\"\" nb_artiste = 0 for artiste in ... : if v in ... : nb_artiste = nb_artiste + 1 return nb_artiste 1 2 3 4 5 # TESTS assert ville ( t , 'London' ) == 13 assert ville ( t , 'Paris' ) == 36 assert ville ( t , 'Houston' ) == 21 print ( 'Valid\u00e9 !' ) 3. On souhaiterait obtenir la liste des artistes d\u00e9c\u00e9d\u00e9s ainsi que la date de leur d\u00e9c\u00e8s. Compl\u00e9ter la fonction suivante. 1 2 3 4 5 6 def nb_dcd ( t ): \"\"\" Renvoie un tableau de p-uplets dont les composantes sont (nom, date de d\u00e9c\u00e8s). t: table de donn\u00e9es (tableau de dictionnaire) \"\"\" return [( artiste [ 'Name' ], artiste [ 'Deathdate' ]) for ... in ... if ... != '' ] 1 print ( nb_dcd ( t ))","title":"Exercice 1: Utilisation d'un tableau de dictionnaires"},{"location":"NSI1/S5/S5E4.html#exercice-2-modifier-un-champ","text":"Lors de la cr\u00e9ation de la structure de donn\u00e9es associ\u00e9e \u00e0 l'ensemble des donn\u00e9es tabul\u00e9es, tous les champs enregistr\u00e9s sont de type chaine de caract\u00e8res ( string ). Cependant, il serait plus judicieux quelques fois, d'avoir des attributs de type num\u00e9rique ( entiers ou flottants ). Cet exercice pr\u00e9sente une situation de ce genre. 1 2 3 4 5 6 7 8 9 10 11 12 # Cellule \u00e0 ex\u00e9cuter import csv def import_table ( f ): \"\"\" Importe le fichier csv 'f' et renvoie un tableau de tableaux, dont les \u00e9l\u00e9ments correspondent \u00e0 une ligne du fichier. \"\"\" with open ( f , newline = '' , encoding = 'utf8' ) as f_ob : return [ ligne for ligne in csv . reader ( f_ob , delimiter = ';' )] t = import_table ( 'data/rapworld.csv' ) 1. En examinant le code ci-dessous, dire quelle(s) modification(s) apporte la fonction modifier_col \u00e0 une table t ? 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 def extrait_annee ( date , i , j ): \"\"\" Extrait l'ann\u00e9e de la chaine 'date' pass\u00e9e en param\u00e8tre sachant que celle-ci est comprise entre les index i et j exclus. Renvoie un entier. date: chaine (str) i, j: index (int) \"\"\" # R\u00e9cup\u00e9rer une \"tranche\" d'une chaine (on dit aussi faire du \"slicing\"), n'est # pas exigible en 1re NSI. return int ( date [ i : j ]) def modifier_col ( t , colonnes ): \"\"\" .... t: table de donn\u00e9e (tableau de tableaux) colonnes: tableau d'entier(s) correspondant aux colonnes \u00e0 modifier. \"\"\" t_fin = [ None for _ in range ( len ( t ))] for i in range ( len ( t )): t_fin [ i ] = [ champ for champ in t [ i ]] if i != 0 : for j in colonnes : if t [ i ][ j ] != '' : t_fin [ i ][ j ] = extrait_annee ( t [ i ][ j ], 0 , 4 ) else : t_fin [ i ][ j ] = - 1 return t_fin Coup de pouce L'instruction print(t[0]) fournit: 1 2 3 4 5 6 7 8 9 10 11 12 [ 'Name' , 'Categories' , 'URL' , 'Years Active Start' , 'Birthdate' , 'Summary' , 'Years Active End' , 'Deathdate' , 'Clip Example YouTube' , 'City' , 'Neighborhood' , 'Coordinates' ] 2. \u00c9crire le code qui produit \u00e0 l'ex\u00e9cution l'affichage suivant: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 18 - J Dilla : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 32 ans 90 - Coyote Jo Bastard : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 0 ans 110 - Lord Infamous : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 40 ans 159 - The Jacka : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 38 ans 210 - The Notorious B.I.G. : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 25 ans 312 - Proof : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 33 ans 318 - Nate Dogg : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 42 ans 326 - Big Hawk : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 37 ans 327 - Fat Pat : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 28 ans 353 - Soulja Slim : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 26 ans 358 - Koopsta Knicca : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 40 ans 409 - Big Pun : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 29 ans 433 - Aaliyah : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 22 ans 457 - DJ Screw : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 29 ans 502 - Big L : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 25 ans 514 - Big Moe : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 33 ans 526 - Pimp C : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 34 ans 550 - Guru : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 49 ans 578 - Ol' Dirty Bastard : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de 36 ans 3. Commenter la deuxi\u00e8me ligne.","title":"Exercice 2 Modifier un champ"},{"location":"NSI1/S5/S5E4.html#exercice-3-ajouter-un-champ-ou-un-enregistrement-a-une-table","text":"Dans le r\u00e9pertoire ./data on dispose d'un fichier groupe1.csv qui regroupe les donn\u00e9es tabul\u00e9es suivantes: Nom LV1 NSI Math Alex 17 16 16 Zo\u00e9 15 7 9 Max 13 19 14 1. Ecrire la fonction lire_table qui prend en param\u00e8tre un nom de fichier ( string ) et qui renvoie un tableau de p-uplets nomm\u00e9s ( des dictionnaires ici ) qui repr\u00e9sente la table ci-dessus. Attention Le caract\u00e8re s\u00e9parateur est la virgule dans cet exercice. 1 2 3 4 5 6 7 8 9 10 11 import csv def lire_table ( f ): \"\"\" \"\"\" # A compl\u00e9ter pass t1 = lire_table ( 'data/groupe1.csv' ) print ( t1 ) Suggestions pour la suite Pour r\u00e9aliser une copie d'un objet complexe comme notre table, on pourra utiliser la fonction copie_tab_dict ci-dessous. En python, on peut concat\u00e9ner deux tableaux a et b pour former un nouveau tableau c qui contienne les \u00e9l\u00e9ments de a et les \u00e9l\u00e9ments de b en utilisant la construction c = a + b . Cela \u00e9vite de boucler sur les \u00e9l\u00e9ments de a et de b pour construire c . 1 2 3 4 5 6 7 8 9 10 def copie_tab_dict ( t ): \"\"\" Renvoie une copie du tableau de dictionnaires t \"\"\" # Cr\u00e9ation d'un tableau de dictionnaires vides t_fin = [{} for _ in range ( len ( t ))] # Recopie des couples cle, valeur de chaque ligne (dictionnaire) for i in range ( len ( t )): for cle in t [ i ] . keys (): t_fin [ i ][ cle ] = t [ i ][ cle ] return t_fin 2. Compl\u00e9ter la fonction inserer_ligne qui prend une table de donn\u00e9es t en param\u00e8tre, ainsi que les notes d'un eleve e et qui renvoie un nouvelle table qui contient les \u00e9l\u00e9ments de t mais aussi la ligne correspondant \u00e0 e . Ex\u00e9cuter la cellule de tests qui v\u00e9rifiera si les notes de Chlo\u00e9: 17 en math, 19 en LV1 et 18 en NSI, sont bien ins\u00e9r\u00e9es dans la table t . 1 2 3 4 5 6 7 8 def inserer_ligne ( t , e ): \"\"\" Renvoie un nouveau tableau qui contient les \u00e9l\u00e9ments de 't' ansi que l'\u00e9l\u00e9ment e t: tableau de dictionnaires e: dictionnaire \"\"\" t_fin = ... return t_fin 1 2 3 4 5 6 # TESTS chloe = { 'Nom' : 'Chlo\u00e9' , 'LV1' : '19' , 'NSI' : '18' , 'Math' : '17' } t_modif = ajouter_ligne ( t1 , chloe ) assert t_modif [ 3 ][ 'Nom' ] == 'Chlo\u00e9' , \"Erreur: la fonction ne passe pas les tests\" assert t_modif [ 3 ][ 'NSI' ] == '18' , \"Erreur: la fonction ne passe pas les tests\" print ( 'Valid\u00e9 !' ) On voudrait ajouter une colonne contenant les moyennes de chaque \u00e9l\u00e8ve, comme dans la table ci-dessous: Nom LV1 NSI Math Moyenne Alex 17 16 16 16.3 Zo\u00e9 15 7 9 10.3 Max 13 19 14 15.3 Chlo\u00e9 19 18 17 18.0 La strat\u00e9gie propos\u00e9e est la suivante: On modifie le type des colonnes de notes, en entier par exemple; Pour chaque \u00e9l\u00e8ve ( en r\u00e9alit\u00e9 chaque ligne du tableau ), on calcule la moyenne et on ajoute la paire 'Moyenne':valeur \u00e0 la ligne. Chacun des deux points pr\u00e9c\u00e9dents sera r\u00e9solu en \u00e9crivant une fonction renvoyant un nouveau tableau . a. Compl\u00e9ter la fonction changer_type_col afin que celle-ci renvoie une nouvelle table dont les colonnes num\u00e9riques sont de type entier. 1 2 3 4 5 6 7 8 9 10 11 12 13 def changer_type_col ( t ): \"\"\" Change le type des colonnes de 't' autres que le nom en entier, et renvoie un nouveau tableau. \"\"\" nb_ligne = len ( t ) # R\u00e9cup\u00e9ration du nom des mati\u00e8res matieres = [ m for m in t [ 0 ] . keys () if m != 'Nom' ] # Travail sur une copie de 't' t_fin = copie_tab_dict ( t ) for i in range ( nb_ligne ): for m in ... : t_fin [ i ][ m ] = ... return t_fin b. Compl\u00e9ter la fonction ajouter_col_moyenne . Astuce Pour obtenir un nombre flottant avec un nombre de d\u00e9cimal bien d\u00e9termin\u00e9, on peut utiliser la fonction round . Exemple round(3.14159, 2) >>> 3.14 1 2 3 4 5 6 7 8 9 10 11 12 def ajouter_col_moyenne ( t ): \"\"\" Ajoute une colonne moyenne au tableau 't' et renvoie un nouveau tableau. \"\"\" nb_ligne = len ( t ) matieres = [ m for m in t [ 0 ] . keys () if m != 'Nom' ] t_fin = copie_tab_dict ( t ) for i in range ( nb_ligne ): somme = 0 for m in ... : somme = somme + ... t_fin [ i ][ 'Moyenne' ] = round ( ... , ... ) return t_fin 1 2 3 4 5 6 # TESTS t3 = changer_type_col ( t_modif ) tm = ajouter_col_moyenne ( t3 ) assert tm [ 0 ][ 'Moyenne' ] == 16.3 , \"Erreur: la fonction ne passe pas les tests\" assert tm [ 1 ][ 'Moyenne' ] == 10.3 , \"Erreur: la fonction ne passe pas les tests\" print ( 'Valid\u00e9' ) c. ( A faire \u00e0 la maison ) On voudrait rajouter un enregistrement qui donne la moyenne par mati\u00e8re, comme dans la table suivante: Nom LV1 NSI Math Moyenne Alex 17 16 16 16.3 Zo\u00e9 15 7 9 10.3 Max 13 19 14 15.3 Chlo\u00e9 19 18 17 18 moy_mat 16.0 15.0 14.0 15.0 \u00c9crire une fonction ajoute_moy_matieres qui prend en param\u00e8tre une table (de type tableau de dictionnaire et ayant la forme que tm de la question pr\u00e9c\u00e9dente) et qui renvoit une nouvelle table en y ajoutant une ligne comportant les moyennes par mati\u00e8re.","title":"Exercice 3 Ajouter un champ ou un enregistrement \u00e0 une table"},{"location":"NSI1/S6/S6A1.html","text":"ELEMENTS D'INTERACTION DANS UNE PAGE WEB \u2693\ufe0e Analyse d'une page web \u2693\ufe0e Les composants graphiques permettant l'interaction avec l'utilisateur \u2693\ufe0e Dans une page web, des \u00e9l\u00e9ments servent \u00e0 structurer la page et \u00e0 fournir sa s\u00e9mantique . D'autres vont permettre \u00e0 l'utilisateur d'interagir avec la page. \u00c0 faire Saisir et ex\u00e9cuter le code ci-dessous dans jsfiddle ou avec VSCode + Chrome 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 <!DOCTYPE html> < html lang = \"fr\" > < head > < meta charset = \"UTF-8\" > < title > IHM sur le web en NSI </ title > < style > span : hover { color : royalblue ; font-size : 120 % ; } </ style > </ head > < body > < article > < h1 > Identification </ h1 > < form action = \"\" > < label for = \"nom\" > Votre Nom </ label > < input type = \"text\" name = \"nom\" id = \"nom\" > < label for = \"prenom\" > Votre pr\u00e9nom </ label > < input type = \"text\" name = \"prenom\" id = \"prenom\" > < label for = \"mdp\" > Mot de passe </ label > < input type = \"password\" name = \"mdp\" id = \"mdp\" > < input type = \"submit\" value = \"Valider\" > </ form > < h1 > Les ressources </ h1 > < p > Le site incontournable pour l'\u00e9tudiant ayant un parcours < span > Web </ span > dans son cursus est le site < strong > MDN web docs </ strong > . il s'agit d'une communaut\u00e9 ouverte de d\u00e9veloppeurs et r\u00e9dacteurs qui cr\u00e9ent des ressources afin de rendre le < span > Web </ span > meilleur. < br > < a href = \"https://developer.mozilla.org/fr/docs/Apprendre\" target = \"_blank\" > Adresse du site </ a > </ p > < p > Son dernier logo </ p > < img src = \"https://www.mozilla.org/media/protocol/img/logos/mozilla/black.40d1af88c248.svg\" alt = \"logo de la mdn\" > < h1 > Les langages </ h1 > < p > Les trois langages \u00e0 conna\u00eetre sont: </ p > < ol > < li > HTML </ li > < li > CSS </ li > < li > Javascript </ li > </ ol > < label for = \"langage\" > S\u00e9lectionner votre niveau dans ces trois langages </ label > < select name = \"listlangages\" id = \"langages\" > < option value = \"debutant\" > D\u00e9butant </ option > < option value = \"inter\" > Interm\u00e9diaire </ option > < option value = \"expert\" > Expert </ option > </ select > </ article > </ body > </ html > Une possibilit\u00e9 d'interaction avec la page est donn\u00e9e par l'utilisation de composants graphiques (formulaire, liste d\u00e9roulante, case \u00e0 cocher, bouton, etc.). On trouvera une liste exhaustive de toutes les possibilit\u00e9s \u00e0 cette adresse . \u00c0 faire Quels sont les \u00e9l\u00e9ments qui permettent une interaction dans la page pr\u00e9c\u00e9dente? Quels \u00e9v\u00e9nements sont associ\u00e9s aux composants graphiques? \u2693\ufe0e D\u00e9couvrir les attributs d'\u00e9v\u00e9nements \u2693\ufe0e \u00c0 faire Ouvrir le fichier evenement.html avec Chrome. Ouvrir la console de d\u00e9veloppement web (touche F12 ). 1. Quel \u00e9l\u00e9ment graphique de la page permet d'interagir avec l'utilisateur ? 2. Lister tous les attributs de cet \u00e9l\u00e9ment. Etant donn\u00e9 le caract\u00e8re explicite de leur nom, faire une hypoth\u00e8se sur leur r\u00f4le. 3. Quel \u00e9v\u00e9nement provoque un changement dans la page ? 4. \u00c0 quel attribut, ce changement est-il li\u00e9? Qu'appelle-t-on \u00e9v\u00e9nement et comment est-il li\u00e9 \u00e0 une page web? \u2693\ufe0e On appelle \u00e9v\u00e9nement une action de l'utilisateur ou d'un composant du navigateur. Les \u00e9v\u00e9nements associ\u00e9s \u00e0 des balises HTML sont nombreux. Voici quelques exemples: D\u00e9nomination de l'\u00e9v\u00e9nement (event en anglais) Description Domaine d'utilisation onclick Clic du bouton gauche Pointage souris oninput Modification de champ d'un formulaire Formulaire onload Chargement complet d'une page Traitement des pages web Ils sont li\u00e9s aux \u00e9l\u00e9ments d'une page web en tant qu' attribut . Les attributs d'\u00e9v\u00e9nements portent un nom pr\u00e9fix\u00e9 par on . La syntaxe habituelle est: <tag on....=\"action()\"></tag> Dans cette \u00e9criture, tag est le nom d'une balise, le terme on.... est l'\u00e9v\u00e9nement et action() est une fonction qui traite l'\u00e9v\u00e9nement (voir paragraphe suivant). On trouvera sur le site W3Schools.com une liste exhaustive des attributs d'\u00e9v\u00e9nements. Application directe On dispose d'une page exercice.html (dans le dossier Ex_seq_6 ) dans laquelle on souhaiterait: rendre le lien actif (adresse du site: https://www.w3schools.com/) que le lien r\u00e9agisse \u00e0 un clic en ouvrant un popup ( fen\u00eatre surgissante ) qui indique 'Tr\u00e8s bon choix !'. R\u00e9aliser ces deux consignes. Indications : l'ouverture d'un popup (l'action \u00e0 r\u00e9aliser) se fait avec la m\u00e9thode alert() \u00e0 qui on passe le texte \u00e0 afficher. Comment modifier le traitement des \u00e9v\u00e9nements? \u2693\ufe0e Le langage utilis\u00e9 \u2693\ufe0e Le troisi\u00e8me langage incontournable du web est incontestablement Javascript ( autre d\u00e9nomination ECMAScript ). Il est utilis\u00e9 pour impl\u00e9menter l'interactivit\u00e9 dans les pages web. Le programme de premi\u00e8re NSI ne pr\u00e9voit pas une \u00e9tude approfondie de ce langage, aussi pour les curieux pourront visiter les excellentes adresses suivantes: Openclassrooms ( en fran\u00e7ais ); W3Schools ( en anglais ). Pr\u00e9sentation de quelques exemples \u2693\ufe0e Exemple 1: manipuler date et heure \u2693\ufe0e Dans ce premier exemple simple, on souhaite afficher la date et l'heure si l'utilisateur clique sur le bouton. \u00c0 faire Saisir et ex\u00e9cuter le code ci-dessous dans jsfiddle ou avec VSCode + Chrome. 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"fr\" > < head > < meta charset = \"UTF-8\" > < title > Exemple 1 </ title > </ head > < body > < p > Pour afficher la date et l'heure, cliquer sur le bouton </ p > < button onclick = \"alert('Nous sommes le : '+ Date())\" > Quelle heure est-il? </ button > </ body > </ html > Ici l'\u00e9v\u00e9nement trait\u00e9 est le clic ( du bouton gauche ) de la souris sur le bouton. Lorsque cet \u00e9v\u00e9nement se produit, la fonction alert qui permet d'afficher un message dans une fen\u00eatre de type popup . Le message est concat\u00e9n\u00e9 ici avec l'objet Date de Javascript. Les fonctions de traitement d'\u00e9v\u00e9nements peuvent \u00eatre beaucoup plus longue que dans ce premier exemple. Dans ce cas, on \u00e9vitera de passer tout le code dans l'attribut de l'\u00e9l\u00e9ment comme dans cet exemple et on privil\u00e9giera une des m\u00e9thodes trait\u00e9es dans les prochains exemples . Exemple 2: utilisation de la balise script \u2693\ufe0e On reprend le m\u00eame exemple mais en d\u00e9portant le traitement de l'\u00e9v\u00e9nement onclick dans une fonction d\u00e9finie dans un \u00e9l\u00e9ment <script> . \u00c0 faire Saisir et ex\u00e9cuter le code ci-dessous dans jsfiddle ou avec VSCode + Chrome. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!DOCTYPE html> < html lang = \"fr\" > < head > < meta charset = \"UTF-8\" > < title > Exemple 2 </ title > < script defer > function displayDate () { alert ( 'Nous sommes le: ' + Date ()); } </ script > </ head > < body > < p > Cliquer sur le bouton pour afficher la date et l'heure. </ p > < button onclick = \"displayDate()\" > Quelle heure est-il? </ button > </ body > </ html > En Javascript une fa\u00e7on de d\u00e9clarer une fonction est d'utiliser le mot cl\u00e9 function suivi d'un nom et d'\u00e9ventuels param\u00e8tres entre parenth\u00e8ses. L'attribut defer indique au navigateur de charger tous les \u00e9l\u00e9ments de la page avant d'ex\u00e9cuter le script. Cette fa\u00e7on de proc\u00e9der est acceptable . Exemple 3: changer la couleur d'un paragraphe \u2693\ufe0e On consid\u00e8re le code de l'exemple 3 suivant: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <!DOCTYPE html> < html lang = \"fr\" > < head > < meta charset = \"UTF-8\" > < title > Exemple 3 </ title > < script defer > function dblClic () { let paraCible = document . getElementById ( \"para1\" ); paraCible . style . color = \"red\" ; } </ script > </ head > < body > < p id = \"para1\" > Double-cliquer sur ce paragraphe pour changer la couleur. </ p > < p id = \"para2\" > L'exercice < br > La fonction 'dblClic()' doit \u00eatre appel\u00e9e lorsque l'utilisateur double clique sur le paragraphe identifi\u00e9 par \"para1\" Cette fonction modifie la couleur du texte de ce paragraphe. </ p > </ body > </ html > On souhaiterait modifier l'\u00e9l\u00e9ment p appropri\u00e9 de cette page de sorte que le texte du paragraphe 1 passe en rouge lorsque l'utilisateur double-clique dessus. \u00c0 faire Saisir et ex\u00e9cuter le code ci-dessus dans jsfiddle ou avec VSCode + Chrome et apporter les modifications n\u00e9cessaires. Un extrait de la documentation sur les attributs \u00e9v\u00e9nementiels est donn\u00e9 ci-apr\u00e8s: Attribute Value Description onclick script Fires on a mouse click on the element ondblclick script Fires on a mouse double-click on the element onmousedown script Fires when a mouse button is pressed down on an element onmousemove script Fires when the mouse pointer is moving while it is over an element onmouseout script Fires when the mouse pointer moves out of an element onmouseover script Fires when the mouse pointer moves over an element onmouseup script Fires when a mouse button is released over an element onmousewheel script Deprecated. Use the onwheel attribute instead onwheel script Fires when the mouse wheel rolls up or down over an element Exemple 4: code javascript d\u00e9port\u00e9 \u2693\ufe0e Une bonne pratique \u00e0 adopter est de d\u00e9porter le code javascript dans un fichier externe. Analysons le code HTML puis Javascript de la page evenement.html rencontr\u00e9e plus haut. \u00c0 faire Ouvrir la page evenement.html avec Chrome avec sa console de d\u00e9veloppement web (F12). La gestion d'un clic sur le bouton est assur\u00e9e par la ligne: <button id=\"boutonSolution\" onclick=\"afficheMasque()\">Afficher solution</button> L'\u00e9v\u00e8nement onclick est g\u00e9r\u00e9 par l'appel de la fonction afficheMasque() qui est d\u00e9finie dans le fichier externe script1.js . En compl\u00e9ment Le code javascript de la fonction afficheMasque g\u00e9rant le clic sur le bouton. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 const afficheMasque = function () { // On utilise la propri\u00e9t\u00e9 CSS visibility pour rendre visible ou pour masquer un \u00e9l\u00e9ment let sol = document . getElementById ( \"solution1\" ) //s\u00e9lection du bloc html contenant la solution let etatAffichage = getComputedStyle ( sol , null ) //d\u00e9termination de sa propri\u00e9t\u00e9 visible ou cach\u00e9 let btn = document . getElementById ( \"boutonSolution\" ) //s\u00e9lection de l'\u00e9l\u00e9ment bouton if ( etatAffichage . visibility == \"hidden\" ) { /* Si le bloc solution est cach\u00e9, un clic le rendra visible; On change aussi le texte du bouton. */ sol . style . visibility = \"visible\" ; btn . innerHTML = \"Cacher solution\" } else { /* Si le bloc solution est visible, un clic le rendra cach\u00e9; On change aussi le texte du bouton. */ sol . style . visibility = \"hidden\" ; btn . innerHTML = \"Afficher solution\" } } En Javascript, les blocs d'instructions sont d\u00e9limit\u00e9s par les accolades { et } . L'indentation n'est significative comme en python, cependant elle am\u00e9liore la lisibilit\u00e9 du code. Les commentaires sont signal\u00e9s par // ou la paire /* , */ selon qu'ils tiennent sur une ligne ou plusieurs lignes. Le mot cl\u00e9 let permet de d\u00e9clarer des variables. Javascript est utilis\u00e9 ici pour modifier les propri\u00e9t\u00e9s CSS du bloc div contenant la solution: visibility = \"visible\" ou visibility = \"hidden\" . Alternative plus \u00e9l\u00e9gante \u2693\ufe0e Une deuxi\u00e8me fa\u00e7on de proc\u00e9der (plus \u00e9l\u00e9gante) est de ne pas surcharger le code HTML avec l'attribut onclick mais de g\u00e9rer l'\u00e9v\u00e8nement click dans un fichier Javascript (voir fichier script2.js ) avec une d\u00e9finition du type: 1 2 3 btn . addEventListener ( 'click' , ( e ) => { ... }); On indique ainsi que l'on \u00e9coute l'\u00e9v\u00e9nement click sur le bouton cibl\u00e9 par btn , et que lorsque le clic survient, on ex\u00e9cute le traitement appropri\u00e9. Exercice pour les plus curieux/rapides \u2693\ufe0e On souhaiterait modifier l\u00e9g\u00e8rement le code de la fonction afficheMasque() de mani\u00e8re \u00e0 ce que m\u00eame si l'utilisateur clique sur Afficher solution celle-ci soit automatiquement cach\u00e9e au bout de 5 secondes. On utilisera la m\u00e9thode javascript setTimeout \u00e0 qui on passera deux arguments: la fonction qui cachera le code \u00e0 nouveau et le temps ( en millisecondes ) au bout duquel cette fonction sera ex\u00e9cut\u00e9e. Typiquement, cette fonction sera appel\u00e9e avec la syntaxe suivante: 1 2 3 4 5 const cacher = function () { .... }; setTimeout ( cacher , 5000 ); On peut trouver des exemples sur le site MDN En r\u00e9sum\u00e9 Les principaux \u00e9l\u00e9ments d'interaction d'une page web sont: les styles CSS; des \u00e9l\u00e9ments graphiques HTML comme des boutons, associ\u00e9s \u00e0 des fonctions de traitements d'\u00e9v\u00e9nements par le biais de leurs attributs. Les fonctions de traitements des \u00e9v\u00e9nements sont cod\u00e9es en javascript. On d\u00e9portera les codes javascript dans un fichier externe. Dans les cas simples, il s'agira de: s\u00e9lectionner un \u00e9l\u00e9ment HTMl avec une m\u00e9thode appropri\u00e9e; modifier une propri\u00e9t\u00e9 CSS de cet \u00e9l\u00e9ment.","title":"ACTIVIT\u00c9 1"},{"location":"NSI1/S6/S6A1.html#elements-dinteraction-dans-une-page-web","text":"","title":"ELEMENTS D'INTERACTION DANS UNE PAGE WEB"},{"location":"NSI1/S6/S6A1.html#analyse-dune-page-web","text":"","title":"Analyse d'une page web"},{"location":"NSI1/S6/S6A1.html#quels-evenements-sont-associes-aux-composants-graphiques","text":"","title":"Quels \u00e9v\u00e9nements sont associ\u00e9s aux composants graphiques?"},{"location":"NSI1/S6/S6A1.html#comment-modifier-le-traitement-des-evenements","text":"","title":"Comment modifier le traitement des \u00e9v\u00e9nements?"},{"location":"NSI1/S6/S6C1.html","text":"HTML5 & CSS3: LES BASES \u2693\ufe0e L'objectif est de rappeler puis d'approfondir des notions d\u00e9j\u00e0 rencontr\u00e9es en SNT . Les tests de code pourront \u00eatre r\u00e9alis\u00e9s de deux fa\u00e7ons diff\u00e9rentes : en ligne, sur jsfiddle ; en local avec un \u00e9diteur de code ( Visual Studio Code ) + navigateur ( Chrome de pr\u00e9f\u00e9rence). Les langages du web \u2693\ufe0e C\u00f4t\u00e9 client, c'est-\u00e0-dire c\u00f4t\u00e9 utilisateur, les langages incontournables sont: HTML pour la description du contenu d'une page; CSS pour d\u00e9finir la mise en forme des pages; Javascript ( qui ne sera pas abord\u00e9 dans ce chapitre ) pour permettre l'interactivit\u00e9 avec l'utilisateur. HTML \u2693\ufe0e Rappels et d\u00e9finitions \u2693\ufe0e Le langage HTML est un langage de balisage qui permet de d\u00e9crire la structure et le contenu d'un document. Un navigateur web donne un rendu graphique au fichier textuel HTML. \u00c0 faire Tester le code ci-dessous dans jsfiddle ou avec VSCode + Chrome 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"fr\" > < head > < meta charset = \"UTF-8\" > < title > Document </ title > </ head > < body > < h1 > Structuration de document </ h1 > < p > Les < em > balises </ em > html doivent rendre compte de la structure de la page. </ p > </ body > </ html > Un fichier HTML est structur\u00e9 \u00e0 partir de balises ( tag en anglais). Ce sont des informations situ\u00e9es entre les caract\u00e8res < et > . La premi\u00e8re ligne n'est pas une balise HTML, en toute rigueur il s'agit d'une d\u00e9claration de type de document \u00e0 destination du navigateur. Sauf exceptions, qui seront vues au fur et \u00e0 mesure de la d\u00e9couverte du langage, \u00e0 une balise ouvrante <...> correspond une balise fermante . La prem\u00e8re exception rencontr\u00e9e ici est la balise meta (qui est une balise auto-fermante ). L'ensemble constitu\u00e9 des balises ouvrante et fermante et du contenu se trouvant entre ces balises, constitue un \u00e9l\u00e9ment HTML. Chaque \u00e9l\u00e9ment HTML peut avoir des attributs . Ce sont des valeurs suppl\u00e9mentaires qui permettent de configurer ces \u00e9l\u00e9ments ou d'adapter leur comportement, avec une syntaxe du type attribut=\"valeur\" . Exemple \u00c9l\u00e9ment HTML Application directe: d\u00e9crire des \u00e9l\u00e9ments \u2693\ufe0e \u00c0 faire Donner les attributs et les valeurs associ\u00e9es, des \u00e9l\u00e9ments meta et html de l'exemple ci-dessus. Structuration des documents \u2693\ufe0e D'une mani\u00e8re g\u00e9n\u00e9rale, un fichier HTML aura un squelette sera tr\u00e8s proche de celui de l'exemple donn\u00e9 en introduction. On adaptera le contenu de l'\u00e9l\u00e9ment head , notamment le texte de sa balise <title> , ainsi que celui de l'\u00e9l\u00e9ment body . L'\u00e9l\u00e9ment obligatoire head apporte des informations ( non affich\u00e9es ) sur la page et l'\u00e9l\u00e9ment body d\u00e9limite le contenu de la page. Les titres \u2693\ufe0e Les titres peuvent \u00eatre d\u00e9clin\u00e9s en six niveaux de 1 \u00e0 6 \u00e0 l'aide des balises <h1> \u00e0 <h6> : 1 2 3 4 < h1 > Titre de niveau 1 </ h1 > < h2 > Titre de niveau 2 </ h2 > ...... < h6 > Titre de niveau 6 </ h6 > Le rendu est le suivant: Balises de titre \u00c0 faire Ajouter un titre de niveau \u00e0 l'exemple d'introduction. Les textes \u2693\ufe0e Les textes peuvent \u00eatre organis\u00e9s en paragraphes avec la balise <p> . Exemple 1 2 3 4 5 < p > HTML contient environ 140 balises qui fournissent au navigateur des indications sur le sens d'un \u00e9l\u00e9ment, son interpr\u00e9tation ou son affichage. Entre autres choses, les balises permettent de fournir des m\u00e9ta-donn\u00e9es pour le document HTML, de mettre en avant certaines phrases, d'ajouter des fichiers multim\u00e9dias ou de g\u00e9rer des formulaires en ligne. </ p > On peut \u00e9galement pr\u00e9senter du texte sous forme de listes ordonn\u00e9es: 1 2 3 4 5 6 Les parties essentielles d'un document HTML: < ol > < li > l'\u00e9l\u00e9ment html; </ li > < li > l'\u00e9l\u00e9ment head; </ li > < li > l'\u00e9l\u00e9ment body. </ li > </ ol > \u00c0 faire Ajouter la liste ci-dessus \u00e0 l'exemple d'introduction, dans jsfiddle . Commentez le rendu. La pr\u00e9sentation peut se faire \u00e9galement sous forme de listes non ordonn\u00e9es: 1 2 3 4 5 6 Les parties essentielles d'un document HTML: < ul > < li > l'\u00e9l\u00e9ment html; </ li > < li > l'\u00e9l\u00e9ment head; </ li > < li > l'\u00e9l\u00e9ment body. </ li > </ ul > \u00c0 faire Modifier le code HTML sur jsfiddle de mani\u00e8re \u00e0 avoir une liste non ordonn\u00e9e. Commentez le rendu. Liens et ressources \u2693\ufe0e Une des caract\u00e9ristiques essentielles de HTML est de fournir des liens hypertextes . Ces derniers sont ins\u00e9r\u00e9s avec la balise <a> ( ancre ). Cette balise est utilis\u00e9e avec l'attribut href qui fournit l'adresse de la ressource. 1 < a href = \"https://www.w3schools.com/tags/tag_a.asp\" > Lien vers W3schools.com </ a > \u00c0 faire Ajouter un lien vers lien vers W3school \u00e0 votre page web. Parmi les ressources, on peut citer les images. On les ins\u00e8re dans un document HTML avec une balise auto-fermante <img /> \u00e0 qui on doit fournir deux attributs src=\"nom_fichier.jpg\" alt=\"texte_alternatif\" . Exemple 1 < img src = \"img/html5-logo.png\" alt = \"logo\" /> Rendu: Logo HTML 5 \u00c0 faire Ajouter le logo de la fondation Mozilla \u00e0 votre page. Son adresse est la suivante: https://www.mozilla.org/media/protocol/img/logos/mozilla/black.40d1af88c248.svg Conseils: utilisation de balises s\u00e9mantiques \u2693\ufe0e HTML5 accentue encore plus l'objectif de bien structurer un document en y ajoutant de nouvelles balises ( par rapport \u00e0 HTML4 ). Parmi ces nouvelles balises, on peut citer, entre autres: header , nav , section , article , aside et footer . Ces balises sont dites s\u00e9mantiques , c'est-\u00e0-dire qui ont du sens, ... par opposition \u00e0 d'anciennes balises g\u00e9n\u00e9riques comme div ou span . Bien qu'il ne s'agisse pas d'une r\u00e8gle absolue, voici un exemple correct (au sens HTML5) de structure de document: Balises s\u00e9mantiques Dans la mesure du possible, on r\u00e9servera la balise g\u00e9n\u00e9rique div pour des regroupements d'\u00e9l\u00e9ments n\u00e9cessitant un traitement CSS (voir ci-dessous) sp\u00e9cifique. CSS \u2693\ufe0e Qu'est-ce que le CSS et comment le mettre en application? \u2693\ufe0e Le langage CSS ( Cascading Style Sheet ) est un langage permettant de d\u00e9finir la mise en forme des \u00e9l\u00e9ments HTML constituant une page web. Il est important de retenir: HTML est g\u00e8re le 'fond', CSS g\u00e8re la 'forme' . Il existe trois emplacements pour placer les r\u00e8gles de style CSS associ\u00e9es \u00e0 un document. R\u00e8gles de style en ligne - A EVITER ABSOLUMENT- \u2693\ufe0e Il s'agit de d\u00e9finir une r\u00e8gle de style directement via l'attribut style d'un \u00e9l\u00e9ment. Sa syntaxe est la suivante: <tag style=\"definition_des_styles\">....</tag> o\u00f9 definition_des_styles est de la forme propriete: valeur; . Exemple 1 2 3 4 < p style = \"text-align: right; border: 2px solid red;\" > Lorem ipsum dolor sit amet consectetur. < br > adipisicing elit deleniti magni sequi ducimus ad similique quo beatae dolor tempora et cum. < br > corporis enim earum eligendi unde itaque dicta, blanditiis aut consequuntur? </ p > Attention Cette m\u00e9thode est \u00e0 d\u00e9conseiller franchement car elle rend le code HTML peu lisible et on m\u00e9lange la forme et le fond. \u00c0 faire Tester la mise en forme pr\u00e9c\u00e9dente en l'ajoutant \u00e0 votre page. R\u00e8gles de style interne - ACCEPTABLE- \u2693\ufe0e Il s'agit de d\u00e9clarer les r\u00e8gles de style \u00e0 l'int\u00e9rieur d'une balise <style> de l'\u00e9l\u00e9ment head du document HTML. Les r\u00e8gles \u00e9tant \u00e9crites les unes en dessous des autres ( la syntaxe d\u00e9taill\u00e9e sera vue dans le prochain paragraphe ). Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <!DOCTYPE html> < html lang = \"fr\" > < head > < meta charset = \"UTF-8\" > < title > Document </ title > < style > p { text-align : right ; border : 2 px solid gray ; } . remarque { color : red ;} </ style > </ head > < body > < p > Lorem ipsum dolor sit amet consectetur adipisicing elit. < br > Deleniti magni sequi ducimus < span class = \"remarque\" > similique dolor tempora </ span > et cum. < br > corporis enim earum eligendi unde itaque dicta, blanditiis aut consequuntur? </ p > </ body > </ html > \u00c0 faire Tester le code ci-dessus. Cette m\u00e9thode est acceptable mais elle pr\u00e9sente l'inconv\u00e9nient de m\u00e9langer le fond et la forme et surtout de ne pas permettre la r\u00e9utilisation des r\u00e8gles de style dans d'autres pages ( \u00e0 moins de faire du copier-coller ). R\u00e8gles de style dans un fichier externe - A PRIVILEGIER- \u2693\ufe0e Les r\u00e8gles de style sont d\u00e9finies dans un fichier texte externe, d'extension .css . La pr\u00e9sence de ce fichier doit \u00eatre signal\u00e9 au navigateur dans l'\u00e9l\u00e9ment head avec une balise <link> : 1 2 3 4 < head > ...... < link rel = \"stylesheet\" href = \"style/fichier.css\" /> </ head > si on suppose que le fichier s'appelle fichier.css et qu'il se trouve dans le dossier style . On remarque au passage que la balise link est auto-fermante . La syntaxe d'une r\u00e8gle de style CSS est la suivante: 1 2 3 4 5 selecteur { propriete1: valeur1; propriete2: valeur2; ... } Le selecteur peut \u00eatre un tag HTML, l'identifiant d'un \u00e9l\u00e9ment pr\u00e9c\u00e9d\u00e9 du caract\u00e8re # (sans espace) ou le nom d'une classe pr\u00e9c\u00e9d\u00e9 du caract\u00e8re . ( point ). Exemple de fichier.css 1 2 3 4 5 6 7 8 p { text - align : right ; border : 2 px solid gray ; } . remarque { color : red ; } On voit ici tout l'int\u00e9r\u00eat \u00e0 ajuster les attributs class et id des \u00e9l\u00e9ments HTML lors de la construction de la page (voir documentation sur W3Schools.com pour class et id ). Quelques propri\u00e9t\u00e9s CSS \u2693\ufe0e Il n'est pas question questions de citer toutes les propri\u00e9t\u00e9s CSS (qu'on peut trouver sur W3Schools.com ), mais quelques unes fr\u00e9quemment utilis\u00e9es. font-size : fixe la taille de la police; color : fixe la couleur du texte; text-align : d\u00e9finit l'alignement horizontal du texte; background-color : couleur d'arri\u00e8re plan;","title":"COURS 1"},{"location":"NSI1/S6/S6C1.html#html5-css3-les-bases","text":"L'objectif est de rappeler puis d'approfondir des notions d\u00e9j\u00e0 rencontr\u00e9es en SNT . Les tests de code pourront \u00eatre r\u00e9alis\u00e9s de deux fa\u00e7ons diff\u00e9rentes : en ligne, sur jsfiddle ; en local avec un \u00e9diteur de code ( Visual Studio Code ) + navigateur ( Chrome de pr\u00e9f\u00e9rence).","title":"HTML5 &amp; CSS3: LES BASES"},{"location":"NSI1/S6/S6C1.html#les-langages-du-web","text":"C\u00f4t\u00e9 client, c'est-\u00e0-dire c\u00f4t\u00e9 utilisateur, les langages incontournables sont: HTML pour la description du contenu d'une page; CSS pour d\u00e9finir la mise en forme des pages; Javascript ( qui ne sera pas abord\u00e9 dans ce chapitre ) pour permettre l'interactivit\u00e9 avec l'utilisateur.","title":"Les langages du web"},{"location":"NSI1/S6/S6C1.html#html","text":"","title":"HTML"},{"location":"NSI1/S6/S6C1.html#css","text":"","title":"CSS"},{"location":"NSI1/S6/S6C1.html#quelques-proprietes-css","text":"Il n'est pas question questions de citer toutes les propri\u00e9t\u00e9s CSS (qu'on peut trouver sur W3Schools.com ), mais quelques unes fr\u00e9quemment utilis\u00e9es. font-size : fixe la taille de la police; color : fixe la couleur du texte; text-align : d\u00e9finit l'alignement horizontal du texte; background-color : couleur d'arri\u00e8re plan;","title":"Quelques propri\u00e9t\u00e9s CSS"},{"location":"NSI1/S6/S6C2.html","text":"INTERACTIONS CLIENT-SERVEUR: protocole HTTP \u2693\ufe0e Mod\u00e8le client-serveur et protocole http. \u2693\ufe0e D\u00e9finition On appelle interaction client-serveur un mode de communication entre un programme qualifi\u00e9 de client qui envoie des requ\u00eates et un programme dit serveur qui y r\u00e9pond . Dans le cas du Web, le client peut \u00eatre un navigateur ( Google Chrome, Firefox, etc ) et le serveur un programme tel que Apache, Nginx, etc . Le protocole utilis\u00e9 est HTTP . Les outils utilis\u00e9s \u2693\ufe0e On utilisera le navigateur Firefox avec sa console de d\u00e9veloppement (voir la vid\u00e9o pour la configuration c\u00f4t\u00e9 client). C\u00f4t\u00e9 serveur, on utilisera un programme l\u00e9ger \u00e9crit en Javascript ( Node.js plus exactement). L'adresse de ce serveur not\u00e9 xxx.xxx.xxx.xxx:8080 sera fournie par le professeur au cours de la s\u00e9ance. Analyse d'un \u00e9change \u2693\ufe0e Que se passe-t-il apr\u00e8s avoir saisi une URL? \u2693\ufe0e \u00c0 faire Ouvrir l'URL http://xxx.xxx.xxx.xxx:8080/ dans Firefox ainsi que la console de d\u00e9veloppement. Rappel L'URL est compos\u00e9e de la mani\u00e8re suivante: protocole://adresse-ou-nom/ressource . Le protocole est souvent HTTP (ou HTTPS); on \u00e9crit g\u00e9n\u00e9ralement un nom plut\u00f4t qu'une adresse (le DNS fait la conversion) et la ressource peut \u00eatre une page HTML, un image, une vid\u00e9o etc. La partie haute de la console de d\u00e9veloppement liste les fichiers n\u00e9cessaires \u00e0 l'affichage de la page. \u00c0 faire Combien de requ\u00eates sont n\u00e9cessaires \u00e0 l'affichage de la page '/' ? Quels types de fichiers sont demand\u00e9s? L'acc\u00e8s \u00e0 une ressource se fait selon le protocole HTTP. Le d\u00e9tail de l'\u00e9change peut \u00eatre suivi dans la console de d\u00e9veloppement. En r\u00e9sum\u00e9 Pour afficher une page web le navigateur (client) r\u00e9alise les op\u00e9rations suivantes: ouverture d'une connection TCP \u00e0 destination du serveur; envoi d'un message HTTP (qui est lisible en version 1.1); lecture de la r\u00e9ponse du serveur; fermeture ou r\u00e9utilisation de la connection pour d'autres requ\u00eates. Envoi d'une requ\u00eate par le client \u2693\ufe0e La deuxi\u00e8me partie de la console d\u00e9taille, entre autres, les requ\u00eates du client (navigateur) envoy\u00e9es au serveur. Une requ\u00eate HTTP est compos\u00e9e d'une premi\u00e8re ligne o\u00f9 figurent la m\u00e9thode , le chemin de la ressource et la version du protocole . Ensuite, on trouve plusieurs lignes d'ent\u00eate. On peut avoir une signification de chaque ent\u00eate en cliquant sur le point d'interrogation associ\u00e9 (bouton Texte brut d\u00e9sactiv\u00e9) dans la console de d\u00e9veloppement. \u00c0 faire Quel est le chemin de la ressource associ\u00e9e \u00e0 la troisi\u00e8me requ\u00eate lors de l'affichage de la page pr\u00e9cdente? La m\u00e9thode GET est utilis\u00e9e pour r\u00e9cup\u00e9rer une ressource. D'autres m\u00e9thodes existent, on pourra consulter cette page pour avoir une liste compl\u00e8te. On utilisera notamment la m\u00e9thode POST dans le prochain chapitre. Lecture de la r\u00e9ponse du serveur \u2693\ufe0e La premi\u00e8re ligne contient la version du protocole, un code de retour et un message de retour. On trouve ensuite des ligne d'ent\u00eate comme pour les requ\u00eates. On pourra trouver \u00e0 cette adresse , les codes de r\u00e9ponse du protocole HTTP. !!! \"\u00c0 faire\" Saisir l'URL http://xxx.xxx.xxx.xxx:8080/Exercice puis commentez la r\u00e9ponse du serveur.","title":"COURS 2"},{"location":"NSI1/S6/S6C2.html#interactions-client-serveur-protocole-http","text":"","title":"INTERACTIONS CLIENT-SERVEUR: protocole HTTP"},{"location":"NSI1/S6/S6C2.html#modele-client-serveur-et-protocole-http","text":"D\u00e9finition On appelle interaction client-serveur un mode de communication entre un programme qualifi\u00e9 de client qui envoie des requ\u00eates et un programme dit serveur qui y r\u00e9pond . Dans le cas du Web, le client peut \u00eatre un navigateur ( Google Chrome, Firefox, etc ) et le serveur un programme tel que Apache, Nginx, etc . Le protocole utilis\u00e9 est HTTP .","title":"Mod\u00e8le client-serveur et protocole http."},{"location":"NSI1/S6/S6C2.html#les-outils-utilises","text":"On utilisera le navigateur Firefox avec sa console de d\u00e9veloppement (voir la vid\u00e9o pour la configuration c\u00f4t\u00e9 client). C\u00f4t\u00e9 serveur, on utilisera un programme l\u00e9ger \u00e9crit en Javascript ( Node.js plus exactement). L'adresse de ce serveur not\u00e9 xxx.xxx.xxx.xxx:8080 sera fournie par le professeur au cours de la s\u00e9ance.","title":"Les outils utilis\u00e9s"},{"location":"NSI1/S6/S6C2.html#analyse-dun-echange","text":"","title":"Analyse d'un \u00e9change"},{"location":"NSI1/S6/S6C3.html","text":"INTERACTIONS CLIENT-SERVEUR: Transmission de param\u00e8tres \u2693\ufe0e Formulaire dans une page web \u2693\ufe0e Qu'est-ce qu'un formulaire? \u2693\ufe0e Les formulaires HTML sont des objets permettant l'interaction entre un utilisateur et un site web ou une application. Gr\u00e2ce \u00e0 eux l'utilisateur d'envoyer des donn\u00e9es au site web. La plupart du temps, ces donn\u00e9es sont envoy\u00e9es \u00e0 des serveurs web mais la page peut aussi les intercepter et les utiliser elle-m\u00eame comme nous le verrons dans le premier exemple. Les formulaires utilisent divers composants graphiques comme: des zones de saisie de texte; des cases \u00e0 cocher; des listes d\u00e9roulantes; des boutons; etc. L'\u00e9l\u00e9ment HTML utilis\u00e9 est l'\u00e9l\u00e9ment <form> ... </form> . Mise en oeuvre d'un premier formulaire HTML: syntaxe \u2693\ufe0e Le premier exemple choisi est celui d'un convertisseur de temp\u00e9rature des degr\u00e9s Celcius vers le Kelvin ou les degr\u00e9s Fahrenheit. Le fichier source est convertisseur.html . \u00c0 faire Ouvrir le fichier convertisseur.html dans Visual Studio Code afin de consulter le code source ET dans un navigateur. La saisie de la temp\u00e9rature est r\u00e9alis\u00e9e dans un formulaire. La portion de code concern\u00e9e est la suivante: 1 2 3 4 5 6 7 8 9 10 11 12 13 < form action = \"\" > < label for = \"saisie\" > Temp\u00e9rature en degr\u00e9 Celcius </ label > < input type = \"text\" name = \"valeur\" id = \"saisie\" value = \"\" > < div id = \"units\" > < label for = \"unites\" > Choisir une unit\u00e9 </ label > < select name = \"temp\" id = \"unites\" > < option value = \"\" > --Choisir une unit\u00e9 de conversion-- </ option > < option value = \"kelvin\" > Kelvin </ option > < option value = \"fahrenheit\" > Fahrenheit </ option > </ select > </ div > < input type = \"submit\" value = \"Convertir\" > </ form > La balise form comporte souvent un attribut action qui indique la ressource qui va traiter les donn\u00e9es du formulaire. Dans notre cas ce sera la page elle-m\u00eame, par le biais d'un script annexe. Notre formulaire est compos\u00e9 des \u00e9l\u00e9ments suivants: une zone de saisie de texte, rep\u00e9r\u00e9e par l'\u00e9l\u00e9ment <input type=\"text\" ...> ; une liste d\u00e9roulante avec une option \u00e0 s\u00e9lectionner, rep\u00e9r\u00e9e par <select> ... </select> ; un bouton pour soumettre les donn\u00e9es, rep\u00e9r\u00e9 par <input type=\"submit\" ...> . Il est tr\u00e8s courant d'associer un label aux \u00e9l\u00e9ments d'un formulaire. La syntaxe est <label for=\"...\"> ...</label> . La valeur de l'attribut for correspond \u00e0 la valeur de l'attribut id de l'\u00e9l\u00e9ment de formulaire associ\u00e9 ( input, select, etc. ). Enfin, l'\u00e9l\u00e9ment <div> pr\u00e9sent ne correspond pas \u00e0 une entr\u00e9e du formulaire. C'est ici un \u00e9l\u00e9ment structurant dont l'identifiant sera utilis\u00e9 en CSS. Une documentation int\u00e9ressantes est disponible sur le site de la MDN . Transmission de requ\u00eates par m\u00e9thode GET \u2693\ufe0e \u00c0 faire Ouvrir la page web situ\u00e9e \u00e0 http://xxx.xxx.xxx.xxx:8080/ dans Firefox, puis choisir \"Exemple 1 m\u00e9thode GET\". En utilisant la console de d\u00e9veloppement, rep\u00e9rer la portion de code correspondant au formulaire pr\u00e9sent sur cette page. Quelle est la principale diff\u00e9rence avec le formulaire de l'exemple pr\u00e9c\u00e9dent? Quitter l'Inspecteur et choisir R\u00e9seau. Compl\u00e9ter le formulaire et valider. Commentez. Observer notamment l'URL dans la barre d'adresse En utilisant la m\u00e9thode GET dans un formulaire, le navigateur est en mesure d'envoyer des informations vers un serveur. Il proc\u00e8de de la mani\u00e8re suivante: pour chaque \u00e9l\u00e9ment graphique, formation d'un couple param\u00e8tre=valeur o\u00f9 param\u00e8tre est la cha\u00eene correspondant \u00e0 l'attribut name et valeur la valeur saisie ou s\u00e9lectionn\u00e9e (ou coch\u00e9e); formation d'une cha\u00eene de caract\u00e8res param1=val1&param2=val2&...&param_n=val_n , les couples param\u00e8tre-valeur sont s\u00e9par\u00e9s par le caract\u00e8re & ; formation de l'url: http://xxx.xxx.xxx.xxx/page_traitement?param1=val1&param2=val2&...&param_n=val_n . Dans la m\u00e9thode GET, les donn\u00e9es sont transmises au serveur DANS L'URL et EN CLAIR. Ce qui peut poser un gros probl\u00e8me de confidentialit\u00e9 (cas de mot de passe). Il faudra faire attention \u00e9galement au fait que l'URL a une taille limit\u00e9e. Transmission de requ\u00eates par m\u00e9thode POST \u2693\ufe0e \u00c0 faire Ouvrir la page web situ\u00e9e \u00e0 http://xxx.xxx.xxx.xxx:8080/ dans Firefox, puis choisir \"Exemple 2 m\u00e9thode POST\". Compl\u00e9ter le formulaire et valider. Les param\u00e8tres sont-ils pr\u00e9sents dans l'URL? Comment ont \u00e9t\u00e9 transmis les param\u00e8tres? Indication: voir le d\u00e9tail de la premi\u00e8re requ\u00eate dans la console de d\u00e9veloppement. Dans la m\u00e9thode POST, les param\u00e8tres sont pass\u00e9s dans le corps de la requ\u00eate . Ils ne sont plus visibles dans l'URL. Cette m\u00e9thode permet en outre, d'envoyer du contenu plus long. Transmission chiffr\u00e9e \u2693\ufe0e Un gros probl\u00e8me avec le protocole HTTP est que celui-ci manipule des donn\u00e9es en clair et donc lisible de n'importe qui. C'est particuli\u00e8rement probl\u00e9matique dans le cas de donn\u00e9es confidentielles. Pour pallier \u00e0 cette insuffisance, on a recours ( presque syst\u00e9matiquement maintenant, la majorit\u00e9 des serveurs l'impose ) \u00e0 la version s\u00e9curis\u00e9e: HTTPS . Le s de https signifie secured . Une fois l'identit\u00e9e du serveur confirm\u00e9e, l'\u00e9change se poursuit de mani\u00e8re chiffr\u00e9e. D'un point de vue pratique, on reconnait une connection s\u00e9curis\u00e9e par la pr\u00e9sence d'un cadenas \u00e0 c\u00f4t\u00e9 de l'URL. On peut aussi consulter les d\u00e9tails d'\u00e9changes pr\u00e9liminaires de certificats avec un outil en ligne de commande.","title":"COURS 3"},{"location":"NSI1/S6/S6C3.html#interactions-client-serveur-transmission-de-parametres","text":"","title":"INTERACTIONS CLIENT-SERVEUR: Transmission de param\u00e8tres"},{"location":"NSI1/S6/S6C3.html#formulaire-dans-une-page-web","text":"","title":"Formulaire dans une page web"},{"location":"NSI1/S6/S6C3.html#transmission-de-requetes-par-methode-get","text":"\u00c0 faire Ouvrir la page web situ\u00e9e \u00e0 http://xxx.xxx.xxx.xxx:8080/ dans Firefox, puis choisir \"Exemple 1 m\u00e9thode GET\". En utilisant la console de d\u00e9veloppement, rep\u00e9rer la portion de code correspondant au formulaire pr\u00e9sent sur cette page. Quelle est la principale diff\u00e9rence avec le formulaire de l'exemple pr\u00e9c\u00e9dent? Quitter l'Inspecteur et choisir R\u00e9seau. Compl\u00e9ter le formulaire et valider. Commentez. Observer notamment l'URL dans la barre d'adresse En utilisant la m\u00e9thode GET dans un formulaire, le navigateur est en mesure d'envoyer des informations vers un serveur. Il proc\u00e8de de la mani\u00e8re suivante: pour chaque \u00e9l\u00e9ment graphique, formation d'un couple param\u00e8tre=valeur o\u00f9 param\u00e8tre est la cha\u00eene correspondant \u00e0 l'attribut name et valeur la valeur saisie ou s\u00e9lectionn\u00e9e (ou coch\u00e9e); formation d'une cha\u00eene de caract\u00e8res param1=val1&param2=val2&...&param_n=val_n , les couples param\u00e8tre-valeur sont s\u00e9par\u00e9s par le caract\u00e8re & ; formation de l'url: http://xxx.xxx.xxx.xxx/page_traitement?param1=val1&param2=val2&...&param_n=val_n . Dans la m\u00e9thode GET, les donn\u00e9es sont transmises au serveur DANS L'URL et EN CLAIR. Ce qui peut poser un gros probl\u00e8me de confidentialit\u00e9 (cas de mot de passe). Il faudra faire attention \u00e9galement au fait que l'URL a une taille limit\u00e9e.","title":"Transmission de requ\u00eates par m\u00e9thode GET"},{"location":"NSI1/S6/S6C3.html#transmission-de-requetes-par-methode-post","text":"\u00c0 faire Ouvrir la page web situ\u00e9e \u00e0 http://xxx.xxx.xxx.xxx:8080/ dans Firefox, puis choisir \"Exemple 2 m\u00e9thode POST\". Compl\u00e9ter le formulaire et valider. Les param\u00e8tres sont-ils pr\u00e9sents dans l'URL? Comment ont \u00e9t\u00e9 transmis les param\u00e8tres? Indication: voir le d\u00e9tail de la premi\u00e8re requ\u00eate dans la console de d\u00e9veloppement. Dans la m\u00e9thode POST, les param\u00e8tres sont pass\u00e9s dans le corps de la requ\u00eate . Ils ne sont plus visibles dans l'URL. Cette m\u00e9thode permet en outre, d'envoyer du contenu plus long.","title":"Transmission de requ\u00eates par m\u00e9thode POST"},{"location":"NSI1/S6/S6C3.html#transmission-chiffree","text":"Un gros probl\u00e8me avec le protocole HTTP est que celui-ci manipule des donn\u00e9es en clair et donc lisible de n'importe qui. C'est particuli\u00e8rement probl\u00e9matique dans le cas de donn\u00e9es confidentielles. Pour pallier \u00e0 cette insuffisance, on a recours ( presque syst\u00e9matiquement maintenant, la majorit\u00e9 des serveurs l'impose ) \u00e0 la version s\u00e9curis\u00e9e: HTTPS . Le s de https signifie secured . Une fois l'identit\u00e9e du serveur confirm\u00e9e, l'\u00e9change se poursuit de mani\u00e8re chiffr\u00e9e. D'un point de vue pratique, on reconnait une connection s\u00e9curis\u00e9e par la pr\u00e9sence d'un cadenas \u00e0 c\u00f4t\u00e9 de l'URL. On peut aussi consulter les d\u00e9tails d'\u00e9changes pr\u00e9liminaires de certificats avec un outil en ligne de commande.","title":"Transmission chiffr\u00e9e"},{"location":"NSI1/S6/S6E2.html","text":"IHM_1_Interaction_web_Exercices \u2693\ufe0e Capacit\u00e9s Identifier les diff\u00e9rents composants graphiques permettant d\u2019interagir avec une application Web. Identifier les \u00e9v\u00e9nements que les fonctions associ\u00e9es aux diff\u00e9rents composants graphiques sont capables de traiter. Pour atteindre ces objectifs Il s\u2019agira: d\u2019examiner le code HTML d\u2019une page comprenant des composants graphiques; * de distinguer ce qui rel\u00e8ve de la description des composants graphiques en HTML de leur comportement ( r\u00e9action aux \u00e9v\u00e9nements*) programm\u00e9 par exemple en JavaScript. QCM \u2693\ufe0e Dans le code HTML les d\u00e9limiteurs tels que <body> et </body> s\u2019appellent: A. des bornes; B. des balises; C. des paragraphes; D. des liens. Dans une page HTML, lequel de ces codes permet la pr\u00e9sence d'un bouton qui appelle la fonction javascript afficher_reponse() lorsque l'utilisateur clique dessus ? A. <a href=\"afficher_reponse()\">Cliquez ici</a> B. <button if_clicked=\"afficher_reponse()\">Cliquez ici</button> C. <button value=\"Cliquez ici\"><a> afficher_reponse()</a></button> D. <button onclick=\"afficher_reponse()\">Cliquez ici</button> On consid\u00e8re le formulaire ci-dessous : Quel est votre langage pr\u00e9f\u00e9r\u00e9 ? Python \u25a1 Java \u25a1 Php \u25a1 Quelle balise parmi les quatre suivantes a \u00e9t\u00e9 utilis\u00e9e pour les cases \u00e0 cocher ? A. <input type=\"radio\"> B. <input type=\"circle\"> C. <input type=\"checkbox\"> D. <input type=\"square\"> On souhaite qu\u2019un menu apparaisse \u00e0 chaque fois que l\u2019utilisateur passe sa souris sur l\u2019image de banni\u00e8re du site. L\u2019attribut de la balise img dans lequel on doit mettre un code Javascript \u00e0 cet effet est : A. onclick B. src C. alt D. onmouseover Quel est le nom de l\u2019\u00e9v\u00e9nement g\u00e9n\u00e9r\u00e9 lorsque l\u2019utilisateur clique sur un bouton de type button dans une page HTML ? A. action B. mouse C. submit D. click Voici un extrait d'un document HTML 1 2 3 4 5 6 7 <body> ......... Clic ! </button> <h1><span id=\"valeur\">2000</span></h1> </body> <html> Quelle doit \u00eatre la ligne qui remplace les pointill\u00e9s pour obtenir un bouton dont l'appui d\u00e9clenche la fonction javascript actionBouton() ? A. <button click = \"actionBouton();\"> B. <button onclick = \"actionBouton();\"> C. <button onclick => \"actionBouton();\" D. <button> onclick = \"actionBouton();\" Comment doit-on proc\u00e9der pour ins\u00e9rer des instructions en javascript dans un fichier html ? A. Il suffit de mettre les instructions entre les balises et B. Il faut utiliser une balise <script> C. Il faut les ins\u00e9rer dans le fichier CSS D. Il est inutile de mettre des balises sp\u00e9ciales Une horloge dans une page web \u2693\ufe0e Ouvrir la page horloge.html et examiner les codes sources disponibles. Quel est l'\u00e9l\u00e9ment graphique qui permet une interaction avec l'utilisateur? ( donner la balise HTML ) D\u00e9crire l'\u00e9v\u00e8nement qui provoque un changement sur la page. Cet \u00e9v\u00e8nement est-il g\u00e9r\u00e9 directement dans la page HTML? Dans la n\u00e9gative o\u00f9 est-il g\u00e9r\u00e9? Que r\u00e9alise cette portion de code du fichier horloge.js ? 1 2 3 cadre . addEventListener ( 'mouseover' , ( event ) => { doc . style . visibility = \"visible\" ; }); M\u00eame question pour: 1 2 3 cadre . addEventListener ( 'mouseleave' , ( event ) => { doc . style . visibility = \"hidden\" ; }); Couleur en RGB \u2693\ufe0e On souhaite afficher la couleur associ\u00e9e aux valeurs des composantes rouge, vert et bleue. Le r\u00e9sultat dans une page web aurait l'allure suivante: On fournit les codes sources suivants: couleur.html ; couleur.css ; deux fichiers javascript script_couleur1.js et script_couleur2.js . Lier le fichier de mise en forme CSS au code HTML. Combien de composants graphiques ou widget en anglais permettant l'interaction, peut-on identifier sur la page couleur.html ? Donner le nom de l'\u00e9l\u00e9ment HTML associ\u00e9 pour chacun d'eux. On souhaite afficher la couleur r\u00e9sultant du m\u00e9lange des composantes rouge bleue et verte dans un cadre pr\u00e9vu \u00e0 cet effet. On dispose pour cela de deux scripts \u00e9crits en Javascript et directement utilisable sans modification de leur code. En modifiant la page couleur.html proposer deux fa\u00e7ons de r\u00e9soudre le probl\u00e8me pos\u00e9.","title":"EXERCICES E2"},{"location":"NSI1/S6/S6E2.html#ihm_1_interaction_web_exercices","text":"Capacit\u00e9s Identifier les diff\u00e9rents composants graphiques permettant d\u2019interagir avec une application Web. Identifier les \u00e9v\u00e9nements que les fonctions associ\u00e9es aux diff\u00e9rents composants graphiques sont capables de traiter. Pour atteindre ces objectifs Il s\u2019agira: d\u2019examiner le code HTML d\u2019une page comprenant des composants graphiques; * de distinguer ce qui rel\u00e8ve de la description des composants graphiques en HTML de leur comportement ( r\u00e9action aux \u00e9v\u00e9nements*) programm\u00e9 par exemple en JavaScript.","title":"IHM_1_Interaction_web_Exercices"},{"location":"NSI1/S6/S6E2.html#qcm","text":"Dans le code HTML les d\u00e9limiteurs tels que <body> et </body> s\u2019appellent: A. des bornes; B. des balises; C. des paragraphes; D. des liens. Dans une page HTML, lequel de ces codes permet la pr\u00e9sence d'un bouton qui appelle la fonction javascript afficher_reponse() lorsque l'utilisateur clique dessus ? A. <a href=\"afficher_reponse()\">Cliquez ici</a> B. <button if_clicked=\"afficher_reponse()\">Cliquez ici</button> C. <button value=\"Cliquez ici\"><a> afficher_reponse()</a></button> D. <button onclick=\"afficher_reponse()\">Cliquez ici</button> On consid\u00e8re le formulaire ci-dessous : Quel est votre langage pr\u00e9f\u00e9r\u00e9 ? Python \u25a1 Java \u25a1 Php \u25a1 Quelle balise parmi les quatre suivantes a \u00e9t\u00e9 utilis\u00e9e pour les cases \u00e0 cocher ? A. <input type=\"radio\"> B. <input type=\"circle\"> C. <input type=\"checkbox\"> D. <input type=\"square\"> On souhaite qu\u2019un menu apparaisse \u00e0 chaque fois que l\u2019utilisateur passe sa souris sur l\u2019image de banni\u00e8re du site. L\u2019attribut de la balise img dans lequel on doit mettre un code Javascript \u00e0 cet effet est : A. onclick B. src C. alt D. onmouseover Quel est le nom de l\u2019\u00e9v\u00e9nement g\u00e9n\u00e9r\u00e9 lorsque l\u2019utilisateur clique sur un bouton de type button dans une page HTML ? A. action B. mouse C. submit D. click Voici un extrait d'un document HTML 1 2 3 4 5 6 7 <body> ......... Clic ! </button> <h1><span id=\"valeur\">2000</span></h1> </body> <html> Quelle doit \u00eatre la ligne qui remplace les pointill\u00e9s pour obtenir un bouton dont l'appui d\u00e9clenche la fonction javascript actionBouton() ? A. <button click = \"actionBouton();\"> B. <button onclick = \"actionBouton();\"> C. <button onclick => \"actionBouton();\" D. <button> onclick = \"actionBouton();\" Comment doit-on proc\u00e9der pour ins\u00e9rer des instructions en javascript dans un fichier html ? A. Il suffit de mettre les instructions entre les balises et B. Il faut utiliser une balise <script> C. Il faut les ins\u00e9rer dans le fichier CSS D. Il est inutile de mettre des balises sp\u00e9ciales","title":"QCM"},{"location":"NSI1/S6/S6E2.html#une-horloge-dans-une-page-web","text":"Ouvrir la page horloge.html et examiner les codes sources disponibles. Quel est l'\u00e9l\u00e9ment graphique qui permet une interaction avec l'utilisateur? ( donner la balise HTML ) D\u00e9crire l'\u00e9v\u00e8nement qui provoque un changement sur la page. Cet \u00e9v\u00e8nement est-il g\u00e9r\u00e9 directement dans la page HTML? Dans la n\u00e9gative o\u00f9 est-il g\u00e9r\u00e9? Que r\u00e9alise cette portion de code du fichier horloge.js ? 1 2 3 cadre . addEventListener ( 'mouseover' , ( event ) => { doc . style . visibility = \"visible\" ; }); M\u00eame question pour: 1 2 3 cadre . addEventListener ( 'mouseleave' , ( event ) => { doc . style . visibility = \"hidden\" ; });","title":"Une horloge dans une page web"},{"location":"NSI1/S6/S6E2.html#couleur-en-rgb","text":"On souhaite afficher la couleur associ\u00e9e aux valeurs des composantes rouge, vert et bleue. Le r\u00e9sultat dans une page web aurait l'allure suivante: On fournit les codes sources suivants: couleur.html ; couleur.css ; deux fichiers javascript script_couleur1.js et script_couleur2.js . Lier le fichier de mise en forme CSS au code HTML. Combien de composants graphiques ou widget en anglais permettant l'interaction, peut-on identifier sur la page couleur.html ? Donner le nom de l'\u00e9l\u00e9ment HTML associ\u00e9 pour chacun d'eux. On souhaite afficher la couleur r\u00e9sultant du m\u00e9lange des composantes rouge bleue et verte dans un cadre pr\u00e9vu \u00e0 cet effet. On dispose pour cela de deux scripts \u00e9crits en Javascript et directement utilisable sans modification de leur code. En modifiant la page couleur.html proposer deux fa\u00e7ons de r\u00e9soudre le probl\u00e8me pos\u00e9.","title":"Couleur en RGB"},{"location":"NSI1/S7/S7C1.html","text":"1 Un autre type construit: le dictionnaire \u2693\ufe0e Rappel: inconv\u00e9nient des p-uplets \u2693\ufe0e Dans l'exemple du fichier cit\u00e9 ci-dessous, on a mod\u00e9liser l'image avec un p-uplet ayant pour composante sa largeur en pixel, sa hauteur en pixel et sa taille en kilo-octet. Ainsi, soit le fichier \"dog.png\" qui a une largeur de 384 pixels, une hauteur de 576 pixels et dont la taille est de 243 ko, sera mod\u00e9lis\u00e9 par: 1 image = ( 384 , 576 , 243 ) On a vu que cette solution n'est pas id\u00e9ale, car il fallait se souvenir de l'ordre dans lequel les entiers ont \u00e9t\u00e9 rentr\u00e9s ! La solution du p-uplet nomm\u00e9 \u2693\ufe0e Pour contourner le probl\u00e8me soulev\u00e9 pr\u00e9c\u00e9demment, une solution consiste \u00e0 utiliser des p-uplets nomm\u00e9s . Chaque composante du p-uplet se voit attribuer un nom (typiquement une cha\u00eene de caract\u00e8res) au lieu d'un index num\u00e9rique! Python poss\u00e8de un type permettant de manipuler les p-uplets nomm\u00e9s: les namedtuple du module collections . Cependant, et conform\u00e9ment au programme, en classe de 1re NSI, on utilisera des dictionnaires pour impl\u00e9menter des p-uplets nomm\u00e9s . Les dictionnaires \u2693\ufe0e Construction et propri\u00e9t\u00e9s des dictionnaires \u2693\ufe0e Python poss\u00e8de une structure de donn\u00e9es tr\u00e8s importante: le dictionnaire . Contrairement aux tableaux ou aux tuples, les valeurs ne sont plus associ\u00e9es \u00e0 des index forc\u00e9ment num\u00e9riques mais \u00e0 des cl\u00e9s qui peuvent \u00eatre des nombres, des chaines de caract\u00e8res, des tuples. On d\u00e9clare un dictionnaire en pla\u00e7ant ses paires cl\u00e9-valeur entre accolades et s\u00e9par\u00e9es par une virgule. La cl\u00e9 et la valeur \u00e9tant s\u00e9par\u00e9es par le caract\u00e8re : . Ainsi, le probl\u00e8me du fichier image pr\u00e9c\u00e9dent peut \u00eatre mod\u00e9lis\u00e9 par: 1 2 3 image = { 'nom' : 'dog.png' , 'larg' : 384 , 'haut' : 576 , 'taille' : 243 } print ( \"Taille de l'image:\" , image [ 'taille' ], \"ko\" ) print ( \"Hauteur:\" , image [ 'haut' ], \"pixels\" ) 1 2 Taille de l'image: 243 ko Hauteur: 576 pixels Autre exemple On peut \u00e9galement construire un dictionnaire \u00e0 partir d'un dictionnaire vide. La syntaxe est la suivante: 1 2 3 4 5 6 cyclones_reunion = {} cyclones_reunion [ \"bejisa\" ] = ( 2 , 1 , 2014 ) cyclones_reunion [ \"dumile\" ] = ( 3 , 1 , 2013 ) cyclones_reunion [ \"dina\" ] = ( 22 , 1 , 2002 ) cyclones_reunion [ \"gamede\" ] = ( 25 , 2 , 2007 ) print ( cyclones_reunion ) 1 {'bejisa': (2, 1, 2014), 'dumile': (3, 1, 2013), 'dina': (22, 1, 2002), 'gamede': (25, 2, 2007)} Le nombre d'entr\u00e9es du dictionnaire est obtenu avec la fonction len . 1 len ( cyclones_reunion ) 1 4 On acc\u00e8de \u00e0 la valeur associ\u00e9e \u00e0 une cl\u00e9 d'un dictionnaire d avec une construction du type d[cl\u00e9] . Si la cl\u00e9 n'existe pas, python l\u00e8vera une exception KeyError . 1 print ( cyclones_reunion [ \"dina\" ]) 1 (22, 1, 2002) Si la cl\u00e9 n'existe pas: 1 2 3 4 5 6 7 print ( cyclones_reunion [ \"carlos\" ]) --------------------------------------------------------------------------- KeyError Traceback ( most recent call last ) < ipython - input - 9 - 0306 c0a2304c > in < module > () ----> 1 print ( cyclones_reunion [ \"carlos\" ]) KeyError : 'carlos' Enfin, un dictionnaire n'est pas ordonn\u00e9 . Les \u00e9l\u00e9ments ne sont pas forc\u00e9ment afich\u00e9s dans l'ordre de leur cr\u00e9ation. Parcours d'un dictionnaire \u2693\ufe0e L'appartenance \u00e0 un dictionnaire ( en r\u00e9alit\u00e9 aux cl\u00e9s d'un dictionnaire ) se fait avec le mot cl\u00e9 in . Ainsi: 1 'dina' in cyclones_reunion . keys () 1 True 1 'carlos' in cyclones_reunion . keys () 1 False Le parcours d'un dictionnaire d peut se faire en it\u00e9rant avec une boucle for sur: les cl\u00e9s 1 2 for cle in d . keys (): # souvent abr\u00e9g\u00e9 en `for cle in d` ... les valeurs 1 2 for val in d . values (): ... les couples (cl\u00e9,valeur) 1 2 for cle , val in d . items (): ... R\u00e9sum\u00e9: les types construits en 1re NSI Tableau On peut it\u00e9rer directement sur les \u00e9l\u00e9ments d'un tableau avec la construction du type for element in tableau: . Pour remplir un tableau on peut utiliser une construction par compr\u00e9hension: 1 tableau = [ expr ( x ) for x in sequence ] p-uplet Les p-uplets sont impl\u00e9ment\u00e9s en python par le type tuple . Il s'agit d'un objet non mutable. La syntaxe pour construire un p-uplet ayant N composantes, est: 1 mon_objet = ( comp1 , comp2 , ... , compN ) Les diff\u00e9rentes composantes sont accessibles par indexation, comme pour un tableau: mon_objet[0] , mob_objet[1] etc. Le parcours est identique \u00e0 celui d'un tableau. Dictionnaires Un dictionnaire est une structure regroupant des paires \"cl\u00e9:valeur\". En python, ces paires sont situ\u00e9es entre accolades et s\u00e9par\u00e9es par une virgule. 1 image = { 'nom' : 'dog.png' , 'larg' : 384 , 'haut' : 576 , 'taille' : 243 } On peut it\u00e9rer sur les cl\u00e9s, les valeurs ou les paires cl\u00e9,valeur avec les m\u00e9thodes keys() , values() ou items() . p-uplets nomm\u00e9s En python, les p-uplets nomm\u00e9s sont impl\u00e9ment\u00e9s avec des dictionnaires.","title":"COURS 1"},{"location":"NSI1/S7/S7C1.html#un-autre-type-construit-le-dictionnaire","text":"","title":"Un autre type construit: le dictionnaire"},{"location":"NSI1/S7/S7C1.html#rappel-inconvenient-des-p-uplets","text":"Dans l'exemple du fichier cit\u00e9 ci-dessous, on a mod\u00e9liser l'image avec un p-uplet ayant pour composante sa largeur en pixel, sa hauteur en pixel et sa taille en kilo-octet. Ainsi, soit le fichier \"dog.png\" qui a une largeur de 384 pixels, une hauteur de 576 pixels et dont la taille est de 243 ko, sera mod\u00e9lis\u00e9 par: 1 image = ( 384 , 576 , 243 ) On a vu que cette solution n'est pas id\u00e9ale, car il fallait se souvenir de l'ordre dans lequel les entiers ont \u00e9t\u00e9 rentr\u00e9s !","title":"Rappel: inconv\u00e9nient des p-uplets"},{"location":"NSI1/S7/S7C1.html#la-solution-du-p-uplet-nomme","text":"Pour contourner le probl\u00e8me soulev\u00e9 pr\u00e9c\u00e9demment, une solution consiste \u00e0 utiliser des p-uplets nomm\u00e9s . Chaque composante du p-uplet se voit attribuer un nom (typiquement une cha\u00eene de caract\u00e8res) au lieu d'un index num\u00e9rique! Python poss\u00e8de un type permettant de manipuler les p-uplets nomm\u00e9s: les namedtuple du module collections . Cependant, et conform\u00e9ment au programme, en classe de 1re NSI, on utilisera des dictionnaires pour impl\u00e9menter des p-uplets nomm\u00e9s .","title":"La solution du p-uplet nomm\u00e9"},{"location":"NSI1/S7/S7C1.html#les-dictionnaires","text":"","title":"Les dictionnaires"},{"location":"NSI1/S7/S7C2.html","text":"TABLES DE DONNEES \u2693\ufe0e Les tableaux (suite et fin ?) \u2693\ufe0e Qu'est-ce qu'un tableau de tableaux? \u2693\ufe0e Les \u00e9l\u00e9ments d'un tableau peuvent \u00eatre des entiers, des flottants, des chaines de caract\u00e8res, mais aussi ... des tableaux! Ainsi, l'\u00e9criture suivante est parfaitement valide: 1 t = [[ 1 , 2 , 3 , 4 ], [ 5 , 6 , 7 , 8 ]] t est un tableau compos\u00e9 de deux tableaux de quatre entiers. Pour faciliter la compr\u00e9hension, on aussi saisir t de la mani\u00e8re suivante: 1 2 t = [[ 1 , 2 , 3 , 4 ], [ 5 , 6 , 7 , 8 ]] Cette pr\u00e9sentation met bien en \u00e9vidence une structure \u00e0 deux lignes et quatre colonnes. Un tel tableau, dont les lignes ont la m\u00eame taille, est appel\u00e9 une matrice . Les tableaux de tableaux sont utilis\u00e9s, entre autres, pour les manipulations des donn\u00e9es tabul\u00e9es (voir ci-dessous) ou des images. Comment acc\u00e9der aux \u00e9l\u00e9ments d'un tableau de tableaux? \u2693\ufe0e On peut envisager un acc\u00e8s index\u00e9 . Ce qui revient \u00e0 dire que l'acc\u00e8s \u00e0 un \u00e9l\u00e9ment du tableau t[i][j] se fera gr\u00e2ce \u00e0 deux index \\(i\\) et \\(j\\) qui repr\u00e9sentent respectivement le num\u00e9ro de la ligne et le num\u00e9ro de la colonne. Exemples 1 2 3 4 5 6 t = [[ 1 , 2 , 3 , 4 ], [ 5 , 6 , 7 , 8 ]] #El\u00e9ment de la 2\u00e8me ligne, 3\u00e8me colonne --> i=1, j=2 print ( t [ 1 ][ 2 ]) 7 On peut aussi envisager de modifier la valeur situ\u00e9e \u00e0 la ligne \\(i\\) et \u00e0 la colonne \\(j\\) . 1 2 3 4 5 #Modification de la valeur de la 1ere ligne, 4eme colonne --> i=0, j=3 t [ 0 ][ 3 ] = 10 print ( t ) [[ 1 , 2 , 3 , 10 ], [ 5 , 6 , 7 , 8 ]] \u00c0 faire Exercice d'application directe Soit la matrice: 1 2 3 t = [[ 15 , 17 , 22 ], [ 17 , 25 , 27 ], [ 31 , 33 , 35 ]] Que vaut t[1][2] ? Que doit-on modifier pour avoir [[15, 17, 22], [17, 25, 45], [31, 33, 35]] ? Comment construire un tableau de tableaux en compr\u00e9hension? \u2693\ufe0e Pour construire un tableau t ayant \\(n\\) lignes et \\(p\\) colonnes initialis\u00e9 avec des z\u00e9ros par exemple, on peut proc\u00e9der comme suit: 1 2 3 4 n = 3 p = 4 t = [[ 0 ] * p for i in range ( n )] Notation L'instruction [0]*p est \u00e9quivalente \u00e0 [0] + [0] + ... + [0] c'est \u00e0 dire p tableaux [0] ) soit [0, 0, ..., 0] compos\u00e9 de p z\u00e9ros. On peut aussi une construction en compr\u00e9hension avec deux boucles for . Astuce affichage On peut utiliser une fonction print_mat pour afficher une matrice de mani\u00e8re harmonieuse. 1 2 3 4 5 6 7 8 9 def print_mat ( mat ): \"\"\" Affiche mat sous la forme d'une matrice\"\"\" for ligne in mat : print ( ligne ) n = 3 p = 5 t = [[ 0 for j in range ( p )] for i in range ( n )] print_mat ( t ) 1 2 3 [0, 0, 0, 0, 0] [0, 0, 0, 0, 0] [0, 0, 0, 0, 0] L'instruction [0 for j in range(p)] construit une ligne comportant p z\u00e9ros tandis que for i in range(n) r\u00e9p\u00e8te cette op\u00e9ration n fois. \u00c0 faire Une application Que vaut t apr\u00e8s l'instruction t = [[i, i+1] for i in range(2)] ? Organisation des donn\u00e9es sous forme de tables \u2693\ufe0e Rep\u00e8res historiques \u2693\ufe0e Le compilateur fortran de l' IBM OS/360 supportait d\u00e8s 1972 des donn\u00e9es tabul\u00e9es, au format csv (comma-separated values) . Source Qu'est-ce qu'une table de donn\u00e9es? \u2693\ufe0e Une table de donn\u00e9es est un arrangement de lignes et de colonnes . Les lignes ont divers synonymes: enregistrement, p-uplet, vecteur, etc. . Il en est de m\u00eame pour les colonnes: champ, descripteur, propri\u00e9t\u00e9, attribut, etc. L'organisation des donn\u00e9es sous forme de table (on dit aussi sous forme tabul\u00e9e ) est tr\u00e8s r\u00e9pandue. Exemple : un fichier de notes de bac blanc ( Notes.csv ). Le fichier comporte 27 enregistrements ainsi que 3 champs ou descripteurs : Nom , Points et Note . En voici un aper\u00e7u: Nom Points Note Adenor 27,5 16 Bautier 20,5 12 Bonmalais 26,5 15,5 Remarque Dans des jeux de donn\u00e9es r\u00e9els, on a quelques fois d'avoir des champs vides. Il faudra, peut \u00eatre en tenir compte lors des traitements. Les donn\u00e9es tabul\u00e9es sont tr\u00e8s importantes en informatique: on les utilise dans de nombreux domaines (web, IA, calcul scientifique, etc.). Quelle structure de donn\u00e9es pour repr\u00e9senter une table ? \u2693\ufe0e Les donn\u00e9es sont habituellement s\u00e9par\u00e9es des programmes qui les traitent, dans un fichier texte. On utilise souvent des fichiers au format csv ( comma separated values ). Chaque ligne de ce fichier correspond \u00e0 un enregistrement ( p-uplet ). Les diff\u00e9rents champs ( attributs ) \u00e9tant s\u00e9par\u00e9s par un d\u00e9limiteur ( virgule, point-virgule, tabulation, etc. ). Remarque Dans le jeu de donn\u00e9es pr\u00e9c\u00e9dent, le s\u00e9parateur est le point-virgule. La librairie standard de python poss\u00e8de un module adapt\u00e9 \u00e0 la lecture ( et \u00e0 l'\u00e9criture ) de ce type de fichiers: le module csv . Importation sous forme de tableau de tableaux \u2693\ufe0e On souhaite importer le fichier de notes pr\u00e9c\u00e9dent, sous la forme d'un tableau de tableaux. Une bonne pratique pour ouvrir le fichier et y r\u00e9aliser des op\u00e9rations consiste \u00e0 utiliser la structure suivante: \u00c0 conna\u00eetre 1 2 3 4 5 import csv with open ( 'Notes.csv' , newline = '' , encoding = 'utf8' ) as f : table = [ ligne for ligne in csv . reader ( f , delimiter = ';' )] Utilisons cette fa\u00e7on de proc\u00e9der pour afficher les 3 premi\u00e8res lignes de cette table: 1 2 3 4 5 6 7 8 9 import csv with open ( 'Notes.csv' , newline = '' , encoding = 'utf8' ) as f : table = [ ligne for ligne in csv . reader ( f , delimiter = ';' )] for i in range ( 3 ): print ( table [ i ]) print () # ins\u00e8re une ligne vide pour plus de lisibilit\u00e9 1 2 3 4 5 ['Nom', 'Points', 'Notes'] ['Adenor', '27,5', '16'] ['Bautier', '20,5', '12'] On remarque que la premi\u00e8re ligne apparait comme une ligne de donn\u00e9es, il va falloir en tenir compte (peut-\u00eatre l'ignorer) lors des traitements. Bilan Cette premi\u00e8re solution est tr\u00e8s simple \u00e0 mettre en oeuvre, cependant elle souffre d'un d\u00e9faut: on doit m\u00e9moriser l'ordre des attributs; \u00c0 faire Application directe Afficher les r\u00e9sultats de l'\u00e9l\u00e8ve Lauret Importation sous forme de tableau de n-uplets nomm\u00e9s \u2693\ufe0e Pour \u00e9viter l'inconv\u00e9nient de la m\u00e9morisation de l'ordre des champs, on peut importer les donn\u00e9es tabul\u00e9es sous forme de tableau de p-uplets nomm\u00e9s. Un code python typique est le suivant: \u00c0 conna\u00eetre 1 2 3 4 5 import csv with open ( 'Notes.csv' , newline = '' , encoding = 'utf8' ) as f : table = [ dict ( ligne ) for ligne in csv . DictReader ( f , delimiter = ';' )] Les premiers \u00e9l\u00e9ments affich\u00e9s confirment que l'on a bien un tableau de dictionnaire: 1 2 3 4 5 6 7 8 9 import csv with open ( 'Notes.csv' , newline = '' , encoding = 'utf8' ) as f : table = [ dict ( ligne ) for ligne in csv . DictReader ( f , delimiter = ';' )] for i in range ( 3 ): print ( table [ i ]) print () 1 2 3 4 5 {'Nom': 'Adenor', 'Points': '27,5', 'Notes': '16'} {'Nom': 'Bautier', 'Points': '20,5', 'Notes': '12'} {'Nom': 'Bonmalais', 'Points': '26,5', 'Notes': '15,5'} On remarque que ce tableau ne contient plus la premi\u00e8re ligne. Cette derni\u00e8re a servi \u00e0 fournir les cl\u00e9s du dictionnaire cr\u00e9\u00e9. Remarque L'instruction dict apparaissant \u00e0 lors de la construction du tableau construit en compr\u00e9hension est n\u00e9cessaire avec les derni\u00e8res versions de python, afin d'avoir des \u00e9l\u00e9ments de type dictionnaire.","title":"COURS 2"},{"location":"NSI1/S7/S7C2.html#tables-de-donnees","text":"","title":"TABLES DE DONNEES"},{"location":"NSI1/S7/S7C2.html#les-tableaux-suite-et-fin","text":"","title":"Les tableaux (suite et fin ?)"},{"location":"NSI1/S7/S7C2.html#organisation-des-donnees-sous-forme-de-tables","text":"","title":"Organisation des donn\u00e9es sous forme de tables"},{"location":"NSI1/S7/S7C2.html#quelle-structure-de-donnees-pour-representer-une-table","text":"Les donn\u00e9es sont habituellement s\u00e9par\u00e9es des programmes qui les traitent, dans un fichier texte. On utilise souvent des fichiers au format csv ( comma separated values ). Chaque ligne de ce fichier correspond \u00e0 un enregistrement ( p-uplet ). Les diff\u00e9rents champs ( attributs ) \u00e9tant s\u00e9par\u00e9s par un d\u00e9limiteur ( virgule, point-virgule, tabulation, etc. ). Remarque Dans le jeu de donn\u00e9es pr\u00e9c\u00e9dent, le s\u00e9parateur est le point-virgule. La librairie standard de python poss\u00e8de un module adapt\u00e9 \u00e0 la lecture ( et \u00e0 l'\u00e9criture ) de ce type de fichiers: le module csv .","title":"Quelle structure de donn\u00e9es pour  repr\u00e9senter une table ?"},{"location":"NSI1/S7/S7E1.html","text":"Exercice 1 Jeu de donn\u00e9es r\u00e9el - tableau de tableaux \u2693\ufe0e Lors de la cr\u00e9ation de la structure de donn\u00e9es associ\u00e9e \u00e0 un jeu de donn\u00e9es tabul\u00e9es, tous les champs enregistr\u00e9s sont de type chaine de caract\u00e8res ( string ). Cependant, il serait plus judicieux quelques fois, d'avoir des attributs de type num\u00e9rique (entiers ou flottants). Cet exercice pr\u00e9sente une situation de ce genre: on souhaite avoir les dates sous la forme d'un entier repr\u00e9sentant uniquement l'ann\u00e9e. Cherchons dans un premier temps les descripteurs concern\u00e9s. 1 2 3 4 5 6 7 8 9 10 11 12 # Cellule \u00e0 ex\u00e9cuter import csv def import_table ( f ): \"\"\" Importe le fichier csv 'f' et renvoie un tableau de tableaux, dont les \u00e9l\u00e9ments correspondent \u00e0 une ligne du fichier. \"\"\" with open ( f , newline = '' , encoding = 'utf8' ) as f_ob : return [ ligne for ligne in csv . reader ( f_ob , delimiter = ';' )] t = import_table ( 'data/rapworld.csv' ) 1 print ( t [ 0 ]) \u00c0 faire Combien de descripteurs a-t-on dans ce jeu de donn\u00e9es ? Les champs d'index 3, 4, 6 et 7 repr\u00e9sentent des dates et sont des candidats \u00e0 nos traitements. On convient d'affecter \u00e0 ceux-ci la valeur -1 (date invalide) s'ils sont vides. 1 2 3 4 5 6 7 8 9 10 def str_to_int ( date ): \"\"\" Renvoie l'ann\u00e9e correspondant \u00e0 la date pass\u00e9e en param\u00e8tre, sous la forme d'un entier; date: chaine (str) \"\"\" digits = '' for i in range ( 4 ): digits = digits + date [ i ] assert 1950 <= int ( digits ) <= 2023 return int ( digits ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def modifier_date ( t , idxcols ): \"\"\" Transforme en entier les dates rencontr\u00e9es dans les champs dont l'index appartient \u00e0 idxcols. Cette fonction renvoie une nouvelle table, laissant t inchang\u00e9. t: tableau de tableaux idxcols: tableau d'entiers repr\u00e9sentant l'index d'un descripteur \"\"\" tmodif = [ None for i in range ( len ( t ))] # va accueillir une copie de t for i in range ( len ( t )): tmodif [ i ] = [ attribut for attribut in t [ i ]] # r\u00e9alise le copie de la i-\u00e8me ligne de t if i > 0 : # on examine et modifie les dates \u00e0 partir de la ligne 1 (et pas la ligne 0!!) for j in idxcols : if t [ i ][ j ] == '' : # date absente tmodif [ i ][ j ] = - 1 else : tmodif [ i ][ j ] = str_to_int ( t [ i ][ j ]) return tmodif \u00c0 faire Que r\u00e9alise les instructions suivantes? 1 t2 = modifier_date ( t , [ 3 , 4 , 6 , 7 ]) 1 2 3 for i in range ( 1 , len ( t2 )): if t2 [ i ][ 7 ] > 0 : print ( t2 [ i ][ 0 ], t2 [ i ][ 7 ]) \u00c0 faire Que r\u00e9alise les instructions suivantes? 1 2 3 for i in range ( 1 , len ( t2 )): if t2 [ i ][ 3 ] > 0 and t2 [ i ][ 6 ] > 0 : print ( t2 [ i ][ 0 ], t2 [ i ][ 6 ] - t2 [ i ][ 3 ], \" ans\" )","title":"EXERCICE 1"},{"location":"NSI1/S7/S7E1.html#exercice-1-jeu-de-donnees-reel-tableau-de-tableaux","text":"Lors de la cr\u00e9ation de la structure de donn\u00e9es associ\u00e9e \u00e0 un jeu de donn\u00e9es tabul\u00e9es, tous les champs enregistr\u00e9s sont de type chaine de caract\u00e8res ( string ). Cependant, il serait plus judicieux quelques fois, d'avoir des attributs de type num\u00e9rique (entiers ou flottants). Cet exercice pr\u00e9sente une situation de ce genre: on souhaite avoir les dates sous la forme d'un entier repr\u00e9sentant uniquement l'ann\u00e9e. Cherchons dans un premier temps les descripteurs concern\u00e9s. 1 2 3 4 5 6 7 8 9 10 11 12 # Cellule \u00e0 ex\u00e9cuter import csv def import_table ( f ): \"\"\" Importe le fichier csv 'f' et renvoie un tableau de tableaux, dont les \u00e9l\u00e9ments correspondent \u00e0 une ligne du fichier. \"\"\" with open ( f , newline = '' , encoding = 'utf8' ) as f_ob : return [ ligne for ligne in csv . reader ( f_ob , delimiter = ';' )] t = import_table ( 'data/rapworld.csv' ) 1 print ( t [ 0 ]) \u00c0 faire Combien de descripteurs a-t-on dans ce jeu de donn\u00e9es ? Les champs d'index 3, 4, 6 et 7 repr\u00e9sentent des dates et sont des candidats \u00e0 nos traitements. On convient d'affecter \u00e0 ceux-ci la valeur -1 (date invalide) s'ils sont vides. 1 2 3 4 5 6 7 8 9 10 def str_to_int ( date ): \"\"\" Renvoie l'ann\u00e9e correspondant \u00e0 la date pass\u00e9e en param\u00e8tre, sous la forme d'un entier; date: chaine (str) \"\"\" digits = '' for i in range ( 4 ): digits = digits + date [ i ] assert 1950 <= int ( digits ) <= 2023 return int ( digits ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def modifier_date ( t , idxcols ): \"\"\" Transforme en entier les dates rencontr\u00e9es dans les champs dont l'index appartient \u00e0 idxcols. Cette fonction renvoie une nouvelle table, laissant t inchang\u00e9. t: tableau de tableaux idxcols: tableau d'entiers repr\u00e9sentant l'index d'un descripteur \"\"\" tmodif = [ None for i in range ( len ( t ))] # va accueillir une copie de t for i in range ( len ( t )): tmodif [ i ] = [ attribut for attribut in t [ i ]] # r\u00e9alise le copie de la i-\u00e8me ligne de t if i > 0 : # on examine et modifie les dates \u00e0 partir de la ligne 1 (et pas la ligne 0!!) for j in idxcols : if t [ i ][ j ] == '' : # date absente tmodif [ i ][ j ] = - 1 else : tmodif [ i ][ j ] = str_to_int ( t [ i ][ j ]) return tmodif \u00c0 faire Que r\u00e9alise les instructions suivantes? 1 t2 = modifier_date ( t , [ 3 , 4 , 6 , 7 ]) 1 2 3 for i in range ( 1 , len ( t2 )): if t2 [ i ][ 7 ] > 0 : print ( t2 [ i ][ 0 ], t2 [ i ][ 7 ]) \u00c0 faire Que r\u00e9alise les instructions suivantes? 1 2 3 for i in range ( 1 , len ( t2 )): if t2 [ i ][ 3 ] > 0 and t2 [ i ][ 6 ] > 0 : print ( t2 [ i ][ 0 ], t2 [ i ][ 6 ] - t2 [ i ][ 3 ], \" ans\" )","title":"Exercice 1 Jeu de donn\u00e9es r\u00e9el - tableau de tableaux"},{"location":"NSI1/S8/S8C1.html","text":"Tri par s\u00e9lection \u2693\ufe0e Principe \u2693\ufe0e Le tri par s\u00e9lection ( selection sort en anglais) fait partie des algorithmes de tri les plus simples. Consulter l'animation situ\u00e9e \u00e0 cette adresse . On commence par rechercher le plus petit \u00e9lement du tableau puis on l'\u00e9change avec le premier \u00e9lement. Ensuite, on cherche le deuxi\u00e8me plus petit \u00e9lement et on l'\u00e9change avec le deuxi\u00e8me \u00e9l\u00e9ment du tableau et ainsi de suite jusqu'\u00e0 ce que le tableau soit enti\u00e8rement tri\u00e9. On peut repr\u00e9senter ces op\u00e9rations de mani\u00e8re sch\u00e9matique: \u00c0 faire Pour r\u00e9soudre le probl\u00e8me du tri par s\u00e9lection, on aura besoin de deux fonctions annexes: index_minimum et echanger . Les sp\u00e9cifications de ces fonctions sont les suivantes: index_minimum(t, j) : prend en param\u00e8tres un tableau d'\u00e9l\u00e9ments comparables (souvent des nombres) t et un entier j ; renvoie l'index de l'\u00e9l\u00e9ment le plus petit trouv\u00e9 entre j et la fin du tableau; echanger(t, i, j) : prend en param\u00e8tres un tableau t et permute les \u00e9l\u00e9ments situ\u00e9s aux index i et j . \u00c8crire ces deux fonctions. Algorithme et impl\u00e9mentation \u2693\ufe0e Algorithme \u2693\ufe0e On peut formaliser l'algorithme du tri par s\u00e9lection avec le pseudo-code suivant: Algorithme 1 2 3 4 5 Tri_selection(t) t: tableau de n \u00e9l\u00e9ments comparables (t[0..n-1]) Pour i allant de 0 \u00e0 n-2: rechercher l'indice k du plus petit \u00e9l\u00e9ment de t[i..n-1] \u00e9changer t[i] et t[k] Impl\u00e9mentation \u2693\ufe0e \u00c0 faire Appliquer cet algorithme \u00e0 la main sur le tableau t = [3, 4, 1, 7, 2] . Donner une impl\u00e9mentation possible en python de cet algorithme et tester. 1 2 3 4 # TEST t = [ 5 , 6 , 1 , 1 , 15 , 0 , 4 ] tri_selection ( t ) assert t == [ 0 , 1 , 1 , 4 , 5 , 6 , 15 ] Validit\u00e9 de l'algorithme \u2693\ufe0e La situation au \\(i^{\u00e8me}\\) tour de boucle peut \u00eatre repr\u00e9sent\u00e9e de la mani\u00e8re suivante: Tous les \u00e9l\u00e9ments d'indice compris entre 0 et \\(i-1\\) inclus sont tri\u00e9s ET ils sont tous inf\u00e9rieurs ou \u00e9gaux aux \u00e9l\u00e9ments de la partie non tri\u00e9e, entre \\(i\\) et \\(n-1\\) . La preuve de cette proposition logique peut \u00eatre d\u00e9licate \u00e0 \u00e9tablir en classe de 1re. On dit que c'est un invariant pour l'algorithme tri_selection . D\u00e9finition Un invariant de boucle est un pr\u00e9dicat (proposition logique) qui est: initialement vrai; vrai \u00e0 l'entr\u00e9e d'une it\u00e9ration ainsi qu'\u00e0 la sortie de celle-ci Trouver le bon invariant garantit que l'algorithme renvoie un r\u00e9sultat conforme aux sp\u00e9cifications et assurer ainsi sa correction partielle . Dans le cas de l'algorithme du tri par s\u00e9lection, la terminaison est assur\u00e9e car il fait intervenir une boucle born\u00e9e ( en r\u00e9alit\u00e9 deux ... le voyez-vous ?). La combinaison de la correction partielle et de la terminaison permet de conclure \u00e0 la correction totale de l'algorithme. Vocabulaire Le terme correction est \u00e0 prendre ici au sens correct. Complexit\u00e9 en temps \u2693\ufe0e Qu'est-ce que la complexit\u00e9 en temps ? Le co\u00fbt ( en temps ) ou complexit\u00e9 en temps de l'algorithme Tri_selection est li\u00e9 au nombre d\u2019op\u00e9rations \u00e9l\u00e9mentaires effectu\u00e9es pour trier une collection d\u2019\u00e9l\u00e9ments. Elle donne une id\u00e9e du temps d'ex\u00e9cution d'un programme impl\u00e9mentant cet algorithme. La complexit\u00e9 est un crit\u00e8re majeur pour comparer les algorithmes entre eux. Remarque : on peut s'interesser aussi \u00e0 la complexit\u00e9 en espace m\u00e9moire La boucle pr\u00e9sente dans tri_selection est parcourue \\(n-1\\) fois. \u00c9valuons le nombre de comparaisons qu'elle effectue (\u00e0 travers l'appel de index_minimum ). Pour \\(i=0\\) , on effectue \\(n-1\\) comparaisons dans index_minimum . Pour \\(i=1\\) , on effectue \\(n-2\\) comparaisons. \\(\\cdots\\) Pour \\(i=n-2\\) , on effectue 1 comparaison. Le nombre total de comparaisons est donc: \\[(n-1)+(n-2)+\\cdots +2+1\\] Cette somme correspond \u00e0 la somme des termes cons\u00e9cutifs d'une suite arithm\u00e9tique, dont la valeur pour \\(n>1\\) est donn\u00e9e par: \\[\\dfrac{n}{2}\\times (n-1)=\\dfrac{1}{2}n^2-\\dfrac{1}{2}n\\] Pour une taille \\(n\\) tr\u00e8s grande de l'entr\u00e9e, le terme en \\(n^2\\) devient pr\u00e9pond\u00e9rant. En d'autres termes, le nombre de comparaisons effectu\u00e9es, donc le temps d'ex\u00e9cution, est proportionnel \u00e0 \\(n^2\\) . On retiendra que le co\u00fbt en temps ou complexit\u00e9 temporelle du tri par s\u00e9lection est proportionnelle au carr\u00e9 de la taille de l'entr\u00e9e. On dit aussi que cet algorithme a une complexit\u00e9 temporelle quadratique. \u00c0 retenir Le tri par s\u00e9lection (du minimum) consiste \u00e0 chercher le plus petit \u00e9l\u00e9ment de la partie de tableau non tri\u00e9e pour le mettre \u00e0 sa place d\u00e9finitive. Ce probl\u00e8me est r\u00e9solu habituellement par un algorithme faisant intervenir deux boucles born\u00e9es. La terminaison est donc assur\u00e9e . Un invariant de boucle permet de conclure \u00e0 sa correction partielle . La conjugaison de ces deux propri\u00e9t\u00e9s assure la correction totale de l'algorithme propos\u00e9. Cet algorithme a une complexit\u00e9 temporelle quadratique.","title":"COURS 1"},{"location":"NSI1/S8/S8C1.html#tri-par-selection","text":"","title":"Tri par s\u00e9lection"},{"location":"NSI1/S8/S8C1.html#principe","text":"Le tri par s\u00e9lection ( selection sort en anglais) fait partie des algorithmes de tri les plus simples. Consulter l'animation situ\u00e9e \u00e0 cette adresse . On commence par rechercher le plus petit \u00e9lement du tableau puis on l'\u00e9change avec le premier \u00e9lement. Ensuite, on cherche le deuxi\u00e8me plus petit \u00e9lement et on l'\u00e9change avec le deuxi\u00e8me \u00e9l\u00e9ment du tableau et ainsi de suite jusqu'\u00e0 ce que le tableau soit enti\u00e8rement tri\u00e9. On peut repr\u00e9senter ces op\u00e9rations de mani\u00e8re sch\u00e9matique: \u00c0 faire Pour r\u00e9soudre le probl\u00e8me du tri par s\u00e9lection, on aura besoin de deux fonctions annexes: index_minimum et echanger . Les sp\u00e9cifications de ces fonctions sont les suivantes: index_minimum(t, j) : prend en param\u00e8tres un tableau d'\u00e9l\u00e9ments comparables (souvent des nombres) t et un entier j ; renvoie l'index de l'\u00e9l\u00e9ment le plus petit trouv\u00e9 entre j et la fin du tableau; echanger(t, i, j) : prend en param\u00e8tres un tableau t et permute les \u00e9l\u00e9ments situ\u00e9s aux index i et j . \u00c8crire ces deux fonctions.","title":"Principe"},{"location":"NSI1/S8/S8C1.html#algorithme-et-implementation","text":"","title":"Algorithme et impl\u00e9mentation"},{"location":"NSI1/S8/S8C1.html#validite-de-lalgorithme","text":"La situation au \\(i^{\u00e8me}\\) tour de boucle peut \u00eatre repr\u00e9sent\u00e9e de la mani\u00e8re suivante: Tous les \u00e9l\u00e9ments d'indice compris entre 0 et \\(i-1\\) inclus sont tri\u00e9s ET ils sont tous inf\u00e9rieurs ou \u00e9gaux aux \u00e9l\u00e9ments de la partie non tri\u00e9e, entre \\(i\\) et \\(n-1\\) . La preuve de cette proposition logique peut \u00eatre d\u00e9licate \u00e0 \u00e9tablir en classe de 1re. On dit que c'est un invariant pour l'algorithme tri_selection . D\u00e9finition Un invariant de boucle est un pr\u00e9dicat (proposition logique) qui est: initialement vrai; vrai \u00e0 l'entr\u00e9e d'une it\u00e9ration ainsi qu'\u00e0 la sortie de celle-ci Trouver le bon invariant garantit que l'algorithme renvoie un r\u00e9sultat conforme aux sp\u00e9cifications et assurer ainsi sa correction partielle . Dans le cas de l'algorithme du tri par s\u00e9lection, la terminaison est assur\u00e9e car il fait intervenir une boucle born\u00e9e ( en r\u00e9alit\u00e9 deux ... le voyez-vous ?). La combinaison de la correction partielle et de la terminaison permet de conclure \u00e0 la correction totale de l'algorithme. Vocabulaire Le terme correction est \u00e0 prendre ici au sens correct.","title":"Validit\u00e9 de l'algorithme"},{"location":"NSI1/S8/S8C1.html#complexite-en-temps","text":"Qu'est-ce que la complexit\u00e9 en temps ? Le co\u00fbt ( en temps ) ou complexit\u00e9 en temps de l'algorithme Tri_selection est li\u00e9 au nombre d\u2019op\u00e9rations \u00e9l\u00e9mentaires effectu\u00e9es pour trier une collection d\u2019\u00e9l\u00e9ments. Elle donne une id\u00e9e du temps d'ex\u00e9cution d'un programme impl\u00e9mentant cet algorithme. La complexit\u00e9 est un crit\u00e8re majeur pour comparer les algorithmes entre eux. Remarque : on peut s'interesser aussi \u00e0 la complexit\u00e9 en espace m\u00e9moire La boucle pr\u00e9sente dans tri_selection est parcourue \\(n-1\\) fois. \u00c9valuons le nombre de comparaisons qu'elle effectue (\u00e0 travers l'appel de index_minimum ). Pour \\(i=0\\) , on effectue \\(n-1\\) comparaisons dans index_minimum . Pour \\(i=1\\) , on effectue \\(n-2\\) comparaisons. \\(\\cdots\\) Pour \\(i=n-2\\) , on effectue 1 comparaison. Le nombre total de comparaisons est donc: \\[(n-1)+(n-2)+\\cdots +2+1\\] Cette somme correspond \u00e0 la somme des termes cons\u00e9cutifs d'une suite arithm\u00e9tique, dont la valeur pour \\(n>1\\) est donn\u00e9e par: \\[\\dfrac{n}{2}\\times (n-1)=\\dfrac{1}{2}n^2-\\dfrac{1}{2}n\\] Pour une taille \\(n\\) tr\u00e8s grande de l'entr\u00e9e, le terme en \\(n^2\\) devient pr\u00e9pond\u00e9rant. En d'autres termes, le nombre de comparaisons effectu\u00e9es, donc le temps d'ex\u00e9cution, est proportionnel \u00e0 \\(n^2\\) . On retiendra que le co\u00fbt en temps ou complexit\u00e9 temporelle du tri par s\u00e9lection est proportionnelle au carr\u00e9 de la taille de l'entr\u00e9e. On dit aussi que cet algorithme a une complexit\u00e9 temporelle quadratique. \u00c0 retenir Le tri par s\u00e9lection (du minimum) consiste \u00e0 chercher le plus petit \u00e9l\u00e9ment de la partie de tableau non tri\u00e9e pour le mettre \u00e0 sa place d\u00e9finitive. Ce probl\u00e8me est r\u00e9solu habituellement par un algorithme faisant intervenir deux boucles born\u00e9es. La terminaison est donc assur\u00e9e . Un invariant de boucle permet de conclure \u00e0 sa correction partielle . La conjugaison de ces deux propri\u00e9t\u00e9s assure la correction totale de l'algorithme propos\u00e9. Cet algorithme a une complexit\u00e9 temporelle quadratique.","title":"Complexit\u00e9 en temps"},{"location":"NSI1/S8/S8C2.html","text":"Tri par insertion \u2693\ufe0e Principe \u2693\ufe0e Visionner la s\u00e9quence vid\u00e9o propos\u00e9e . Le tri par insertion est le tri effectu\u00e9 par le joueur de carte. En supposant que l'on maintienne une partie tri\u00e9e, on d\u00e9cale les cartes de cette partie, de mani\u00e8re \u00e0 placer la carte \u00e0 classer ( voir video ). En informatique, on va tr\u00e8s souvent travailler avec un tableau et le parcourir de la gauche vers la droite, en maintenant la partie d\u00e9j\u00e0 tri\u00e9e sur sa gauche (voir lien wikipedia ). Concr\u00e8tement, on va d\u00e9caler d'une case vers la droite tous les \u00e9l\u00e9ments d\u00e9j\u00e0 tri\u00e9s, qui sont plus grands que l'\u00e9l\u00e9ment \u00e0 classer, puis d\u00e9poser ce dernier dans la case lib\u00e9r\u00e9e. Algorithme \u2693\ufe0e Remarque: la notation t[0..i-1] d\u00e9signe les \\(i\\) premiers \u00e9l\u00e9ments d'un tableau t , c'est-\u00e0-dire t[0], t[1], ..., t[i-1] . 1 2 3 4 5 6 Algorithme Tri_insertion(t) --------------------------- t: tableau de n \u00e9l\u00e9ments (t[0..n-1]) Pour i allant de 1 \u00e0 n-1: 'amener' t[i] \u00e0 sa place parmi t[0..i-1] Impl\u00e9mentation en python \u2693\ufe0e On commence par donner une r\u00e9alisation de amener t[i] \u00e0 sa place parmi t[0..i-1] en \u00e9crivant une fonction place(t, i) qui am\u00e8ne l'\u00e9l\u00e9ment d'index \\(i\\) \u00e0 sa place parmi les \u00e9l\u00e9ments d'index 0 \u00e0 \\(i-1\\) d\u00e9j\u00e0 class\u00e9s. 1 2 3 4 5 6 7 8 9 10 11 def place ( t , i ): \"\"\" am\u00e8ne t[i] \u00e0 sa place dans t[0..i-1] suppos\u00e9 tri\u00e9\"\"\" cle = t [ i ] # \u00e9l\u00e9ment \u00e0 classer j = i - 1 # d\u00e9calage des \u00e9l\u00e9ments du tableau \u00e0 droite, pour trouver la place de t[i] while j >= 0 and t [ j ] > cle : t [ j + 1 ] = t [ j ] # l'\u00e9l\u00e9ment d'index j est d\u00e9cal\u00e9 d'une case vers la droite j = j - 1 # En sortie de boucle, l'\u00e9l\u00e9ment d'index j est inf\u00e9rieur \u00e0 cle, # on ins\u00e8re donc cle juste apr\u00e8s j. t [ j + 1 ] = cle 1 2 3 4 # TEST t = [ - 1 , 2 , 5 , 12 , 3 , 0 , 4 ] place ( t , 4 ) t 1 [-1, 2, 3, 5, 12, 0, 4] \u00c0 faire Impl\u00e9menter le tri par insertion en python. 1 2 3 def insertion ( t ): # compl\u00e9ter le code de la fonction insertion(t), sans oublier la sp\u00e9cification pass 1 2 3 4 # Test t = [ 7 , 2 , - 3 , 5 ] insertion ( t ) assert t == [ - 3 , 2 , 5 , 7 ] Validit\u00e9 de l'algorithme \u2693\ufe0e L'algorithme Tri_insertion termine car il pr\u00e9sente une boucle born\u00e9e. Remarque La boucle conditionnelle de la r\u00e9alisation amener t[i] \u00e0 sa place parmi t[0..i-1] termine, la quantit\u00e9 \\(j\\) est un variant de boucle. L'invariant de boucle est ici: \u00e0 la i-\u00e8me it\u00e9ration, le sous tableau t[0..i-1] est tri\u00e9. De mani\u00e8re intuitive, on comprend qu'\u00e0 chaque tour de boucle on se rapproche de la solution recherch\u00e9e. On agrandit la zone tri\u00e9e de un \u00e9l\u00e9ment. Exhiber une telle propri\u00e9t\u00e9 (invariant de boucle) permet de conclure \u00e0 la correction partielle de l'algorithme. La combinaison de la correction partielle avec la terminaison permet de conclure \u00e0 la correction totale de l'algorithme Tri_insertion . Efficacit\u00e9: complexit\u00e9 temporelle de l'algorithme \u2693\ufe0e Afin d'\u00e9valuer le co\u00fbt de l'algorithme dans le pire des cas, on doit s'int\u00e9resser aux nombre d'op\u00e9rations effectu\u00e9es, qui est ici li\u00e9 au nombre de d\u00e9calage avant de trouver la place de l'\u00e9l\u00e9ment \u00e0 classer. Le pire des cas se produit lorsque le tableau est class\u00e9 en sens inverse. Visualisons cela sur un tableau \u00e0 5 \u00e9l\u00e9ments, simple \u00e0 trier: t = [5, 4, 3, 2, 1] . Le nombre de d\u00e9calage n\u00e9cessaire est: \\(1 + 2 + 3 + 4 = 10\\) . On g\u00e9n\u00e9ralise sans peine: dans le pire des cas, pour un tableau de taille n , il faudra effectuer: \\[ 1+2+\\cdots + (n-2) + (n-1)=\\dfrac{n}{2}\\times(n-1)\\] d\u00e9calages. Comme pour le tri par s\u00e9lection, le co\u00fbt (on dit aussi complexit\u00e9 ) du tri par insertion dans le pire des cas est quadratique . On dit aussi que la complexit\u00e9 en temps est en \\(\\mathcal{O}(n^2)\\) , \\(n\\) \u00e9tant la taille du tableau. Ce qu'il faut retenir Le tri par insertion consiste \u00e0 maintenir une partie d'un tableau tri\u00e9e et \u00e0 parcourir la partie non tri\u00e9e en mettant chaque \u00e9l\u00e9ment rencontr\u00e9 \u00e0 sa place d\u00e9finitive dans la partie tri\u00e9e. Ce probl\u00e8me est r\u00e9solu habituellement par un algorithme faisant intervenir une boucle born\u00e9e et une boucle conditionnelle. La terminaison de la boucle born\u00e9e est \u00e9vidente et celle de la boucle conditionelle facile \u00e0 montrer avec un variant de boucle. L'invariant de boucle \\(\\mathcal{I}\\) : \u00c0 la i-\u00e8me it\u00e9ration, le sous tableau t[0..i-1] est tri\u00e9, permet de conclure \u00e0 sa correction partielle. La conjugaison de ces deux propri\u00e9t\u00e9s assure la correction totale de l'algorithme propos\u00e9. Cet algorithme a une complexit\u00e9 temporelle quadratique.","title":"COURS 2"},{"location":"NSI1/S8/S8C2.html#tri-par-insertion","text":"","title":"Tri par insertion"},{"location":"NSI1/S8/S8C2.html#principe","text":"Visionner la s\u00e9quence vid\u00e9o propos\u00e9e . Le tri par insertion est le tri effectu\u00e9 par le joueur de carte. En supposant que l'on maintienne une partie tri\u00e9e, on d\u00e9cale les cartes de cette partie, de mani\u00e8re \u00e0 placer la carte \u00e0 classer ( voir video ). En informatique, on va tr\u00e8s souvent travailler avec un tableau et le parcourir de la gauche vers la droite, en maintenant la partie d\u00e9j\u00e0 tri\u00e9e sur sa gauche (voir lien wikipedia ). Concr\u00e8tement, on va d\u00e9caler d'une case vers la droite tous les \u00e9l\u00e9ments d\u00e9j\u00e0 tri\u00e9s, qui sont plus grands que l'\u00e9l\u00e9ment \u00e0 classer, puis d\u00e9poser ce dernier dans la case lib\u00e9r\u00e9e.","title":"Principe"},{"location":"NSI1/S8/S8C2.html#algorithme","text":"Remarque: la notation t[0..i-1] d\u00e9signe les \\(i\\) premiers \u00e9l\u00e9ments d'un tableau t , c'est-\u00e0-dire t[0], t[1], ..., t[i-1] . 1 2 3 4 5 6 Algorithme Tri_insertion(t) --------------------------- t: tableau de n \u00e9l\u00e9ments (t[0..n-1]) Pour i allant de 1 \u00e0 n-1: 'amener' t[i] \u00e0 sa place parmi t[0..i-1]","title":"Algorithme"},{"location":"NSI1/S8/S8C2.html#implementation-en-python","text":"On commence par donner une r\u00e9alisation de amener t[i] \u00e0 sa place parmi t[0..i-1] en \u00e9crivant une fonction place(t, i) qui am\u00e8ne l'\u00e9l\u00e9ment d'index \\(i\\) \u00e0 sa place parmi les \u00e9l\u00e9ments d'index 0 \u00e0 \\(i-1\\) d\u00e9j\u00e0 class\u00e9s. 1 2 3 4 5 6 7 8 9 10 11 def place ( t , i ): \"\"\" am\u00e8ne t[i] \u00e0 sa place dans t[0..i-1] suppos\u00e9 tri\u00e9\"\"\" cle = t [ i ] # \u00e9l\u00e9ment \u00e0 classer j = i - 1 # d\u00e9calage des \u00e9l\u00e9ments du tableau \u00e0 droite, pour trouver la place de t[i] while j >= 0 and t [ j ] > cle : t [ j + 1 ] = t [ j ] # l'\u00e9l\u00e9ment d'index j est d\u00e9cal\u00e9 d'une case vers la droite j = j - 1 # En sortie de boucle, l'\u00e9l\u00e9ment d'index j est inf\u00e9rieur \u00e0 cle, # on ins\u00e8re donc cle juste apr\u00e8s j. t [ j + 1 ] = cle 1 2 3 4 # TEST t = [ - 1 , 2 , 5 , 12 , 3 , 0 , 4 ] place ( t , 4 ) t 1 [-1, 2, 3, 5, 12, 0, 4] \u00c0 faire Impl\u00e9menter le tri par insertion en python. 1 2 3 def insertion ( t ): # compl\u00e9ter le code de la fonction insertion(t), sans oublier la sp\u00e9cification pass 1 2 3 4 # Test t = [ 7 , 2 , - 3 , 5 ] insertion ( t ) assert t == [ - 3 , 2 , 5 , 7 ]","title":"Impl\u00e9mentation en python"},{"location":"NSI1/S8/S8C2.html#validite-de-lalgorithme","text":"L'algorithme Tri_insertion termine car il pr\u00e9sente une boucle born\u00e9e. Remarque La boucle conditionnelle de la r\u00e9alisation amener t[i] \u00e0 sa place parmi t[0..i-1] termine, la quantit\u00e9 \\(j\\) est un variant de boucle. L'invariant de boucle est ici: \u00e0 la i-\u00e8me it\u00e9ration, le sous tableau t[0..i-1] est tri\u00e9. De mani\u00e8re intuitive, on comprend qu'\u00e0 chaque tour de boucle on se rapproche de la solution recherch\u00e9e. On agrandit la zone tri\u00e9e de un \u00e9l\u00e9ment. Exhiber une telle propri\u00e9t\u00e9 (invariant de boucle) permet de conclure \u00e0 la correction partielle de l'algorithme. La combinaison de la correction partielle avec la terminaison permet de conclure \u00e0 la correction totale de l'algorithme Tri_insertion .","title":"Validit\u00e9 de l'algorithme"},{"location":"NSI1/S8/S8C2.html#efficacite-complexite-temporelle-de-lalgorithme","text":"Afin d'\u00e9valuer le co\u00fbt de l'algorithme dans le pire des cas, on doit s'int\u00e9resser aux nombre d'op\u00e9rations effectu\u00e9es, qui est ici li\u00e9 au nombre de d\u00e9calage avant de trouver la place de l'\u00e9l\u00e9ment \u00e0 classer. Le pire des cas se produit lorsque le tableau est class\u00e9 en sens inverse. Visualisons cela sur un tableau \u00e0 5 \u00e9l\u00e9ments, simple \u00e0 trier: t = [5, 4, 3, 2, 1] . Le nombre de d\u00e9calage n\u00e9cessaire est: \\(1 + 2 + 3 + 4 = 10\\) . On g\u00e9n\u00e9ralise sans peine: dans le pire des cas, pour un tableau de taille n , il faudra effectuer: \\[ 1+2+\\cdots + (n-2) + (n-1)=\\dfrac{n}{2}\\times(n-1)\\] d\u00e9calages. Comme pour le tri par s\u00e9lection, le co\u00fbt (on dit aussi complexit\u00e9 ) du tri par insertion dans le pire des cas est quadratique . On dit aussi que la complexit\u00e9 en temps est en \\(\\mathcal{O}(n^2)\\) , \\(n\\) \u00e9tant la taille du tableau. Ce qu'il faut retenir Le tri par insertion consiste \u00e0 maintenir une partie d'un tableau tri\u00e9e et \u00e0 parcourir la partie non tri\u00e9e en mettant chaque \u00e9l\u00e9ment rencontr\u00e9 \u00e0 sa place d\u00e9finitive dans la partie tri\u00e9e. Ce probl\u00e8me est r\u00e9solu habituellement par un algorithme faisant intervenir une boucle born\u00e9e et une boucle conditionnelle. La terminaison de la boucle born\u00e9e est \u00e9vidente et celle de la boucle conditionelle facile \u00e0 montrer avec un variant de boucle. L'invariant de boucle \\(\\mathcal{I}\\) : \u00c0 la i-\u00e8me it\u00e9ration, le sous tableau t[0..i-1] est tri\u00e9, permet de conclure \u00e0 sa correction partielle. La conjugaison de ces deux propri\u00e9t\u00e9s assure la correction totale de l'algorithme propos\u00e9. Cet algorithme a une complexit\u00e9 temporelle quadratique.","title":"Efficacit\u00e9: complexit\u00e9 temporelle de l'algorithme"},{"location":"NSITerm/ALGO/C10C1.html","text":"DIVISER POUR REGNER \u2693\ufe0e ### Lancer bksl-nl Valider 5/5 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder def somme(n):bksl-nl \"\"\"bksl-nl Renvoie la somme des n entiers compris entre 0 et n;bksl-nl n: entier naturel positifbksl-nl \"\"\"bksl-nl s = 0bksl-nl for i in range(n):bksl-nl s += ibksl-nl return sbksl-nl bksl-nl# testbksl-nlassert somme(4) === 10bksl-nlbksl-nl bksl-nl A Z L'approche diviser pour r\u00e9gner \u2693\ufe0e L'id\u00e9e est de s\u00e9parer le probl\u00e8me initial en plusieurs probl\u00e8mes semblables mais ayant une taille plus petite, puis de r\u00e9soudre ( de fa\u00e7on r\u00e9cursive ) ces probl\u00e8mes et enfin de combiner les solutions obtenues pour obtenir la solution du probl\u00e8me initial. Il y aura donc trois \u00e9tapes essentielles: diviser le probl\u00e8me en probl\u00e8mes plus petits; r\u00e9gner en r\u00e9solvant de mani\u00e8re r\u00e9cursive les probl\u00e8mes plus petits; combiner (on dit aussi fusionner ) les solutions des sous-probl\u00e8mes pour obtenir la solution du probl\u00e8me initial. Application 1: la recherche dichotomique \u2693\ufe0e Le probl\u00e8me \u2693\ufe0e Rappel du probl\u00e8me de 1re NSI: il s'agit de d\u00e9terminer si une valeur v appartient \u00e0 un tableau t tri\u00e9. Ce probl\u00e8me a \u00e9t\u00e9 r\u00e9solu de mani\u00e8re it\u00e9rative (voir cours 1re sur github ). Adoptons une approche diviser pour r\u00e9gner . Diviser Comme le tableau est tri\u00e9, on peut le \" couper \" en deux pour y effectuer la recherche. Si on travaille avec des indices g et d , le milieu se situe \u00e0 \\(m=\\dfrac{g+d}{2}\\) . R\u00e9gner Il s'agit d'effectuer la recherche dans une partie du tableau qui est de taille plus petite que le tableau original. Combiner Lors d'une recherche, si v est trouv\u00e9, on renvoie son indice. Dans le cas d'un tableau vide, on renvoie None . Illustration de la situation apr\u00e8s quelques appels r\u00e9cursifs 1 2 3 4 5 6 7 __________________________________________ | | | | | \u00e9l\u00e9ments < v | ........... | \u00e9l\u00e9ments > v| |__________________________________________ | ^ ^ ^ | | | 0 g d Une solution \u2693\ufe0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def chercher ( t , v , g , d ): \"\"\" Recherche l'index de v dans le tableau t, entre g et d; renvoie None si non trouv\u00e9. t: tableau v: valeur \u00e0 chercher g, d: index (entiers naturels) \"\"\" if g > d : return None m = ( g + d ) // 2 if v > t [ m ]: return chercher ( t , v , m + 1 , d ) if v < t [ m ]: return chercher ( t , v , g , m - 1 ) else : return m 1 2 3 4 5 def recherche_dichotomique ( t , v ): \"\"\" renvoie l'index de v dans t si trouv\u00e9, None sinon \"\"\" return chercher ( t , v , 0 , len ( t ) - 1 ) 1 2 3 4 # Exemple d'appel t = [ 1 , 7 , 8 , 9 , 12 , 15 , 15 , 22 , 30 , 31 ] print ( recherche_dichotomique ( t , 15 )) print ( recherche_dichotomique ( t , 25 )) 1 2 5 None Remarque : le programme termine car on peut exhiber un variant de boucle: \\(d-g\\) . Il s'agit d'une grandeur enti\u00e8re, strictement positive et qui d\u00e9croit \u00e0 chaque appel r\u00e9cursif (voir illustration ci-dessus). Application 2: le tri fusion (voir TP) \u2693\ufe0e Le probl\u00e8me initial \u2693\ufe0e Il s'agit de trier une liste cha\u00een\u00e9e d'entiers, par ordre croissant. Plusieurs m\u00e9thodes de tri peuvent \u00eatre envisag\u00e9es ( tri par s\u00e9lection , tri par insertion ). On choisit ici une approche diviser pour r\u00e9gner . La liste sont des instances de la classe Cell vue au premier trimestre. 1 2 3 4 5 6 class Cell : \"\"\" Classe cellule pour liste chain\u00e9e\"\"\" def __init__ ( self , v , s ): self . val = v self . suiv = s 1 2 # Exemple lst1 = Cell ( 2 , Cell ( 10 , Cell ( 5 , Cell ( - 4 , Cell ( 0 , Cell ( 1 , None )))))) Approche diviser pour r\u00e9gner \u2693\ufe0e Diviser \u2693\ufe0e Il s'agit dans un premier temps de \" couper \" la liste originale en deux listes de taille \u00e9gale (ou presque dans le cas d'un nombre impair d'\u00e9l\u00e9ments). Il existe plusieurs fa\u00e7on de r\u00e9soudre ce probl\u00e8me (voir TP), on pr\u00e9sente ici une version ne n\u00e9cessitant pas de calcul de taille de liste au pr\u00e9alable. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def couper_liste_v2 ( l ): \"\"\" coupe l en deux parties (\u00e9gales si la longueur de l est paire). renvoie deux listes chain\u00e9es l1 et l2 \"\"\" l1 , l2 = None , None while l : # boucle tant qu'on a au moins 1 element if l . suiv is not None : # On en a au moins 2 ! val1 , val2 = l . val , l . suiv . val l1 , l2 = Cell ( val1 , l1 ), Cell ( val2 , l2 ) l = l . suiv . suiv else : # il n'en reste qu'un seul ! val1 = l . val l1 = Cell ( val1 , l1 ) l = None return l1 , l2 R\u00e9gner \u2693\ufe0e Apr\u00e8s avoir r\u00e9duit les listes \u00e0 un \u00e9l\u00e9ment, il devient facile de les trier: une liste \u00e0 un \u00e9l\u00e9ment est forc\u00e9ment tri\u00e9e ! Combiner \u2693\ufe0e Il s'agit maintenant de \" fusionner \" les solutions des sous probl\u00e8mes. Concr\u00e8tement, on \u00e9crit une fonction fusion qui prend deux listes en param\u00e8tres et qui renvoie une liste, tri\u00e9e par ordre croissant. 1 2 3 4 5 6 7 8 9 10 def fusion ( l1 , l2 ): \"\"\" renvoie une liste contenant les \u00e9l\u00e9ments de l1 et de l2, tri\u00e9s par ordre croissant. \"\"\" if l1 is None : return l2 if l2 is None : return l1 if l1 . val < l2 . val : return Cell ( l1 . val , fusion ( l1 . suiv , l2 )) else : return Cell ( l2 . val , fusion ( l1 , l2 . suiv )) L'impl\u00e9mentation de l'algorithme du tri fusion, utilisant une approche diviser pour r\u00e9gner en python, s'\u00e9crit alors: 1 2 3 4 5 6 7 8 9 def tri_fusion ( lst ): \"\"\" \"\"\" # Cas de base: liste contenant 1 \u00e9l\u00e9ment if lst . suiv is None : return lst # Cas r\u00e9cursif partie_1 , partie_2 = couper_liste_v2 ( lst ) # diviser return fusion ( tri_fusion ( partie_1 ), tri_fusion ( partie_2 )) # r\u00e9gner - combiner Illustration \u2693\ufe0e Efficacit\u00e9 \u2693\ufe0e Voici les relev\u00e9s effectu\u00e9s sur des listes de tailles diff\u00e9rentes, tri\u00e9es soit avec l'algorithme du tri s\u00e9lection soit avec le tri fusion. Taille Tri s\u00e9lection Tri fusion 1000 0.06 s 0.01 s 2000 0.13 s 0.03 s 4000 0.44 s 0.05 8000 1.78 0.11 s 16000 6.79 0.29 s Il appara\u00eet clairement que le tri fusion est nettement plus performant que le tri s\u00e9lection lorsque la taille du probl\u00e8me augmente. Une \u00e9tude approfondie de cet algorithme montre que sa complexit\u00e9 en temps est \\(\\mathcal{O}(n\\log{}n)\\) .","title":"Cours 1: Paradigme diviser pour r\u00e9gner"},{"location":"NSITerm/ALGO/C10C1.html#diviser-pour-regner","text":"### Lancer bksl-nl Valider 5/5 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder def somme(n):bksl-nl \"\"\"bksl-nl Renvoie la somme des n entiers compris entre 0 et n;bksl-nl n: entier naturel positifbksl-nl \"\"\"bksl-nl s = 0bksl-nl for i in range(n):bksl-nl s += ibksl-nl return sbksl-nl bksl-nl# testbksl-nlassert somme(4) === 10bksl-nlbksl-nl bksl-nl A Z","title":"DIVISER POUR REGNER"},{"location":"NSITerm/ALGO/C10C1.html#lapproche-diviser-pour-regner","text":"L'id\u00e9e est de s\u00e9parer le probl\u00e8me initial en plusieurs probl\u00e8mes semblables mais ayant une taille plus petite, puis de r\u00e9soudre ( de fa\u00e7on r\u00e9cursive ) ces probl\u00e8mes et enfin de combiner les solutions obtenues pour obtenir la solution du probl\u00e8me initial. Il y aura donc trois \u00e9tapes essentielles: diviser le probl\u00e8me en probl\u00e8mes plus petits; r\u00e9gner en r\u00e9solvant de mani\u00e8re r\u00e9cursive les probl\u00e8mes plus petits; combiner (on dit aussi fusionner ) les solutions des sous-probl\u00e8mes pour obtenir la solution du probl\u00e8me initial.","title":"L'approche diviser pour r\u00e9gner"},{"location":"NSITerm/ALGO/C10C1.html#application-1-la-recherche-dichotomique","text":"","title":"Application 1: la recherche dichotomique"},{"location":"NSITerm/ALGO/C10C1.html#application-2-le-tri-fusion-voir-tp","text":"","title":"Application 2: le tri fusion (voir TP)"},{"location":"NSITerm/ALGO/C10TP1.html","text":"Quelques op\u00e9rations sur les listes cha\u00een\u00e9es \u2693\ufe0e Comment couper une liste en deux ? \u2693\ufe0e 1 2 3 4 5 6 7 8 9 class Cell : \"\"\" Classe cellule pour liste chain\u00e9e\"\"\" def __init__ ( self , v , s ): self . val = v self . suiv = s lst1 = Cell ( 10 , Cell ( 5 , Cell ( - 4 , Cell ( 0 , Cell ( 1 , None ))))) lst2 = Cell ( 2 , lst1 ) 1 2 3 # TESTS - Visualiser avec pythontutor lst1 = Cell ( 10 , Cell ( 5 , Cell ( - 4 , Cell ( 0 , Cell ( 1 , None ))))) lst2 = Cell ( 2 , lst1 ) Proposition 1 \u2693\ufe0e Id\u00e9e : trouver la taille \\(n\\) de la liste originale; mettre ses \\(\\left\\lfloor \\dfrac{n}{2}\\right\\rfloor\\) premiers \u00e9l\u00e9ments dans une premi\u00e8re liste et les autres dans une seconde liste. 1 2 3 4 5 6 7 def taille ( l ): \"\"\" Renvoie la taille d'une liste l non vide\"\"\" if l . suiv is None : return 1 else : return 1 + taille ( l . suiv ) 1 print ( taille ( lst2 )) 1 6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def couper_liste_v1 ( l ): \"\"\" coupe la liste l en deux parties (\u00e9gales si la longueur de l est paire). renvoie deux listes chain\u00e9es l1 et l2 \"\"\" l1 , l2 = None , None t = taille ( l ) nb_element = 0 while l is not None : if nb_element < t // 2 : l1 = Cell ( l . val , l1 ) else : l2 = Cell ( l . val , l2 ) nb_element += 1 l = l . suiv return l1 , l2 1 2 3 4 5 def afficher_liste ( l ): while l is not None : print ( l . val , ' --> ' , end = '' ) l = l . suiv print ( 'None' ) 1 2 3 4 5 # TESTS l1 , l2 = couper_liste_v1 ( lst2 ) afficher_liste ( lst2 ) afficher_liste ( l1 ) afficher_liste ( l2 ) 1 2 3 2 --> 10 --> 5 --> -4 --> 0 --> 1 --> None 5 --> 10 --> 2 --> None 1 --> 0 --> -4 --> None Proposition 2 \u2693\ufe0e Id\u00e9e : prendre deux \u00e9l\u00e9ments de la liste originale ( si possible ); disposer un \u00e9l\u00e9ment dans l1 et l'autre dans l2 \u00c0 faire Compl\u00e9ter le code suivant. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def couper_liste_v2 ( l ): \"\"\" coupe l en deux parties (\u00e9gales si la longueur de l est paire). renvoie deux listes chain\u00e9es l1 et l2 \"\"\" l1 , l2 = None , None while l : # boucle tant qu'on a au moins 1 element dans l if l . suiv is not None : # On en a au moins 2 ! val1 , val2 = ... , ... l1 , l2 = Cell ( ... , ... ), Cell ( ... , ... ) l = l . suiv . suiv else : # il n'en reste qu'un seul ! val1 = l . val l1 = Cell ( val1 , l1 ) l = None return l1 , l2 1 2 3 4 5 # TESTS l1 , l2 = couper_liste_v2 ( lst1 ) afficher_liste ( lst1 ) afficher_liste ( l1 ) afficher_liste ( l2 ) 1 2 3 10 --> 5 --> -4 --> 0 --> 1 --> None 1 --> -4 --> 10 --> None 0 --> 5 --> None Proposition 3 \u2693\ufe0e Id\u00e9e : On parcours la liste originale et on place la valeur lue une fois dans l1 , une fois dans l2 . 1 2 3 4 5 6 7 8 def couper_liste_v3 ( l ): l1 , l2 = None , None while l is not None : temp = l1 l1 = Cell ( l . val , l2 ) l2 = temp l = l . suiv return l1 , l2 \u00c0 faire V\u00e9rifier la bonne compr\u00e9hension du code pr\u00e9c\u00e9dent sur pythontutor Comment fusionner deux listes ? \u2693\ufe0e On souhaite \u00e9crire une fonction fusion qui prend en param\u00e8tre deux listes cha\u00een\u00e9es l1 et l2 ( que l'on suppose tri\u00e9es par ordre croissant ) et qui renvoie une liste cha\u00een\u00e9e contenant tous les \u00e9l\u00e9ments de l1 et l2 tri\u00e9s par ordre croissant. \u00c0 faire Compl\u00e9ter le code de la fonction fusion 1 2 3 4 5 6 7 8 def fusion ( l1 , l2 ): \"\"\" Fusionne r\u00e9cursivement l1 et l2\"\"\" if l1 is None : return l2 if l2 is None : return l1 if l1 . val < l2 . val : return Cell ( l1 . val , ... ) else : return Cell ( l2 . val , ... ) 1 2 3 4 5 6 7 # TESTS x = Cell ( 3 , Cell ( 8 , Cell ( 13 , Cell ( 17 , None )))) y = Cell ( - 2 , Cell ( 1 , Cell ( 7 , Cell ( 11 , None )))) afficher_liste ( x ) afficher_liste ( y ) liste_finale = fusion ( x , y ) afficher_liste ( liste_finale ) 1 2 3 3 --> 8 --> 13 --> 17 --> None -2 --> 1 --> 7 --> 11 --> None -2 --> 1 --> 3 --> 7 --> 8 --> 11 --> 13 --> 17 --> None Comment trier une liste ? \u2693\ufe0e Exemple du tri fusion \u2693\ufe0e En utilisant les r\u00e9sultats pr\u00e9c\u00e9dents, \u00e9crire une fonction tri_fusion qui prend en param\u00e8tre une liste cha\u00een\u00e9e et qui renvoie une nouvelle liste cha\u00een\u00e9e tri\u00e9e. \u00c0 faire Compl\u00e9ter le code de la fonction tri_fusion 1 2 3 4 5 6 7 8 def tri_fusion ( lst ): \"\"\" R\u00e9alise le tri de lst selon le paradigme diviser pour r\u00e9gner\"\"\" # Cas de base: liste contenant 1 \u00e9l\u00e9ment if lst . suiv is None : return lst # Cas r\u00e9cursif partie_1 , partie_2 = ... # diviser return fusion ( ... , ... ) # r\u00e9gner - combiner 1 2 3 # TESTS afficher_liste ( lst1 ) afficher_liste ( tri_fusion ( lst1 )) 1 2 10 --> 5 --> -4 --> 0 --> 1 --> None -4 --> 0 --> 1 --> 5 --> 10 --> None","title":"TP 1: Pr\u00e9ambule au tri fusion"},{"location":"NSITerm/ALGO/C10TP1.html#quelques-operations-sur-les-listes-chainees","text":"","title":"Quelques op\u00e9rations sur les listes cha\u00een\u00e9es"},{"location":"NSITerm/ALGO/C10TP1.html#comment-couper-une-liste-en-deux","text":"1 2 3 4 5 6 7 8 9 class Cell : \"\"\" Classe cellule pour liste chain\u00e9e\"\"\" def __init__ ( self , v , s ): self . val = v self . suiv = s lst1 = Cell ( 10 , Cell ( 5 , Cell ( - 4 , Cell ( 0 , Cell ( 1 , None ))))) lst2 = Cell ( 2 , lst1 ) 1 2 3 # TESTS - Visualiser avec pythontutor lst1 = Cell ( 10 , Cell ( 5 , Cell ( - 4 , Cell ( 0 , Cell ( 1 , None ))))) lst2 = Cell ( 2 , lst1 )","title":"Comment couper une liste en deux ?"},{"location":"NSITerm/ALGO/C10TP1.html#comment-fusionner-deux-listes","text":"On souhaite \u00e9crire une fonction fusion qui prend en param\u00e8tre deux listes cha\u00een\u00e9es l1 et l2 ( que l'on suppose tri\u00e9es par ordre croissant ) et qui renvoie une liste cha\u00een\u00e9e contenant tous les \u00e9l\u00e9ments de l1 et l2 tri\u00e9s par ordre croissant. \u00c0 faire Compl\u00e9ter le code de la fonction fusion 1 2 3 4 5 6 7 8 def fusion ( l1 , l2 ): \"\"\" Fusionne r\u00e9cursivement l1 et l2\"\"\" if l1 is None : return l2 if l2 is None : return l1 if l1 . val < l2 . val : return Cell ( l1 . val , ... ) else : return Cell ( l2 . val , ... ) 1 2 3 4 5 6 7 # TESTS x = Cell ( 3 , Cell ( 8 , Cell ( 13 , Cell ( 17 , None )))) y = Cell ( - 2 , Cell ( 1 , Cell ( 7 , Cell ( 11 , None )))) afficher_liste ( x ) afficher_liste ( y ) liste_finale = fusion ( x , y ) afficher_liste ( liste_finale ) 1 2 3 3 --> 8 --> 13 --> 17 --> None -2 --> 1 --> 7 --> 11 --> None -2 --> 1 --> 3 --> 7 --> 8 --> 11 --> 13 --> 17 --> None","title":"Comment fusionner deux listes ?"},{"location":"NSITerm/ALGO/C10TP1.html#comment-trier-une-liste","text":"","title":"Comment trier une liste ?"},{"location":"NSITerm/ALGO/C10TP2.html","text":"TP FAIRE TOMBER R2D2 - f\u00e9vrier 2023 \u2693\ufe0e Le probl\u00e8me \u00e0 r\u00e9soudre \u2693\ufe0e On souhaite faire tomber R2D2 ! On peut remarquer qu'il s'agit en fait d'effectuer une rotation d'un quart de tour (ou 90\u00b0) d'une image carr\u00e9e , par exemple de 512 pixels sur 512 pixels. Principe - Algorithme \u2693\ufe0e Le principe de l\u2019algorithme est illustr\u00e9 par la figure ci-dessous (o\u00f9 on effectue une rotation \u00e0 gauche ). Il suit les trois phases de l\u2019approche \u00ab diviser pour r\u00e9gner \u00bb: Diviser : l\u2019image est d\u00e9coup\u00e9e en quatre zones, par exemple nomm\u00e9es A, B, C et D. R\u00e9soudre ( r\u00e9gner ): chaque zone est tourn\u00e9e de 90\u00b0 par un appel r\u00e9cursif. Combiner : on place les zones tourn\u00e9es \u00e0 leur emplacement final, en d'autres termes, on effectue une permutation circulaire des quatre zones. Mod\u00e9liser l'image comme un tableau de pixel \u2693\ufe0e 1 2 3 4 5 6 from PIL import Image im = Image . open ( \"img/R2D2.png\" ) largeur , hauteur = im . size pix = im . load () 1 largeur 1 512 pix est une instance de la classe PixelAccess du module Image de la librairie PIL . Cet objet peut \u00eatre vu comme un tableau de pixels . Ces derniers \u00e9tant des n-uplets des composantes Rouge, Vert et Bleu. Pour modifier un pixel aux coordon\u00e9es x, y on effectue l'affectation: pix[x, y] = c o\u00f9 c est un triplet repr\u00e9sentant une couleur. 1 2 # Permet de visualier l'image avec le programme par d\u00e9faut im . show () R\u00e9solution \u2693\ufe0e On suppose pour simplifer que l'image est carr\u00e9e (t x t) o\u00f9 t est sa taille et correspond \u00e0 une puissance de 2 . La proc\u00e9dure de r\u00e9solution est la suivante: on d\u00e9coupe l'image en 4 et on effectue r\u00e9cursivement une rotation de 90\u00b0 (\u00e0 droite pour R2D2) de chacun des 4 morceaux dont le coin sup\u00e9rieur gauche est situ\u00e9 respectivement aux coordonn\u00e9es (x, y) , (x+t, y) , (x, y+t) et (x+t, y+t) ; on d\u00e9place chacun des morceaux pr\u00e9c\u00e9dent vers leur position finale (permutation circulaire dans le sens horaire). On peut visualiser ces diverses op\u00e9rations sur le sch\u00e9ma ci-dessous La r\u00e9solution s'appuiera essentiellement sur deux fonctions auxiliaires ( dont on trouvera les signatures ci-dessous ): rotation_aux et echanger_quadrant . 1 2 3 4 5 6 7 8 9 10 11 12 def rotation_aux ( px , coord , t ): \"\"\" D\u00e9coupe une image en quatre et effectue la rotation de chacun des morceaux. Puis, effectue une permutation circulaire des quadrants. px: \"tableau de pixels\" (type PixelAcess); coord: coordonn\u00e9es du coin sup\u00e9rieur gauche de l'image (tuple); t: taille de l'image (int). \"\"\" # D\u00e9coupage et rotation # \u00c0 compl\u00e9ter # D\u00e9placement des morceaux # \u00c0 compl\u00e9ter 1 2 3 4 5 6 7 8 9 10 11 def echanger_quadrant ( px , coord_orig , coord_dest , t ): \"\"\" \u00c9change les pixels d'un quadrant origine avec ceux d'un quadrant de destination. Ne renvoie rien. px: \"tableau de pixels\" (PixelAccess) coord_orig: coordonn\u00e9es du coin sup\u00e9rieur gauche du quadrant d'origine (tuple); coord_dest: coordonn\u00e9es du coin sup\u00e9rieur gauche du quadrant de destination (tuple); t: taille du quadrant. \"\"\" xi , yi = coord_orig xf , yf = coord_dest # \u00c0 compl\u00e9ter \u00c0 faire Apr\u00e8s avoir compl\u00e9ter les deux fonctions auxiliaires ci-dessus, tester votre code en r\u00e9alisant l'appel tomber_R2D2(\"img/R2D2.png\") . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 from PIL import Image def tomber_R2D2 ( img ): \"\"\" Tourne l'image 'img' d'1/4 de tour dans le sens des aiguilles d'une montre et l'affiche img: nom de fichier image \"\"\" im = Image . open ( img ) # Utilisation de la libririe PIL pour plus de commodit\u00e9s larg , haut = im . size if larg == haut and larg & ( larg - 1 ) == 0 : # on v\u00e9rifie que l'image est carr\u00e9e et # que sa taille est une puissance de 2 pix = im . load () rotation_aux ( pix , ( 0 , 0 ), larg ) im . show () 1 tomber_R2D2 ( \"img/R2D2.png\" )","title":"TP 2: Tourner R2D2"},{"location":"NSITerm/ALGO/C10TP2.html#tp-faire-tomber-r2d2-fevrier-2023","text":"","title":"TP FAIRE TOMBER R2D2 - f\u00e9vrier 2023"},{"location":"NSITerm/ALGO/C10TP2.html#le-probleme-a-resoudre","text":"On souhaite faire tomber R2D2 ! On peut remarquer qu'il s'agit en fait d'effectuer une rotation d'un quart de tour (ou 90\u00b0) d'une image carr\u00e9e , par exemple de 512 pixels sur 512 pixels.","title":"Le probl\u00e8me \u00e0 r\u00e9soudre"},{"location":"NSITerm/ALGO/C10TP2.html#principe-algorithme","text":"Le principe de l\u2019algorithme est illustr\u00e9 par la figure ci-dessous (o\u00f9 on effectue une rotation \u00e0 gauche ). Il suit les trois phases de l\u2019approche \u00ab diviser pour r\u00e9gner \u00bb: Diviser : l\u2019image est d\u00e9coup\u00e9e en quatre zones, par exemple nomm\u00e9es A, B, C et D. R\u00e9soudre ( r\u00e9gner ): chaque zone est tourn\u00e9e de 90\u00b0 par un appel r\u00e9cursif. Combiner : on place les zones tourn\u00e9es \u00e0 leur emplacement final, en d'autres termes, on effectue une permutation circulaire des quatre zones.","title":"Principe - Algorithme"},{"location":"NSITerm/ALGO/C10TP2.html#modeliser-limage-comme-un-tableau-de-pixel","text":"1 2 3 4 5 6 from PIL import Image im = Image . open ( \"img/R2D2.png\" ) largeur , hauteur = im . size pix = im . load () 1 largeur 1 512 pix est une instance de la classe PixelAccess du module Image de la librairie PIL . Cet objet peut \u00eatre vu comme un tableau de pixels . Ces derniers \u00e9tant des n-uplets des composantes Rouge, Vert et Bleu. Pour modifier un pixel aux coordon\u00e9es x, y on effectue l'affectation: pix[x, y] = c o\u00f9 c est un triplet repr\u00e9sentant une couleur. 1 2 # Permet de visualier l'image avec le programme par d\u00e9faut im . show ()","title":"Mod\u00e9liser l'image comme un tableau de pixel"},{"location":"NSITerm/ALGO/C10TP2.html#resolution","text":"On suppose pour simplifer que l'image est carr\u00e9e (t x t) o\u00f9 t est sa taille et correspond \u00e0 une puissance de 2 . La proc\u00e9dure de r\u00e9solution est la suivante: on d\u00e9coupe l'image en 4 et on effectue r\u00e9cursivement une rotation de 90\u00b0 (\u00e0 droite pour R2D2) de chacun des 4 morceaux dont le coin sup\u00e9rieur gauche est situ\u00e9 respectivement aux coordonn\u00e9es (x, y) , (x+t, y) , (x, y+t) et (x+t, y+t) ; on d\u00e9place chacun des morceaux pr\u00e9c\u00e9dent vers leur position finale (permutation circulaire dans le sens horaire). On peut visualiser ces diverses op\u00e9rations sur le sch\u00e9ma ci-dessous La r\u00e9solution s'appuiera essentiellement sur deux fonctions auxiliaires ( dont on trouvera les signatures ci-dessous ): rotation_aux et echanger_quadrant . 1 2 3 4 5 6 7 8 9 10 11 12 def rotation_aux ( px , coord , t ): \"\"\" D\u00e9coupe une image en quatre et effectue la rotation de chacun des morceaux. Puis, effectue une permutation circulaire des quadrants. px: \"tableau de pixels\" (type PixelAcess); coord: coordonn\u00e9es du coin sup\u00e9rieur gauche de l'image (tuple); t: taille de l'image (int). \"\"\" # D\u00e9coupage et rotation # \u00c0 compl\u00e9ter # D\u00e9placement des morceaux # \u00c0 compl\u00e9ter 1 2 3 4 5 6 7 8 9 10 11 def echanger_quadrant ( px , coord_orig , coord_dest , t ): \"\"\" \u00c9change les pixels d'un quadrant origine avec ceux d'un quadrant de destination. Ne renvoie rien. px: \"tableau de pixels\" (PixelAccess) coord_orig: coordonn\u00e9es du coin sup\u00e9rieur gauche du quadrant d'origine (tuple); coord_dest: coordonn\u00e9es du coin sup\u00e9rieur gauche du quadrant de destination (tuple); t: taille du quadrant. \"\"\" xi , yi = coord_orig xf , yf = coord_dest # \u00c0 compl\u00e9ter \u00c0 faire Apr\u00e8s avoir compl\u00e9ter les deux fonctions auxiliaires ci-dessus, tester votre code en r\u00e9alisant l'appel tomber_R2D2(\"img/R2D2.png\") . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 from PIL import Image def tomber_R2D2 ( img ): \"\"\" Tourne l'image 'img' d'1/4 de tour dans le sens des aiguilles d'une montre et l'affiche img: nom de fichier image \"\"\" im = Image . open ( img ) # Utilisation de la libririe PIL pour plus de commodit\u00e9s larg , haut = im . size if larg == haut and larg & ( larg - 1 ) == 0 : # on v\u00e9rifie que l'image est carr\u00e9e et # que sa taille est une puissance de 2 pix = im . load () rotation_aux ( pix , ( 0 , 0 ), larg ) im . show () 1 tomber_R2D2 ( \"img/R2D2.png\" )","title":"R\u00e9solution"},{"location":"NSITerm/ALGO/C11TD1.html","text":"Le programme du sous tableau maximal \u2693\ufe0e Un exemple d'application \u2693\ufe0e Quand acheter et quand vendre pour maximiser le profit? \u2693\ufe0e Mod\u00e9lisation \u2693\ufe0e On souhaite trouver un sous tableau maximal issu d'un sous tableau A[g..d] . On adopte l'approche diviser pour r\u00e9gner en divisant ce tableau en deux sous tableaux de taille sensiblement \u00e9gale A[g..m] et A[m+1..d] . Un sous tableau maximal peut se situer enti\u00e8rement dans la partie gauche A[g..m] , ou enti\u00e8rement dans la partie de droite A[m+1..d] ou ... ... \u00e0 cheval sur ces deux parties ! La recherche d'un sous tableau maximal peut se faire de mani\u00e8re r\u00e9cursive dans les parties gauches et droite. C'est une instance plus petite du m\u00eame probl\u00e8me initial. On cherche ensuite un sous tableau maximal \u00e0 cheval sur les parties gauche et droite ( qui n'est pas une instance du probl\u00e8me initial ). Enfin, on prendra le sous tableau ayant la plus grande somme des trois calcul\u00e9s pr\u00e9c\u00e9demment. Algorithmes \u2693\ufe0e Tr\u00e8s fortement inspir\u00e9 de cet ouvrage de r\u00e9f\u00e9rence - chapitre 4, page 68. Sous tableau maximal situ\u00e9 au milieu \u2693\ufe0e Il suffit de trouver deux sous-tableaux maximaux de la forme A[i..m] et A[m+1..j] puis de les combiner. ALGORITHME 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 Algorithme ss_tab_milieu(A, g, m, d) Entr\u00e9es: A: tableau d'entiers relatifs; g, m, d: index de tableau, entiers naturels Sortie: les index d'un sous tableau maximal, ainsi que la somme maximale associ\u00e9e. s_gauche = - infini s = 0 Pour i allant de m \u00e0 g (en d\u00e9croissant) s = s + A[i] Si s > s_gauche: s_gauche = s idx_gauche = i s_droite = - infini s = 0 Pour j allant de m+1 \u00e0 d s = s + A[j] Si s > s_droite: s_droite = s idx_droite = j Renvoyer idx_gauche, idx_droite, s_gauche+s_droite Sous tableau maximal \u2693\ufe0e ALGORITHME 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 Algorithme ss_tab_maximal(A, g, d) Entr\u00e9es: A: tableau d'entiers relatifs; g, d: index extr\u00eames d'un tableau, entiers naturels Sortie: les index d'un sous tableau maximal, ainsi que la somme maximale associ\u00e9e. Si d = g Renvoyer g, d, A[d] Sinon m = partie enti\u00e8re inf\u00e9rieure de (g+d) / 2 idx_i_gauche, idx_j_gauche, s_gauche = ss_tab_maximal(A, g, m) idx_i_droite, idx_j_droite, s_droite = ss_tab_maximal(A, m+1, d) idx_i_milieu, idx_j_milieu, s_milieu = ss_tab_milieu(A, g, m, d) Si s_gauche >= s_droite ET s_gauche >= s_milieu Renvoyer idx_i_gauche, idx_j_gauche, s_gauche Sinon Si s_droite >= s_gauche ET s_droite >= s_milieu Renvoyer idx_i_droite, idx_j_droite, s_droite Sinon Renvoyer idx_i_milieu, idx_j_milieu, s_milieu Analyse simplifi\u00e9e du co\u00fbt des algorithmes \u2693\ufe0e Soit \\(n\\) la taille du tableau d'entr\u00e9e. L'algorithme de recherche de sous tableau au milieu a clairement une complexit\u00e9 temporelle en \\(\\mathcal{O}(n)\\) . En effet, les deux boucles Pour permettent de parcourir tout le tableau A . Pour le deuxi\u00e8me algorithme, le cas de base prend un temps constant. Pour le cas r\u00e9cursif et pour un tableau de taille \\(n\\) , on doit r\u00e9soudre: 2 probl\u00e8mes de taille \\(n/2\\) ; le probl\u00e8me de recherche du sous tableau au milieu plus des op\u00e9rations \u00e0 co\u00fbt constant. De ce fait, r\u00e9soudre un probl\u00e8me de taille \\(n\\) prendra un temps: \\[T(n)=2T(n/2) + \\mathcal{O}(n)\\] Il existe un th\u00e9or\u00e8me ( th\u00e9or\u00e8me g\u00e9n\u00e9ral ) premettant de r\u00e9soudre cette \u00e9quation de r\u00e9currence. On admettra ici la solution: \\[T(n)=\\mathcal{O}(n\\log_2 n)\\] Remarque Ce co\u00fbt est nettement meilleur que le co\u00fbt quadratique de l'algorithme na\u00eff (brute force) rencontr\u00e9 dans le sujet de bac blanc 2021. Travail \u00e0 faire \u2693\ufe0e \u00c0 faire Impl\u00e9menter ces deux algorithmes en Python. Tester (notamment avec l'exemple du bac blanc, que l'on peut retrouver \u00e0 cette adresse ).","title":"TD 1: Un exemple d'application (difficile)"},{"location":"NSITerm/ALGO/C11TD1.html#le-programme-du-sous-tableau-maximal","text":"","title":"Le programme du sous tableau maximal"},{"location":"NSITerm/ALGO/C11TD1.html#un-exemple-dapplication","text":"","title":"Un exemple d'application"},{"location":"NSITerm/ALGO/C11TD1.html#analyse-simplifiee-du-cout-des-algorithmes","text":"Soit \\(n\\) la taille du tableau d'entr\u00e9e. L'algorithme de recherche de sous tableau au milieu a clairement une complexit\u00e9 temporelle en \\(\\mathcal{O}(n)\\) . En effet, les deux boucles Pour permettent de parcourir tout le tableau A . Pour le deuxi\u00e8me algorithme, le cas de base prend un temps constant. Pour le cas r\u00e9cursif et pour un tableau de taille \\(n\\) , on doit r\u00e9soudre: 2 probl\u00e8mes de taille \\(n/2\\) ; le probl\u00e8me de recherche du sous tableau au milieu plus des op\u00e9rations \u00e0 co\u00fbt constant. De ce fait, r\u00e9soudre un probl\u00e8me de taille \\(n\\) prendra un temps: \\[T(n)=2T(n/2) + \\mathcal{O}(n)\\] Il existe un th\u00e9or\u00e8me ( th\u00e9or\u00e8me g\u00e9n\u00e9ral ) premettant de r\u00e9soudre cette \u00e9quation de r\u00e9currence. On admettra ici la solution: \\[T(n)=\\mathcal{O}(n\\log_2 n)\\] Remarque Ce co\u00fbt est nettement meilleur que le co\u00fbt quadratique de l'algorithme na\u00eff (brute force) rencontr\u00e9 dans le sujet de bac blanc 2021.","title":"Analyse simplifi\u00e9e du co\u00fbt des algorithmes"},{"location":"NSITerm/ALGO/C11TD1.html#travail-a-faire","text":"\u00c0 faire Impl\u00e9menter ces deux algorithmes en Python. Tester (notamment avec l'exemple du bac blanc, que l'on peut retrouver \u00e0 cette adresse ).","title":"Travail \u00e0 faire"},{"location":"NSITerm/ARSE/C7C1.html","text":"Gestion des ressources par un SE \u2693\ufe0e Programme \u2693\ufe0e Contenus Capacit\u00e9s attendues Commentaires Gestion des processus et des ressources par un syst\u00e8me d\u2019exploitation. D\u00e9crire la cr\u00e9ation d\u2019un processus, l\u2019ordonnancement de plusieurs processus par le syst\u00e8me. Mettre en \u00e9vidence le risque de l\u2019interblocage (deadlock). \u00c0 l\u2019aide d\u2019outils standard, il s\u2019agit d\u2019observer les processus actifs ou en attente sur une machine. Une pr\u00e9sentation d\u00e9branch\u00e9e de l\u2019interblocage peut \u00eatre propos\u00e9e. Le syst\u00e8me d'exploitation \u2693\ufe0e La t\u00e2che principale d'un syst\u00e8me d'exploitation est de servir d'interm\u00e9diaire entre les applications utilisateurs et le mat\u00e9riel. Le diagramme ci-dessous d\u00e9taille quelque peu ce r\u00f4le d' interm\u00e9diaire . Les syst\u00e8mes d'exploitation les plus courants sont: Linux, Microsoft Windows, MacOS, android, etc. Du programme au processus \u2693\ufe0e C'est au processeur que revient la t\u00e2che d'ex\u00e9cuter les instructions des programmes . Programme Un programme est une suite d'instructions statique, g\u00e9n\u00e9ralement stock\u00e9e sous forme de fichier ex\u00e9cutable, sur le disque. Lors de la lanc\u00e9e d'un programme, le noyau du syst\u00e8me d'exploitation ( kernel en anglais) lui alloue des ressources mat\u00e9rielles (m\u00e9moire, temps processeur, etc). Cette instance du programme qui s'ex\u00e9cute s'appelle un processus . \u00c0 retenir Un processus est un programme en cours d'ex\u00e9cution. C'est une entit\u00e9 dynamique contrairement au fichier stock\u00e9 sur le disque. Les processus peuvent \u00eatre cr\u00e9\u00e9s par le syst\u00e8me (pilotes entr\u00e9es/sorties, sauvegarde, d\u00e9mons, etc.) ou par l'utilisateur en lan\u00e7ant ses applications. Ordonnancement des processus \u2693\ufe0e Un processus ne peut \u00e0 lui seul monopoliser le processeur qui doit \u00eatre partag\u00e9 dans le temps. C'est \u00e0 l'ordonnanceur ( scheduler en anglais) que revient cette t\u00e2che. Chaque processus va donc alterner entre des \u00e9tats d'ex\u00e9cution et des \"\u00e9tats d'attente\". Pr\u00e9cisons ces divers \u00e9tats: Un processus dans un \u00e9tat pr\u00eat ou en ex\u00e9cution est un processus actif . Le passage d'un \u00e9tat en ex\u00e9cution \u00e0 l'\u00e9tat pr\u00eat d'un processus, au bout d'un certain temps et dont l'origine est le noyau, s'appelle une pr\u00e9emption . Un processus termin\u00e9 mais non d\u00e9truit est appel\u00e9 processus zombie . Enfin, un processus en ex\u00e9cution est parfois qualifi\u00e9 d' \u00e9lu . Un exemple simplifi\u00e9 d' ordonnancement avec 3 processus. 1 2 3 4 from IPython.core.display import HTML # Peer Tube Sciences Technologies HTML ( '<iframe title=\"exemple_ordonnancement\" width=\"560\" height=\"315\" src=\"https://tube-sciences-technologies.apps.education.fr/videos/embed/0623b160-c14b-4435-a900-d7a547c3329c?start=1s\" frameborder=\"0\" allowfullscreen=\"\" sandbox=\"allow-same-origin allow-scripts allow-popups\"></iframe>' ) Inspecter les processus d'une machine \u2693\ufe0e Tous les syst\u00e8mes d'exploitation fournissent des outils qui permettent de visualiser les processus tournant sur une machine. Le syst\u00e8me Linux fournit: ps pour process status . Cette commande supporte de nombreuses options (voir man ps ). Parmi les plus courantes: ps -eF qui liste tous les processus en proc\u00e9dant \u00e0 un affichage \u00e9tendu sur plusieurs colonnes; ps -u xxxx o\u00f9 xxxx est un nom d'utilisateur: liste tous les processus initi\u00e9s par l'utilisateur xxxx . Malheureusement l'affichage de cette commande n'est pas rafraichi. De ce fait, on lui pr\u00e9f\u00e8re souvent la commande top qui fournit des informations d\u00e9taill\u00e9es, en temps r\u00e9el: Quelques commandes int\u00e9ressantes de top : h : affiche l'aide M : trie la liste par ordre d\u00e9croissant d'occupation m\u00e9moire. Pratique pour rep\u00e9rer les processus trop gourmands P : trie la liste par ordre d\u00e9croissant d'occupation processeur i : filtre les processus inactifs. Cela ne montre que ceux qui travaillent r\u00e9ellement. k : permet de tuer un processus - \u00e0 condition d'en \u00eatre le propri\u00e9taire. Essayez de tuer init ... V : permet d'avoir la vue arborescente sur les processus. q : permet de quitter top Cr\u00e9er des processus \u2693\ufe0e Comment cr\u00e9\u00e9-t-on des processus ? \u2693\ufe0e La cr\u00e9ation de processus est une op\u00e9ration privil\u00e9gi\u00e9e, r\u00e9alis\u00e9e par le syst\u00e8me et notamment au d\u00e9marrage. L'utilisateur peut \u00e9galement \u00eatre \u00e0 l'origine d'une cr\u00e9ation de processus en lan\u00e7ant des applications. On peut \u00e9galement cr\u00e9er des processus par programmation. Sur les syst\u00e8mes UNIX, on utilise la primitive fork . Cette fonction permet \u00e0 un processus de donner naissance \u00e0 un nouveau processus qui est sa copie conforme , par exemple en vue de r\u00e9aliser un second traitement parall\u00e8lement au premier ( voir la page Wikipedia correspondante). Le cr\u00e9ateur d'un nouveau processus est appel\u00e9 le p\u00e8re et le nouveau processus le fils . Chaque processus actif est identifi\u00e9 par un nombre, le Process IDentifier ou PID . En cas de succ\u00e8s, fork renvoie le PID du fils dans le processus p\u00e8re et 0 dans le processus fils. Enfin, on peut conna\u00eetre l'identit\u00e9 du p\u00e8re d'un processus gr\u00e2ce au Parent Process IDentifier ou PPID . Au d\u00e9marrage d'un syst\u00e8me Linux, le premier processus lanc\u00e9 est init , ayant pour PID 1 . Exemple avec python \u2693\ufe0e Jupyter Notebook L'ex\u00e9cution du programme ci-dessous plante le noyau IPython de Jupyter. On saisira le script dans un fichier (par exemple processus.py ) et on le lancera dans un interpr\u00e9teur de commande avec python3 processus.py . 1 2 3 4 5 6 7 8 9 10 11 12 13 import os import time pid_pere = os . getpid () pid_nouveau_proc = os . fork () # Si fork r\u00e9ussit, on r\u00e9cup\u00e8re et teste sa valeur de retour # pour savoir dans quel processus on se trouve if pid_nouveau_proc == 0 : # Fils print ( '[Fils]> mon PID est ' , os . getpid (), '. Celui de mon pere est ' , pid_pere ) time . sleep ( 5 ) else : # P\u00e8re print ( '[Pere]> mon PID est ' , pid_pere , '. Celui de mon fils est ' , pid_nouveau_proc ) time . sleep ( 10 ) On obtient les r\u00e9sultats suivants: Avec la commande ps on retrouve les deux processus initi\u00e9s par le script, avec des PID en accord avec l'affichage du script. On note par ailleurs que les deux processus sont dans un \u00e9tat bloqu\u00e9 ( S+ voir man ps ). Communiquer avec les processus \u2693\ufe0e Les processus peuvent \u00eatre destinataires de signaux provenant du syst\u00e8me d'exploitation ou d'autres processus. Un processus envoie un signal \u00e0 un autre processus en appelant la primitive syst\u00e8me kill . Dans un shell, on utilisera la commande: kill -numero_de_signal pid_de_processus . Quelques signaux courants \u2693\ufe0e Num\u00e9ro signal Nom du signal \u00c9v\u00e9nement associ\u00e9 2 SIGINT Interruption du clavier (frappe de \u00ab CTRL C \u00bb) 9 SIGKILL Terminaison forc\u00e9e du processus 15 SIGTERM Terminaison du processus 20 SIGTSTP Caract\u00e8re \u00ab susp \u00bb frapp\u00e9 depuis le clavier (frappe de \u00ab CTRL Z \u00bb) 17 SIGCHLD Processus fils termin\u00e9 Exemple \u2693\ufe0e On souhaite tuer le processus firefox et ses fils (sachant que ps donne ici dans l'ordre PPID,PID,CMD . Risque d'interblocage \u2693\ufe0e Consid\u00e9rons deux processus \\(\\mathcal{P}_1\\) et \\(\\mathcal{P}_2\\) ont tous les besoin de deux ressources, \\(\\mathcal{R}_1\\) et \\(\\mathcal{R}_2\\) . Chaque processus bloque une ressource et doit attendre d\u2019avoir acc\u00e8s \u00e0 la seconde pour se terminer et les lib\u00e9rer. Aucun des deux processus ne pourra avancer. C\u2019est l\u2019interblocage (ou deadlock en anglais) . Sans une intervention, co\u00fbteuse , du syst\u00e8me, la situation est fig\u00e9e. Un interblocage correspond \u00e0 une situation o\u00f9 les processus s'attendent mutuellement .","title":"Cours"},{"location":"NSITerm/ARSE/C7C1.html#gestion-des-ressources-par-un-se","text":"","title":"Gestion des ressources par un SE"},{"location":"NSITerm/ARSE/C7C1.html#programme","text":"Contenus Capacit\u00e9s attendues Commentaires Gestion des processus et des ressources par un syst\u00e8me d\u2019exploitation. D\u00e9crire la cr\u00e9ation d\u2019un processus, l\u2019ordonnancement de plusieurs processus par le syst\u00e8me. Mettre en \u00e9vidence le risque de l\u2019interblocage (deadlock). \u00c0 l\u2019aide d\u2019outils standard, il s\u2019agit d\u2019observer les processus actifs ou en attente sur une machine. Une pr\u00e9sentation d\u00e9branch\u00e9e de l\u2019interblocage peut \u00eatre propos\u00e9e.","title":"Programme"},{"location":"NSITerm/ARSE/C7C1.html#le-systeme-dexploitation","text":"La t\u00e2che principale d'un syst\u00e8me d'exploitation est de servir d'interm\u00e9diaire entre les applications utilisateurs et le mat\u00e9riel. Le diagramme ci-dessous d\u00e9taille quelque peu ce r\u00f4le d' interm\u00e9diaire . Les syst\u00e8mes d'exploitation les plus courants sont: Linux, Microsoft Windows, MacOS, android, etc.","title":"Le syst\u00e8me d'exploitation"},{"location":"NSITerm/ARSE/C7C1.html#du-programme-au-processus","text":"C'est au processeur que revient la t\u00e2che d'ex\u00e9cuter les instructions des programmes . Programme Un programme est une suite d'instructions statique, g\u00e9n\u00e9ralement stock\u00e9e sous forme de fichier ex\u00e9cutable, sur le disque. Lors de la lanc\u00e9e d'un programme, le noyau du syst\u00e8me d'exploitation ( kernel en anglais) lui alloue des ressources mat\u00e9rielles (m\u00e9moire, temps processeur, etc). Cette instance du programme qui s'ex\u00e9cute s'appelle un processus . \u00c0 retenir Un processus est un programme en cours d'ex\u00e9cution. C'est une entit\u00e9 dynamique contrairement au fichier stock\u00e9 sur le disque. Les processus peuvent \u00eatre cr\u00e9\u00e9s par le syst\u00e8me (pilotes entr\u00e9es/sorties, sauvegarde, d\u00e9mons, etc.) ou par l'utilisateur en lan\u00e7ant ses applications.","title":"Du programme au processus"},{"location":"NSITerm/ARSE/C7C1.html#ordonnancement-des-processus","text":"Un processus ne peut \u00e0 lui seul monopoliser le processeur qui doit \u00eatre partag\u00e9 dans le temps. C'est \u00e0 l'ordonnanceur ( scheduler en anglais) que revient cette t\u00e2che. Chaque processus va donc alterner entre des \u00e9tats d'ex\u00e9cution et des \"\u00e9tats d'attente\". Pr\u00e9cisons ces divers \u00e9tats: Un processus dans un \u00e9tat pr\u00eat ou en ex\u00e9cution est un processus actif . Le passage d'un \u00e9tat en ex\u00e9cution \u00e0 l'\u00e9tat pr\u00eat d'un processus, au bout d'un certain temps et dont l'origine est le noyau, s'appelle une pr\u00e9emption . Un processus termin\u00e9 mais non d\u00e9truit est appel\u00e9 processus zombie . Enfin, un processus en ex\u00e9cution est parfois qualifi\u00e9 d' \u00e9lu . Un exemple simplifi\u00e9 d' ordonnancement avec 3 processus. 1 2 3 4 from IPython.core.display import HTML # Peer Tube Sciences Technologies HTML ( '<iframe title=\"exemple_ordonnancement\" width=\"560\" height=\"315\" src=\"https://tube-sciences-technologies.apps.education.fr/videos/embed/0623b160-c14b-4435-a900-d7a547c3329c?start=1s\" frameborder=\"0\" allowfullscreen=\"\" sandbox=\"allow-same-origin allow-scripts allow-popups\"></iframe>' )","title":"Ordonnancement des processus"},{"location":"NSITerm/ARSE/C7C1.html#inspecter-les-processus-dune-machine","text":"Tous les syst\u00e8mes d'exploitation fournissent des outils qui permettent de visualiser les processus tournant sur une machine. Le syst\u00e8me Linux fournit: ps pour process status . Cette commande supporte de nombreuses options (voir man ps ). Parmi les plus courantes: ps -eF qui liste tous les processus en proc\u00e9dant \u00e0 un affichage \u00e9tendu sur plusieurs colonnes; ps -u xxxx o\u00f9 xxxx est un nom d'utilisateur: liste tous les processus initi\u00e9s par l'utilisateur xxxx . Malheureusement l'affichage de cette commande n'est pas rafraichi. De ce fait, on lui pr\u00e9f\u00e8re souvent la commande top qui fournit des informations d\u00e9taill\u00e9es, en temps r\u00e9el: Quelques commandes int\u00e9ressantes de top : h : affiche l'aide M : trie la liste par ordre d\u00e9croissant d'occupation m\u00e9moire. Pratique pour rep\u00e9rer les processus trop gourmands P : trie la liste par ordre d\u00e9croissant d'occupation processeur i : filtre les processus inactifs. Cela ne montre que ceux qui travaillent r\u00e9ellement. k : permet de tuer un processus - \u00e0 condition d'en \u00eatre le propri\u00e9taire. Essayez de tuer init ... V : permet d'avoir la vue arborescente sur les processus. q : permet de quitter top","title":"Inspecter les processus d'une machine"},{"location":"NSITerm/ARSE/C7C1.html#creer-des-processus","text":"","title":"Cr\u00e9er des processus"},{"location":"NSITerm/ARSE/C7C1.html#communiquer-avec-les-processus","text":"Les processus peuvent \u00eatre destinataires de signaux provenant du syst\u00e8me d'exploitation ou d'autres processus. Un processus envoie un signal \u00e0 un autre processus en appelant la primitive syst\u00e8me kill . Dans un shell, on utilisera la commande: kill -numero_de_signal pid_de_processus .","title":"Communiquer avec les processus"},{"location":"NSITerm/ARSE/C7C1.html#risque-dinterblocage","text":"Consid\u00e9rons deux processus \\(\\mathcal{P}_1\\) et \\(\\mathcal{P}_2\\) ont tous les besoin de deux ressources, \\(\\mathcal{R}_1\\) et \\(\\mathcal{R}_2\\) . Chaque processus bloque une ressource et doit attendre d\u2019avoir acc\u00e8s \u00e0 la seconde pour se terminer et les lib\u00e9rer. Aucun des deux processus ne pourra avancer. C\u2019est l\u2019interblocage (ou deadlock en anglais) . Sans une intervention, co\u00fbteuse , du syst\u00e8me, la situation est fig\u00e9e. Un interblocage correspond \u00e0 une situation o\u00f9 les processus s'attendent mutuellement .","title":"Risque d'interblocage"},{"location":"NSITerm/ARSE/C7E1.html","text":"Gestion des ressources par un SE - Exercices \u2693\ufe0e Sources Cette fiche d'exercices provient du travail de David Roche, enseignant de NSI en Haute-Savoie et disponible sur son site personnel . Exercice 1 \u2693\ufe0e D'apr\u00e8s le sujet du bac NSI 2021 1) La commande ps suivie \u00e9ventuellement de diverses options permet de lister les processus actifs ou en attente sur une machine. Sur une machine \u00e9quip\u00e9e du syst\u00e8me d\u2019exploitation GNU/Linux, la commande ps -aef permet d\u2019obtenir la sortie suivante ( extrait ) : a) Quelle est la particularit\u00e9 de l\u2019utilisateur root ? b) Quel est le processus parent du processus ayant pour PID 3383 ? Dans un bureau d\u2019architectes, on dispose de certaines ressources qui ne peuvent \u00eatre utilis\u00e9es simultan\u00e9ment par plus d\u2019un processus, comme l\u2019imprimante, la table tra\u00e7ante, le modem. Chaque programme, lorsqu\u2019il s\u2019ex\u00e9cute, demande l\u2019allocation des ressources qui lui sont n\u00e9cessaires. Lorsqu\u2019il a fini de s\u2019ex\u00e9cuter, il lib\u00e8re ses ressources. 2) On appelle \\(\\mathcal{P}_1\\) , \\(\\mathcal{P}_2\\) et \\(\\mathcal{P}_3\\) les processus associ\u00e9s respectivement aux programmes 1, 2 et 3. a) Justifier qu'une situation d'interblocage peut se produire. b) Modifier l'ordre des instructions du programme 3 pour qu'une telle situation ne puisse pas se produire. Exercice 2 \u2693\ufe0e D'apr\u00e8s le sujet du bac NSI 2021 Partie A Cette partie est un questionnaire \u00e0 choix multiples (QCM). Pour chacune des questions, une seule des quatre r\u00e9ponses est exacte. Le candidat indiquera sur sa copie le num\u00e9ro de la question et la lettre correspondant \u00e0 la r\u00e9ponse exacte. Aucune justification n\u2019est demand\u00e9e. Une r\u00e9ponse fausse ou une absence de r\u00e9ponse n\u2019enl\u00e8ve aucun point. 1) Parmi les commandes ci-dessous, laquelle permet d\u2019afficher les processus en cours d\u2019ex\u00e9cution ? 1 2 3 4 a. dir b. ps c. man d. ls 2) Quelle abr\u00e9viation d\u00e9signe l\u2019identifiant d\u2019un processus dans un syst\u00e8me d\u2019exploitation de type UNIX ? 1 2 3 4 a. PIX b. SIG c. PID d. SID 3) Comment s\u2019appelle la gestion du partage du processeur entre diff\u00e9rents processus ? 1 2 3 4 a. L\u2019interblocage b. L\u2019ordonnancement c. La planification d. La priorisation 4) Quelle commande permet d\u2019interrompre un processus dans un syst\u00e8me d\u2019exploitation de type UNIX ? 1 2 3 4 a. stop b. interrupt c. end d. kill Partie B 1) Un processeur choisit \u00e0 chaque cycle d\u2019ex\u00e9cution le processus qui doit \u00eatre ex\u00e9cut\u00e9. Le tableau ci-dessous donne pour trois processus P1, P2, P3 : la dur\u00e9e d\u2019ex\u00e9cution (en nombre de cycles), l\u2019instant d\u2019arriv\u00e9e sur le processeur (exprim\u00e9 en nombre de cycles \u00e0 partir de 0), le num\u00e9ro de priorit\u00e9. Le num\u00e9ro de priorit\u00e9 est d\u2019autant plus petit que la priorit\u00e9 est grande. On suppose qu\u2019\u00e0 chaque instant, c\u2019est le processus qui a le plus petit num\u00e9ro de priorit\u00e9 qui est ex\u00e9cut\u00e9, ce qui peut provoquer la suspension d\u2019un autre processus, lequel reprendra lorsqu\u2019il sera le plus prioritaire. Reproduire le tableau ci-dessous sur la copie et indiquer dans chacune des cases le processus ex\u00e9cut\u00e9 \u00e0 chaque cycle. 2) On suppose maintenant que les trois processus pr\u00e9c\u00e9dents s\u2019ex\u00e9cutent et utilisent une ou plusieurs ressources parmi R1, R2 et R3. Parmi les sc\u00e9narios suivants, lequel provoque un interblocage ? Justifier.","title":"Exercices"},{"location":"NSITerm/ARSE/C7E1.html#gestion-des-ressources-par-un-se-exercices","text":"Sources Cette fiche d'exercices provient du travail de David Roche, enseignant de NSI en Haute-Savoie et disponible sur son site personnel .","title":"Gestion des ressources par un SE - Exercices"},{"location":"NSITerm/ARSE/C7E1.html#exercice-1","text":"D'apr\u00e8s le sujet du bac NSI 2021 1) La commande ps suivie \u00e9ventuellement de diverses options permet de lister les processus actifs ou en attente sur une machine. Sur une machine \u00e9quip\u00e9e du syst\u00e8me d\u2019exploitation GNU/Linux, la commande ps -aef permet d\u2019obtenir la sortie suivante ( extrait ) : a) Quelle est la particularit\u00e9 de l\u2019utilisateur root ? b) Quel est le processus parent du processus ayant pour PID 3383 ? Dans un bureau d\u2019architectes, on dispose de certaines ressources qui ne peuvent \u00eatre utilis\u00e9es simultan\u00e9ment par plus d\u2019un processus, comme l\u2019imprimante, la table tra\u00e7ante, le modem. Chaque programme, lorsqu\u2019il s\u2019ex\u00e9cute, demande l\u2019allocation des ressources qui lui sont n\u00e9cessaires. Lorsqu\u2019il a fini de s\u2019ex\u00e9cuter, il lib\u00e8re ses ressources. 2) On appelle \\(\\mathcal{P}_1\\) , \\(\\mathcal{P}_2\\) et \\(\\mathcal{P}_3\\) les processus associ\u00e9s respectivement aux programmes 1, 2 et 3. a) Justifier qu'une situation d'interblocage peut se produire. b) Modifier l'ordre des instructions du programme 3 pour qu'une telle situation ne puisse pas se produire.","title":"Exercice 1"},{"location":"NSITerm/ARSE/C7E1.html#exercice-2","text":"D'apr\u00e8s le sujet du bac NSI 2021 Partie A Cette partie est un questionnaire \u00e0 choix multiples (QCM). Pour chacune des questions, une seule des quatre r\u00e9ponses est exacte. Le candidat indiquera sur sa copie le num\u00e9ro de la question et la lettre correspondant \u00e0 la r\u00e9ponse exacte. Aucune justification n\u2019est demand\u00e9e. Une r\u00e9ponse fausse ou une absence de r\u00e9ponse n\u2019enl\u00e8ve aucun point. 1) Parmi les commandes ci-dessous, laquelle permet d\u2019afficher les processus en cours d\u2019ex\u00e9cution ? 1 2 3 4 a. dir b. ps c. man d. ls 2) Quelle abr\u00e9viation d\u00e9signe l\u2019identifiant d\u2019un processus dans un syst\u00e8me d\u2019exploitation de type UNIX ? 1 2 3 4 a. PIX b. SIG c. PID d. SID 3) Comment s\u2019appelle la gestion du partage du processeur entre diff\u00e9rents processus ? 1 2 3 4 a. L\u2019interblocage b. L\u2019ordonnancement c. La planification d. La priorisation 4) Quelle commande permet d\u2019interrompre un processus dans un syst\u00e8me d\u2019exploitation de type UNIX ? 1 2 3 4 a. stop b. interrupt c. end d. kill Partie B 1) Un processeur choisit \u00e0 chaque cycle d\u2019ex\u00e9cution le processus qui doit \u00eatre ex\u00e9cut\u00e9. Le tableau ci-dessous donne pour trois processus P1, P2, P3 : la dur\u00e9e d\u2019ex\u00e9cution (en nombre de cycles), l\u2019instant d\u2019arriv\u00e9e sur le processeur (exprim\u00e9 en nombre de cycles \u00e0 partir de 0), le num\u00e9ro de priorit\u00e9. Le num\u00e9ro de priorit\u00e9 est d\u2019autant plus petit que la priorit\u00e9 est grande. On suppose qu\u2019\u00e0 chaque instant, c\u2019est le processus qui a le plus petit num\u00e9ro de priorit\u00e9 qui est ex\u00e9cut\u00e9, ce qui peut provoquer la suspension d\u2019un autre processus, lequel reprendra lorsqu\u2019il sera le plus prioritaire. Reproduire le tableau ci-dessous sur la copie et indiquer dans chacune des cases le processus ex\u00e9cut\u00e9 \u00e0 chaque cycle. 2) On suppose maintenant que les trois processus pr\u00e9c\u00e9dents s\u2019ex\u00e9cutent et utilisent une ou plusieurs ressources parmi R1, R2 et R3. Parmi les sc\u00e9narios suivants, lequel provoque un interblocage ? Justifier.","title":"Exercice 2"},{"location":"NSITerm/ARSE/C9C1.html","text":"Protocoles de routage \u2693\ufe0e Concernant ce cours Ce cours a \u00e9t\u00e9 \u00e9crit par M. Roche de l'acad\u00e9mie de Grenoble. Il a diffus\u00e9 ce document sous la licence Common Creative Zero . Qu'il en soit remerci\u00e9! Seules quelques modifications mineures, des reformulations essentiellment, ont \u00e9t\u00e9 apport\u00e9es ici. - B. DARID - nov. 2021 - Routage des paquets \u2693\ufe0e Pour bien suivre ce cours, il est n\u00e9cessaire de maitriser les bases sur les r\u00e9seaux (r\u00e9seau local, adresse IP, adresse r\u00e9seau...) N'h\u00e9sitez pas \u00e0 vous replonger dans le cours de premi\u00e8re si n\u00e9cessaire. Les r\u00e9seaux locaux peuvent \u00eatre reli\u00e9s entre eux par l'interm\u00e9diaire de routeurs. Il ne faut jamais perdre de vue qu'Internet r\u00e9sulte de l'interconnexion de r\u00e9seaux par des routeurs . Nous avons sur ce sch\u00e9ma les \u00e9l\u00e9ments suivants : 15 ordinateurs : M1 \u00e0 M15 6 commutateurs (ou switchs en anglais) : R1 \u00e0 R6 8 routeurs : A, B, C, D, E, F, G et H Comme nous l'avons d\u00e9j\u00e0 dit ci-dessus, un routeur permet de relier ensemble plusieurs r\u00e9seaux locaux. Un routeur est compos\u00e9 d\u2019un nombre plus ou moins important d\u2019interfaces r\u00e9seau ou cartes r\u00e9seau. Les routeurs les plus simples que l\u2019on puisse rencontrer permettent de relier ensemble deux r\u00e9seaux. Ils poss\u00e8dent alors 2 interfaces r\u00e9seau. Il existe cependant des routeurs capables de relier ensemble une dizaine de r\u00e9seaux. N'importe quel ordinateur peut jouer le r\u00f4le de routeur, \u00e0 partir du moment o\u00f9 il poss\u00e8de au moins 2 interfaces r\u00e9seau. On peut rencontrer aussi ( souvent ) des machines d\u00e9di\u00e9es comme par exemple celle ci-dessous de marque CISCO. Revenons maintenant \u00e0 l\u2019analyse de notre sch\u00e9ma: Nous avons 6 r\u00e9seaux locaux, chaque r\u00e9seau local poss\u00e8de son propre commutateur. Les ordinateurs M1, M2 et M3 appartiennent au r\u00e9seau local 1. Les ordinateurs M4, M5 et M6 appartiennent au r\u00e9seau local 2. Nous pouvons synth\u00e9tiser tout cela comme suit : r\u00e9seau local 1 : M1, M2 et M3 r\u00e9seau local 2 : M4, M5 et M6 r\u00e9seau local 3 : M7 et M8 r\u00e9seau local 4 : M9 et M10 r\u00e9seau local 5 : M11 et M12 r\u00e9seau local 6 : M13, M14 et M15 Les paragraphes suivants pr\u00e9sentent quelques exemples de communications entre 2 ordinateurs. M1 veut communiquer avec M3 \u2693\ufe0e Le paquet est envoy\u00e9 de M1 vers le commutateur R1. R1 constate que M3 se trouve bien dans le r\u00e9seau local 1, le paquet est donc envoy\u00e9 directement vers M3. On peut r\u00e9sumer le trajet du paquet par : \\(\\mathrm{M1\\longrightarrow R1\\longrightarrow M3}\\) M1 veut communiquer avec M6 \u2693\ufe0e Le paquet est envoy\u00e9 de M1 vers le commutateur R1. R1 \u00ab constate \u00bb que M6 n\u2019est pas sur le r\u00e9seau local 1, il envoie donc le paquet vers le routeur A. Le routeur A n'est pas connect\u00e9 directement au r\u00e9seau local R2 (r\u00e9seau local auquel appartient M6), mais il \"sait\" que le routeur B est connect\u00e9 au r\u00e9seau local 2. Le routeur A envoie le paquet vers le routeur B. Le routeur B est connect\u00e9 au r\u00e9seau local 2, il envoie le paquet au commutateur R2. Le commutateur R2 envoie le paquet \u00e0 la machine M6. \\(\\mathrm{M1 \\longrightarrow R1 \\longrightarrow Routeur\\ A \\longrightarrow Routeur\\ B \\longrightarrow R2 \\longrightarrow M6}\\) M1 veut communiquer avec M9 \u2693\ufe0e \\(\\mathrm{M1 \\longrightarrow R1 \\longrightarrow Routeur\\ A \\longrightarrow Routeur\\ B \\longrightarrow Routeur\\ D \\longrightarrow Routeur\\ E \\longrightarrow R4 \\longrightarrow M9}\\) On constate que le chemin donn\u00e9 ci-dessus n\u2019est pas l\u2019unique possibilit\u00e9, en effet on aurait pu aussi avoir : \\(\\mathrm{M1\\ \\longrightarrow R1 \\longrightarrow Routeur A \\longrightarrow Routeur\\ H \\longrightarrow Routeur\\ F \\longrightarrow Routeur\\ E \\longrightarrow R4 \\longrightarrow M9}\\) Il est tr\u00e8s important de bien comprendre qu\u2019il existe souvent plusieurs chemins possibles pour relier 2 ordinateurs . M13 veut communiquer avec M9 \u2693\ufe0e Nous pouvons avoir: \\(\\mathrm{M13 \\longrightarrow R6 \\longrightarrow Routeur\\ G \\longrightarrow Routeur\\ F \\longrightarrow Routeur\\ E \\longrightarrow R4 \\longrightarrow M9}\\) ou encore: \\(\\mathrm{M13 \\longrightarrow R6 \\longrightarrow Routeur\\ G \\longrightarrow Routeur\\ F \\longrightarrow Routeur\\ H \\longrightarrow Routeur\\ C \\longrightarrow Routeur\\ D \\longrightarrow Routeur\\ E \\longrightarrow R4 \\longrightarrow M9}\\) On pourrait penser que le chemin \\(\\mathrm{Routeur\\ F \\longrightarrow Routeur\\ E}\\) est plus rapide et donc pr\u00e9f\u00e9rable au chemin \\(\\mathrm{Routeur\\ F \\longrightarrow Routeur\\ H}\\) . Cela est sans doute vrai, mais imaginez qu\u2019il y ait un probl\u00e8me technique entre le Routeur F et le Routeur E, l\u2019existence du chemin \\(\\mathrm{Routeur\\ F \\longrightarrow Routeur\\ H}\\) permettra tout de m\u00eame d\u2019\u00e9tablir une communication entre M13 et M9. Comment les commutateurs ou les routeurs proc\u00e8dent pour amener les paquets \u00e0 bon port? \u2693\ufe0e Nous avons vu l'ann\u00e9e derni\u00e8re que 2 machines appartenant au m\u00eame r\u00e9seau local doivent avoir la m\u00eame adresse r\u00e9seau. Dans le sch\u00e9ma ci-dessus les machines M1 et M4 n'ont pas la m\u00eame adresse r\u00e9seau ( elles n'appartiennent pas au m\u00eame r\u00e9seau local ). Si M1 cherche \u00e0 entrer en communication avec M4, le commutateur R1 va constater que M4 n'appartient pas au r\u00e9seau local, gr\u00e2ce \u00e0 son adresse IP. Il va envoyer le paquet de donn\u00e9es vers le routeur A. Cela sera alors au routeur A de g\u00e9rer le probl\u00e8me : comment atteindre M4 ? Chaque routeur poss\u00e8de une table de routage. Indication Une table de routage peut \u00eatre vue comme un tableau qui va contenir des informations permettant au routeur d'envoyer le paquet de donn\u00e9es dans la bonne direction . Soit le sch\u00e9ma suivant : Sur le sch\u00e9ma ci-dessus, le choix des adresses IP des machines est tout \u00e0 fait arbitraire. En revanche, vous pouvez v\u00e9rifier que tout est coh\u00e9rent: adresses machines avec adresses r\u00e9seaux. Les adresses r\u00e9seaux sont not\u00e9es \u00e0 c\u00f4t\u00e9 des diff\u00e9rents commutateurs. Par exemple le commutateur R1 est utilis\u00e9 dans le r\u00e9seau d'adresse 172.168.0.0/16. Nous avons deux routeurs: le routeur A qui poss\u00e8de 3 interfaces r\u00e9seau que l'on nomme eth0, eth1 et eth2 (les adresses IP li\u00e9es \u00e0 ces interfaces r\u00e9seau sont 172.168.255.254/16 - eth0 -, 172.169.255.254/16 - eth2 - et 192.168.7.1/24 - eth1 -; le routeur G qui poss\u00e8de 2 interfaces r\u00e9seau que l'on nomme eth0 et eth1 (les adresses IP li\u00e9es \u00e0 ces interfaces r\u00e9seau sont 10.255.255.254/8 - eth0 - et 192.168.7.2/24 - eth1 -. Les informations pr\u00e9sentes dans la table de routage de A sont: le routeur A est directement reli\u00e9 au r\u00e9seau 172.168.0.0/16 par l'interm\u00e9diaire de son interface eth0 le routeur A est directement reli\u00e9 au r\u00e9seau 172.169.0.0/16 par l'interm\u00e9diaire de son interface eth2 le routeur A est directement reli\u00e9 au r\u00e9seau 192.168.7.0/24 par l'interm\u00e9diaire de son interface eth1 (le r\u00e9seau 192.168.7.0/24 est un peu particulier car il est uniquement compos\u00e9 des routeurs A et G) le routeur A n'est pas directement reli\u00e9 au r\u00e9seau 10.0.0.0/8 mais par contre il \"sait\" que les paquets \u00e0 destination de ce r\u00e9seau doivent \u00eatre envoy\u00e9 \u00e0 la machine d'adresse IP 192.168.7.2/24 (c'est \u00e0 dire le routeur G qui lui est directement reli\u00e9 au r\u00e9seau 10.0.0.0/8) On peut r\u00e9sumer tout cela avec le tableau suivant qui est une table de routage simplifi\u00e9e de A: r\u00e9seau moyen de l'atteindre m\u00e9trique 172.168.0.0/16 eth0 0 192.168.7.0/24 eth1 0 172.169.0.0/16 eth2 0 10.0.0.0/8 192.168.7.2/24 1 M\u00e9trique Dans un protocole de routage, la m\u00e9trique est une mesure de la \u00ab distance \u00bb qui s\u00e9pare un routeur d'un r\u00e9seau de destination. Elle peut correspondre: au nombre de sauts IP n\u00e9cessaires pour atteindre le r\u00e9seau destination, comme dans RIP; \u00e0 un co\u00fbt num\u00e9rique qui d\u00e9pend de la bande passante des liens franchis, comme dans OSPF; au r\u00e9sultat d'un calcul plus complexe, qui tient compte de la charge, du d\u00e9lai, du MTU, etc. Source: wikipedia M\u00eame si dans les v\u00e9ritables tables de routage on utilise exclusivement les adresses IP, on pourra, dans le cadre de ce cours, utiliser les noms \u00e0 la place des adresses IP. On dira pour le sch\u00e9ma ci-dessus que: M1, M2 et M3 appartiennent au r\u00e9seau R1; M4, M5 et M6 appartiennent au r\u00e9seau R2; M7 et M8 appartiennent au r\u00e9seau R3. On aura alors la table de routage \u00e9crit de cette fa\u00e7on : r\u00e9seau moyen de l'atteindre m\u00e9trique r\u00e9seau R1 eth0 0 r\u00e9seau routeur G eth1 0 r\u00e9seau R3 eth2 0 r\u00e9seau R2 routeur G 1 On peut traduire ce tableau par : pour atteindre le r\u00e9seau R1, on doit \"sortir\" du routeur par eth0 (le r\u00e9seau R1 est directement reli\u00e9 au routeur A) pour atteindre le routeur G, on doit \"sortir\" du routeur par eth1 (le routeur G est directement reli\u00e9 au routeur A) pour atteindre le r\u00e9seau R3, on doit \"sortir\" du routeur par eth2 (le r\u00e9seau R3 est directement reli\u00e9 au routeur A) pour atteindre le r\u00e9seau R2, on doit \"envoyer\" le paquet de donn\u00e9es vers le routeur G qui \"saura quoi faire avec\" (le r\u00e9seau R2 n'est pas directement reli\u00e9 au routeur A) Dans des r\u00e9seaux tr\u00e8s complexes, chaque routeur aura une table de routage qui comportera de tr\u00e8s nombreuses lignes (des dizaines voir des centaines...). En effet chaque routeur devra savoir vers quelle interface r\u00e9seau il faudra envoyer un paquet afin qu'il puisse atteindre sa destination. On peut trouver dans une table de routage plusieurs lignes pour une m\u00eame destination. Il peut en effet, \u00e0 partir d'un routeur donn\u00e9, exister plusieurs chemins possibles pour atteindre la destination. Dans le cas o\u00f9 il existe plusieurs chemins possibles pour atteindre une m\u00eame destination, le routeur va choisir le chemin le plus court . Pour choisir ce chemin le plus court, le routeur va utiliser la m\u00e9trique: plus la valeur de la m\u00e9trique est petite, plus le chemin pour atteindre le r\u00e9seau est court . Un r\u00e9seau directement li\u00e9 \u00e0 un routeur aura une m\u00e9trique de 0. Comment un routeur arrive \u00e0 remplir sa table de routage? \u2693\ufe0e La r\u00e9ponse est simple pour les r\u00e9seaux qui sont directement reli\u00e9s au routeur c'est-\u00e0-dire o\u00f9 la m\u00e9trique \u00e9gal \u00e0 0. Mais qu'en est-il pour les autres r\u00e9seaux (m\u00e9trique sup\u00e9rieure \u00e0 z\u00e9ro)? Il existe 2 m\u00e9thodes : le routage statique : chaque ligne doit \u00eatre renseign\u00e9e \u00e0 la main . Cette solution est seulement envisageable pour des tr\u00e8s petits r\u00e9seaux de r\u00e9seaux; le routage dynamique : tout se fait automatiquement , on utilise des protocoles qui vont permettre de d\u00e9couvrir les diff\u00e9rentes routes automatiquement afin de pouvoir remplir la table de routage tout aussi automatiquement. Protocoles de routage \u2693\ufe0e Un r\u00e9seau de r\u00e9seaux comportant des routeurs peut \u00eatre mod\u00e9lis\u00e9 par un graphe ( le cours sur les graphes sera abord\u00e9 apr\u00e8s les \u00e9preuves de mars 2022 ). Chaque routeur est un sommet et chaque liaison entre les routeurs ou entre un routeur et un commutateur est une ar\u00eate. Les algorithmes utilis\u00e9s par les protocoles de routages sont donc des algorithmes issus de la th\u00e9orie de graphes. On trouve plusieurs protocoles de routage, nous allons en \u00e9tudier deux: RIP ( R outing I nformation P rotocol); OSPF ( O pen S hortest P ath F irst). Le protocole RIP \u2693\ufe0e Au d\u00e9part, les tables de routage contiennent uniquement les r\u00e9seaux qui sont directement reli\u00e9s au routeur. Dans l'exemple ci-dessus, \u00e0 l'origine, la table de routage de A contient uniquement les r\u00e9seaux 172.168.0.0/16, 192.168.7.0/24 et 172.169.0.0/16. Ensuite: Chaque routeur envoie p\u00e9riodiquement (toutes les 30 secondes) \u00e0 tous ses voisins (routeurs adjacents) un message. Ce message contient la liste de tous les r\u00e9seaux qu'il connait (dans l'exemple ci-dessus, le routeur A envoie un message au routeur G avec les informations suivantes : \"je connais les r\u00e9seaux 172.168.0.0/16, 192.168.7.0/24 et 172.169.0.0/16\"). De la m\u00eame mani\u00e8re G envoie un message \u00e0 A avec les informations suivantes : \"je connais les r\u00e9seaux 192.168.7.0/24 et 10.0.0.0/8\"). \u00c0 la fin de cet \u00e9change, les routeurs mettent \u00e0 jour leur table de routage avec les informations re\u00e7ues (dans l'exemple ci-dessus, le routeur A va pouvoir ajouter le r\u00e9seau 10.0.0.0/8 \u00e0 sa table de routage: le routeur A \"sait\" maintenant qu'un paquet \u00e0 destination du r\u00e9seau 10.0.0.0/8 devra transiter par le routeur G). Pour renseigner la colonne \"m\u00e9trique\", le protocole utilise le nombre de sauts, autrement dit, le nombre de routeurs qui doivent \u00eatre travers\u00e9s pour atteindre le r\u00e9seau cible (dans la table de routage de A, on aura donc une m\u00e9trique de 1 pour le r\u00e9seau 10.0.0.0/8 car depuis A il est n\u00e9cessaire de traverser le routeur G pour atteindre le r\u00e9seau 10.0.0.0/8) Le protocole RIP s'appuie sur l'algorithme de Bellman-Ford , algorithme qui permet de calculer les plus courts chemins dans un graphe. Prenons un exemple avec le r\u00e9seau suivant : \u00c9tablissons la table de routage du routeur A en nous basant sur le protocole RIP : le routeur A est directement reli\u00e9 au r\u00e9seau R1 (adresse r\u00e9seau 172.18.0.0/16) par eth0. le routeur A est directement reli\u00e9 au routeur B (r\u00e9seau 192.168.1.0/24) par eth1 le routeur A est directement reli\u00e9 au routeur C (r\u00e9seau 192.168.2.0/24) par eth2 le routeur A n'est pas directement reli\u00e9 au r\u00e9seau R2 (adresse r\u00e9seau 172.17.0.0/16) mais par contre il \"sait\" qu'il peut l'atteindre soit en passant par le routeur C (adresse 192.168.2.2/24) en une \u00e9tape ou soit en passant par le routeur B (adresse 192.168.1.2/24) en deux \u00e9tapes (B et C) le routeur A n'est pas directement reli\u00e9 au r\u00e9seau R3 (adresse r\u00e9seau 172.16.0.0/16) mais il \"sait\" qu'il peut l'atteindre soit en passant par le routeur B (192.168.1.2/24) en une \u00e9tape ou soit en passant par le routeur C (192.168.2.2/24) en deux \u00e9tapes (C et B) Ce qui nous donne donc la table de routage suivante : r\u00e9seau moyen de l'atteindre m\u00e9trique 172.18.0.0/16 eth0 0 192.168.1.0/24 eth1 0 192.168.2.0/24 eth2 0 172.17.0.0/16 192.168.2.2/24 1 172.17.0.0/16 192.168.1.2/24 2 172.16.0.0/16 192.168.1.2/24 1 172.16.0.0/16 192.168.2.2/24 2 Comme d\u00e9j\u00e0 vu plus haut, on peut aussi donner la table de routage de mani\u00e8re simplifi\u00e9e, en utilisant les noms des \u00e9l\u00e9ments \u00e0 la place des adresses IP (mais c'est aussi moins \"r\u00e9aliste\") : r\u00e9seau moyen de l'atteindre m\u00e9trique R1 eth0 0 R\u00e9seau Routeur B eth1 0 R\u00e9seau Routeur C eth2 0 R2 Routeur C 1 R2 Routeur B 2 R3 Routeur B 1 R3 Routeur C 2 pour un paquet de donn\u00e9es allant de R1 \u00e0 R2, la route privil\u00e9gi\u00e9e sera donc : R1 -> Routeur A -> Routeur C -> R2. Mais en cas de probl\u00e8me (panne notamment) la route R1 -> Routeur A -> Routeur B -> Routeur C -> R2 sera possible. pour un paquet de donn\u00e9es allant de R1 \u00e0 R3, la route privil\u00e9gi\u00e9e sera donc : R1 -> Routeur A -> Routeur B -> R3. Mais en cas de probl\u00e8me la route R1 -> Routeur A -> Routeur C -> Routeur B -> R3 sera possible. Dans certains exercices, pour le calcul de la m\u00e9trique, on compte le nombre total de routeurs travers\u00e9s (y compris, dans notre exemple le routeur A), cela nous donne donc un d\u00e9calage de un, et on obtient alors : r\u00e9seau moyen de l'atteindre m\u00e9trique R1 eth0 0 R\u00e9seau Routeur B eth1 0 R\u00e9seau Routeur C eth2 0 R2 Routeur C 2 R2 Routeur B 3 R3 Routeur B 2 R3 Routeur C 3 Comme c'est juste une histoire de convention, il suffit de se mettre d'accord au d\u00e9part sur la convention utilis\u00e9e. Le protocole RIP est aujourd'hui tr\u00e8s rarement utilis\u00e9 dans les grandes infrastructures. En effet, il g\u00e9n\u00e8re, du fait de l'envoi p\u00e9riodique de message, un trafic r\u00e9seau important (surtout si les tables de routages contiennent beaucoup d'entr\u00e9es). De plus, le protocole RIP est limit\u00e9 \u00e0 15 sauts (on traverse au maximum 15 routeurs pour atteindre sa destination). On lui pr\u00e9f\u00e8re donc souvent le protocole OSPF. Le protocole OSPF \u2693\ufe0e Comme dans le cas du protocole RIP, nous allons retrouver des \u00e9changes d'informations entre les routeurs (ces \u00e9changes sont plus \"intelligents\" dans le cas d'OSPF, ils permettent donc de r\u00e9duire l'occupation du r\u00e9seau). Nous n'allons pas rentrer dans les d\u00e9tails de ces \u00e9changes et nous allons principalement insister sur la m\u00e9trique produite par OSPF. Le protocole OSPF, au contraire de RIP, n'utilise pas le \"nombre de sauts n\u00e9cessaire\" pour \u00e9tablir la m\u00e9trique, mais la notion de \"co\u00fbt des routes\". Dans les messages \u00e9chang\u00e9s par les routeurs on trouve le co\u00fbt de chaque liaison (plus le co\u00fbt est grand et moins la liaison est int\u00e9ressante). Quand on parle de \"liaison\" on parle simplement du c\u00e2ble qui relie un routeur \u00e0 un autre routeur. Le protocole OSPF permet de connaitre le co\u00fbt de chaque liaison entre routeurs, et donc, de connaitre le co\u00fbt d'une route (en ajoutant le co\u00fbt de chaque liaison travers\u00e9e). On notera que pour effectuer ces calculs, le protocole OSPF s'appuie sur l'algorithme de Dijkstra (revoir si n\u00e9cessaire le cours Algorithmes sur les graphes) . Mais sur quoi repose cette notion de co\u00fbt ? La notion de co\u00fbt est directement li\u00e9e au d\u00e9bit des liaisons entre les routeurs. Le d\u00e9bit correspond au nombre de bits de donn\u00e9es qu'il est possible de faire passer dans un r\u00e9seau par seconde. Le d\u00e9bit est donc donn\u00e9 en bits par seconde (bps), mais on trouve souvent des kilo bits par seconde (kbps) ou encore des m\u00e9ga bits par seconde (Mbps) => 1 kbps = 1000 bps et 1 Mbps = 1000 kbps. Connaissant le d\u00e9bit d'une liaison, il est possible de calculer le co\u00fbt d'une liaison \u00e0 l'aide de la formule suivante : \\(co\u00fbt = \\frac{10^8}{d\u00e9bit}\\) dans la formule ci-dessus le d\u00e9bit est en bits par seconde Pour obtenir la m\u00e9trique d'une route, il suffit d'additionner les co\u00fbts de chaque liaison (par exemple si pour aller d'un r\u00e9seau 1 \u00e0 un r\u00e9seau 2 on doit traverser une liaison de co\u00fbt 1, puis une liaison de co\u00fbt 10 et enfin une liaison de co\u00fbt 1, la m\u00e9trique de cette route sera de 1 + 10 + 1 = 12) \u00c9videmment, comme dans le cas de RIP, les routes ayant les m\u00e9triques les plus faibles sont privil\u00e9gi\u00e9es. Reprenons l'exemple ci-dessus : Prenons un exemple avec les d\u00e9bits suivants : liaison routeur A - routeur B : 1 Mbps liaison routeur A - routeur C : 10 Mbps liaison routeur C - routeur B : 10 Mbps Commen\u00e7ons par calculer les co\u00fbts des liaisons inter-routeurs liaison routeur A - routeur B : 10 8 /10 6 = 100 liaison routeur A - routeur C : 10 8 /10 7 = 10 liaison routeur C - routeur B : 10 8 /10 7 = 10 pour faire : Routeur A -> Routeur C le co\u00fbt est de 10 Routeur A -> Routeur B le co\u00fbt est de 100 Routeur A -> Routeur C -> Routeur B le co\u00fbt est 10+10=20 Routeur A -> Routeur B -> Routeur C le co\u00fbt est 100+10=110 Ce qui nous donne la table de routage suivante : r\u00e9seau moyen de l'atteindre m\u00e9trique 172.18.0.0/16 eth0 0 192.168.1.0/24 eth1 0 192.168.2.0/24 eth2 0 172.17.0.0/16 192.168.2.2/24 10 172.17.0.0/16 192.168.1.2/24 110 172.16.0.0/16 192.168.1.2/24 100 172.16.0.0/16 192.168.2.2/24 20 ou encore en se passant des adresses IP : r\u00e9seau moyen de l'atteindre m\u00e9trique R1 eth0 0 R\u00e9seau Routeur B eth1 0 R\u00e9seau Routeur C eth2 0 R2 Routeur C 10 R2 Routeur B 110 R3 Routeur B 100 R3 Routeur C 20 pour un paquet de donn\u00e9es allant de R1 \u00e0 R2, la route privil\u00e9gi\u00e9e sera donc : R1 -> Routeur A -> Routeur C -> R2. pour un paquet de donn\u00e9es allant de R1 \u00e0 R3, la route privil\u00e9gi\u00e9e sera donc : R1 -> Routeur A -> Routeur C -> Routeur B -> R3 (on constate une diff\u00e9rence avec ce que nous avions trouv\u00e9 avec le protocole RIP).","title":"Cours 1: Routage"},{"location":"NSITerm/ARSE/C9C1.html#protocoles-de-routage","text":"Concernant ce cours Ce cours a \u00e9t\u00e9 \u00e9crit par M. Roche de l'acad\u00e9mie de Grenoble. Il a diffus\u00e9 ce document sous la licence Common Creative Zero . Qu'il en soit remerci\u00e9! Seules quelques modifications mineures, des reformulations essentiellment, ont \u00e9t\u00e9 apport\u00e9es ici. - B. DARID - nov. 2021 -","title":"Protocoles de routage"},{"location":"NSITerm/ARSE/C9C1.html#routage-des-paquets","text":"Pour bien suivre ce cours, il est n\u00e9cessaire de maitriser les bases sur les r\u00e9seaux (r\u00e9seau local, adresse IP, adresse r\u00e9seau...) N'h\u00e9sitez pas \u00e0 vous replonger dans le cours de premi\u00e8re si n\u00e9cessaire. Les r\u00e9seaux locaux peuvent \u00eatre reli\u00e9s entre eux par l'interm\u00e9diaire de routeurs. Il ne faut jamais perdre de vue qu'Internet r\u00e9sulte de l'interconnexion de r\u00e9seaux par des routeurs . Nous avons sur ce sch\u00e9ma les \u00e9l\u00e9ments suivants : 15 ordinateurs : M1 \u00e0 M15 6 commutateurs (ou switchs en anglais) : R1 \u00e0 R6 8 routeurs : A, B, C, D, E, F, G et H Comme nous l'avons d\u00e9j\u00e0 dit ci-dessus, un routeur permet de relier ensemble plusieurs r\u00e9seaux locaux. Un routeur est compos\u00e9 d\u2019un nombre plus ou moins important d\u2019interfaces r\u00e9seau ou cartes r\u00e9seau. Les routeurs les plus simples que l\u2019on puisse rencontrer permettent de relier ensemble deux r\u00e9seaux. Ils poss\u00e8dent alors 2 interfaces r\u00e9seau. Il existe cependant des routeurs capables de relier ensemble une dizaine de r\u00e9seaux. N'importe quel ordinateur peut jouer le r\u00f4le de routeur, \u00e0 partir du moment o\u00f9 il poss\u00e8de au moins 2 interfaces r\u00e9seau. On peut rencontrer aussi ( souvent ) des machines d\u00e9di\u00e9es comme par exemple celle ci-dessous de marque CISCO. Revenons maintenant \u00e0 l\u2019analyse de notre sch\u00e9ma: Nous avons 6 r\u00e9seaux locaux, chaque r\u00e9seau local poss\u00e8de son propre commutateur. Les ordinateurs M1, M2 et M3 appartiennent au r\u00e9seau local 1. Les ordinateurs M4, M5 et M6 appartiennent au r\u00e9seau local 2. Nous pouvons synth\u00e9tiser tout cela comme suit : r\u00e9seau local 1 : M1, M2 et M3 r\u00e9seau local 2 : M4, M5 et M6 r\u00e9seau local 3 : M7 et M8 r\u00e9seau local 4 : M9 et M10 r\u00e9seau local 5 : M11 et M12 r\u00e9seau local 6 : M13, M14 et M15 Les paragraphes suivants pr\u00e9sentent quelques exemples de communications entre 2 ordinateurs.","title":"Routage des paquets"},{"location":"NSITerm/ARSE/C9C1.html#protocoles-de-routage_1","text":"Un r\u00e9seau de r\u00e9seaux comportant des routeurs peut \u00eatre mod\u00e9lis\u00e9 par un graphe ( le cours sur les graphes sera abord\u00e9 apr\u00e8s les \u00e9preuves de mars 2022 ). Chaque routeur est un sommet et chaque liaison entre les routeurs ou entre un routeur et un commutateur est une ar\u00eate. Les algorithmes utilis\u00e9s par les protocoles de routages sont donc des algorithmes issus de la th\u00e9orie de graphes. On trouve plusieurs protocoles de routage, nous allons en \u00e9tudier deux: RIP ( R outing I nformation P rotocol); OSPF ( O pen S hortest P ath F irst).","title":"Protocoles de routage"},{"location":"NSITerm/ARSE/c11e.html","text":"Exercices protocole de routage - D. Roche \u2693\ufe0e exercice 11.1 \u2693\ufe0e Le r\u00e9seau sch\u00e9matis\u00e9 ci-dessous est constitu\u00e9 de 4 r\u00e9seaux locaux (switch+ordinateurs) : R1, R2, R3 et R4, et de 4 routeurs A, B, C et D. On donne les d\u00e9bits (bandes passantes) de la connexion entre chaque routeur : A-B : 100 Mbps A-D : 1000 Mbps B-C : 10 Mbps C-D : 10 Mbps On propose ci-dessous une table de routage pour le routeur A : 1) Compl\u00e9tez la colonne \u201cm\u00e9trique RIP\u201d du tableau ci-dessus. 2) Compl\u00e9tez la colonne \u201cm\u00e9trique OSPF\u201d du tableau ci-dessus. 3) Un ordinateur appartenant au r\u00e9seau local R1 envoie un paquet de donn\u00e9es \u00e0 un ordinateur appartenant au r\u00e9seau local R2. a) Donnez le chemin suivi par ce paquet de donn\u00e9es si le routeur A utilise le protocole de routage RIP. Justifiez votre r\u00e9ponse. b) Donnez le chemin suivi par ce paquet de donn\u00e9es si le routeur A utilise le protocole de routage OSPF. Justifiez votre r\u00e9ponse. 4) Le routeur D est en panne. Un ordinateur appartenant au r\u00e9seau local R1 envoie un paquet de donn\u00e9es \u00e0 un ordinateur appartenant au r\u00e9seau local R3. Donnez le chemin suivi par ce paquet de donn\u00e9es si le routeur A utilise le protocole de routage OSPF. Justifiez votre r\u00e9ponse. 5) La liaison entre 2 routeurs a un co\u00fbt de 0,2, calculez le d\u00e9bit de cette liaison en bps puis en Mbps. exercice 11.2 \u2693\ufe0e Cet exercice est tir\u00e9 du sujet 0 du bac NSI. On consid\u00e8re un r\u00e9seau compos\u00e9 de plusieurs routeurs reli\u00e9s de la fa\u00e7on suivante : Le protocole RIP \u2693\ufe0e Le protocole RIP permet de construire les tables de routage des diff\u00e9rents routeurs, en indiquant pour chaque routeur la distance, en nombre de sauts, qui le s\u00e9pare d\u2019un autre routeur. Pour le r\u00e9seau ci-dessus, on dispose des tables de routage suivantes : Question 1 1) Le routeur A doit transmettre un message au routeur G, en effectuant un nombre minimal de sauts. D\u00e9terminer le trajet parcouru. 2) D\u00e9terminer une table de routage possible pour le routeur G obtenu \u00e0 l\u2019aide du protocole RIP. Question 2 Le routeur C tombe en panne. Reconstruire la table de routage du routeur A en suivant le protocole RIP. Le protocole OSPF \u2693\ufe0e Contrairement au protocole RIP, l\u2019objectif n\u2019est plus de minimiser le nombre de routeurs travers\u00e9s par un paquet. La notion de distance utilis\u00e9e dans le protocole OSPF est uniquement li\u00e9e aux co\u00fbts des liaisons. L\u2019objectif est alors de minimiser la somme des co\u00fbts des liaisons travers\u00e9es. On a rajout\u00e9 sur le graphe repr\u00e9sentant le r\u00e9seau pr\u00e9c\u00e9dent les diff\u00e9rents d\u00e9bits des liaisons. On rappelle que 1 Gb/s = 1 000 Mb/s = 10 9 bits/s. Question 3 1) V\u00e9rifier que le co\u00fbt de la liaison entre les routeurs A et B est 0,01. 2) La liaison entre le routeur B et D a un co\u00fbt de 5. Quel est le d\u00e9bit de cette liaison ? Question 4 Le routeur A doit transmettre un message au routeur G, en empruntant le chemin dont la somme des co\u00fbts sera la plus petite possible. D\u00e9terminer le chemin parcouru. On indiquera le raisonnement utilis\u00e9. exercice 11.3 \u2693\ufe0e Cet exercice est tir\u00e9 du sujet 2021 du bac NSI. On repr\u00e9sente ci-dessous un r\u00e9seau dans lequel R1, R2, R3, R4, R5 et R6 sont des routeurs. Le r\u00e9seau local L1 est reli\u00e9 au routeur R1 et le r\u00e9seau local L2 au routeur R6. Rappels et notations : Dans cet exercice, les adresses IP sont compos\u00e9es de 4 octets, soit 32 bits. Elles sont not\u00e9es X1.X2.X3.X4, o\u00f9 X1, X2, X3 et X4 sont les valeurs des 4 octets, convertis en notation d\u00e9cimale. La notation X1.X2.X3.X4/n signifie que les n premiers bits de poids forts de l\u2019adresse IP repr\u00e9sentent la partie \u00ab r\u00e9seau \u00bb, les bits suivants repr\u00e9sentent la partie \u00ab h\u00f4te \u00bb. Toutes les adresses des h\u00f4tes connect\u00e9s \u00e0 un r\u00e9seau local ont la m\u00eame partie r\u00e9seau et peuvent donc communiquer directement. L\u2019adresse IP dont tous les bits de la partie \u00ab h\u00f4te \u00bb sont \u00e0 0 est appel\u00e9e \u00ab adresse du r\u00e9seau \u00bb. On donne \u00e9galement des extraits de la table de routage des routeurs R1 \u00e0 R5 dans le tableau suivant. 1) Un paquet part du r\u00e9seau local L1 \u00e0 destination du r\u00e9seau local L2. a) En utilisant l\u2019extrait de la table de routage de R1, vers quel routeur R1 envoie-t-il ce paquet : R2 ou R3 ? Justifier. b) A l\u2019aide des extraits de tables de routage ci-dessus, nommer les routeurs travers\u00e9s par ce paquet, lorsqu\u2019il va du r\u00e9seau L1 au r\u00e9seau L2. 2) La liaison entre R1 et R2 est rompue. a) Sachant que ce r\u00e9seau utilise le protocole RIP (distance en nombre de sauts), donner l\u2019un des deux chemins possibles que pourra suivre un paquet allant de L1 vers L2. b) Dans les extraits de tables de routage ci-dessus, pour le chemin de la question 2.a, quelle(s) ligne(s) sera (seront) modifi\u00e9e(s) ? 3) On a r\u00e9tabli la liaison entre R1 et R2. Par ailleurs, pour tenir compte du d\u00e9bit des liaisons, on d\u00e9cide d\u2019utiliser le protocole OSPF (distance li\u00e9e au co\u00fbt minimal des liaisons) pour effectuer le routage. Le co\u00fbt des liaisons entre les routeurs est donn\u00e9 par le tableau suivant : a) Sachant que la bande passante (d\u00e9bit) de la liaison R2-R3 est de 10 Mbps, calculer le co\u00fbt correspondant. b) D\u00e9terminer le chemin parcouru par un paquet partant du r\u00e9seau L1 et arrivant au r\u00e9seau L2, en utilisant le protocole OSPF. c) Indiquer pour quel(s) routeur(s) l\u2019extrait de la table de routage sera modifi\u00e9 pour un paquet \u00e0 destination de L2, avec la m\u00e9trique OSPF.","title":"Exercices 1"},{"location":"NSITerm/ARSE/c11e.html#exercices-protocole-de-routage-d-roche","text":"","title":"Exercices protocole de routage - D. Roche"},{"location":"NSITerm/BDD/C8A1.html","text":"Activit\u00e9 de d\u00e9couverte: insuffisance des structures de donn\u00e9es plates \u2693\ufe0e Certains d'entre vous ont probablement d\u00e9j\u00e0 entendu parler des bases de donn\u00e9es. Dans le cadre de cette activit\u00e9, oublions, dans un premier temps, toutes nos connaissances et nos r\u00e9flexions sur le sujet . Contexte \u2693\ufe0e Supposons que nous ayons \u00e0 d\u00e9velopper une application de gestion d'une biblioth\u00e8que. Tous les livres de la biblioth\u00e8que poss\u00e8dent un num\u00e9ro d'exemplaire , un titre , un ou plusieurs auteurs et un \u00e9diteur . Le num\u00e9ro d'exemplaire est un identifiant unique permettant de diff\u00e9rencier les exemplaires d'un m\u00eame livre. Lorsqu'une personne emprunte un livre, il faut m\u00e9moriser son nom , son pr\u00e9nom , son num\u00e9ro de t\u00e9l\u00e9phone , son adresse , la date de l'emprunt et la date de retour une fois ce dernier r\u00e9alis\u00e9. Toutes les informations doivent \u00eatre conserv\u00e9es pour garder un historique des emprunts. Une solution simple et na\u00efve... \u2693\ufe0e Notre application va devoir stocker toutes les informations pr\u00e9cis\u00e9es ci-dessus de mani\u00e8re persistante. Nous choisissons donc d'utiliser un fichier texte de type csv pour enregistrer les donn\u00e9es. Pour cela, nous adoptons na\u00efvement la solution simple et naturelle suivante : \u2014 Nous cr\u00e9ons un fichier texte csv comportant \u00e0 l'origine une ligne par livre. \u2014 Dans chaque ligne, nous renseignons les informations: idEx ( num\u00e9ro d'exemplaire ), Titre , Auteur et \u00c9diteur , s\u00e9par\u00e9es par une virgule. \u2014 Quand une personne emprunte un livre, nous compl\u00e9tons la ligne du livre emprunt\u00e9 par les champs: Nom , Pr\u00e9nom , T\u00e9l\u00e9phone , Adresse et Date-emprunt toujours en s\u00e9parant ces informations par une virgule. \u2014 Lorsqu'une personne ram\u00e8ne un livre, il suffit de compl\u00e9ter le dernier champ Date-retour sur la ligne du livre emprunt\u00e9. \u2014 Quand un livre est emprunt\u00e9 une nouvelle fois, nous ajoutons une nouvelle ligne avec toutes les informations concernant le livre et la personne qui l'emprunte. Bien entendu, le biblioth\u00e9caire ne ressaisit pas tout, l'application va chercher la plupart de ces informations dans le fichier. Le fichier en question peut donc \u00eatre per\u00e7u comme un tableau de cha\u00eenes de caract\u00e8res. Nous parlerons \u00e9galement de table plut\u00f4t que de tableau ou de fichier. \u00c0 faire Ouvrir le fichier biblio.csv pour avoir une id\u00e9e plus pr\u00e9cise du contenu. idEx Titre Auteur Editeur Nom Prenom tel Date-emp Date-ret 1 La volont\u00e9 de puissance Nietzsche Gallimard 2 Espoir-du-cerf O Scott Card Deno\u00ebl Michel Tom 20/10/08 07/11/08 3 Vendredi ou la vie sauvage M. Tournier Poche Moreau J. Batiste 02/10/09 4 \u00c9l\u00e9vation D. Brin J\u2019AI LU Laurent Camille 02/04/06 20/04/06 5 Vendredi ou la vie sauvage M. Tournier Poche Moreau J. Batiste 02/10/09 6 Vendredi ou la vie sauvage M. Tournier Poche 7 Ainsi parlait Zarathoustra F. Nietzsche Poche 8 Humain trop humain F. NIETZSCHE POCHE 9 Les ma\u00eetres chanteurs O.S. Card Deno\u00ebl Moreau J. Batiste 08/10/09 10 Les ma\u00eetres chanteurs O.S. Card Denoel 11 Les ma\u00eetres chanteurs O.S. Card Deno\u00ebl 12 St-Exupery Terre des hommes F. Brin Broch\u00e9 13 R\u00e9demption Brin J\u2019ai lu 2 Espoir-du-cerf O Scott Card Deno\u00ebl Roux Sarah 20/11/09 4 \u00c9l\u00e9vation D. Brin J\u2019AI LU Dubois Mathis 25/11/09 ...Mais pas sans cons\u00e9quence \u2693\ufe0e Supposons que l'application de gestion de biblioth\u00e8que fonctionne correctement et stocke toutes ses donn\u00e9es dans un fichier comme celui que nous venons de d\u00e9crire. Nous allons nous pencher sur les inconv\u00e9nients et les cons\u00e9quences inh\u00e9rentes \u00e0 une telle approche. L'application fonctionne maintenant depuis 20 ans. Le nombre de personnes s'inscrivant \u00e0 la biblioth\u00e8que est d'environ 5000 par an. Un abonn\u00e9 emprunte en moyenne 2 livres par mois. 1. Montrer qu'une ann\u00e9e de fonctionnement entra\u00eenera la cr\u00e9ation de \\(120\\ 000\\) lignes. En d\u00e9duire le nombre de lignes approximatif du fichier des donn\u00e9es, au bout de 20 ans? 2. Quelle est la taille approximative du fichier sachant que chaque caract\u00e8re est cod\u00e9 sur 1 octet et qu'une ligne contient, en moyenne, 200 caract\u00e8res? Donner le r\u00e9sultat en Mo . 3. Lorsqu'un abonn\u00e9 emprunte un livre, le biblioth\u00e9caire saisit simplement le num\u00e9ro de l'exemplaire et le nom et le pr\u00e9nom de l'abonn\u00e9. L'application se charge alors de parcourir le fichier pour rechercher les informations manquantes concernant le livre et l'abonn\u00e9 afin de pr\u00e9remplir, \u00e0 la fin du fichier, la nouvelle ligne concernant l'emprunt. Dans le pire des cas, l'application doit parcourir tout le fichier. Supposons: qu'un acc\u00e8s au fichier co\u00fbte 8 ms ( c'est le temps d'acc\u00e8s moyen au disque dur ); qu'une lecture de ligne co\u00fbte 0.1 ms ( temps pour lire les 200 caract\u00e8res de la ligne ); qu'une recherche sur la ligne pour trouver le num\u00e9ro de l'exemplaire ou le nom et le pr\u00e9nom de l'abonn\u00e9 co\u00fbte 0.01 ms. Quel est, dans le pire des cas, le temps mis par l'application pour compl\u00e9ter les informations saisies par le biblioth\u00e9caire ? Donner le r\u00e9sultat en seconde puis en minutes secondes . 4. Supposons qu'une personne est abonn\u00e9e depuis l'origine de l'application. Elle pr\u00e9vient le biblioth\u00e9caire que son pr\u00e9nom est mal orthographi\u00e9. Combien de lignes, approximativement, doivent \u00eatre modifi\u00e9es pour corriger cette erreur dans tout le fichier de donn\u00e9es? 5. Cette base de donn\u00e9es permet-elle vraiment de retrouver des informations ? Par exemple, en se rappelant du travail fait en 1re sur l'exploitation des fichiers csv ( en python ), r\u00e9fl\u00e9chir au moyen de retrouver les informations suivantes : Quels sont les livres \u00e9dit\u00e9s chez Poche? Quels sont les livres \u00e9dit\u00e9s chez Deno\u00eal? Quels sont les livres \u00e9crits par Orson Scott Card? Quels sont les livres \u00e9crits par Friedrich Nietzsche? Quels sont les livres \u00e9crits par David Brin? Indice On pourra utiliser le cadeau du professeur: 1 2 3 4 5 import csv with open ( 'biblio.csv' , newline = '' , encoding = 'utf8' ) as fp : table = [ dict ( ligne ) for ligne in csv . DictReader ( fp , delimiter = ',' )] 6. La mise \u00e0 jour. Analyse d'une situation M. Moreau Jean-Batiste et son fils, dont le pr\u00e9nom est \u00e9galement Jean-Batiste, ont tous les deux emprunt\u00e9 un exemplaire d'un livre: Vendredi ou la vie sauvage de Michel Tournier chez Poche et Vendredi ou la vie sauvage de Michel Tournier chez Poche . Lorsqu'il vient rendre les deux livres, le p\u00e8re pr\u00e9cise que le pr\u00e9nom de son fils est Jean-Batiste Junior , et non pas Jean-Batiste . Il remarque \u00e9galement que le livre qu'il ( le p\u00e8re ) vient d'emprunter, qui porte le num\u00e9ro 3, n'est pas \u00e9crit par Michel Tournier , mais qu'il est co\u00e9crit par Michel Tournier et G\u00e9rard Franquin . Est-il possible de corriger ces erreurs dans notre fichier ? 7. \u00c9num\u00e9rer ou r\u00e9sumer tous les probl\u00e8mes que la repr\u00e9sentation des donn\u00e9es choisie (c'est-\u00e0-dire utilisation d'un fichier de donn\u00e9es) semble poser. Affinement de la solution \u2693\ufe0e Il est maintenant \u00e9vident que la solution na\u00efve d\u00e9crite dans la section pr\u00e9c\u00e9dente pose de nombreux probl\u00e8mes. Elle est totalement inacceptable pour une application s\u00e9rieuse bien qu'elle soit encore largement employ\u00e9e dans des cas de petite taille. Pour r\u00e9soudre les probl\u00e8mes d'incoh\u00e9rences concernant les auteurs, nous proposons de d\u00e9composer le tableau de d\u00e9part en deux sous-tableaux (voir les fichiers EMPRUNTS_Q8.csv et AUTEURS.csv ). Les colonnes idAu permettent de faire le lien entre les deux tables. La redondance sur les noms des auteurs est-elle toujours pr\u00e9sente ? Table EMPRUNTS \u2693\ufe0e idEx Titre idAu Editeur Nom Prenom tel Date-emp Date-ret 1 La volont\u00e9 de puissance 1 Gallimard 2 Espoir-du-cerf 2 Deno\u00ebl Michel Tom 20/10/08 07/11/08 3 Vendredi ou la vie sauvage 3 Poche Moreau J. Batiste 02/10/09 4 \u00c9l\u00e9vation 4 J\u2019AI LU Laurent Camille 02/04/06 20/04/06 5 Vendredi ou la vie sauvage 3 Poche Moreau J. Batiste 02/10/09 6 Vendredi ou la vie sauvage 3 Poche 7 Ainsi parlait Zarathoustra 1 Poche 8 Humain trop humain 1 POCHE 9 Les ma\u00eetres chanteurs 2 Deno\u00ebl Moreau J. Batiste 08/10/09 10 Les ma\u00eetres chanteurs 2 Deno\u00ebl 11 Les ma\u00eetres chanteurs 2 Deno\u00ebl 12 St-Exupery Terre des hommes 5 Broch\u00e9 13 R\u00e9demption 4 J\u2019ai lu 2 Espoir-du-cerf 2 Deno\u00ebl Roux Sarah 20/11/09 4 \u00c9l\u00e9vation 4 J\u2019AI LU Dubois Mathis 25/11/09 Table AUTEURS \u2693\ufe0e idAu Nom Pr\u00e9nom 1 Nietzsche Friedrich 2 Card Orson Scott 3 Tournier Michel 4 Brin David 5 Brin Fran\u00e7oise 8. Cette d\u00e9composition a-t-elle engendr\u00e9 une perte d'information? Autrement dit, est-il possible de reconstituer la table originale \u00e0 partir de cette d\u00e9composition? 9. Pouvons-nous maintenant r\u00e9pondre aux requ\u00eates suivantes : Quels sont les livres \u00e9crits par Orson Scott Card? Quels sont les livres \u00e9crits par Friedrich Nietzsche? Quels sont les livres \u00e9crits par David Brin? 10. Sur le m\u00eame principe, proposer une solution pour que le titre de chaque livre ne soit repr\u00e9sent\u00e9 qu'une seule fois dans notre base de donn\u00e9es. Indication On pourra introduire une table suppl\u00e9mentaire LIVRES . 11. Toujours en appliquant la m\u00eame m\u00e9thode, supprimer les redondances concernant la mention des \u00e9diteurs et les informations associ\u00e9es aux abonn\u00e9s. Pour ce faire, nous pr\u00e9cisons que l'abonn\u00e9 qui a emprunt\u00e9 le livre Les ma\u00eetres chanteurs est le p\u00e8re. 12. Notre base de donn\u00e9es comporte encore des redondances. O\u00f9 se situent-elles ? Aide On pourra lire les fichiers avec python suivant la m\u00e9thode habituelle: 1 2 3 4 5 6 7 import csv with open ( 'EMPRUNTS_Q8.csv' , newline = '' , encoding = 'utf8' ) as emprunts : tab_emp = [ dict ( ligne ) for ligne in csv . DictReader ( emprunts , delimiter = ',' )] with open ( 'AUTEURS.csv' , newline = '' , encoding = 'utf8' ) as auteurs : tab_aut = [ dict ( ligne ) for ligne in csv . DictReader ( auteurs , delimiter = ',' )]","title":"Activit\u00e9 de d\u00e9couverte"},{"location":"NSITerm/BDD/C8A1.html#activite-de-decouverte-insuffisance-des-structures-de-donnees-plates","text":"Certains d'entre vous ont probablement d\u00e9j\u00e0 entendu parler des bases de donn\u00e9es. Dans le cadre de cette activit\u00e9, oublions, dans un premier temps, toutes nos connaissances et nos r\u00e9flexions sur le sujet .","title":"Activit\u00e9 de d\u00e9couverte: insuffisance des structures de donn\u00e9es plates"},{"location":"NSITerm/BDD/C8A1.html#contexte","text":"Supposons que nous ayons \u00e0 d\u00e9velopper une application de gestion d'une biblioth\u00e8que. Tous les livres de la biblioth\u00e8que poss\u00e8dent un num\u00e9ro d'exemplaire , un titre , un ou plusieurs auteurs et un \u00e9diteur . Le num\u00e9ro d'exemplaire est un identifiant unique permettant de diff\u00e9rencier les exemplaires d'un m\u00eame livre. Lorsqu'une personne emprunte un livre, il faut m\u00e9moriser son nom , son pr\u00e9nom , son num\u00e9ro de t\u00e9l\u00e9phone , son adresse , la date de l'emprunt et la date de retour une fois ce dernier r\u00e9alis\u00e9. Toutes les informations doivent \u00eatre conserv\u00e9es pour garder un historique des emprunts.","title":"Contexte"},{"location":"NSITerm/BDD/C8A1.html#une-solution-simple-et-naive","text":"Notre application va devoir stocker toutes les informations pr\u00e9cis\u00e9es ci-dessus de mani\u00e8re persistante. Nous choisissons donc d'utiliser un fichier texte de type csv pour enregistrer les donn\u00e9es. Pour cela, nous adoptons na\u00efvement la solution simple et naturelle suivante : \u2014 Nous cr\u00e9ons un fichier texte csv comportant \u00e0 l'origine une ligne par livre. \u2014 Dans chaque ligne, nous renseignons les informations: idEx ( num\u00e9ro d'exemplaire ), Titre , Auteur et \u00c9diteur , s\u00e9par\u00e9es par une virgule. \u2014 Quand une personne emprunte un livre, nous compl\u00e9tons la ligne du livre emprunt\u00e9 par les champs: Nom , Pr\u00e9nom , T\u00e9l\u00e9phone , Adresse et Date-emprunt toujours en s\u00e9parant ces informations par une virgule. \u2014 Lorsqu'une personne ram\u00e8ne un livre, il suffit de compl\u00e9ter le dernier champ Date-retour sur la ligne du livre emprunt\u00e9. \u2014 Quand un livre est emprunt\u00e9 une nouvelle fois, nous ajoutons une nouvelle ligne avec toutes les informations concernant le livre et la personne qui l'emprunte. Bien entendu, le biblioth\u00e9caire ne ressaisit pas tout, l'application va chercher la plupart de ces informations dans le fichier. Le fichier en question peut donc \u00eatre per\u00e7u comme un tableau de cha\u00eenes de caract\u00e8res. Nous parlerons \u00e9galement de table plut\u00f4t que de tableau ou de fichier. \u00c0 faire Ouvrir le fichier biblio.csv pour avoir une id\u00e9e plus pr\u00e9cise du contenu. idEx Titre Auteur Editeur Nom Prenom tel Date-emp Date-ret 1 La volont\u00e9 de puissance Nietzsche Gallimard 2 Espoir-du-cerf O Scott Card Deno\u00ebl Michel Tom 20/10/08 07/11/08 3 Vendredi ou la vie sauvage M. Tournier Poche Moreau J. Batiste 02/10/09 4 \u00c9l\u00e9vation D. Brin J\u2019AI LU Laurent Camille 02/04/06 20/04/06 5 Vendredi ou la vie sauvage M. Tournier Poche Moreau J. Batiste 02/10/09 6 Vendredi ou la vie sauvage M. Tournier Poche 7 Ainsi parlait Zarathoustra F. Nietzsche Poche 8 Humain trop humain F. NIETZSCHE POCHE 9 Les ma\u00eetres chanteurs O.S. Card Deno\u00ebl Moreau J. Batiste 08/10/09 10 Les ma\u00eetres chanteurs O.S. Card Denoel 11 Les ma\u00eetres chanteurs O.S. Card Deno\u00ebl 12 St-Exupery Terre des hommes F. Brin Broch\u00e9 13 R\u00e9demption Brin J\u2019ai lu 2 Espoir-du-cerf O Scott Card Deno\u00ebl Roux Sarah 20/11/09 4 \u00c9l\u00e9vation D. Brin J\u2019AI LU Dubois Mathis 25/11/09","title":"Une solution simple et na\u00efve..."},{"location":"NSITerm/BDD/C8A1.html#mais-pas-sans-consequence","text":"Supposons que l'application de gestion de biblioth\u00e8que fonctionne correctement et stocke toutes ses donn\u00e9es dans un fichier comme celui que nous venons de d\u00e9crire. Nous allons nous pencher sur les inconv\u00e9nients et les cons\u00e9quences inh\u00e9rentes \u00e0 une telle approche. L'application fonctionne maintenant depuis 20 ans. Le nombre de personnes s'inscrivant \u00e0 la biblioth\u00e8que est d'environ 5000 par an. Un abonn\u00e9 emprunte en moyenne 2 livres par mois. 1. Montrer qu'une ann\u00e9e de fonctionnement entra\u00eenera la cr\u00e9ation de \\(120\\ 000\\) lignes. En d\u00e9duire le nombre de lignes approximatif du fichier des donn\u00e9es, au bout de 20 ans? 2. Quelle est la taille approximative du fichier sachant que chaque caract\u00e8re est cod\u00e9 sur 1 octet et qu'une ligne contient, en moyenne, 200 caract\u00e8res? Donner le r\u00e9sultat en Mo . 3. Lorsqu'un abonn\u00e9 emprunte un livre, le biblioth\u00e9caire saisit simplement le num\u00e9ro de l'exemplaire et le nom et le pr\u00e9nom de l'abonn\u00e9. L'application se charge alors de parcourir le fichier pour rechercher les informations manquantes concernant le livre et l'abonn\u00e9 afin de pr\u00e9remplir, \u00e0 la fin du fichier, la nouvelle ligne concernant l'emprunt. Dans le pire des cas, l'application doit parcourir tout le fichier. Supposons: qu'un acc\u00e8s au fichier co\u00fbte 8 ms ( c'est le temps d'acc\u00e8s moyen au disque dur ); qu'une lecture de ligne co\u00fbte 0.1 ms ( temps pour lire les 200 caract\u00e8res de la ligne ); qu'une recherche sur la ligne pour trouver le num\u00e9ro de l'exemplaire ou le nom et le pr\u00e9nom de l'abonn\u00e9 co\u00fbte 0.01 ms. Quel est, dans le pire des cas, le temps mis par l'application pour compl\u00e9ter les informations saisies par le biblioth\u00e9caire ? Donner le r\u00e9sultat en seconde puis en minutes secondes . 4. Supposons qu'une personne est abonn\u00e9e depuis l'origine de l'application. Elle pr\u00e9vient le biblioth\u00e9caire que son pr\u00e9nom est mal orthographi\u00e9. Combien de lignes, approximativement, doivent \u00eatre modifi\u00e9es pour corriger cette erreur dans tout le fichier de donn\u00e9es? 5. Cette base de donn\u00e9es permet-elle vraiment de retrouver des informations ? Par exemple, en se rappelant du travail fait en 1re sur l'exploitation des fichiers csv ( en python ), r\u00e9fl\u00e9chir au moyen de retrouver les informations suivantes : Quels sont les livres \u00e9dit\u00e9s chez Poche? Quels sont les livres \u00e9dit\u00e9s chez Deno\u00eal? Quels sont les livres \u00e9crits par Orson Scott Card? Quels sont les livres \u00e9crits par Friedrich Nietzsche? Quels sont les livres \u00e9crits par David Brin? Indice On pourra utiliser le cadeau du professeur: 1 2 3 4 5 import csv with open ( 'biblio.csv' , newline = '' , encoding = 'utf8' ) as fp : table = [ dict ( ligne ) for ligne in csv . DictReader ( fp , delimiter = ',' )] 6. La mise \u00e0 jour. Analyse d'une situation M. Moreau Jean-Batiste et son fils, dont le pr\u00e9nom est \u00e9galement Jean-Batiste, ont tous les deux emprunt\u00e9 un exemplaire d'un livre: Vendredi ou la vie sauvage de Michel Tournier chez Poche et Vendredi ou la vie sauvage de Michel Tournier chez Poche . Lorsqu'il vient rendre les deux livres, le p\u00e8re pr\u00e9cise que le pr\u00e9nom de son fils est Jean-Batiste Junior , et non pas Jean-Batiste . Il remarque \u00e9galement que le livre qu'il ( le p\u00e8re ) vient d'emprunter, qui porte le num\u00e9ro 3, n'est pas \u00e9crit par Michel Tournier , mais qu'il est co\u00e9crit par Michel Tournier et G\u00e9rard Franquin . Est-il possible de corriger ces erreurs dans notre fichier ? 7. \u00c9num\u00e9rer ou r\u00e9sumer tous les probl\u00e8mes que la repr\u00e9sentation des donn\u00e9es choisie (c'est-\u00e0-dire utilisation d'un fichier de donn\u00e9es) semble poser.","title":"...Mais pas sans cons\u00e9quence"},{"location":"NSITerm/BDD/C8A1.html#affinement-de-la-solution","text":"Il est maintenant \u00e9vident que la solution na\u00efve d\u00e9crite dans la section pr\u00e9c\u00e9dente pose de nombreux probl\u00e8mes. Elle est totalement inacceptable pour une application s\u00e9rieuse bien qu'elle soit encore largement employ\u00e9e dans des cas de petite taille. Pour r\u00e9soudre les probl\u00e8mes d'incoh\u00e9rences concernant les auteurs, nous proposons de d\u00e9composer le tableau de d\u00e9part en deux sous-tableaux (voir les fichiers EMPRUNTS_Q8.csv et AUTEURS.csv ). Les colonnes idAu permettent de faire le lien entre les deux tables. La redondance sur les noms des auteurs est-elle toujours pr\u00e9sente ?","title":"Affinement de la solution"},{"location":"NSITerm/BDD/C8A1P.html","text":"Corrig\u00e9 (partiel) de l'activit\u00e9 de d\u00e9couverte BDD \u2693\ufe0e Question 5 \u2693\ufe0e 1 2 3 4 5 import csv with open ( './BDD/biblio.csv' , newline = '' , encoding = 'utf8' ) as fp : table = [ dict ( ligne ) for ligne in csv . DictReader ( fp , delimiter = ',' )] Quels sont les livres \u00e9dit\u00e9s chez Deno\u00eal? \u2693\ufe0e 1 2 3 for ligne in table : if ligne [ 'Editeur' ] == 'Deno\u00ebl' : print ( ligne [ 'Titre' ]) 1 2 3 4 Espoir-du-cerf Les ma\u00eetres chanteurs Les ma\u00eetres chanteurs Espoir-du-cerf Remarque \u2693\ufe0e Dans le fichier, on a une occurence \u00e9crite diff\u00e9remment et donc n'apparait pas clairement ici: Denoel (sans tr\u00e9ma). Quels sont les livres \u00e9crits par Orson Scott Card? \u2693\ufe0e 1 2 3 for ligne in table : if 'Card' in ligne [ 'Auteur' ]: print ( ligne [ 'Titre' ]) 1 2 3 4 5 Espoir-du-cerf Les ma\u00eetres chanteurs Les ma\u00eetres chanteurs Les ma\u00eetres chanteurs Espoir-du-cerf Remarque \u2693\ufe0e On est oblig\u00e9 de se limiter \u00e0 la recherche de la sous cha\u00eene Card pour ne pas louper des occurences. Quels sont les livres \u00e9crits par Friedrich Nietzsche? \u2693\ufe0e 1 2 3 4 # Pb d\u00fb \u00e0 l'orthographe for ligne in table : if 'Nietzsche' in ligne [ 'Auteur' ]: print ( ligne [ 'Titre' ]) 1 2 La volont\u00e9 de puissance Ainsi parlait Zarathoustra Remarque \u2693\ufe0e On loupe ici l'exemplaire n\u00b05 car dans ce dernier le nom est tout en majuscule. On peut quand m\u00eame s'en sortir, m\u00eame si cela devient p\u00e9nible: 1 2 3 for ligne in table : if 'Nietzsche' . upper () in ligne [ 'Auteur' ] . upper (): print ( ligne [ 'Titre' ]) 1 2 3 La volont\u00e9 de puissance Ainsi parlait Zarathoustra Humain trop humain Quels sont les livres \u00e9crits par David Brin? \u2693\ufe0e 1 2 3 for ligne in table : if 'David Brin' in ligne [ 'Auteur' ]: print ( ligne [ 'Titre' ]) On a rien en sortie car dans le fichier on a D. Brin . Comme pr\u00e9c\u00e9demment, on peut trouver une solution, pas tr\u00e8s satisfaisante car il faut v\u00e9rifier que le m\u00eame orthographe a \u00e9t\u00e9 utilis\u00e9e partout. Et, qu'en est-il de l'exemplaire n\u00b0 13 ? 1 2 3 for ligne in table : if 'D. Brin' in ligne [ 'Auteur' ]: print ( ligne [ 'Titre' ]) 1 2 \u00c9l\u00e9vation \u00c9l\u00e9vation Question 6 \u2693\ufe0e Il sera extr\u00eamement difficile de changer Jean Batiste en Jean Batiste Junior . En effet, il faudrait examiner chaque ligne o\u00f9 ce pr\u00e9nom intervient et d\u00e9cider au cas par cas. Le syst\u00e8me tel qu'il est pr\u00e9sent\u00e9 ne pr\u00e9voit pas la gestion de livres avec des auteurs multiples. Question 7 \u2693\ufe0e Parmi les probl\u00e8mes rencontr\u00e9s, on peut citer: la taille du fichier devient tr\u00e8s importante avec le temps; le temps de traitement va devenir r\u00e9dhibitoire dans la dur\u00e9e; la recherche est difficile; la mise \u00e0 jour d'information peut \u00eatre impossible; des probl\u00e8mes peuvent \u00eatre difficiles \u00e0 r\u00e9soudre: Comment ins\u00e9rer un nouvel abonn\u00e9 qui n'a encore rien emprunt\u00e9? , ou encore: Comment supprimer un livre sans risquer de supprimer un abonn\u00e9? . Question 8 \u2693\ufe0e Cette d\u00e9composition n'a pas engendr\u00e9 de pertes d'informations. En effet, on peut retrouver l'auteur d'un livre en faisant correspondre idAu de la table EMPRUNTS avec idAu de la table AUTEURS . Avantage: si on doit faire une modification sur le nom d'un auteur, on ne le fait qu'une fois dans la table AUTEURS . Question 9 \u2693\ufe0e Exemples de code python associ\u00e9 aux requ\u00eates demand\u00e9es 1 2 3 4 5 6 7 import csv with open ( './BDD/EMPRUNTS_Q8.csv' , newline = '' , encoding = 'utf8' ) as fp : t_emprunts = [ dict ( ligne ) for ligne in csv . DictReader ( fp , delimiter = ',' )] with open ( './BDD/AUTEURS.csv' , newline = '' , encoding = 'utf8' ) as fp : t_auteur = [ dict ( ligne ) for ligne in csv . DictReader ( fp , delimiter = ',' )] 1 2 3 4 5 def trouver_idauteur ( auteur ): prenom , nom = auteur for ligne in t_auteur : if ligne [ 'Nom' ] == nom and ligne [ 'Pr\u00e9nom' ] == prenom : return ligne [ 'idAu' ] 1 2 3 4 5 6 7 def chercher_livre ( auteur ): result = '' id_auteur = trouver_idauteur ( auteur ) for ligne in t_emprunts : if ligne [ 'idAu' ] == id_auteur : result = result + ' \\n ' + ligne [ 'Titre' ] return result 1 print ( chercher_livre (( 'Orson Scott' , 'Card' ))) 1 2 3 4 5 Espoir-du-cerf Les ma\u00eetres chanteurs Les ma\u00eetres chanteurs Les ma\u00eetres chanteurs Espoir-du-cerf 1 print ( chercher_livre (( 'David' , 'Brin' ))) 1 2 3 \u00c9l\u00e9vation R\u00e9demption \u00c9l\u00e9vation 1 print ( chercher_livre (( 'Friedrich' , 'Nietzsche' ))) 1 2 3 La volont\u00e9 de puissance Ainsi parlait Zarathoustra Humain trop humain Question 10 \u2693\ufe0e Introduisons, comme sugg\u00e9r\u00e9, une table LIVRES : idLi Titre 1 La volont\u00e9 de puissance 2 Espoir-du-cerf 3 Vendredi ou la vie sauvage 4 \u00c9l\u00e9vation 5 Ainsi parlait Zarathoustra 6 Humain trop humain 7 Les ma\u00eetres chanteurs 8 St-Exupery Terre des hommes 9 R\u00e9demption La table EMPRUNTS sera modifi\u00e9e comme suit: id Ex idLi idAu Editeur Nom Prenom tel Date-emp Date-ret 1 1 1 Gallimard 2 2 2 Deno\u00ebl Michel Tom 20/10/08 07/11/08 3 3 3 Poche Moreau J. Batiste 02/10/09 4 4 4 J\u2019AI LU Laurent Camille 02/04/06 20/04/06 5 3 3 Poche Moreau J. Batiste 02/10/09 6 3 3 Poche 7 5 1 Poche 8 6 1 POCHE 9 7 2 Deno\u00ebl Moreau J. Batiste 08/10/09 10 7 2 Deno\u00ebl 11 7 2 Deno\u00ebl 12 8 5 Broch\u00e9 13 9 4 J\u2019ai lu 2 2 2 Deno\u00ebl Roux Sarah 20/11/09 4 2 4 J\u2019AI LU Dubois Mathis 25/11/09 Question 11 \u2693\ufe0e On peut adopter la d\u00e9composition suivante: Table EMPRUNTS \u2693\ufe0e idEx idLi idAu idEd idAb Date-emp Date-ret 1 1 1 1 2 2 2 2 1 20/10/08 07/11/08 3 3 3 3 2 02/10/09 4 4 4 4 3 02/04/06 20/04/06 5 3 3 3 4 02/10/09 6 3 3 3 7 5 1 3 8 6 1 3 9 7 2 2 2 08/10/09 10 7 2 2 11 7 2 2 12 8 5 5 13 9 4 4 2 2 2 2 5 20/11/09 4 2 4 4 6 25/11/09 Table EDITEURS \u2693\ufe0e idEd Nom 1 Gallimard 2 Deno\u00ebl 3 Poche 4 J\u2019ai lu 5 Broch\u00e9 Table ABONNES \u2693\ufe0e idAb Nom Prenom Tel Ad 1 Michel Tom 2 Moreau Jean Batiste 3 Laurent Camille 4 Moreau Jean Batiste 5 Roux Sarah 6 Dubois Mathis Les tables LIVRES et AUTEURS restent inchang\u00e9es par rapport \u00e0 la question 10. Question 12 \u2693\ufe0e On remarque que les informations li\u00e9es \u00e0 un livre peuvent appara\u00eetre plusieurs fois (lorsque le livre est emprunt\u00e9 \u00e0 nouveau). Cela se produit par exemple pour l'exemplaire idEx = 2 .","title":"C8A1P"},{"location":"NSITerm/BDD/C8A1P.html#corrige-partiel-de-lactivite-de-decouverte-bdd","text":"","title":"Corrig\u00e9 (partiel) de l'activit\u00e9 de d\u00e9couverte BDD"},{"location":"NSITerm/BDD/C8A1P.html#question-5","text":"1 2 3 4 5 import csv with open ( './BDD/biblio.csv' , newline = '' , encoding = 'utf8' ) as fp : table = [ dict ( ligne ) for ligne in csv . DictReader ( fp , delimiter = ',' )]","title":"Question 5"},{"location":"NSITerm/BDD/C8A1P.html#question-6","text":"Il sera extr\u00eamement difficile de changer Jean Batiste en Jean Batiste Junior . En effet, il faudrait examiner chaque ligne o\u00f9 ce pr\u00e9nom intervient et d\u00e9cider au cas par cas. Le syst\u00e8me tel qu'il est pr\u00e9sent\u00e9 ne pr\u00e9voit pas la gestion de livres avec des auteurs multiples.","title":"Question 6"},{"location":"NSITerm/BDD/C8A1P.html#question-7","text":"Parmi les probl\u00e8mes rencontr\u00e9s, on peut citer: la taille du fichier devient tr\u00e8s importante avec le temps; le temps de traitement va devenir r\u00e9dhibitoire dans la dur\u00e9e; la recherche est difficile; la mise \u00e0 jour d'information peut \u00eatre impossible; des probl\u00e8mes peuvent \u00eatre difficiles \u00e0 r\u00e9soudre: Comment ins\u00e9rer un nouvel abonn\u00e9 qui n'a encore rien emprunt\u00e9? , ou encore: Comment supprimer un livre sans risquer de supprimer un abonn\u00e9? .","title":"Question 7"},{"location":"NSITerm/BDD/C8A1P.html#question-8","text":"Cette d\u00e9composition n'a pas engendr\u00e9 de pertes d'informations. En effet, on peut retrouver l'auteur d'un livre en faisant correspondre idAu de la table EMPRUNTS avec idAu de la table AUTEURS . Avantage: si on doit faire une modification sur le nom d'un auteur, on ne le fait qu'une fois dans la table AUTEURS .","title":"Question 8"},{"location":"NSITerm/BDD/C8A1P.html#question-9","text":"Exemples de code python associ\u00e9 aux requ\u00eates demand\u00e9es 1 2 3 4 5 6 7 import csv with open ( './BDD/EMPRUNTS_Q8.csv' , newline = '' , encoding = 'utf8' ) as fp : t_emprunts = [ dict ( ligne ) for ligne in csv . DictReader ( fp , delimiter = ',' )] with open ( './BDD/AUTEURS.csv' , newline = '' , encoding = 'utf8' ) as fp : t_auteur = [ dict ( ligne ) for ligne in csv . DictReader ( fp , delimiter = ',' )] 1 2 3 4 5 def trouver_idauteur ( auteur ): prenom , nom = auteur for ligne in t_auteur : if ligne [ 'Nom' ] == nom and ligne [ 'Pr\u00e9nom' ] == prenom : return ligne [ 'idAu' ] 1 2 3 4 5 6 7 def chercher_livre ( auteur ): result = '' id_auteur = trouver_idauteur ( auteur ) for ligne in t_emprunts : if ligne [ 'idAu' ] == id_auteur : result = result + ' \\n ' + ligne [ 'Titre' ] return result 1 print ( chercher_livre (( 'Orson Scott' , 'Card' ))) 1 2 3 4 5 Espoir-du-cerf Les ma\u00eetres chanteurs Les ma\u00eetres chanteurs Les ma\u00eetres chanteurs Espoir-du-cerf 1 print ( chercher_livre (( 'David' , 'Brin' ))) 1 2 3 \u00c9l\u00e9vation R\u00e9demption \u00c9l\u00e9vation 1 print ( chercher_livre (( 'Friedrich' , 'Nietzsche' ))) 1 2 3 La volont\u00e9 de puissance Ainsi parlait Zarathoustra Humain trop humain","title":"Question 9"},{"location":"NSITerm/BDD/C8A1P.html#question-10","text":"Introduisons, comme sugg\u00e9r\u00e9, une table LIVRES : idLi Titre 1 La volont\u00e9 de puissance 2 Espoir-du-cerf 3 Vendredi ou la vie sauvage 4 \u00c9l\u00e9vation 5 Ainsi parlait Zarathoustra 6 Humain trop humain 7 Les ma\u00eetres chanteurs 8 St-Exupery Terre des hommes 9 R\u00e9demption La table EMPRUNTS sera modifi\u00e9e comme suit: id Ex idLi idAu Editeur Nom Prenom tel Date-emp Date-ret 1 1 1 Gallimard 2 2 2 Deno\u00ebl Michel Tom 20/10/08 07/11/08 3 3 3 Poche Moreau J. Batiste 02/10/09 4 4 4 J\u2019AI LU Laurent Camille 02/04/06 20/04/06 5 3 3 Poche Moreau J. Batiste 02/10/09 6 3 3 Poche 7 5 1 Poche 8 6 1 POCHE 9 7 2 Deno\u00ebl Moreau J. Batiste 08/10/09 10 7 2 Deno\u00ebl 11 7 2 Deno\u00ebl 12 8 5 Broch\u00e9 13 9 4 J\u2019ai lu 2 2 2 Deno\u00ebl Roux Sarah 20/11/09 4 2 4 J\u2019AI LU Dubois Mathis 25/11/09","title":"Question 10"},{"location":"NSITerm/BDD/C8A1P.html#question-11","text":"On peut adopter la d\u00e9composition suivante:","title":"Question 11"},{"location":"NSITerm/BDD/C8A1P.html#question-12","text":"On remarque que les informations li\u00e9es \u00e0 un livre peuvent appara\u00eetre plusieurs fois (lorsque le livre est emprunt\u00e9 \u00e0 nouveau). Cela se produit par exemple pour l'exemplaire idEx = 2 .","title":"Question 12"},{"location":"NSITerm/BDD/C8C1.html","text":"LE MODELE RELATIONNEL \u2693\ufe0e Introduction \u2693\ufe0e Comme on l'a vu dans l'activit\u00e9 introductive, l'utilisation de structures de donn\u00e9es plates souffre de nombreux inconv\u00e9nients (redondance, mise \u00e0 jour et recherche difficiles, performances m\u00e9diocres lorsque le fichier devient volumineux, etc.). Plus g\u00e9n\u00e9ralement, pour toute application s\u00e9rieuse, on se tourne vers une base de donn\u00e9es . D\u00e9finition On d\u00e9finit une base de donn\u00e9es comme une collection de donn\u00e9es structur\u00e9es ( de mani\u00e8re logique ) stock\u00e9es sur un support persistent. Mod\u00e9liser les donn\u00e9es n\u00e9cessitera trois grandes \u00e9tapes: trouver les objets ou acteurs du probl\u00e8me ainsi les associations existant entre eux - cette \u00e9tape n'est pas abord\u00e9e en terminale -; mod\u00e9liser les objets / acteurs comme des relations; d\u00e9finir les contraintes. Enfin, pour g\u00e9rer la base de donn\u00e9es on aura un besoin d'un logiciel appel\u00e9 Syt\u00e8me de Gestion de Base de Donn\u00e9es ou SGBD . Dans les applications de ce cours, on utilisera le SGBD MySQL ( coupl\u00e9 \u00e0 l'interface phpMyAdmin ). Le mod\u00e8le relationnel - les concepts \u2693\ufe0e Parmi les mod\u00e8les permettant de structurer de mani\u00e8re logique les donn\u00e9es, un des plus populaires est le mod\u00e8le relationnel d\u00e9velopp\u00e9 en 1970 par l'am\u00e9ricain Edgar Frank Codd . Le vocabulaire \u2693\ufe0e Pour Philippe Rigaux, Professeur au CNAM, le mod\u00e8le relationnel est: un ensemble de r\u00e9sultats scientifiques, qui ont en commun de s\u2019appuyer sur une repr\u00e9sentation tabulaire des donn\u00e9es . L'expression mod\u00e8le relationnel vient de la notion de relation en math\u00e9matique. Relation, n-uplet, attribut, sch\u00e9ma \u2693\ufe0e Dans une premi\u00e8re approche, une relation peut \u00eatre vue comme un tableau \u00e0 deux dimensions (on dit aussi table ) et est rep\u00e9r\u00e9e par un nom. Une relation est un ensemble fini de n-uplets ( lignes ). Chaque composante d'un n-uplet est un attribut . L'ensemble des valeurs possibles que peut prendre un attribut est son domaine . Le domaine peut \u00eatre vu comme le type en informatique. Chaque relation est conforme \u00e0 un sch\u00e9ma . Il s'agit d'un ensemble ordonn\u00e9 de couple attribut-domaine , distinct deux-\u00e0-deux, qui caract\u00e9rise un n-uplet. Par exemple, le sch\u00e9ma de la relation Logement de l'exemple ci-dessus est: Logement ((id, str ), (nom, str ), (capacit\u00e9, int ), (type, str ), (lieu, str )) Une base de donn\u00e9es est un ensemble de relations. Application 1 Ouvrir la base de donn\u00e9es Livres_2 \u00e0 partir de l'interface phpMyAdmin . Combien de relation comporte cette base? Donner les attributs ainsi que leur domaine, pr\u00e9sents dans la relation auteur . Donner le sch\u00e9ma de la relation livre . Combien de n-uplets comporte la table usager ? Cl\u00e9 primaire \u2693\ufe0e Si un ensemble d'attributs \\(\\mathcal{K}\\) permet d'identifier un unique n-uplet alors c'est une cl\u00e9 . Si cet ensemble est minimal on dit que c'est une cl\u00e9 primaire . Dans la relation livre de l'application 1, l'attribut isbn constitue une cl\u00e9 primaire. Tr\u00e8s souvent, on sera amen\u00e9 \u00e0 ajouter une cl\u00e9 artificielle qui servira de cl\u00e9 primaire et qui sera un identifiant entier auto-incr\u00e9ment\u00e9. Aplication 2 L'attribut annee peut-il \u00eatre une cl\u00e9 primaire? L'ensemble titre, editeur peut-il \u00eatre une cl\u00e9 primaire? Cl\u00e9 \u00e9trang\u00e8re \u2693\ufe0e Consid\u00e9rons une relation INFO_LIVRES ci-apr\u00e8s. Un rapide examen permet de constater que beaucoup d'informations sont dupliqu\u00e9es. Relation INFO_LIVRES id titre nom prenom date_nai langue_ecriture ann_publi note 1 1984 Orwell George 1903 anglais 1949 10 2 Dune Herbert Frank 1920 anglais 1965 8 3 Fondation Asimov Isaac 1920 anglais 1951 9 4 Le meilleur des mondes Huxley Aldous 1894 anglais 1931 7 5 Fahrenheit 451 Bradbury Ray 1920 anglais 1953 7 6 Ubik K.Dick Philip 1928 anglais 1969 9 7 Chroniques martiennes Bradbury Ray 1920 anglais 1950 8 8 La nuit des temps Barjavel Ren\u00e9 1911 fran\u00e7ais 1968 7 9 Blade Runner K.Dick Philip 1928 anglais 1968 8 10 Les Robots Asimov Isaac 1920 anglais 1950 9 11 La Plan\u00e8te des singes Boulle Pierre 1912 fran\u00e7ais 1963 8 12 Ravage Barjavel Ren\u00e9 1911 fran\u00e7ais 1943 8 13 Le Ma\u00eetre du Haut Ch\u00e2teau K.Dick Philip 1928 anglais 1962 8 14 Le monde des \u0100 Van Vogt Alfred Elton 1912 anglais 1945 7 15 La Fin de l\u2019\u00e9ternit\u00e9 Asimov Isaac 1920 anglais 1955 8 16 De la Terre \u00e0 la Lune Verne Jules 1828 fran\u00e7ais 1865 10 Dans l'activit\u00e9 d'introduction sur les insuffisances des structures de donn\u00e9es plates on a vu qu'une solution au probl\u00e8me de redondance \u00e9tait la s\u00e9paration des donn\u00e9es en plusieurs tables. On parvient alors \u00e0 reconstruire toute l'information avec un ou des attributs jouant le r\u00f4le de lien . Ici, on s\u00e9pare les informations dans deux tables LIVRES et AUTEURS . Relation AUTEURS id nom prenom ann_naissance langue_ecriture 1 Orwell George 1903 anglais 2 Herbert Frank 1920 anglais 3 Asimov Isaac 1920 anglais 4 Huxley Aldous 1894 anglais 5 Bradbury Ray 1920 anglais 6 K.Dick Philip 1928 anglais 7 Barjavel Ren\u00e9 1911 fran\u00e7ais 8 Boulle Pierre 1912 fran\u00e7ais 9 Van Vogt Alfred Elton 1912 anglais 10 Verne Jules 1828 fran\u00e7ais Relation LIVRES id titre id_auteur ann_publi note 1 1984 1 1949 10 2 Dune 2 1965 8 3 Fondation 3 1951 9 4 Le meilleur des mondes 4 1931 7 5 Fahrenheit 451 5 1953 7 6 Ubik 6 1969 9 7 Chroniques martiennes 5 1950 8 8 La nuit des temps 7 1968 7 9 Blade Runner 6 1968 8 10 Les Robots 3 1950 9 11 La Plan\u00e8te des singes 8 1963 8 12 Ravage 7 1943 8 13 Le Ma\u00eetre du Haut Ch\u00e2teau 6 1962 8 14 Le monde des \u0100 9 1945 7 15 La Fin de l\u2019\u00e9ternit\u00e9 3 1955 8 16 De la Terre \u00e0 la Lune 10 1865 10 Dans cet exemple, la relation LIVRES poss\u00e8de un attribut id_auteur qui correspond \u00e0 l'attribut id de la relation AUTEURS . Cet attribut de la relation LIVRES qui fait r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire d'une autre relation est appel\u00e9e cl\u00e9 \u00e9trang\u00e8re . Dans le sch\u00e9ma d'une relation, la cl\u00e9 primaire est souvent soulign\u00e9e et les \u00e9ventuelles cl\u00e9s \u00e9tang\u00e8res sont pr\u00e9c\u00e9d\u00e9es du signe # . Application 3 \u00c9crire le sch\u00e9ma des relations LIVRES et AUTEURS . Les contraintes d'int\u00e9grit\u00e9 \u2693\ufe0e Un contrainte d'int\u00e9grit\u00e9 est une propri\u00e9t\u00e9 logique, v\u00e9rifi\u00e9e \u00e0 chaque instant et qui garantit la coh\u00e9rence des donn\u00e9es . Contrainte de domaine \u2693\ufe0e Les contraintes de domaine sont utiles pour contr\u00f4ler le type de donn\u00e9es stock\u00e9es. Cela est int\u00e9gr\u00e9 au mod\u00e8le relationnel. Par exemple, dans la table Logement \u00e9voqu\u00e9e plus haut, une entr\u00e9e comme 10 pour l'attribut id sera refus\u00e9e car le domaine de cet attribut est une cha\u00eene de caract\u00e8re. Contrainte d'int\u00e9grit\u00e9 des relations \u2693\ufe0e Cette contrainte permet d'assurer que chaque relation a bien une cl\u00e9 primaire unique et bien d\u00e9finie. Deux n-uplets ne peuvent avoir les m\u00eames valeurs pour l'ensemble des attributs. Par exemple, dans la relation LIVRES , choisir titre comme cl\u00e9 n'est pas une bonne id\u00e9e ( on peut avoir deux livres avec le m\u00eame titre ). On lui pr\u00e9f\u00e8re une cl\u00e9 artificielle id . Contrainte d'int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle \u2693\ufe0e Cette contrainte permet d'assurer que chaque valeur d'une cl\u00e9 \u00e9trang\u00e8re doit correspondre une valeur de cl\u00e9 primaire associ\u00e9e. Par exemple, dans la relation LIVRES poss\u00e8de une cl\u00e9 \u00e9trang\u00e8re id_auteur . Pour qu'une valeur de id_auteur soit accept\u00e9e, il faut que cette valeur apparaisse dans la cl\u00e9 primaire de AUTEURS R\u00e9f\u00e9rences Sp\u00e9cialit\u00e9 NSI - Terminale - pages 285 - 294; Balabonski & al; ellipses Site David Roche https://pixees.fr/informatiquelycee/n_site/nsi_term_bd_rela.html Liens int\u00e9ressants pour manipuler les tables en markdown convertion HTML vers csv convertion csv vers markdown","title":"Cours 1: Le mod\u00e8le relationnel"},{"location":"NSITerm/BDD/C8C1.html#le-modele-relationnel","text":"","title":"LE MODELE RELATIONNEL"},{"location":"NSITerm/BDD/C8C1.html#introduction","text":"Comme on l'a vu dans l'activit\u00e9 introductive, l'utilisation de structures de donn\u00e9es plates souffre de nombreux inconv\u00e9nients (redondance, mise \u00e0 jour et recherche difficiles, performances m\u00e9diocres lorsque le fichier devient volumineux, etc.). Plus g\u00e9n\u00e9ralement, pour toute application s\u00e9rieuse, on se tourne vers une base de donn\u00e9es . D\u00e9finition On d\u00e9finit une base de donn\u00e9es comme une collection de donn\u00e9es structur\u00e9es ( de mani\u00e8re logique ) stock\u00e9es sur un support persistent. Mod\u00e9liser les donn\u00e9es n\u00e9cessitera trois grandes \u00e9tapes: trouver les objets ou acteurs du probl\u00e8me ainsi les associations existant entre eux - cette \u00e9tape n'est pas abord\u00e9e en terminale -; mod\u00e9liser les objets / acteurs comme des relations; d\u00e9finir les contraintes. Enfin, pour g\u00e9rer la base de donn\u00e9es on aura un besoin d'un logiciel appel\u00e9 Syt\u00e8me de Gestion de Base de Donn\u00e9es ou SGBD . Dans les applications de ce cours, on utilisera le SGBD MySQL ( coupl\u00e9 \u00e0 l'interface phpMyAdmin ).","title":"Introduction"},{"location":"NSITerm/BDD/C8C1.html#le-modele-relationnel-les-concepts","text":"Parmi les mod\u00e8les permettant de structurer de mani\u00e8re logique les donn\u00e9es, un des plus populaires est le mod\u00e8le relationnel d\u00e9velopp\u00e9 en 1970 par l'am\u00e9ricain Edgar Frank Codd .","title":"Le mod\u00e8le relationnel - les concepts"},{"location":"NSITerm/BDD/C8C2.html","text":"STRUCTURE DES BASES DE DONNEES RELATIONNELLES \u2693\ufe0e Sch\u00e9ma d'une base de donn\u00e9es \u2693\ufe0e D\u00e9finition Donner le sch\u00e9ma d'une relation consiste \u00e0 donner un nom et un ensemble d'attribut / domaine. Comme on l'a vu au cours des s\u00e9quences pr\u00e9c\u00e9dentes, il n'est pas recommandable de mettre toutes les donn\u00e9es dans une seule table. Il est en g\u00e9n\u00e9ral n\u00e9cessaire de cr\u00e9er plusieurs relations associ\u00e9es les unes aux autres. D\u00e9finition On d\u00e9finit le sch\u00e9ma d'une base de donn\u00e9es comme un ensemble de sch\u00e9mas de relation. Il s'agit de la structure de la base , \u00e0 ne pas confondre avec le contenu de la base Cons\u00e9quences d'un mauvais sch\u00e9ma \u2693\ufe0e Avant d'entreprendre la compr\u00e9hension d'un sch\u00e9ma relationnel correct d'une base de donn\u00e9es, examinons les cons\u00e9quences d'un mauvais sch\u00e9ma. On veut cr\u00e9er une base de donn\u00e9es Infos_films repr\u00e9sentant des films, avec des informations comme le titre, l\u2019ann\u00e9e, le r\u00e9alisateur, etc. On part d\u2019un sch\u00e9ma rassemblant ces informations dans une unique table: Film(titre, ann\u00e9e, pr\u00e9nomR\u00e9alisateur, nomR\u00e9alisateur, ann\u00e9eNaiss) titre ann\u00e9e pr\u00e9nomR\u00e9alisateur nomR\u00e9alisateur ann\u00e9eNais Alien 1979 Ridley Scott 1943 Vertigo 1958 Alfred Hitchcock 1899 Psychose 1960 Alfred Hitchcock 1899 Kagemusha 1980 Akira Kurosawa 1910 Volte-face 1997 John Woo 1946 Pulp Fiction 1995 Quentin Tarantino 1963 Titanic 1997 James Cameron 1954 Sacrifice 1986 Andrei Tarkovski 1932 Les probl\u00e8mes potentiels ont pour origine la redondance d'informations. Anomalies d'insertion \u2693\ufe0e En l'\u00e9tat, sans cl\u00e9 primaire d\u00e9finie, rien n'interdit l'insertion d'un film d\u00e9j\u00e0 pr\u00e9sent . Par ailleurs, pour ins\u00e9rer un film il faut absolument saisir son r\u00e9alisateur (\u00e0 moins d'accepter une valeur vide NULL , ce qui n'est jamais tr\u00e8s bon). Un probl\u00e8me similaire se pose si on veut entrer un r\u00e9alisateur: il faut saisir un film qu'il a r\u00e9alis\u00e9. Anomalies de mise \u00e0 jour \u2693\ufe0e Supposons que l\u2019on modifie l\u2019ann\u00e9e de naissance de Hitchcock pour la ligne Vertigo et que l'on oublie d'effectuer la modification pour la ligne Psychose . On se retrouve alors avec des informations incoh\u00e9rentes . Anomalies de suppression \u2693\ufe0e On ne peut pas supprimer un film sans supprimer du m\u00eame coup son r\u00e9alisateur. Si on souhaite, par exemple, ne plus voir le film Titanic figurer dans la base de donn\u00e9es, on va effacer du m\u00eame coup les informations sur James Cameron . Comprendre un (bon) sch\u00e9ma d'une base de donn\u00e9es \u2693\ufe0e La base support pour cette section peut \u00eatre consult\u00e9e avec l'interface phpMyAdmin , en ouvrant la base Films_2 . Le mod\u00e8le relationnel poss\u00e8de un outil ( hors programme de terminale ) permettant d'\u00e9viter tous les probl\u00e8mes li\u00e9s \u00e0 la redondance: la normalisation . En l'appliquant au probl\u00e8me pr\u00e9c\u00e9dent on peut aboutir au sch\u00e9ma de base de donn\u00e9es Infos_films suivant: Film ( idFilm , titre, ann\u00e9e, genre, r\u00e9sum\u00e9, #idR\u00e9alisateur, #codePays) Pays ( code , nom, langue) Artiste ( idArtiste , nom, pr\u00e9nom, ann\u00e9eNaissance) R\u00f4le ( #idFilm, #idActeur , nomR\u00f4le) Internaute ( email , nom, pr\u00e9nom, r\u00e9gion) Notation ( #email, #idFilm , note) On peut d'abord noter que chaque relation poss\u00e8de une cl\u00e9 primaire, ce qui assure l'unicit\u00e9 des n-uplets. La cl\u00e9 \u00e9trang\u00e8re idR\u00e9alisateur dans Film r\u00e9f\u00e9rence la cl\u00e9 primaire idArtiste de Artiste . De m\u00eame, La cl\u00e9 \u00e9trang\u00e8re codePays dans Film r\u00e9f\u00e9rence la cl\u00e9 primaire code de Pays . Ainsi, connaissant un film on peut retrouver son r\u00e9alisateur ou son pays de production. On peut aussi utiliser une m\u00e9thode graphique visualiser les liens entre les diverses relations. R\u00e9f\u00e9rence : Cours base de donn\u00e9es de Philipe Rigaux","title":"Cours 2: Structure des bases de donn\u00e9es relationnelles"},{"location":"NSITerm/BDD/C8C2.html#structure-des-bases-de-donnees-relationnelles","text":"","title":"STRUCTURE DES BASES DE DONNEES RELATIONNELLES"},{"location":"NSITerm/BDD/C8C2.html#schema-dune-base-de-donnees","text":"D\u00e9finition Donner le sch\u00e9ma d'une relation consiste \u00e0 donner un nom et un ensemble d'attribut / domaine. Comme on l'a vu au cours des s\u00e9quences pr\u00e9c\u00e9dentes, il n'est pas recommandable de mettre toutes les donn\u00e9es dans une seule table. Il est en g\u00e9n\u00e9ral n\u00e9cessaire de cr\u00e9er plusieurs relations associ\u00e9es les unes aux autres. D\u00e9finition On d\u00e9finit le sch\u00e9ma d'une base de donn\u00e9es comme un ensemble de sch\u00e9mas de relation. Il s'agit de la structure de la base , \u00e0 ne pas confondre avec le contenu de la base","title":"Sch\u00e9ma d'une base de donn\u00e9es"},{"location":"NSITerm/BDD/C8C2.html#consequences-dun-mauvais-schema","text":"Avant d'entreprendre la compr\u00e9hension d'un sch\u00e9ma relationnel correct d'une base de donn\u00e9es, examinons les cons\u00e9quences d'un mauvais sch\u00e9ma. On veut cr\u00e9er une base de donn\u00e9es Infos_films repr\u00e9sentant des films, avec des informations comme le titre, l\u2019ann\u00e9e, le r\u00e9alisateur, etc. On part d\u2019un sch\u00e9ma rassemblant ces informations dans une unique table: Film(titre, ann\u00e9e, pr\u00e9nomR\u00e9alisateur, nomR\u00e9alisateur, ann\u00e9eNaiss) titre ann\u00e9e pr\u00e9nomR\u00e9alisateur nomR\u00e9alisateur ann\u00e9eNais Alien 1979 Ridley Scott 1943 Vertigo 1958 Alfred Hitchcock 1899 Psychose 1960 Alfred Hitchcock 1899 Kagemusha 1980 Akira Kurosawa 1910 Volte-face 1997 John Woo 1946 Pulp Fiction 1995 Quentin Tarantino 1963 Titanic 1997 James Cameron 1954 Sacrifice 1986 Andrei Tarkovski 1932 Les probl\u00e8mes potentiels ont pour origine la redondance d'informations.","title":"Cons\u00e9quences d'un mauvais sch\u00e9ma"},{"location":"NSITerm/BDD/C8C2.html#comprendre-un-bon-schema-dune-base-de-donnees","text":"La base support pour cette section peut \u00eatre consult\u00e9e avec l'interface phpMyAdmin , en ouvrant la base Films_2 . Le mod\u00e8le relationnel poss\u00e8de un outil ( hors programme de terminale ) permettant d'\u00e9viter tous les probl\u00e8mes li\u00e9s \u00e0 la redondance: la normalisation . En l'appliquant au probl\u00e8me pr\u00e9c\u00e9dent on peut aboutir au sch\u00e9ma de base de donn\u00e9es Infos_films suivant: Film ( idFilm , titre, ann\u00e9e, genre, r\u00e9sum\u00e9, #idR\u00e9alisateur, #codePays) Pays ( code , nom, langue) Artiste ( idArtiste , nom, pr\u00e9nom, ann\u00e9eNaissance) R\u00f4le ( #idFilm, #idActeur , nomR\u00f4le) Internaute ( email , nom, pr\u00e9nom, r\u00e9gion) Notation ( #email, #idFilm , note) On peut d'abord noter que chaque relation poss\u00e8de une cl\u00e9 primaire, ce qui assure l'unicit\u00e9 des n-uplets. La cl\u00e9 \u00e9trang\u00e8re idR\u00e9alisateur dans Film r\u00e9f\u00e9rence la cl\u00e9 primaire idArtiste de Artiste . De m\u00eame, La cl\u00e9 \u00e9trang\u00e8re codePays dans Film r\u00e9f\u00e9rence la cl\u00e9 primaire code de Pays . Ainsi, connaissant un film on peut retrouver son r\u00e9alisateur ou son pays de production. On peut aussi utiliser une m\u00e9thode graphique visualiser les liens entre les diverses relations. R\u00e9f\u00e9rence : Cours base de donn\u00e9es de Philipe Rigaux","title":"Comprendre un (bon) sch\u00e9ma d'une base de donn\u00e9es"},{"location":"NSITerm/BDD/C8C3.html","text":"LANGAGE SQL \u2693\ufe0e Le langage \u2693\ufe0e SQL ou Structured Query Language est un langage standardis\u00e9 de dialogue avec une base de donn\u00e9es. C'est un langage d\u00e9claratif imp\u00e9ratif; on d\u00e9crit le quoi pas le comment . Conform\u00e9ment au programme, on va se limiter aux instructions d' interrogation et de mise \u00e0 jour . En d'autres termes, il s'agira: de demander des informations; d'extraire une partie des informations suivant des crit\u00e8res pr\u00e9cis; de modifier des donn\u00e9es (insertion ou suppression) Les requ\u00eates d'interrogation \u2693\ufe0e Une requ\u00eate qui permet d'obtenir tout ou une partie des attributs d'une relation ( projection en alg\u00e8bre relationnelle ) a une syntaxe du type: 1 SELECT attribut ( s ) FROM table ( s ) Application 1 Donner le sch\u00e9ma de la BDD Livres . Ecrire et tester la requ\u00eate SQL qui permet d'obtenir tous les titres de la relation livre . Combien de titres sont pr\u00e9sents? On peut rajouter une condition de restriction sur les informations extraites en utilisant la clause WHERE . La syntaxe devient alors: 1 SELECT attribut ( s ) FROM table ( s ) WHERE condition ( s ); Application 2.1 En utilisant la relation livre , \u00e9crire et tester la requ\u00eate SQL permettant d'obtenir toutes informations sur les livres publi\u00e9s par l'\u00e9diteur Dargaud . La condition peut \u00eatre exprim\u00e9e avec les op\u00e9rateur de comparaisons habituels mais aussi avec des op\u00e9rateurs de comparaison de texte comme LIKE . Application 2.2 Que produit la requ\u00eate: 1 SELECT titre FROM livre WHERE titre LIKE '%Ast\u00e9rix%' Si on d\u00e9sire obtenir les r\u00e9sultats dans un ordre particulier, on pourra utiliser la clause ORDER BY . La syntaxe est: 1 SELECT attribut ( s ) FROM table ( s ) WHERE condition ( s ) ORDER BY attribut ; Application 3 Ecrire et tester la requ\u00eate SQL permettant d'obtenir tous les titres de livres publi\u00e9s apr\u00e8s 1990, class\u00e9s par titre (on dit aussi ordre lexicographique ). Si on veut \u00e9viter les doublons, on ajoute le mot cl\u00e9 DISTINCT \u00e0 la clause SELECT . Application 4 Comparer les sorties des deux requ\u00eates suivantes: SELECT annee FROM livre; SELECT DISTINCT annee FROM livre; \u00c0 partir de la table emprunt , on peut obtenir la liste de tous les livres emprunt\u00e9s avec la requ\u00eate simple SELECT * FROM emprunt . Le r\u00e9sultat n'est tr\u00e8s exploitable. Il serait int\u00e9ressant d'avoir aussi les informations sur les livres \u00e0 partir de l'isbn de la table livre . Cette op\u00e9ration de fusion des tables emprunt et livre est appel\u00e9e jointure . La syntaxe g\u00e9n\u00e9rale d'une jointure en SQL est: 1 SELECT attribut ( s ) FROM table JOIN table_aux ON condition ( s ) Application 5 Tester la jointure des tables emprunt et livre avec la requ\u00eate suivante: SELECT * FROM emprunt JOIN livre ON emprunt.isbn=livre.isbn . Que r\u00e9alise la requ\u00eate ci-dessous? Tester. 1 2 3 SELECT livre . titre , emprunt . retour FROM emprunt JOIN livre ON emprunt . isbn = livre . isbn WHERE emprunt . retour < '2020-02-01' ; Les requ\u00eates de mise \u00e0 jour \u2693\ufe0e INSERT \u2693\ufe0e Une premi\u00e8re op\u00e9ration de mise \u00e0 jour consiste \u00e0 ins\u00e9rer des nouvelles entr\u00e9es dans une table. La syntaxe est: 1 INSERT INTO table VALUES ( liste de valeurs des attributs ) Application 6 Ins\u00e9rer une ligne de valeurs dans la table usager . V\u00e9rifier la mise \u00e0 jour. UPDATE \u2693\ufe0e Lorsqu'on souhaite modifier un ou plusieurs attributs, on utilise la clause UPDATE avec une syntaxe du type: 1 UPDATE table SET att1 = valeur1 , att2 = valeur2 , ..., attn = valeurn WHERE condition Par exemple, on peut mettre \u00e0 jour l'email de l'usager PAYET , dont code_barre = '934701281931117' avec la requ\u00eate: 1 UPDATE usager SET email = 'david@payet.re' WHERE code_barre = '934701281931117' Application 7 Proc\u00e9der \u00e0 la mise \u00e0 jour d'un ou plusieurs attributs dans l'enregistrement effectu\u00e9 \u00e0 l'application 6. DELETE \u2693\ufe0e On peut supprimer une ou plusieurs lignes d'une table avec la clause DELETE dont la syntaxe est la suivante: 1 DELETE FROM table WHERE condition Par exemple, si on veut supprimer l'usager PAYET , on peut utiliser la requ\u00eate: 1 DELETE FROM usager WHERE code_barre = '934701281931117' Remarque L'\u00e9xecution de cette requ\u00eate provoque une erreur dans le cadre de l'espace de travail du cours, l'administrateur ayant retir\u00e9 le droit d'utiliser la clause DELETE .","title":"Cours 3: Langage SQL"},{"location":"NSITerm/BDD/C8C3.html#langage-sql","text":"","title":"LANGAGE SQL"},{"location":"NSITerm/BDD/C8C3.html#le-langage","text":"SQL ou Structured Query Language est un langage standardis\u00e9 de dialogue avec une base de donn\u00e9es. C'est un langage d\u00e9claratif imp\u00e9ratif; on d\u00e9crit le quoi pas le comment . Conform\u00e9ment au programme, on va se limiter aux instructions d' interrogation et de mise \u00e0 jour . En d'autres termes, il s'agira: de demander des informations; d'extraire une partie des informations suivant des crit\u00e8res pr\u00e9cis; de modifier des donn\u00e9es (insertion ou suppression)","title":"Le langage"},{"location":"NSITerm/BDD/C8C3.html#les-requetes-dinterrogation","text":"Une requ\u00eate qui permet d'obtenir tout ou une partie des attributs d'une relation ( projection en alg\u00e8bre relationnelle ) a une syntaxe du type: 1 SELECT attribut ( s ) FROM table ( s ) Application 1 Donner le sch\u00e9ma de la BDD Livres . Ecrire et tester la requ\u00eate SQL qui permet d'obtenir tous les titres de la relation livre . Combien de titres sont pr\u00e9sents? On peut rajouter une condition de restriction sur les informations extraites en utilisant la clause WHERE . La syntaxe devient alors: 1 SELECT attribut ( s ) FROM table ( s ) WHERE condition ( s ); Application 2.1 En utilisant la relation livre , \u00e9crire et tester la requ\u00eate SQL permettant d'obtenir toutes informations sur les livres publi\u00e9s par l'\u00e9diteur Dargaud . La condition peut \u00eatre exprim\u00e9e avec les op\u00e9rateur de comparaisons habituels mais aussi avec des op\u00e9rateurs de comparaison de texte comme LIKE . Application 2.2 Que produit la requ\u00eate: 1 SELECT titre FROM livre WHERE titre LIKE '%Ast\u00e9rix%' Si on d\u00e9sire obtenir les r\u00e9sultats dans un ordre particulier, on pourra utiliser la clause ORDER BY . La syntaxe est: 1 SELECT attribut ( s ) FROM table ( s ) WHERE condition ( s ) ORDER BY attribut ; Application 3 Ecrire et tester la requ\u00eate SQL permettant d'obtenir tous les titres de livres publi\u00e9s apr\u00e8s 1990, class\u00e9s par titre (on dit aussi ordre lexicographique ). Si on veut \u00e9viter les doublons, on ajoute le mot cl\u00e9 DISTINCT \u00e0 la clause SELECT . Application 4 Comparer les sorties des deux requ\u00eates suivantes: SELECT annee FROM livre; SELECT DISTINCT annee FROM livre; \u00c0 partir de la table emprunt , on peut obtenir la liste de tous les livres emprunt\u00e9s avec la requ\u00eate simple SELECT * FROM emprunt . Le r\u00e9sultat n'est tr\u00e8s exploitable. Il serait int\u00e9ressant d'avoir aussi les informations sur les livres \u00e0 partir de l'isbn de la table livre . Cette op\u00e9ration de fusion des tables emprunt et livre est appel\u00e9e jointure . La syntaxe g\u00e9n\u00e9rale d'une jointure en SQL est: 1 SELECT attribut ( s ) FROM table JOIN table_aux ON condition ( s ) Application 5 Tester la jointure des tables emprunt et livre avec la requ\u00eate suivante: SELECT * FROM emprunt JOIN livre ON emprunt.isbn=livre.isbn . Que r\u00e9alise la requ\u00eate ci-dessous? Tester. 1 2 3 SELECT livre . titre , emprunt . retour FROM emprunt JOIN livre ON emprunt . isbn = livre . isbn WHERE emprunt . retour < '2020-02-01' ;","title":"Les requ\u00eates d'interrogation"},{"location":"NSITerm/BDD/C8C3.html#les-requetes-de-mise-a-jour","text":"","title":"Les requ\u00eates de mise \u00e0 jour"},{"location":"NSITerm/BDD/C8E1.html","text":"Mod\u00e8le relationnel - Exercices \u2693\ufe0e Relation livres \u2693\ufe0e Soit la relation LIVRES suivante: id titre auteur ann_publi note 1 1984 Orwell 1949 10 2 Dune Herbert 1965 8 3 Fondation Asimov 1951 9 4 Le meilleur des mondes Huxley 1931 7 5 Fahrenheit 451 Bradbury 1953 7 6 Ubik K. Dick 1969 9 7 Chroniques martiennes Bradbury 1950 8 8 La nuit des temps Barjavel 1968 7 9 Blade Runner K. Dick 1968 8 10 Les Robots Asimov 1950 9 11 La Plan\u00e8te des singes Boulle 1963 8 12 Ravage Barjavel 1943 8 13 Le Ma\u00eetre du Haut Ch\u00e2teau K. Dick 1962 8 14 Le monde des non-A Van Vogt 1945 7 15 La Fin de l'\u00e9ternit\u00e9 Asimov 1955 8 16 De la Terre \u00e0 la Lune Verne 1865 10 On justifiera toutes les r\u00e9ponses L'attribut note peut-il jouer le r\u00f4le de cl\u00e9 primaire ? L'attribut ann_publi peut-il jouer le r\u00f4le de cl\u00e9 primaire ? L'attribut auteur peut-il jouer le r\u00f4le de cl\u00e9 primaire ? L'attribut titre peut-il jouer le r\u00f4le de cl\u00e9 primaire ? Relation films \u2693\ufe0e En partant de la relation FILMS ci-dessous, cr\u00e9ez une relation REALISATEURS (attributs de la relation REALISATEURS : id, nom, prenom et ann_naissance, vous trouverez toutes les informations n\u00e9cessaires sur le Web). Modifiez ensuite la relation FILMS afin d'\u00e9tablir un lien entre les relations FILMS et REALISATEURS. Vous pr\u00e9ciserez l'attribut qui jouera le r\u00f4le de clef \u00e9trang\u00e8re. id titre realisateur ann_sortie note_sur_10 1 Alien, le huiti\u00e8me passager Scott 1979 10 2 Dune Lynch 1985 5 3 2001 : l'odyss\u00e9e de l'espace Kubrick 1968 9 4 Blade Runner Scott 1982 10 Extraits et adaptation des exercices du livre NSI Terminale \u00e9d. ellipses \u2693\ufe0e Exercice 140 On souhaite mod\u00e9liser un annuaire t\u00e9l\u00e9phonique simple dans lequel chaque personne ( identifi\u00e9e par son nom et son pr\u00e9nom ) est associ\u00e9e \u00e0 son num\u00e9ro de t\u00e9l\u00e9phone. Proposer une mod\u00e9lisation relationnelle de cet annuaire. Exercice 141 On souhaite \u00e9tablir la mod\u00e9lisation relationnelle d'un bulletin scolaire. Pour cela, on s'appuie sur trois relations Eleve , Matiere et Note ayant les propri\u00e9t\u00e9s suivantes: les \u00e9l\u00e8ves, poss\u00e9dent un num\u00e9ro d'identification alphanum\u00e9rique unique; les mati\u00e8res poss\u00e8dent un intitul\u00e9, mais sont parfois d\u00e9clin\u00e9es en ensemble de mati\u00e8res (par exemple l'enseignement scientique); il y aura une note sur 20, par mati\u00e8re et par \u00e9l\u00e8ve. \u00c9tablir le sch\u00e9ma de ces trois relations. On pr\u00e9cisera \u00e9ventuellement les contraintes qui ne peuvent \u00eatres inscrites dans les sch\u00e9mas des relations. Exercice 142 On consid\u00e8re la solution donn\u00e9e pour l'exercice 140. Dire si chacun des ensembles est une relation valide pour le sch\u00e9ma Annuaire . {} {( 'Titi ' , 'Toto', ' 0123456789 ' )} {('Titi', 'Toto', ' 0123456789 ' ), ('Doe', 'John', ' 0123456789 ')} {( 'Titi ', 'Toto', ' 0123456789 ' ), ( 'Titi ' , 'Toto', ' 987654343210 ' )} {( 'Titi ' , 'Toto', ' 0123456789 ' ), ('Doe', ' John' )} {('Titi', 'Toto', 42)} Exercice 143 On consid\u00e8re la solution donn\u00e9e pour l'exercice 141. Dire si chacun des ensembles est une relation valide pour le sch\u00e9ma de la base de donn\u00e9es du bulletin de notes. Proposition 1. Eleve = { } Matiere = { } Note = { } Proposition 2. Eleve = {( 'Titi ' , 'Toto', 'AB56789 ' ), } Matiere = {('NSI', 0), ( 'Sport ', 1)} Note = {(' AB56789 ' , 1, 17)} Proposition 3. Eleve = {('Titi', 'Toto', 'AB56789' ), } Matiere = {('NSI' ,0)} Note = {('AB56789' , 1,17)} Proposition 4. Eleve = {('Titi' , 'Toto', 'AB56789'), } Matiere = {('NS1' ,0),} Note= {('AB56789', 0, 17), ('AB56789', 0, 18) Proposition 5. Eleve = {('Titi' , 'Toto' , 'AB56789'), } Matiere= {('NSI', 0), ('Sport', 1)} Note= {('AB56789', 0, 17), ('AB56789' , 1, 17)} Exercice 144 On souhaite \u00e9tablir une mod\u00e9lisation relationnelle des d\u00e9partements fran\u00e7ais ainsi que leur(s) \u00e9ventuels d\u00e9partements voisins. Pour cela, on cr\u00e9\u00e9 deux relations Departement et Voisins en tenant compte des propri\u00e9t\u00e9s suivantes: pour chaque d\u00e9partement on veut pouvoir stocker son nom, son code, son chef-lieu. Attention, les codes de d\u00e9partement sont tous des nombres, sauf la Corse du Sud et la Haute Corse qui ont les codes 2A et 2B respectivement. Les d\u00e9partements d'Outre-Mer ont un code sur trois chiffres (de 971 \u00e0 976). les d\u00e9partements voisins seront repr\u00e9sent\u00e9s sous la forme de couple ( \\(d_1,d_2\\) ) o\u00f9 \\(d_1\\) et \\(d_2\\) sont les codes de deux d\u00e9partements et \\(d_1<d_2\\) . On supposera que l'on peut comparer des cha\u00eenes de caract\u00e8res. Donner le sch\u00e9ma relationnel de Departement et Voisins . Exercice 145 On souhaite mod\u00e9liser un r\u00e9seau de bus. Cette mod\u00e9lisation doit \u00eatre suffisamment riche pour permettre de g\u00e9n\u00e9rer, pour chaque arr\u00eat de bus du r\u00e9seau, une fiche horaire avec tous les horaires de passage de toutes les lignes de bus qui desservent l'arr\u00eat. Indications le r\u00e9seau est compos\u00e9 d' arr\u00eats de bus . Un arr\u00eat peut \u00eatre repr\u00e9sent\u00e9 par ses coordonn\u00e9es GPS (latitude et longitude), un nom et un identifiant unique; une ligne de bus est repr\u00e9sent\u00e9 par un num\u00e9ro unique et un nom; des horaires de passage . Pour chaque ligne et chaque arr\u00eat desservi par cette ligne, on stocke l'heure de passage et ainsi que l'indication semaine ou dimanche-jour f\u00e9ri\u00e9 . Proposer des sch\u00e9mas relationnels permettant cette mod\u00e9lisation Exercice 146 On consid\u00e8re deux relations: R ( (a: int) , (b: int), (c: int)); S ( #(a: int), (e: int) ) o\u00f9 l'attribut a de S est une cl\u00e9 \u00e9trang\u00e8re faisant r\u00e9f\u00e9rence \u00e0 a de R. Dire si les affirmations suivantes sont vraies ou fausses, en justifiant. Les a de R sont tous deux \u00e0 deux distincts. Les b de R sont tous deux \u00e0 deux distincts. Les a de S sont tous deux \u00e0 deux distincts. Les e de S sont tous deux \u00e0 deux distincts. S peut \u00eatre vide alors que R est non vide. R peut \u00eatre vide alors que S est non vide .","title":"Exercices 1: Sch\u00e9mas relationnels"},{"location":"NSITerm/BDD/C8E1.html#modele-relationnel-exercices","text":"","title":"Mod\u00e8le relationnel - Exercices"},{"location":"NSITerm/BDD/C8E1.html#relation-livres","text":"Soit la relation LIVRES suivante: id titre auteur ann_publi note 1 1984 Orwell 1949 10 2 Dune Herbert 1965 8 3 Fondation Asimov 1951 9 4 Le meilleur des mondes Huxley 1931 7 5 Fahrenheit 451 Bradbury 1953 7 6 Ubik K. Dick 1969 9 7 Chroniques martiennes Bradbury 1950 8 8 La nuit des temps Barjavel 1968 7 9 Blade Runner K. Dick 1968 8 10 Les Robots Asimov 1950 9 11 La Plan\u00e8te des singes Boulle 1963 8 12 Ravage Barjavel 1943 8 13 Le Ma\u00eetre du Haut Ch\u00e2teau K. Dick 1962 8 14 Le monde des non-A Van Vogt 1945 7 15 La Fin de l'\u00e9ternit\u00e9 Asimov 1955 8 16 De la Terre \u00e0 la Lune Verne 1865 10 On justifiera toutes les r\u00e9ponses L'attribut note peut-il jouer le r\u00f4le de cl\u00e9 primaire ? L'attribut ann_publi peut-il jouer le r\u00f4le de cl\u00e9 primaire ? L'attribut auteur peut-il jouer le r\u00f4le de cl\u00e9 primaire ? L'attribut titre peut-il jouer le r\u00f4le de cl\u00e9 primaire ?","title":"Relation livres"},{"location":"NSITerm/BDD/C8E1.html#relation-films","text":"En partant de la relation FILMS ci-dessous, cr\u00e9ez une relation REALISATEURS (attributs de la relation REALISATEURS : id, nom, prenom et ann_naissance, vous trouverez toutes les informations n\u00e9cessaires sur le Web). Modifiez ensuite la relation FILMS afin d'\u00e9tablir un lien entre les relations FILMS et REALISATEURS. Vous pr\u00e9ciserez l'attribut qui jouera le r\u00f4le de clef \u00e9trang\u00e8re. id titre realisateur ann_sortie note_sur_10 1 Alien, le huiti\u00e8me passager Scott 1979 10 2 Dune Lynch 1985 5 3 2001 : l'odyss\u00e9e de l'espace Kubrick 1968 9 4 Blade Runner Scott 1982 10","title":"Relation films"},{"location":"NSITerm/BDD/C8E1.html#extraits-et-adaptation-des-exercices-du-livre-nsi-terminale-ed-ellipses","text":"Exercice 140 On souhaite mod\u00e9liser un annuaire t\u00e9l\u00e9phonique simple dans lequel chaque personne ( identifi\u00e9e par son nom et son pr\u00e9nom ) est associ\u00e9e \u00e0 son num\u00e9ro de t\u00e9l\u00e9phone. Proposer une mod\u00e9lisation relationnelle de cet annuaire. Exercice 141 On souhaite \u00e9tablir la mod\u00e9lisation relationnelle d'un bulletin scolaire. Pour cela, on s'appuie sur trois relations Eleve , Matiere et Note ayant les propri\u00e9t\u00e9s suivantes: les \u00e9l\u00e8ves, poss\u00e9dent un num\u00e9ro d'identification alphanum\u00e9rique unique; les mati\u00e8res poss\u00e8dent un intitul\u00e9, mais sont parfois d\u00e9clin\u00e9es en ensemble de mati\u00e8res (par exemple l'enseignement scientique); il y aura une note sur 20, par mati\u00e8re et par \u00e9l\u00e8ve. \u00c9tablir le sch\u00e9ma de ces trois relations. On pr\u00e9cisera \u00e9ventuellement les contraintes qui ne peuvent \u00eatres inscrites dans les sch\u00e9mas des relations. Exercice 142 On consid\u00e8re la solution donn\u00e9e pour l'exercice 140. Dire si chacun des ensembles est une relation valide pour le sch\u00e9ma Annuaire . {} {( 'Titi ' , 'Toto', ' 0123456789 ' )} {('Titi', 'Toto', ' 0123456789 ' ), ('Doe', 'John', ' 0123456789 ')} {( 'Titi ', 'Toto', ' 0123456789 ' ), ( 'Titi ' , 'Toto', ' 987654343210 ' )} {( 'Titi ' , 'Toto', ' 0123456789 ' ), ('Doe', ' John' )} {('Titi', 'Toto', 42)} Exercice 143 On consid\u00e8re la solution donn\u00e9e pour l'exercice 141. Dire si chacun des ensembles est une relation valide pour le sch\u00e9ma de la base de donn\u00e9es du bulletin de notes. Proposition 1. Eleve = { } Matiere = { } Note = { } Proposition 2. Eleve = {( 'Titi ' , 'Toto', 'AB56789 ' ), } Matiere = {('NSI', 0), ( 'Sport ', 1)} Note = {(' AB56789 ' , 1, 17)} Proposition 3. Eleve = {('Titi', 'Toto', 'AB56789' ), } Matiere = {('NSI' ,0)} Note = {('AB56789' , 1,17)} Proposition 4. Eleve = {('Titi' , 'Toto', 'AB56789'), } Matiere = {('NS1' ,0),} Note= {('AB56789', 0, 17), ('AB56789', 0, 18) Proposition 5. Eleve = {('Titi' , 'Toto' , 'AB56789'), } Matiere= {('NSI', 0), ('Sport', 1)} Note= {('AB56789', 0, 17), ('AB56789' , 1, 17)} Exercice 144 On souhaite \u00e9tablir une mod\u00e9lisation relationnelle des d\u00e9partements fran\u00e7ais ainsi que leur(s) \u00e9ventuels d\u00e9partements voisins. Pour cela, on cr\u00e9\u00e9 deux relations Departement et Voisins en tenant compte des propri\u00e9t\u00e9s suivantes: pour chaque d\u00e9partement on veut pouvoir stocker son nom, son code, son chef-lieu. Attention, les codes de d\u00e9partement sont tous des nombres, sauf la Corse du Sud et la Haute Corse qui ont les codes 2A et 2B respectivement. Les d\u00e9partements d'Outre-Mer ont un code sur trois chiffres (de 971 \u00e0 976). les d\u00e9partements voisins seront repr\u00e9sent\u00e9s sous la forme de couple ( \\(d_1,d_2\\) ) o\u00f9 \\(d_1\\) et \\(d_2\\) sont les codes de deux d\u00e9partements et \\(d_1<d_2\\) . On supposera que l'on peut comparer des cha\u00eenes de caract\u00e8res. Donner le sch\u00e9ma relationnel de Departement et Voisins . Exercice 145 On souhaite mod\u00e9liser un r\u00e9seau de bus. Cette mod\u00e9lisation doit \u00eatre suffisamment riche pour permettre de g\u00e9n\u00e9rer, pour chaque arr\u00eat de bus du r\u00e9seau, une fiche horaire avec tous les horaires de passage de toutes les lignes de bus qui desservent l'arr\u00eat. Indications le r\u00e9seau est compos\u00e9 d' arr\u00eats de bus . Un arr\u00eat peut \u00eatre repr\u00e9sent\u00e9 par ses coordonn\u00e9es GPS (latitude et longitude), un nom et un identifiant unique; une ligne de bus est repr\u00e9sent\u00e9 par un num\u00e9ro unique et un nom; des horaires de passage . Pour chaque ligne et chaque arr\u00eat desservi par cette ligne, on stocke l'heure de passage et ainsi que l'indication semaine ou dimanche-jour f\u00e9ri\u00e9 . Proposer des sch\u00e9mas relationnels permettant cette mod\u00e9lisation Exercice 146 On consid\u00e8re deux relations: R ( (a: int) , (b: int), (c: int)); S ( #(a: int), (e: int) ) o\u00f9 l'attribut a de S est une cl\u00e9 \u00e9trang\u00e8re faisant r\u00e9f\u00e9rence \u00e0 a de R. Dire si les affirmations suivantes sont vraies ou fausses, en justifiant. Les a de R sont tous deux \u00e0 deux distincts. Les b de R sont tous deux \u00e0 deux distincts. Les a de S sont tous deux \u00e0 deux distincts. Les e de S sont tous deux \u00e0 deux distincts. S peut \u00eatre vide alors que R est non vide. R peut \u00eatre vide alors que S est non vide .","title":"Extraits et adaptation des exercices  du livre NSI Terminale \u00e9d. ellipses"},{"location":"NSITerm/BDD/C8TP1.html","text":"TP SQL \u2693\ufe0e Requ\u00eates simples, sans jointure \u2693\ufe0e Soit la base de donn\u00e9es de Livres disponible sur le serveur du professeur et d\u00e9j\u00e0 \u00e9tudi\u00e9e. Donner le code SQL de chacune des requ\u00eates ci-dessous. Les mots en police fixe donnent une indication sur les attributs et les tables \u00e0 utiliser dans la requ\u00eate. Tous les titre s de livre . Tous les nom s d' usager . Tous les nom s d' usager en retirant les doublons. Les titre s des livres publi\u00e9s avant 1980. Les titre s des livres dont le titre commence par la lettre \u00ab A \u00bb. Les isbn des livres \u00e0 rendre pour le 01/01/2020. Les nom s d' auteur s tri\u00e9s par ordre alphab\u00e9tique. Les nom s d' usager s vivant dans le 12e ou 13e arrondissement de Paris (codes postaux 75012 et 75013). Les nom s et adresse s des usagers n'habitant pas dans une rue. (la cha\u00eene \u00ab Rue \u00bb ne doit pas appara\u00eetre dans l'adresse). Les annee s et titre s des livre s publi\u00e9s lors d'une ann\u00e9e bissextile. On rappelle que ce sont les ann\u00e9es divisibles par 4, mais pas celles divisibles par 100 sauf si elles sont divisibles par 400. Requ\u00eates avanc\u00e9es avec jointure \u2693\ufe0e Soit la base de donn\u00e9es Livres utilis\u00e9e en cours et disponible en suivant le lien ci-dessus. Donner le code SQL de chacune des requ\u00eates ci-dessous. Les mots en police fixe donnent une indication sur les attributs et les tables \u00e0 utiliser dans la requ\u00eate. Le titre des livre s emprunt \u00e9s. Le titre des livre s emprunt \u00e9s \u00e0 rendre avant le 31/03/2020. Le nom et prenom de l'auteur du livre '1984' . Le nom et le prenom des usager s ayant emprunt\u00e9 des livres, sans doublons (c'est-\u00e0-dire si un usager a emprunt\u00e9 plusieurs livres, il ne doit appara\u00eetre qu'une fois dans le r\u00e9sultat). M\u00eame requ\u00eate que pr\u00e9c\u00e9demment, avec les noms tri\u00e9s par ordre alphab\u00e9tique.","title":"TP 1"},{"location":"NSITerm/BDD/C8TP1.html#tp-sql","text":"","title":"TP SQL"},{"location":"NSITerm/BDD/C8TP1.html#requetes-simples-sans-jointure","text":"Soit la base de donn\u00e9es de Livres disponible sur le serveur du professeur et d\u00e9j\u00e0 \u00e9tudi\u00e9e. Donner le code SQL de chacune des requ\u00eates ci-dessous. Les mots en police fixe donnent une indication sur les attributs et les tables \u00e0 utiliser dans la requ\u00eate. Tous les titre s de livre . Tous les nom s d' usager . Tous les nom s d' usager en retirant les doublons. Les titre s des livres publi\u00e9s avant 1980. Les titre s des livres dont le titre commence par la lettre \u00ab A \u00bb. Les isbn des livres \u00e0 rendre pour le 01/01/2020. Les nom s d' auteur s tri\u00e9s par ordre alphab\u00e9tique. Les nom s d' usager s vivant dans le 12e ou 13e arrondissement de Paris (codes postaux 75012 et 75013). Les nom s et adresse s des usagers n'habitant pas dans une rue. (la cha\u00eene \u00ab Rue \u00bb ne doit pas appara\u00eetre dans l'adresse). Les annee s et titre s des livre s publi\u00e9s lors d'une ann\u00e9e bissextile. On rappelle que ce sont les ann\u00e9es divisibles par 4, mais pas celles divisibles par 100 sauf si elles sont divisibles par 400.","title":"Requ\u00eates simples, sans jointure"},{"location":"NSITerm/BDD/C8TP1.html#requetes-avancees-avec-jointure","text":"Soit la base de donn\u00e9es Livres utilis\u00e9e en cours et disponible en suivant le lien ci-dessus. Donner le code SQL de chacune des requ\u00eates ci-dessous. Les mots en police fixe donnent une indication sur les attributs et les tables \u00e0 utiliser dans la requ\u00eate. Le titre des livre s emprunt \u00e9s. Le titre des livre s emprunt \u00e9s \u00e0 rendre avant le 31/03/2020. Le nom et prenom de l'auteur du livre '1984' . Le nom et le prenom des usager s ayant emprunt\u00e9 des livres, sans doublons (c'est-\u00e0-dire si un usager a emprunt\u00e9 plusieurs livres, il ne doit appara\u00eetre qu'une fois dans le r\u00e9sultat). M\u00eame requ\u00eate que pr\u00e9c\u00e9demment, avec les noms tri\u00e9s par ordre alphab\u00e9tique.","title":"Requ\u00eates avanc\u00e9es avec jointure"},{"location":"NSITerm/BDD/C8TP1Cor.html","text":"Correction du TP1 \u2693\ufe0e Requ\u00eates simples \u2693\ufe0e 1 2 3 4 5 6 7 8 9 10 SELECT titre FROM livre ; SELECT nom FROM usager ; SELECT DISTINCT nom FROM usager ; SELECT titre FROM livre WHERE annee <= 1980 ; SELECT titre FROM livre WHERE titre LIKE 'A%' ; SELECT isbn FROM emprunt WHERE retour = '2020-01-01' ; SELECT nom FROM auteur ORDER BY nom ; SELECT nom FROM usager WHERE cp = '75012' OR cp = '75013' ; SELECT nom , adresse FROM usager WHERE NOT ( adresse LIKE '%Rue%' ); SELECT annee , titre FROM livre WHERE annee % 4 = 0 AND ( annee % 100 <> 0 OR annee % 400 = 0 ); Requ\u00eates avec jointure \u2693\ufe0e 1 2 3 4 5 SELECT titre FROM livre JOIN emprunt ON livre . isbn = emprunt . isbn ; SELECT titre FROM livre JOIN emprunt ON livre . isbn = emprunt . isbn WHERE emprunt . retour <= '2020-03-31' ; SELECT nom , prenom FROM auteur JOIN auteur_de ON auteur_de . a_id = auteur . a_id JOIN livre ON livre . isbn = auteur_de . isbn WHERE livre . titre = '1984' ; SELECT DISTINCT nom , prenom FROM emprunt JOIN usager ON emprunt . code_barre = usager . code_barre ; SELECT DISTINCT nom , prenom FROM emprunt JOIN usager ON emprunt . code_barre = usager . code_barre ORDER BY nom ;","title":"Correction TP1"},{"location":"NSITerm/BDD/C8TP1Cor.html#correction-du-tp1","text":"","title":"Correction du TP1"},{"location":"NSITerm/BDD/C8TP1Cor.html#requetes-simples","text":"1 2 3 4 5 6 7 8 9 10 SELECT titre FROM livre ; SELECT nom FROM usager ; SELECT DISTINCT nom FROM usager ; SELECT titre FROM livre WHERE annee <= 1980 ; SELECT titre FROM livre WHERE titre LIKE 'A%' ; SELECT isbn FROM emprunt WHERE retour = '2020-01-01' ; SELECT nom FROM auteur ORDER BY nom ; SELECT nom FROM usager WHERE cp = '75012' OR cp = '75013' ; SELECT nom , adresse FROM usager WHERE NOT ( adresse LIKE '%Rue%' ); SELECT annee , titre FROM livre WHERE annee % 4 = 0 AND ( annee % 100 <> 0 OR annee % 400 = 0 );","title":"Requ\u00eates simples"},{"location":"NSITerm/BDD/C8TP1Cor.html#requetes-avec-jointure","text":"1 2 3 4 5 SELECT titre FROM livre JOIN emprunt ON livre . isbn = emprunt . isbn ; SELECT titre FROM livre JOIN emprunt ON livre . isbn = emprunt . isbn WHERE emprunt . retour <= '2020-03-31' ; SELECT nom , prenom FROM auteur JOIN auteur_de ON auteur_de . a_id = auteur . a_id JOIN livre ON livre . isbn = auteur_de . isbn WHERE livre . titre = '1984' ; SELECT DISTINCT nom , prenom FROM emprunt JOIN usager ON emprunt . code_barre = usager . code_barre ; SELECT DISTINCT nom , prenom FROM emprunt JOIN usager ON emprunt . code_barre = usager . code_barre ORDER BY nom ;","title":"Requ\u00eates avec jointure"},{"location":"NSITerm/BDD/C8TP2.html","text":"TP2 - Enigme \u00e0 r\u00e9soudre ... \u00e0 SQL City \u2693\ufe0e Un meurtre a eu lieu le 15 janvier 2018 \u00e0 SQL City. \u00c0 vous de r\u00e9soudre cette \u00e9gnime, rendez vous \u00e0 cette adresse .","title":"TP 2"},{"location":"NSITerm/BDD/C8TP2.html#tp2-enigme-a-resoudre-a-sql-city","text":"Un meurtre a eu lieu le 15 janvier 2018 \u00e0 SQL City. \u00c0 vous de r\u00e9soudre cette \u00e9gnime, rendez vous \u00e0 cette adresse .","title":"TP2 - Enigme \u00e0 r\u00e9soudre ... \u00e0 SQL City"},{"location":"NSITerm/BDD/C8TP2C.html","text":"R\u00e9solution de l'\u00e9nigme \u2693\ufe0e Informations sur le crime \u2693\ufe0e 1 SELECT * FROM crime_scene_report WHERE city = 'SQL City' AND type = 'murder' ; R\u00e9ponse: Security footage shows that there were 2 witnesses. The first witness lives at the last house on \"Northwestern Dr\". The second witness, named Annabel, lives somewhere on \"Franklin Ave\". Identification des t\u00e9moins \u2693\ufe0e 1 2 SELECT * FROM person WHERE address_street_name LIKE '%Northwestern Dr' ORDER BY address_number DESC LIMIT 1 ; R\u00e9ponse: id name license_id address_number address_street_name ssn 14887 Morty Schapiro 118009 4919 Northwestern Dr 111564949 1 2 SELECT * FROM person WHERE name LIKE '%Annabel%' and address_street_name LIKE '%Franklin Ave%' ; R\u00e9ponse: id name license_id address_number address_street_name ssn 16371 Annabel Miller 490173 103 Franklin Ave 318771143 Transcription des entretiens des t\u00e9moins \u2693\ufe0e 1 2 3 4 SELECT transcript FROM interview JOIN person ON interview . person_id = person . id WHERE person . address_street_name LIKE '%Northwestern Dr' ORDER BY person . address_number DESC LIMIT 1 ; R\u00e9ponse: transcript I heard a gunshot and then saw a man run out. He had a \"Get Fit Now Gym\" bag. The membership number on the bag started with \"48Z\". Only gold members have those bags. The man got into a car with a plate that included \"H42W\". 1 2 3 4 SELECT transcript FROM interview JOIN person ON interview . person_id = person . id WHERE name LIKE '%Annabel%' and address_street_name LIKE '%Franklin Ave%' ; R\u00e9ponse: transcript I saw the murder happen, and I recognized the killer from my gym when I was working out last week on January the 9th. Exploitation des entretiens \u2693\ufe0e 1 2 3 4 5 SELECT * FROM get_fit_now_check_in JOIN get_fit_now_member ON get_fit_now_check_in . membership_id = get_fit_now_member . id WHERE get_fit_now_check_in . check_in_date = 20180109 AND get_fit_now_member . membership_status = 'gold' ; R\u00e9ponse: membership_id check_in_date check_in_time check_out_time id person_id name membership_start_date membership_status XTE42 20180109 486 1124 XTE42 55662 Sarita Bartosh 20170524 gold 6LSTG 20180109 399 515 6LSTG 83186 Burton Grippe 20170214 gold GE5Q8 20180109 367 959 GE5Q8 92736 Carmen Dimick 20170618 gold 48Z7A 20180109 1600 1730 48Z7A 28819 Joe Germuska 20160305 gold 48Z55 20180109 1530 1700 48Z55 67318 Jeremy Bowers 20160101 gold 90081 20180109 1600 1700 90081 16371 Annabel Miller 20160208 gold 1 2 3 4 select * from drivers_license AS dl JOIN person ON person . license_id = dl . id WHERE dl . plate_number LIKE '%H42W%' AND dl . gender = 'male' ; R\u00e9ponse: id age height eye_color hair_color gender plate_number car_make car_model id name license_id address_number address_street_name ssn 664760 21 71 black black male 4H42WR Nissan Altima 51739 Tushar Chandra 664760 312 Phi St 137882671 423327 30 70 brown brown male 0H42W2 Chevrolet Spark LS 67318 Jeremy Bowers 423327 530 Washington Pl, Apt 3A 871539279 gold On en d\u00e9duit que l'assassin est tr\u00e8s certainement Jeremy Bowers . Entretien de Jeremy Bowers \u2693\ufe0e 1 2 3 SELECT transcript FROM interview JOIN person ON interview . person_id = person . id WHERE person . name = 'Jeremy Bowers' ; R\u00e9ponse: transcript I was hired by a woman with a lot of money. I don't know her name but I know she's around 5'5\" (65\") or 5'7\" (67\"). She has red hair and she drives a Tesla Model S. I know that she attended the SQL Symphony Concert 3 times in December 2017. Final \u2693\ufe0e 1 2 3 4 5 SELECT DISTINCT name FROM drivers_license AS dl JOIN person ON dl . id = person . license_id JOIN facebook_event_checkin ON facebook_event_checkin . person_id = person . id WHERE dl . gender = 'female' AND dl . hair_color = 'red' AND dl . car_make = 'Tesla' AND dl . height BETWEEN 65 AND 67 ; R\u00e9ponse: name Miranda Priestly","title":"Correction TP2"},{"location":"NSITerm/BDD/C8TP2C.html#resolution-de-lenigme","text":"","title":"R\u00e9solution de l'\u00e9nigme"},{"location":"NSITerm/BDD/C8TP2C.html#informations-sur-le-crime","text":"1 SELECT * FROM crime_scene_report WHERE city = 'SQL City' AND type = 'murder' ; R\u00e9ponse: Security footage shows that there were 2 witnesses. The first witness lives at the last house on \"Northwestern Dr\". The second witness, named Annabel, lives somewhere on \"Franklin Ave\".","title":"Informations sur le crime"},{"location":"NSITerm/BDD/C8TP2C.html#identification-des-temoins","text":"1 2 SELECT * FROM person WHERE address_street_name LIKE '%Northwestern Dr' ORDER BY address_number DESC LIMIT 1 ; R\u00e9ponse: id name license_id address_number address_street_name ssn 14887 Morty Schapiro 118009 4919 Northwestern Dr 111564949 1 2 SELECT * FROM person WHERE name LIKE '%Annabel%' and address_street_name LIKE '%Franklin Ave%' ; R\u00e9ponse: id name license_id address_number address_street_name ssn 16371 Annabel Miller 490173 103 Franklin Ave 318771143","title":"Identification des t\u00e9moins"},{"location":"NSITerm/BDD/C8TP2C.html#transcription-des-entretiens-des-temoins","text":"1 2 3 4 SELECT transcript FROM interview JOIN person ON interview . person_id = person . id WHERE person . address_street_name LIKE '%Northwestern Dr' ORDER BY person . address_number DESC LIMIT 1 ; R\u00e9ponse: transcript I heard a gunshot and then saw a man run out. He had a \"Get Fit Now Gym\" bag. The membership number on the bag started with \"48Z\". Only gold members have those bags. The man got into a car with a plate that included \"H42W\". 1 2 3 4 SELECT transcript FROM interview JOIN person ON interview . person_id = person . id WHERE name LIKE '%Annabel%' and address_street_name LIKE '%Franklin Ave%' ; R\u00e9ponse: transcript I saw the murder happen, and I recognized the killer from my gym when I was working out last week on January the 9th.","title":"Transcription des entretiens des t\u00e9moins"},{"location":"NSITerm/BDD/C8TP2C.html#exploitation-des-entretiens","text":"1 2 3 4 5 SELECT * FROM get_fit_now_check_in JOIN get_fit_now_member ON get_fit_now_check_in . membership_id = get_fit_now_member . id WHERE get_fit_now_check_in . check_in_date = 20180109 AND get_fit_now_member . membership_status = 'gold' ; R\u00e9ponse: membership_id check_in_date check_in_time check_out_time id person_id name membership_start_date membership_status XTE42 20180109 486 1124 XTE42 55662 Sarita Bartosh 20170524 gold 6LSTG 20180109 399 515 6LSTG 83186 Burton Grippe 20170214 gold GE5Q8 20180109 367 959 GE5Q8 92736 Carmen Dimick 20170618 gold 48Z7A 20180109 1600 1730 48Z7A 28819 Joe Germuska 20160305 gold 48Z55 20180109 1530 1700 48Z55 67318 Jeremy Bowers 20160101 gold 90081 20180109 1600 1700 90081 16371 Annabel Miller 20160208 gold 1 2 3 4 select * from drivers_license AS dl JOIN person ON person . license_id = dl . id WHERE dl . plate_number LIKE '%H42W%' AND dl . gender = 'male' ; R\u00e9ponse: id age height eye_color hair_color gender plate_number car_make car_model id name license_id address_number address_street_name ssn 664760 21 71 black black male 4H42WR Nissan Altima 51739 Tushar Chandra 664760 312 Phi St 137882671 423327 30 70 brown brown male 0H42W2 Chevrolet Spark LS 67318 Jeremy Bowers 423327 530 Washington Pl, Apt 3A 871539279 gold On en d\u00e9duit que l'assassin est tr\u00e8s certainement Jeremy Bowers .","title":"Exploitation des entretiens"},{"location":"NSITerm/BDD/C8TP2C.html#entretien-de-jeremy-bowers","text":"1 2 3 SELECT transcript FROM interview JOIN person ON interview . person_id = person . id WHERE person . name = 'Jeremy Bowers' ; R\u00e9ponse: transcript I was hired by a woman with a lot of money. I don't know her name but I know she's around 5'5\" (65\") or 5'7\" (67\"). She has red hair and she drives a Tesla Model S. I know that she attended the SQL Symphony Concert 3 times in December 2017.","title":"Entretien de Jeremy Bowers"},{"location":"NSITerm/BDD/C8TP2C.html#final","text":"1 2 3 4 5 SELECT DISTINCT name FROM drivers_license AS dl JOIN person ON dl . id = person . license_id JOIN facebook_event_checkin ON facebook_event_checkin . person_id = person . id WHERE dl . gender = 'female' AND dl . hair_color = 'red' AND dl . car_make = 'Tesla' AND dl . height BETWEEN 65 AND 67 ; R\u00e9ponse: name Miranda Priestly","title":"Final"},{"location":"NSITerm/BDD/CorC8.html","text":"Correction \u2693\ufe0e Application 3 \u2693\ufe0e LIVRES ( ( id INT) , ( titre STRING), #( id_auteur INT), ( ann_publi INT), ( note INT)) AUTEURS ( ( id INT) , ( nom STRING), ( prenom STRING), ( ann_naissance INT), ( titre STRING)) Relation Livres \u2693\ufe0e 1, 2 et 3 impossible \u00e0 cause d'une contrainte de non unicit\u00e9. titre est possible ici mais c'est quand m\u00eame une tr\u00e8s mauvaise id\u00e9e. Relation Films \u2693\ufe0e Pour all\u00e9ger l'\u00e9criture, on ne fera pas apparaitre les domaines ici. REALISATEURS( id , nom, prenom et ann_naissance) id nom prenom ann_naissance 1 Scott Ridley 1937 2 Lynch David 1946 3 Kubrick Stanley 1928 Le sch\u00e9ma de la relation FILMS est alors modifi\u00e9 en: Films ( id , titre, #idrealisateur, ann_sortie, note_sur_10) id titre idrealisateur ann_sortie note_sur_10 1 Alien, le huiti\u00e8me passager 1 1979 10 2 Dune 2 1985 5 3 2001 : l'odyss\u00e9e de l'espace 3 1968 9 4 Blade Runner 1 1982 10 Exercice 140 \u2693\ufe0e Annuaire (( nom STRING), ( prenom STRING), ( tel STRING) ) Exercice 141 \u2693\ufe0e Eleve (( nom STRING), ( prenom STRING), ( id STRING) ) Matiere (( intitule STRING), ( id_mat INT) ) Note ( #( id_eleve STRING), #( id_mat INT) , note FLOAT) Exercice 144 \u2693\ufe0e Departement (( nom STRING), ( chef_lieu STRING), ( code STRING) ) Voisins ( #( code_d1 STRING), #( code_d2 STRING) Exercice 145 \u2693\ufe0e Arret (( lat FLOAT), ( lon FLOAT), ( nom STRING), ( id INT) ) Ligne ( ( num INT) , ( nom STRING)) Horaire ( #( num INT), #( id INT), ( heure TIME), ( jour STRING) ) 1","title":"Correction Ex. 1"},{"location":"NSITerm/BDD/CorC8.html#correction","text":"","title":"Correction"},{"location":"NSITerm/BDD/CorC8.html#application-3","text":"LIVRES ( ( id INT) , ( titre STRING), #( id_auteur INT), ( ann_publi INT), ( note INT)) AUTEURS ( ( id INT) , ( nom STRING), ( prenom STRING), ( ann_naissance INT), ( titre STRING))","title":"Application 3"},{"location":"NSITerm/BDD/CorC8.html#relation-livres","text":"1, 2 et 3 impossible \u00e0 cause d'une contrainte de non unicit\u00e9. titre est possible ici mais c'est quand m\u00eame une tr\u00e8s mauvaise id\u00e9e.","title":"Relation Livres"},{"location":"NSITerm/BDD/CorC8.html#relation-films","text":"Pour all\u00e9ger l'\u00e9criture, on ne fera pas apparaitre les domaines ici. REALISATEURS( id , nom, prenom et ann_naissance) id nom prenom ann_naissance 1 Scott Ridley 1937 2 Lynch David 1946 3 Kubrick Stanley 1928 Le sch\u00e9ma de la relation FILMS est alors modifi\u00e9 en: Films ( id , titre, #idrealisateur, ann_sortie, note_sur_10) id titre idrealisateur ann_sortie note_sur_10 1 Alien, le huiti\u00e8me passager 1 1979 10 2 Dune 2 1985 5 3 2001 : l'odyss\u00e9e de l'espace 3 1968 9 4 Blade Runner 1 1982 10","title":"Relation Films"},{"location":"NSITerm/BDD/CorC8.html#exercice-140","text":"Annuaire (( nom STRING), ( prenom STRING), ( tel STRING) )","title":"Exercice 140"},{"location":"NSITerm/BDD/CorC8.html#exercice-141","text":"Eleve (( nom STRING), ( prenom STRING), ( id STRING) ) Matiere (( intitule STRING), ( id_mat INT) ) Note ( #( id_eleve STRING), #( id_mat INT) , note FLOAT)","title":"Exercice 141"},{"location":"NSITerm/BDD/CorC8.html#exercice-144","text":"Departement (( nom STRING), ( chef_lieu STRING), ( code STRING) ) Voisins ( #( code_d1 STRING), #( code_d2 STRING)","title":"Exercice 144"},{"location":"NSITerm/BDD/CorC8.html#exercice-145","text":"Arret (( lat FLOAT), ( lon FLOAT), ( nom STRING), ( id INT) ) Ligne ( ( num INT) , ( nom STRING)) Horaire ( #( num INT), #( id INT), ( heure TIME), ( jour STRING) ) 1","title":"Exercice 145"},{"location":"NSITerm/EP/EP260123.html","text":"Entra\u00eenement \u00e9preuve pratique NSI - 26/01/23 \u2693\ufe0e Exercice 1 \u2693\ufe0e Programmer la fonction multiplication , prenant en param\u00e8tres deux nombres entiers n1 et n2 , et qui renvoie le produit de ces deux nombres. Attention Les seules op\u00e9rations autoris\u00e9es sont l\u2019addition et la soustraction. Exemples : 1 2 3 4 5 6 7 8 >>> multiplication ( 3 , 5 ) 15 >>> multiplication ( - 4 , - 8 ) 32 >>> multiplication ( - 2 , 6 ) - 12 >>> multiplication ( - 2 , 0 ) 0 Exercice 2 \u2693\ufe0e Soit t un tableau non vide d'entiers tri\u00e9s dans l'ordre croissant et n un entier. La fonction chercher doit renvoyer l'indice o\u00f9 la valeur n appara\u00eet \u00e9ventuellement dans t , et None si n n'appartient pas \u00e0 t . Les param\u00e8tres de la fonction sont : t , le tableau dans lequel s'effectue la recherche ; n , l'entier \u00e0 chercher dans le tableau ; La fonction auxilliaire recherche_dichotomique est une fonction r\u00e9cursive bas\u00e9e sur le principe \u00abdiviser pour r\u00e9gner\u00bb. Recopier et compl\u00e9ter lorsque cela est n\u00e9cessaire les fonctions recherche_dichotomique et chercher propos\u00e9es ci-dessous : 1 2 3 4 5 6 7 8 9 10 11 12 13 def recherche_dichotomique ( t , n , i , j ): if j < i : return None m = ( i + j ) // ... if t [ m ] < ... : return recherche_dichotomique ( t , n , ... , ... ) elif ... : return recherche_dichotomique ( t , n , ... , ... ) else : return ... def chercher ( t , n ): return recherche_dichotomique ( t , n , 0 , len ( t ) - 1 ) L'ex\u00e9cution du code doit donner : 1 2 3 4 5 >>> chercher ([ 1 , 5 , 6 , 6 , 9 , 12 ], 7 ) >>> chercher ([ 1 , 5 , 6 , 6 , 9 , 12 ], 9 ) 4 >>> chercher ([ 1 , 5 , 6 , 6 , 9 , 12 ], 6 ) 2","title":"EP 26 janvier"},{"location":"NSITerm/EP/EP260123.html#entrainement-epreuve-pratique-nsi-260123","text":"","title":"Entra\u00eenement \u00e9preuve pratique NSI - 26/01/23"},{"location":"NSITerm/EP/EP260123.html#exercice-1","text":"Programmer la fonction multiplication , prenant en param\u00e8tres deux nombres entiers n1 et n2 , et qui renvoie le produit de ces deux nombres. Attention Les seules op\u00e9rations autoris\u00e9es sont l\u2019addition et la soustraction. Exemples : 1 2 3 4 5 6 7 8 >>> multiplication ( 3 , 5 ) 15 >>> multiplication ( - 4 , - 8 ) 32 >>> multiplication ( - 2 , 6 ) - 12 >>> multiplication ( - 2 , 0 ) 0","title":"Exercice 1"},{"location":"NSITerm/EP/EP260123.html#exercice-2","text":"Soit t un tableau non vide d'entiers tri\u00e9s dans l'ordre croissant et n un entier. La fonction chercher doit renvoyer l'indice o\u00f9 la valeur n appara\u00eet \u00e9ventuellement dans t , et None si n n'appartient pas \u00e0 t . Les param\u00e8tres de la fonction sont : t , le tableau dans lequel s'effectue la recherche ; n , l'entier \u00e0 chercher dans le tableau ; La fonction auxilliaire recherche_dichotomique est une fonction r\u00e9cursive bas\u00e9e sur le principe \u00abdiviser pour r\u00e9gner\u00bb. Recopier et compl\u00e9ter lorsque cela est n\u00e9cessaire les fonctions recherche_dichotomique et chercher propos\u00e9es ci-dessous : 1 2 3 4 5 6 7 8 9 10 11 12 13 def recherche_dichotomique ( t , n , i , j ): if j < i : return None m = ( i + j ) // ... if t [ m ] < ... : return recherche_dichotomique ( t , n , ... , ... ) elif ... : return recherche_dichotomique ( t , n , ... , ... ) else : return ... def chercher ( t , n ): return recherche_dichotomique ( t , n , 0 , len ( t ) - 1 ) L'ex\u00e9cution du code doit donner : 1 2 3 4 5 >>> chercher ([ 1 , 5 , 6 , 6 , 9 , 12 ], 7 ) >>> chercher ([ 1 , 5 , 6 , 6 , 9 , 12 ], 9 ) 4 >>> chercher ([ 1 , 5 , 6 , 6 , 9 , 12 ], 6 ) 2","title":"Exercice 2"},{"location":"NSITerm/LP2/C12C1.html","text":"PARADIGMES DE PROGRAMMATION \u2693\ufe0e Introduction \u2693\ufe0e Un paradigme de programmation est une fa\u00e7on de s'organiser pour concevoir un programme informatique. On peut le voir comme un style de programmation. C'est un crit\u00e8re d\u00e9terminant pour le choix d'un langage. Il existe de tr\u00e8s nombreux paradigmes de programmation (voir wikipedia ou ce document concernant le sujet). Dans le cadre du programme de terminale, on aborde sommairement les caract\u00e9ristiques des paradigmes fonctionnels et orient\u00e9 objet en plus du paradigme imp\u00e9ratif ( plus connu et plus utilis\u00e9 par les \u00e9l\u00e8ves ). Enfin, on le constatera avec python, les grands langages g\u00e9n\u00e9ralistes actuels sont multi-paradigmes. Programmation imp\u00e9rative \u2693\ufe0e Les caract\u00e9ristiques \u2693\ufe0e Dans le style imp\u00e9ratif, un programme correspond \u00e0 une s\u00e9quence d'instructions , qui repr\u00e9sentent les actions \u00e0 r\u00e9aliser. La notion de variable est importante. Elle correspond \u00e0 une zone m\u00e9moire que l'on pourra lire et modifier . Cette modification de la m\u00e9moire est aussi appel\u00e9e effet de bord . On utilise abondamment des structures de boucle ( for , while , etc.). Les fonctions peuvent exister mais n'ont pas le m\u00eame sens qu'en math\u00e9matique. Elles peuvent \u00eatre vues comme des blocs destin\u00e9s \u00e0 mieux structurer et factoriser le code. Les fonctions qui ne renvoient pas de valeurs sont souvent nomm\u00e9es proc\u00e9dures . Parmi les grands langages imp\u00e9ratifs, on peut citer: Fortran cr\u00e9\u00e9 par John Backus en 1954; le langage C cr\u00e9\u00e9 par Dennis Ritchie en 1972. Python permet la programmation imp\u00e9rative. C'est ce que l'on fait depuis la premi\u00e8re, voire la classe de seconde ... Exemple de probl\u00e8me r\u00e9solu dans le style imp\u00e9ratif avec Python \u2693\ufe0e Concevoir un programme qui calcule la somme des \u00e9l\u00e9ments d'un tableau ( sans utiliser la fonction sum de Python \u00e9videmment !! ). 1 2 3 4 5 6 def somme_i ( t ): # A compl\u00e9ter pass # Decommenter #sommei(t) 1 2 t = [ 2 , 8 , 9 , 18 , 15 ] assert somme_i ( t ) == 52 Vers l'infini et ... les fonctions: la programmation fonctionnelle \u2693\ufe0e Les caract\u00e9ristiques \u2693\ufe0e Dans le style fonctionnel, un programme est une suite de d\u00e9clarations ( de fonctions ) suivi d'une expression . D'ailleurs on parle souvent de paradigme d\u00e9claratif. Une expression est une combinaison d'\u00e9l\u00e9ments du langage qui renvoie une valeur. Le programme consiste \u00e0 \u00e9valuer cette expression . On peut noter deux premi\u00e8res caract\u00e9ristiques importantes: l'absence d' effets de bords ; pour les m\u00eames entr\u00e9es, le programme fournira la m\u00eame sortie ( on trouve souvent le terme de transparence r\u00e9f\u00e9rentielle ). Les fonctions ( au sens math\u00e9matique du terme ici ) jouent un r\u00f4le tr\u00e8s important. Elles peuvent \u00eatre des expressions , pass\u00e9es en param\u00e8tres \u00e0 d'autres fonctions et m\u00eame \u00eatre renvoy\u00e9es par d'autre fonctions ! Parmi les grands langages fonctionnels, on peut citer: Lisp cr\u00e9\u00e9 par John Mc Carthy en 1958; Ocaml cr\u00e9\u00e9 par Xavier Leroy en 1996; Haskell cr\u00e9\u00e9 par une communaut\u00e9 de d\u00e9veloppeur en 1990. Son nom a \u00e9t\u00e9 donn\u00e9 en r\u00e9f\u00e9rence au math\u00e9maticien Haskell Curry . Python impl\u00e9mente des caract\u00e9ristiques d'un langage fonctionnnel. Voir documentation officielle . Exemple \u2693\ufe0e On reprend le m\u00eame probl\u00e8me que celui donn\u00e9 au paragraphe pr\u00e9c\u00e9dent, mais cette fois on demande d'\u00e9crire une solution en style fonctionnel. Une premi\u00e8re solution consiste \u00e0 utiliser la r\u00e9cursivit\u00e9: la somme des \u00e9l\u00e9ments du tableau est la somme de son premier terme et du reste du tableau. On pose par convention que la somme des \u00e9l\u00e9ments d'un tableau vide vaut 0. 1 2 3 def somme_func1 ( t ): # A compl\u00e9ter pass 1 assert somme_func1 ([ 2 , 8 , 9 , 18 , 15 ]) == 52 On peut aussi vouloir \u00e9viter le slicing: 1 2 3 4 5 6 def somme_func2 ( t ): def somme_rec ( tab , taille ): return 0 if taille == 0 else tab [ taille - 1 ] + somme_rec ( tab , taille - 1 ) return somme_rec ( t , len ( t )) somme_func2 ([ 2 , 8 , 9 , 18 , 15 ]) 1 52 Remarque : dans le style fonctionnel on adopte fr\u00e9quemment une \u00e9criture plus concise, du type: return expr if ... else ... (voir ci-dessous). Les briques de la programmation fonctionnelle \u2693\ufe0e Les fonctions anonymes \u2693\ufe0e Dans un langage fonctionnel, une fonction est une expression comme une autre, qui peut donc \u00eatre pass\u00e9e en param\u00e8tre ou renvoy\u00e9e comme r\u00e9sultat. En Python, une fonction peut \u00eatre \u00e9crite par la notation lambda ( puis \u00eatre nomm\u00e9e, ... ou pas ). 1 2 3 4 5 6 7 8 9 informaticiens = [ { 'nom' : 'Steve Jobs' , 'naissance' : 1955 , 'deces' : 2011 }, { 'nom' : 'Alan Turing' , 'naissance' : 1912 , 'deces' : 1954 }, { 'nom' : 'John Von Neumann' , 'naissance' : 1903 , 'deces' : 1957 }, { 'nom' : 'John McCarty' , 'naissance' : 1927 , 'deces' : 2011 }, { 'nom' : 'John Backus' , 'naissance' : 1924 , 'deces' : 2007 }, ] sorted ( informaticiens , key = lambda x : x [ 'naissance' ]) 1 2 3 4 5 [{'nom': 'John Von Neumann', 'naissance': 1903, 'deces': 1957}, {'nom': 'Alan Turing', 'naissance': 1912, 'deces': 1954}, {'nom': 'John Backus', 'naissance': 1924, 'deces': 2007}, {'nom': 'John McCarty', 'naissance': 1927, 'deces': 2011}, {'nom': 'Steve Jobs', 'naissance': 1955, 'deces': 2011}] 1 sorted ( informaticiens , key = lambda x : x [ 'nom' ]) 1 2 3 4 5 [{'nom': 'Alan Turing', 'naissance': 1912, 'deces': 1954}, {'nom': 'John Backus', 'naissance': 1924, 'deces': 2007}, {'nom': 'John McCarty', 'naissance': 1927, 'deces': 2011}, {'nom': 'John Von Neumann', 'naissance': 1903, 'deces': 1957}, {'nom': 'Steve Jobs', 'naissance': 1955, 'deces': 2011}] Les fonctions d'ordre sup\u00e9rieur \u2693\ufe0e Il s'agit de fonctions qui prennent une ou plusieurs fonctions en param\u00e8tres et qui renvoient une fonction. 1 2 3 4 5 6 7 8 from math import sin def derive ( h , f ): return lambda x : ( f ( x + h ) - f ( x )) / h fprime = derive ( 1e-6 , sin ) [ fprime ( 0 ), fprime ( 1.5708 ), fprime ( 3.14159 )] 1 [0.9999999999998334, -4.173106304961038e-06, -1.0000000001374174] Les outils de python \u2693\ufe0e Comme tous les langages fonctionnels, Python poss\u00e8de trois fonctions d'ordre sup\u00e9rieur tr\u00e8s utilis\u00e9es ( en programmation fonctionnelle ): map , filter et reduce . Hors programme Ces fonctions ne sont pas strictement au programme, n\u00e9anmoins les exemples suivants pourront profiter \u00e0 tout \u00e9l\u00e8ve curieux. map map prend une fonction et un it\u00e9rable et applique la fonction \u00e0 chaque \u00e9l\u00e9ment de l'it\u00e9rable. 1 2 3 ma_liste = [ 1 , 2 , 5 , 10 ] mes_carres = map ( lambda x : x ** 2 , ma_liste ) list ( mes_carres ) 1 [1, 4, 25, 100] filter filter prend une fonction f et un it\u00e9rable en param\u00e8tre. Elle renvoie une s\u00e9quence ne comprenant que les \u00e9l\u00e9ments de l'it\u00e9rable o\u00f9 f(element) est vrai. 1 2 plus_anciens = filter ( lambda x : x [ 'deces' ] > 2000 , informaticiens ) list ( plus_anciens ) 1 2 3 [{'nom': 'Steve Jobs', 'naissance': 1955, 'deces': 2011}, {'nom': 'John McCarty', 'naissance': 1927, 'deces': 2011}, {'nom': 'John Backus', 'naissance': 1924, 'deces': 2007}] reduce reduce applique une technique math\u00e9matique appel\u00e9e r\u00e9duction . Typiquement reduce(f, [1, 2, 3, 4]) va calculer f(f(f(1, 2), 3), 4) 1 2 3 4 5 from functools import reduce def somme_func3 ( t ): return reduce ( lambda x , y : x + y , t ) 1 somme_func3 ([ 2 , 8 , 9 , 18 , 15 ]) 1 52 On peut encore raccourcir l'\u00e9criture: 1 2 somme_func4 = lambda t : reduce ( lambda x , y : x + y , t ) somme_func4 ([ 2 , 8 , 9 , 18 , 15 ]) 1 52 Programmation orient\u00e9e objet \u2693\ufe0e Les caract\u00e9ristiques \u2693\ufe0e Ce paradigme est bas\u00e9 sur la notion d'objet qui peut \u00eatre vu comme une zone m\u00e9moire qui poss\u00e8de ses propres attributs et m\u00e9thodes. L'objet expose uniquement les m\u00e9thodes pr\u00e9vues dans son interface, tout en cachant les d\u00e9tails d'impl\u00e9mentations. C'est le m\u00e9canisme d'encapsulation . L'objet est construit \u00e0 partir de classes ( dans beaucoup de langages ). D'autres aspects importants caract\u00e9risant la POO peuvent \u00eatre cit\u00e9s mais sont clairement exclus du programme de terminal. Parmi les grands langages orient\u00e9s objet, on peut citer: C++ qui peut \u00eatre vu comme une extension du langage C, cr\u00e9\u00e9 en 1983 par Bjarne Stroustrup ; Java cr\u00e9\u00e9 en 1990 par James Gosling ; Python cr\u00e9\u00e9 1991 par Guido van Rossum . Exemple \u2693\ufe0e On r\u00e9soud le m\u00eame probl\u00e8me qu'aux deux paragraphes pr\u00e9c\u00e9dents. 1 2 tab = Tableau ([ 2 , 8 , 9 , 18 , 15 ]) tab . somme () Choisir un paradigme \u2693\ufe0e Le choix d'un paradigme, puis d'un langage, d\u00e9pend fortement de la nature du probl\u00e8me \u00e0 r\u00e9soudre et de l'exp\u00e9rience du programmeur. Pour les probl\u00e8mes o\u00f9 l'algorithme laisse clairement appara\u00eetre une liste d'actions, la programmation imp\u00e9rative est un bon choix. Si le probl\u00e8me \u00e0 r\u00e9soudre fait appara\u00eetre des interactions entre entit\u00e9s et surtout si c'est un gros projet, la programmation orient\u00e9 objet est probablement \u00e0 privil\u00e9gier.","title":"Cours 1: Paradigmes imp\u00e9ratif, fonctionnel et objet"},{"location":"NSITerm/LP2/C12C1.html#paradigmes-de-programmation","text":"","title":"PARADIGMES DE PROGRAMMATION"},{"location":"NSITerm/LP2/C12C1.html#introduction","text":"Un paradigme de programmation est une fa\u00e7on de s'organiser pour concevoir un programme informatique. On peut le voir comme un style de programmation. C'est un crit\u00e8re d\u00e9terminant pour le choix d'un langage. Il existe de tr\u00e8s nombreux paradigmes de programmation (voir wikipedia ou ce document concernant le sujet). Dans le cadre du programme de terminale, on aborde sommairement les caract\u00e9ristiques des paradigmes fonctionnels et orient\u00e9 objet en plus du paradigme imp\u00e9ratif ( plus connu et plus utilis\u00e9 par les \u00e9l\u00e8ves ). Enfin, on le constatera avec python, les grands langages g\u00e9n\u00e9ralistes actuels sont multi-paradigmes.","title":"Introduction"},{"location":"NSITerm/LP2/C12C1.html#programmation-imperative","text":"","title":"Programmation imp\u00e9rative"},{"location":"NSITerm/LP2/C12C1.html#vers-linfini-et-les-fonctions-la-programmation-fonctionnelle","text":"","title":"Vers l'infini et ... les fonctions: la programmation fonctionnelle"},{"location":"NSITerm/LP2/C12C1.html#programmation-orientee-objet","text":"","title":"Programmation orient\u00e9e objet"},{"location":"NSITerm/LP2/C12C1.html#choisir-un-paradigme","text":"Le choix d'un paradigme, puis d'un langage, d\u00e9pend fortement de la nature du probl\u00e8me \u00e0 r\u00e9soudre et de l'exp\u00e9rience du programmeur. Pour les probl\u00e8mes o\u00f9 l'algorithme laisse clairement appara\u00eetre une liste d'actions, la programmation imp\u00e9rative est un bon choix. Si le probl\u00e8me \u00e0 r\u00e9soudre fait appara\u00eetre des interactions entre entit\u00e9s et surtout si c'est un gros projet, la programmation orient\u00e9 objet est probablement \u00e0 privil\u00e9gier.","title":"Choisir un paradigme"},{"location":"NSITerm/LP2/C12E1.html","text":"Paradigmes de programmation - Exercices \u2693\ufe0e Savoir distinguer les paradigmes \u2693\ufe0e En s'inspirant du cours, proposer un code python donnant le maximum d'un tableau ( objet de type list ), dans: le paradigme imp\u00e9ratif; le paradigme objet; le paradigme fonctionnel Voyager en 1re classe avec les fonctions \u2693\ufe0e Les fonctions sont des valeurs comme les autres. Elles peuvent \u00eatre pass\u00e9es en arguments , renvoy\u00e9es comme r\u00e9sultat ou encore stock\u00e9es comme des donn\u00e9es . Exemple 1 \u2693\ufe0e a) \u00c9crire une fonction compose(f, g) qui re\u00e7oit en arguments deux fonctions f et g et qui renvoie une fonction qui est la composition de f et g c'est-\u00e0-dire une fonction telle que: \\(\\begin{array}{ccccc} h & : & \\mathbb{R} & \\to & \\mathbb{R} \\\\ & & x & \\mapsto & f\\circ g\\ (x)=f(g(x)) \\\\ \\end{array}\\) b) Tester votre fonction. c) \u00c9crire une fonction applique_deux_fois qui prend une fonction f en argument et qui applique deux fois de suite la fonction f \u00e0 son argument x avant de le renvoyer ( cette op\u00e9ration est not\u00e9e \\((f\\circ f)(x)\\) en math\u00e9matique ). Tester votre fonction sur la fonction suivante: \\(\\begin{array}{ccccc} f & : & \\mathbb{R} & \\to & \\mathbb{R} \\\\ & & x & \\mapsto & x^2 \\\\ \\end{array}\\) Exemple 2 \u2693\ufe0e \u00c9crire une fonction applique(f, tab) qui prend en arguments une fonction f et un tableau tab qui renvoie un nouveau tableau, de m\u00eame taille o\u00f9 la fonction f a \u00e9t\u00e9 appliqu\u00e9e \u00e0 chaque \u00e9l\u00e9ment de tab . Contrainte Deux versions sont attendues: version imp\u00e9rative; version fonctionnelle (on pourra utiliser /!\\ hors programme la fonction map )","title":"Exercices"},{"location":"NSITerm/LP2/C12E1.html#paradigmes-de-programmation-exercices","text":"","title":"Paradigmes de programmation - Exercices"},{"location":"NSITerm/LP2/C12E1.html#savoir-distinguer-les-paradigmes","text":"En s'inspirant du cours, proposer un code python donnant le maximum d'un tableau ( objet de type list ), dans: le paradigme imp\u00e9ratif; le paradigme objet; le paradigme fonctionnel","title":"Savoir distinguer les paradigmes"},{"location":"NSITerm/LP2/C12E1.html#voyager-en-1re-classe-avec-les-fonctions","text":"Les fonctions sont des valeurs comme les autres. Elles peuvent \u00eatre pass\u00e9es en arguments , renvoy\u00e9es comme r\u00e9sultat ou encore stock\u00e9es comme des donn\u00e9es .","title":"Voyager en 1re classe avec les fonctions"},{"location":"NSITerm/LP2/C1C1.html","text":"R\u00c9CURSIVIT\u00c9 \u2693\ufe0e Introduction \u2693\ufe0e Soit le probl\u00e8me simple du calcul de la somme des \\(n+1\\) premiers entiers naturels: \\[ 0+1+2+3+\\cdots+n \\] Les connaissances de premi\u00e8re permettent de r\u00e9soudre tr\u00e8s facilement ce probl\u00e8me en utilisant une boucle ( for ou while ): 1 2 3 4 5 6 7 8 9 def somme ( n ): \"\"\" Renvoie la somme des n entiers compris entre 0 et n; n: entier naturel positif \"\"\" s = 0 for i in range ( n + 1 ): s += i return s 1 somme ( 8 ) 1 36 En proc\u00e9dant ainsi on a r\u00e9solu le probl\u00e8me en expliquant comment calculer somme(n) . On aurait pu aussi arriver au m\u00eame r\u00e9sultat en expliquant c'est quoi somme(n) . En effet, \\[ somme(n)=\\underbrace{0+1+2+3+\\cdots+(n-1)}_{somme(n-1)}+n=somme(n-1)+n \\] Ainsi on peut calculer la valeur de somme(n) comme \u00e9tant une fonction math\u00e9matique de \\(n\\) : \\[ somme(n)= \\begin{cases} 0 & \\text{si } n=0 \\\\ n+somme(n-1) & \\text{si } n\\geq 1 \\end{cases} \\] En python, cela se programme facilement: 1 2 3 4 5 def somme_rec ( n ): if n == 0 : return 0 else : return n + somme_rec ( n - 1 ) 1 somme_rec ( 8 ) 1 36 On remarque que somme_rec(n) fait appel \u00e0 somme_rec(n-1) . D\u00e9finition Une fonction qui fait appel \u00e0 elle m\u00eame est dite r\u00e9cursive . Application directe Enonc\u00e9 La puissance \\(n\\) -i\u00e8me d'un nombre \\(x\\) est la multiplication r\u00e9p\u00e9t\u00e9e \\(n\\) fois de \\(x\\) avec lui m\u00eame. Par convention \\(x^0=1\\) . La puissance \\(n\\) -i\u00e8me de \\(x\\) s'\u00e9crit: \\(x^n = \\underbrace{x\\times \\cdots \\times x}_{n-1 \\text{ fois}}\\times x=x^{n-1}\\times x\\) Coder de mani\u00e8re r\u00e9cursive cette fonction en python. Aide On peut donc d\u00e9finir une fonction puissance \\(n\\) -i\u00e8me de \\(x\\) telle que: \\[ puissance(x,n)=\\begin{cases} 1 & \\text{si } n=0\\\\ puissance(x,n-1)\\times x & \\text{si } n>0 \\end{cases} \\] 1 2 3 def puissance ( x , n ): # Supprimer l'instruction 'pass' et compl\u00e9ter avec votre code pass 1 2 3 #Cellule de test assert puissance ( 2 , 0 ) == 1 assert puissance ( 2 , 10 ) == 1024 La r\u00e9cursivit\u00e9: simple et magique ? \u2693\ufe0e Pour bien comprendre le d\u00e9roulement de l'ex\u00e9cution de la fonction r\u00e9cursive somme_rec , analysons l'appel somme_rec(4) ( on dit aussi l'arbre d'appels ). 1 2 3 4 5 6 7 8 9 somme_rec(4)--> return 4 + somme_rec(3) | return 3 + somme_rec(2) | return 2 + somme_rec(1) | return 1 + somme_rec(0) | return 0 L'appel de somme_rec(4) provoque une s\u00e9rie d'appels en cascade jusqu'\u00e0 l'appel somme_rec(0) qui renvoit 0. A ce moment l\u00e0, somme_rec(1) peut se terminer en renvoyant 1, puis somme_rec(2) en renvoyant 3, etc. Cette succession d'appels rend naturellement les boucles inutiles dans dans une fonction r\u00e9cursive. Chaque appel de fonction se traduit par le stockage dans une zone m\u00e9moire appel\u00e9e pile , de donn\u00e9es li\u00e9es au contexte d'ex\u00e9cution de la fonction appelante ( adresse de retour, param\u00e8tres de la fonction, etc. ). Application directe Enonc\u00e9 Analyser l'arbre d'appels de puissance(2, 4) et justifier la valeur renvoy\u00e9e. Aide Revoir l'exemple de la fonction somme_rec D'autres exemples de fonctions r\u00e9cursives - pr\u00e9cautions \u2693\ufe0e La suite de Fibonacci: \u00e9criture d'une fonction r\u00e9cursive na\u00efve \u2693\ufe0e Cette suite est d\u00e9finie pour tout entier naturel \\(n\\) , par: \\[ F(n)= \\begin{cases} n & \\text{si } n<2\\\\ F(n-1) + F(n-2)& \\text{si } n\\geq 2 \\end{cases} \\] Ecrire une fonction r\u00e9cursive en python fib(n) qui renvoie le calcul du \\((n+1)\\) -i\u00e8me terme de la suite de Fibonacci, compte tenu de la d\u00e9finition ci-dessus. 1 2 3 def fib ( n ): # Supprimer 'pass' et compl\u00e9ter avec votre code pass 1 2 3 4 # Tests assert fib ( 1 ) == 1 assert fib ( 2 ) == 1 assert fib ( 6 ) == 8 Analyse de la fonction na\u00efve \u2693\ufe0e Jupyter Notebook poss\u00e8de une extension int\u00e9ressante (les magic commands ) qui permet d'appeler une fonction python (ou autre). On va utiliser la commande %timeit fib(n) pour mesurer le temps d'ex\u00e9cution de fib(n) . Par exemple: 1 % timeit fib ( 10 ) Les r\u00e9sultats sont consign\u00e9s dans le tableau ci-dessous: n %timeit fib(n) 5 1.2 \u00b5s 10 14 \u00b5s 20 1.7 ms 30 0.22 s 35 2.4 s On constate que la complexit\u00e9 explose rapidement. Essayons de comprendre pourquoi en examinant une partie de l'arbre d'appels de fib(5) par exemple. Des calculs d\u00e9j\u00e0 effectu\u00e9s lors de l'appel de fib(4) sont \u00e0 nouveau effectu\u00e9s lors de l'appel de fib(3) !! Attention La traduction na\u00efve d'une fonction math\u00e9matique en une fonction r\u00e9cursive peut conduire \u00e0 une complexit\u00e9 inacceptable. Des techniques simples existent pour r\u00e9gler le probl\u00e8me pr\u00e9c\u00e9dent et seront abord\u00e9es plus loin dans le cours de terminale . Retour sur la pile \u2693\ufe0e Ex\u00e9cuter la cellule suivante et analyser le r\u00e9sultat obtenu. 1 2 3 4 def f ( n ): return 1 + f ( n + 1 ) f ( 0 ) 1 #Votre analyse Attention La taille de la pile est limit\u00e9e, le nombre d'appels r\u00e9cursifs est donc limit\u00e9 aussi. Python limite naturellement et assez s\u00e9v\u00e8rement d'ailleurs, le nombre d'appels r\u00e9cursifs. On peut avoir une id\u00e9e de cette limite avec le code suivant: 1 2 import sys print ( sys . getrecursionlimit ()) Bien \u00e9crire des fonctions r\u00e9cursives \u2693\ufe0e Il est g\u00e9n\u00e9ralement simple de traduire une fonction math\u00e9matique d\u00e9finie par r\u00e9currence en une fonction r\u00e9cursive python. On veillera n\u00e9anmoins \u00e0 ce que le sch\u00e9ma suivant soit toujours pr\u00e9sent dans la d\u00e9finition de la fonction: 1 2 3 4 5 6 7 8 def f_rec ( parametres ): if condition : #cas de base: cas trivial o\u00f9 la fonction termine return valeur else : #cas r\u00e9cursifs o\u00f9 on appelle \u00e0 nouveau f_rec ... return expression ( f_rec ( ... )) Les diff\u00e9rents cas sont typiquement examin\u00e9s avec des tests if ... else . Enfin, le cas de base peut \u00eatre ... constitu\u00e9 de plusieurs cas! A retenir \u2693\ufe0e La r\u00e9cursivit\u00e9 est une technique de programmation \u00e9l\u00e9gante, tr\u00e8s proche de la d\u00e9finition math\u00e9matique des fonctions ou des probl\u00e8mes. Les boucles y sont inutiles. Une fonction r\u00e9cursive est g\u00e9n\u00e9ralement constitu\u00e9 d'un ou de plusieurs cas de base, qui permet(tent) \u00e0 la fonction de terminer et de cas r\u00e9cursifs. La r\u00e9cursivit\u00e9 repose sur l'utilisation d'une zone m\u00e9moire appel\u00e9e pile, de capacit\u00e9 limit\u00e9e. Une erreur est signal\u00e9e lors d'une tentative de d\u00e9passement de cette capacit\u00e9. Enfin, il faut toujours \u00eatre vigilant sur le fait que cette technique appliqu\u00e9e de mani\u00e8re na\u00efve peut engendrer une complexit\u00e9 inacceptable.","title":"Cours"},{"location":"NSITerm/LP2/C1C1.html#recursivite","text":"","title":"R\u00c9CURSIVIT\u00c9"},{"location":"NSITerm/LP2/C1C1.html#introduction","text":"Soit le probl\u00e8me simple du calcul de la somme des \\(n+1\\) premiers entiers naturels: \\[ 0+1+2+3+\\cdots+n \\] Les connaissances de premi\u00e8re permettent de r\u00e9soudre tr\u00e8s facilement ce probl\u00e8me en utilisant une boucle ( for ou while ): 1 2 3 4 5 6 7 8 9 def somme ( n ): \"\"\" Renvoie la somme des n entiers compris entre 0 et n; n: entier naturel positif \"\"\" s = 0 for i in range ( n + 1 ): s += i return s 1 somme ( 8 ) 1 36 En proc\u00e9dant ainsi on a r\u00e9solu le probl\u00e8me en expliquant comment calculer somme(n) . On aurait pu aussi arriver au m\u00eame r\u00e9sultat en expliquant c'est quoi somme(n) . En effet, \\[ somme(n)=\\underbrace{0+1+2+3+\\cdots+(n-1)}_{somme(n-1)}+n=somme(n-1)+n \\] Ainsi on peut calculer la valeur de somme(n) comme \u00e9tant une fonction math\u00e9matique de \\(n\\) : \\[ somme(n)= \\begin{cases} 0 & \\text{si } n=0 \\\\ n+somme(n-1) & \\text{si } n\\geq 1 \\end{cases} \\] En python, cela se programme facilement: 1 2 3 4 5 def somme_rec ( n ): if n == 0 : return 0 else : return n + somme_rec ( n - 1 ) 1 somme_rec ( 8 ) 1 36 On remarque que somme_rec(n) fait appel \u00e0 somme_rec(n-1) . D\u00e9finition Une fonction qui fait appel \u00e0 elle m\u00eame est dite r\u00e9cursive . Application directe Enonc\u00e9 La puissance \\(n\\) -i\u00e8me d'un nombre \\(x\\) est la multiplication r\u00e9p\u00e9t\u00e9e \\(n\\) fois de \\(x\\) avec lui m\u00eame. Par convention \\(x^0=1\\) . La puissance \\(n\\) -i\u00e8me de \\(x\\) s'\u00e9crit: \\(x^n = \\underbrace{x\\times \\cdots \\times x}_{n-1 \\text{ fois}}\\times x=x^{n-1}\\times x\\) Coder de mani\u00e8re r\u00e9cursive cette fonction en python. Aide On peut donc d\u00e9finir une fonction puissance \\(n\\) -i\u00e8me de \\(x\\) telle que: \\[ puissance(x,n)=\\begin{cases} 1 & \\text{si } n=0\\\\ puissance(x,n-1)\\times x & \\text{si } n>0 \\end{cases} \\] 1 2 3 def puissance ( x , n ): # Supprimer l'instruction 'pass' et compl\u00e9ter avec votre code pass 1 2 3 #Cellule de test assert puissance ( 2 , 0 ) == 1 assert puissance ( 2 , 10 ) == 1024","title":"Introduction"},{"location":"NSITerm/LP2/C1C1.html#la-recursivite-simple-et-magique","text":"Pour bien comprendre le d\u00e9roulement de l'ex\u00e9cution de la fonction r\u00e9cursive somme_rec , analysons l'appel somme_rec(4) ( on dit aussi l'arbre d'appels ). 1 2 3 4 5 6 7 8 9 somme_rec(4)--> return 4 + somme_rec(3) | return 3 + somme_rec(2) | return 2 + somme_rec(1) | return 1 + somme_rec(0) | return 0 L'appel de somme_rec(4) provoque une s\u00e9rie d'appels en cascade jusqu'\u00e0 l'appel somme_rec(0) qui renvoit 0. A ce moment l\u00e0, somme_rec(1) peut se terminer en renvoyant 1, puis somme_rec(2) en renvoyant 3, etc. Cette succession d'appels rend naturellement les boucles inutiles dans dans une fonction r\u00e9cursive. Chaque appel de fonction se traduit par le stockage dans une zone m\u00e9moire appel\u00e9e pile , de donn\u00e9es li\u00e9es au contexte d'ex\u00e9cution de la fonction appelante ( adresse de retour, param\u00e8tres de la fonction, etc. ). Application directe Enonc\u00e9 Analyser l'arbre d'appels de puissance(2, 4) et justifier la valeur renvoy\u00e9e. Aide Revoir l'exemple de la fonction somme_rec","title":"La r\u00e9cursivit\u00e9: simple et magique ?"},{"location":"NSITerm/LP2/C1C1.html#dautres-exemples-de-fonctions-recursives-precautions","text":"","title":"D'autres exemples de fonctions r\u00e9cursives - pr\u00e9cautions"},{"location":"NSITerm/LP2/C1C1.html#bien-ecrire-des-fonctions-recursives","text":"Il est g\u00e9n\u00e9ralement simple de traduire une fonction math\u00e9matique d\u00e9finie par r\u00e9currence en une fonction r\u00e9cursive python. On veillera n\u00e9anmoins \u00e0 ce que le sch\u00e9ma suivant soit toujours pr\u00e9sent dans la d\u00e9finition de la fonction: 1 2 3 4 5 6 7 8 def f_rec ( parametres ): if condition : #cas de base: cas trivial o\u00f9 la fonction termine return valeur else : #cas r\u00e9cursifs o\u00f9 on appelle \u00e0 nouveau f_rec ... return expression ( f_rec ( ... )) Les diff\u00e9rents cas sont typiquement examin\u00e9s avec des tests if ... else . Enfin, le cas de base peut \u00eatre ... constitu\u00e9 de plusieurs cas!","title":"Bien \u00e9crire des fonctions r\u00e9cursives"},{"location":"NSITerm/LP2/C1C1.html#a-retenir","text":"La r\u00e9cursivit\u00e9 est une technique de programmation \u00e9l\u00e9gante, tr\u00e8s proche de la d\u00e9finition math\u00e9matique des fonctions ou des probl\u00e8mes. Les boucles y sont inutiles. Une fonction r\u00e9cursive est g\u00e9n\u00e9ralement constitu\u00e9 d'un ou de plusieurs cas de base, qui permet(tent) \u00e0 la fonction de terminer et de cas r\u00e9cursifs. La r\u00e9cursivit\u00e9 repose sur l'utilisation d'une zone m\u00e9moire appel\u00e9e pile, de capacit\u00e9 limit\u00e9e. Une erreur est signal\u00e9e lors d'une tentative de d\u00e9passement de cette capacit\u00e9. Enfin, il faut toujours \u00eatre vigilant sur le fait que cette technique appliqu\u00e9e de mani\u00e8re na\u00efve peut engendrer une complexit\u00e9 inacceptable.","title":"A retenir"},{"location":"NSITerm/LP2/C1E1.html","text":"Exercices - R\u00e9cursivit\u00e9 \u2693\ufe0e Rappels ou compl\u00e9ments sur les chaines de caract\u00e8res en python \u2693\ufe0e D\u00e9claration \u2693\ufe0e Rappel : une cha\u00eene de caract\u00e8re python peut \u00eatre initialis\u00e9e avec une d\u00e9claration du type: 1 ma_chaine1 = 'caracteres' Si la cha\u00eene contient un apostrophe, il vaut mieux utiliser une paire de doubles quotes: 1 ma_chaine2 = \"l'apostrophe n'est pas interpr\u00e9t\u00e9 comme d\u00e9limiteur de chaine ici\" Enfin, si la cha\u00eene occupe plusieurs lignes, on utilisera une paire de trois double quotes accol\u00e9es: 1 2 3 4 5 ma_chaine3 = \"\"\" ligne 1 ligne 2 etc. \"\"\" 1 2 ma_chaine1 = 'caracteres' type ( ma_chaine1 ) 1 str Indexation et longueur \u2693\ufe0e On peut acc\u00e9der aux diff\u00e9rents caract\u00e8res de la cha\u00eene en utilisant une indexation comme pour les tableaux. Une particularit\u00e9 de python est de permettre une indexation n\u00e9gative. Ainsi l'index -1 correspond au dernier caract\u00e8re. 1 2 3 ma_chaine2 = \"l'apostrophe n'est pas interpr\u00e9t\u00e9 comme d\u00e9limiteur de chaine ici\" print ( ma_chaine2 [ 0 ]) print ( ma_chaine2 [ - 1 ]) 1 2 l i On obtient la longueur de la cha\u00eene avec la fonction len . 1 print ( len ( ma_chaine2 )) 1 64 Les chaines: objets non mutables \u2693\ufe0e Les cha\u00eenes de caract\u00e8res sont des objets non mutables (on dit aussi immuables ). 1 ma_chaine2 [ 0 ] = 'L' 1 2 3 4 5 6 7 8 9 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-50-f4b20dca7b9a> in <module> ----> 1 ma_chaine2[0] = 'L' TypeError: 'str' object does not support item assignment Tranches (facilit\u00e9 de python non exigible en NSI, hors programme, mais tr\u00e8s pratique) \u2693\ufe0e On peut s\u00e9lectionner des tranches dans une cha\u00eene ou un tableau. Par exemple, pour r\u00e9cup\u00e9rer les caract\u00e8res situ\u00e9s entre les index \\(i\\) ( inclus ) et \\(j\\) ( exclus ) d'une cha\u00eene ch , on utilise la syntaxe: ch[i:j] . 1 ma_chaine2 [ 0 : 12 ] #r\u00e9cup\u00e8re les caract\u00e8res entre les index 0 (inclus) et 12 (exclus) 1 \"l'apostrophe\" Concat\u00e9nation \u2693\ufe0e On peut utiliser le signe '+' pour concat\u00e9ner (mettre bout \u00e0 bout) deux cha\u00eenes. Le r\u00e9sultat est une nouvelle cha\u00eene. 1 2 new_chaine = 'Les ' + ma_chaine1 print ( new_chaine ) 1 Les caracteres Exercice 1 - Fonction factorielle \u2693\ufe0e La traditionnelle fonction factorielle (pratiquement syst\u00e9matiquement pr\u00e9sent\u00e9e lorsqu'on aborde la r\u00e9cursivit\u00e9) est d\u00e9finie par: \\(fact(n)=n!=1\\times 2\\times \\cdots \\times n\\) . Par ailleurs, \\(0!=1\\) . A faire \u00c9crire une fonction factorielle fact(n) de mani\u00e8re r\u00e9cursive . Coup de pouce: revoir le code de la fonction puissance. 1 2 3 def fact ( n ): # Supprimer l'instruction 'pass' et compl\u00e9ter avec votre code pass Exercice 2 - Renverser une cha\u00eene \u2693\ufe0e On souhaite \u00e9crire une fonction renverse qui renverse tous les caract\u00e8res d'une cha\u00eene non vide c . Par exemple, l'appel renverse('bonjour') renvoie 'ruojnob' . Plusieurs m\u00e9thodes de programmation sont possibles. On impose ici une m\u00e9thode r\u00e9cursive . Le cas de base est simple \u00e0 identifier: il s'agit d'une cha\u00eene de longueur 1 ! Lorsque ce cas se produit, il suffit de renvoyer la cha\u00eene; Pour les autres cas, on s'appuie sur le constat suivant: l'inverse d'une cha\u00eene c'est tout simplement la concat\u00e9nation du dernier caract\u00e8re de celle-ci avec l'inverse du reste de la cha\u00eene. A faire Compl\u00e9ter la fonction suivante qui renverse c de mani\u00e8re r\u00e9cursive. Puis tester la fonction en ex\u00e9cutant la cellule pr\u00e9vue \u00e0 cet effet. 1 2 3 def renverse ( c ): # Supprimer l'instruction 'pass' et compl\u00e9ter avec votre code pass 1 2 3 # Tests assert renverse ( 'a' ) == 'a' assert renverse ( 'moteur' ) == 'ruetom' Exercice 3 - Conversion binaire (encore) \u2693\ufe0e On a vu en premi\u00e8re qu'on pouvait obtenir la conversion en binaire d'un entier naturel en r\u00e9alisant les divisions successives de son quotient par 2. Exprimons cette id\u00e9e de mani\u00e8re \u00e0 faire \u00e9merger une m\u00e9thode r\u00e9cursive. On peut voir la d\u00e9composition en binaire d'un nombre \\(n\\) comme la concat\u00e9nation de la d\u00e9composition en binaire du quotient de \\(n\\) par \\(2\\) , avec son reste. Le cas de base \u00e9tant obtenu lorsque le nombre \\(n\\) est nul, dans ce cas on renvoie une cha\u00eene vide. A faire Compl\u00e9ter la fonction binaire(n) qui prend en param\u00e8tre un entier naturel \\(n\\) et qui renvoie une cha\u00eene qui correspond \u00e0 sa conversion en binaire. Une m\u00e9thode r\u00e9cursive est exig\u00e9e. 1 2 3 def binaire ( n ): # Supprimer l'instruction 'pass' et compl\u00e9ter avec votre code pass 1 2 # Test assert binaire ( 40 ) == '101000' Exercice 4 - La recherche lin\u00e9aire en version r\u00e9cursive \u2693\ufe0e L'algorithme de recherche s\u00e9quentielle ou lin\u00e9aire dans un tableau \\(t\\) a \u00e9t\u00e9 vue en classe de 1re . Donner une impl\u00e9mentation r\u00e9cursive de cet algorithme. Indication \\(x \\in t\\) si \\(x\\) correspond au caract\u00e8re en cours ou appartient au reste du tableau. 1 2 def appartient ( x , t ): pass 1 2 3 4 5 # Tests t4 = [ 1 , 2 , 10 , - 5 , 8 , 6 , - 2 ] t2 = [] assert appartient ( - 2 , t2 ) == False assert appartient ( 10 , t4 ) == True Exercice 5 (optionnel) - Le tri par insertion \u2693\ufe0e Le tri par insertion a \u00e9galement \u00e9t\u00e9 vu en 1re . On se propose ici d'impl\u00e9menter une version r\u00e9cursive. a) Amener un \u00e9l\u00e9ment \u00e0 sa place dans un tableau tri\u00e9 \u2693\ufe0e Soit un tableau \\(t\\) de \\(n\\) \u00e9l\u00e9ments, tri\u00e9. C'est quoi amener un \u00e9l\u00e9ment \\(x\\) \u00e0 sa place dans \\(t\\) ? si \\(t\\) est vide, c'est tout simplement un tableau compos\u00e9 du seul \u00e9l\u00e9ment \\(x\\) (c'est-\u00e0-dire [x] ); si \\(x< t[0]\\) (plus petit que le premier \u00e9l\u00e9ment du tableau) alors c'est le tableau obtenu en pla\u00e7ant \\(x\\) au d\u00e9but de \\(t\\) ; si \\(x\\geq t[0]\\) c'est la concat\u00e9nation [t[0]] avec le tableau r\u00e9sultant du placement de \\(x\\) dans [t[1]...t[n-1]] . A faire \u00c9crire une fonction r\u00e9cursive placer(x, t) qui am\u00e8ne \\(x\\) \u00e0 sa place dans un tableau tri\u00e9 t . Cette fonction renvoie un nouveau tableau. 1 2 def place ( x , t ): pass 1 2 3 # Tests t = [ - 5 , - 3 , 4 , 12 , 15 , 20 ] assert placer ( 8 , t ) == [ - 5 , - 3 , 4 , 8 , 12 , 15 , 20 ] b) Trier par insertion \u2693\ufe0e C'est quoi trier un tableau \\(t\\) de \\(n\\) \u00e9l\u00e9ments par insertion ? si \\(t\\) est vide alors il s'agit d'un tableau vide; sinon c'est placer t[0] dans le tableau de \\(n-1\\) \u00e9l\u00e9ments [t[1]...t[n-1] tri\u00e9 par insertion . A faire \u00c9crire la fonction r\u00e9cursive tri_insertion(t) qui trie \\(t\\) par insertion. 1 2 def tri_insertion ( t ): pass 1 2 3 4 5 # Tests t4 = [ 1 , 2 , 10 , - 5 , 8 , 6 , - 2 ] assert tri_insertion ( t4 ) == [ - 5 , - 2 , 1 , 2 , 6 , 8 , 10 ] assert tri_insertion ([]) == [] assert tri_insertion ( tri_insertion ([ 0 , 0 , 0 ])) == [ 0 , 0 , 0 ] Exercice 6 - Un autre tri: le tri fusion \u2693\ufe0e Pr\u00e9ambule Avant d'aborder l'impl\u00e9mentation d'un nouvel algorithme de tri plus performant que ceux de 1re, on donne les deux fonctions ci-dessous. Malheureusement les sp\u00e9cifications ne sont pas toutes compl\u00e8tes ... 1 2 3 4 5 6 7 8 9 def est_trie ( t , g , d ): \"\"\" t: tableau g,d: entiers naturels renvoie True si t est tri\u00e9 par ordre croissant entre les indices g et d (inclus), False sinon. \"\"\" # par ordre croissant return all ( t [ i + 1 ] >= t [ i ] for i in range ( g , d )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 def fusion ( t , g , m , d ): \"\"\" t: tableau g,m,d: entiers naturels .... \"\"\" assert est_trie ( t , g , m ) assert est_trie ( t , m + 1 , d ) i , j = g , m + 1 aux = t [:] # r\u00e9alise une copie de t for k in range ( g , d + 1 ): if i > m : t [ k ] = aux [ j ] j += 1 elif j > d : t [ k ] = aux [ i ] i += 1 elif aux [ j ] < aux [ i ]: t [ k ] = aux [ j ] j += 1 else : t [ k ] = aux [ i ] i += 1 assert est_trie ( t , g , d ) 1 2 3 4 # 1er exemple d'appel t1 = [ 1 , 3 , 7 , - 3 , 4 , 10 , 12 ] fusion ( t1 , 0 , 2 , 6 ) print ( t1 ) 1 [-3, 1, 3, 4, 7, 10, 12] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 k | v +---+---+---+---+---+---+--+ t | 1 | 3 | 7 |-3 | 4 |10 |12| +---+---+---+---+---+---+--+ g m d +---+---+---+---+---+---+--+ aux | 1 | 3 | 7 |-3 | 4 |10 |12| +---+---+---+---+---+---+--+ ^ ^ | | i j 1 2 3 4 # Autre exemple t2 = [ 'E' , 'E' , 'G' , 'M' , 'R' , 'A' , 'C' , 'E' , 'R' , 'T' ] fusion ( t2 , 0 , 4 , 9 ) print ( t2 ) 1 ['A', 'C', 'E', 'E', 'E', 'G', 'M', 'R', 'R', 'T'] \u00c0 faire \u00c0 partir du code et des exemples, dire ce que r\u00e9alise la fonction fusion . Quelle est l'utilit\u00e9 de la fonction est_trie ? Le tri fusion Le tri fusion d'un tableau est bas\u00e9 sur une id\u00e9e simple: s\u00e9parer le tableau en deux parties \u00e9gales ou presqu'\u00e9gales (\u00e0 un \u00e9l\u00e9ment pr\u00e8s); trier de mani\u00e8re ind\u00e9pendante et r\u00e9cursivement les deux parties; fusionner les deux parties de tableau tri\u00e9es. Le cas de base se produit lorsqu'on arrive \u00e0 un tableau \u00e0 un \u00e9l\u00e9ment. Dans ce cas, il est forc\u00e9ment tri\u00e9 et on le renvoie sans plus de traitement. \u00c0 faire \u00c9crire une fonction tri_fusion qui trie un tableau non vide t selon l'algorithme du tri fusion. On pourra introduire au pr\u00e9alable une fonction d'assistance qui r\u00e9alise l'essentiel du travail ( voir ci-dessous ). Tester. 1 2 3 4 5 6 7 8 9 # A compl\u00e9ter #def tri_recursivement(t, g, d): # \"\"\"Fonction d'assistance \"\"\" # if ...: # Cas de base # return # else: # cas r\u00e9cursif # m = g + (d - g) // 2 # sensiblement la moiti\u00e9 du tableau # ... 1 2 3 4 5 6 7 # Cellule de test t1 = [ 3 , - 8 , 10 , 1 , 3 , - 5 , 12 , 7 , 6 ] t2 = [] tri_fusion ( t1 , 0 , 8 ) tri_fusion ( t2 , 0 , 0 ) assert t1 == [ - 8 , - 5 , 1 , 3 , 3 , 6 , 7 , 10 , 12 ] assert t2 == [] Probl\u00e8me classique: les tours de Hano\u00ef \u2693\ufe0e Origine: wikipedia Le probl\u00e8me math\u00e9matique des tours de Hano\u00ef a \u00e9t\u00e9 invent\u00e9 par \u00c9douard Lucas. Il est publi\u00e9 dans le tome 3 de ses R\u00e9cr\u00e9ations math\u00e9matiques , parues \u00e0 titre posthume en 1892. Il annonce que ce probl\u00e8me est d\u00fb \u00e0 un de ses amis, N. Claus de Siam (anagramme de Lucas d'Amiens, Amiens \u00e9tant sa ville de naissance), pr\u00e9tendument professeur au coll\u00e8ge de Li-Sou-Stian (anagramme de Saint Louis, le lyc\u00e9e o\u00f9 Lucas enseignait). Sous le titre \u00ab Les brahmes tombent \u00bb, Lucas relate que \u00ab N. Claus de Siam a vu, dans ses voyages pour la publication des \u00e9crits de l'illustre Fer-Fer-Tam-Tam, dans le grand temple de B\u00e9nar\u00e8s, au-dessous du d\u00f4me qui marque le centre du monde, trois aiguilles de diamant, plant\u00e9es dans une dalle d'airain, hautes d'une coud\u00e9e et grosses comme le corps d'une abeille. Sur une de ces aiguilles, Dieu enfila au commencement des si\u00e8cles, 64 disques d'or pur, le plus large reposant sur l'airain, et les autres, de plus en plus \u00e9troits, superpos\u00e9s jusqu'au sommet. C'est la tour sacr\u00e9e du Brahm\u00e2. Nuit et jour, les pr\u00eatres se succ\u00e8dent sur les marches de l'autel, occup\u00e9s \u00e0 transporter la tour de la premi\u00e8re aiguille sur la troisi\u00e8me, sans s'\u00e9carter des r\u00e8gles fixes que nous venons d'indiquer, et qui ont \u00e9t\u00e9 impos\u00e9es par Brahma. Quand tout sera fini, la tour et les brahmes tomberont, et ce sera la fin des mondes ! \u00bb. Un jeu \u00e0 64 disques requiert un minimum de \\(2^{64}-1\\) d\u00e9placements. En admettant qu'il faille 1 seconde pour d\u00e9placer un disque, ce qui fait 86 400 d\u00e9placements par jour, la fin du jeu aurait lieu au bout d'environ 213 000 milliards de jours, ce qui \u00e9quivaut \u00e0 peu pr\u00e8s \u00e0 584,5 milliards d'ann\u00e9es, soit 43 fois l'\u00e2ge estim\u00e9 de l'univers (13,7 milliards d'ann\u00e9es selon certaines sources). Principe: tours de Hanoi - Chistian Queinnec 1 2 3 4 from IPython.display import YouTubeVideo YouTubeVideo ( 'U3nGNJTxYc4' , width = 800 , height = 450 ) L'objectif est de r\u00e9soudre ce casse-t\u00eate en utilisant une m\u00e9thode r\u00e9cursive. Le cas de base est obtenu lorsque le nombre \\(n\\) de disques \u00e0 d\u00e9placer est nul. Dans ce cas on retourne. Le cas r\u00e9cursif est \u00e0 faire appara\u00eetre avec la remarque suivante: pour d\u00e9placer \\(n\\) disques d'une tour A vers une tour C, il faut: d\u00e9placer les \\(n-1\\) premiers disques vers une tour interm\u00e9diaire (B par exemple); d\u00e9placer le plus grand disque restant vers sa destination (ici tour C); d\u00e9placer les \\(n-1\\) disques de la premi\u00e8re \u00e9tape vers C. A faire Proposer une solution r\u00e9cursive, en python, du probl\u00e8me des tours de Hano\u00ef. La fonction pourrait avoir une signature du type: hanoi(nb_disques, tour_depart, tour interm, tour_arrivee) . 1 2 3 4 5 6 7 def hanoi ( n , tour_A , tour_B , tour_C ): \"\"\" d\u00e9place n disques de 'tour_A' vers 'tour_C', en utilisant la tour interm\u00e9diaire 'tour_B' \"\"\" # Supprimer l'instruction 'pass' et compl\u00e9ter avec votre code pass","title":"Exercices"},{"location":"NSITerm/LP2/C1E1.html#exercices-recursivite","text":"","title":"Exercices - R\u00e9cursivit\u00e9"},{"location":"NSITerm/LP2/C1E1.html#rappels-ou-complements-sur-les-chaines-de-caracteres-en-python","text":"","title":"Rappels ou compl\u00e9ments sur les chaines de caract\u00e8res en python"},{"location":"NSITerm/LP2/C1E1.html#exercice-1-fonction-factorielle","text":"La traditionnelle fonction factorielle (pratiquement syst\u00e9matiquement pr\u00e9sent\u00e9e lorsqu'on aborde la r\u00e9cursivit\u00e9) est d\u00e9finie par: \\(fact(n)=n!=1\\times 2\\times \\cdots \\times n\\) . Par ailleurs, \\(0!=1\\) . A faire \u00c9crire une fonction factorielle fact(n) de mani\u00e8re r\u00e9cursive . Coup de pouce: revoir le code de la fonction puissance. 1 2 3 def fact ( n ): # Supprimer l'instruction 'pass' et compl\u00e9ter avec votre code pass","title":"Exercice 1 - Fonction factorielle"},{"location":"NSITerm/LP2/C1E1.html#exercice-2-renverser-une-chaine","text":"On souhaite \u00e9crire une fonction renverse qui renverse tous les caract\u00e8res d'une cha\u00eene non vide c . Par exemple, l'appel renverse('bonjour') renvoie 'ruojnob' . Plusieurs m\u00e9thodes de programmation sont possibles. On impose ici une m\u00e9thode r\u00e9cursive . Le cas de base est simple \u00e0 identifier: il s'agit d'une cha\u00eene de longueur 1 ! Lorsque ce cas se produit, il suffit de renvoyer la cha\u00eene; Pour les autres cas, on s'appuie sur le constat suivant: l'inverse d'une cha\u00eene c'est tout simplement la concat\u00e9nation du dernier caract\u00e8re de celle-ci avec l'inverse du reste de la cha\u00eene. A faire Compl\u00e9ter la fonction suivante qui renverse c de mani\u00e8re r\u00e9cursive. Puis tester la fonction en ex\u00e9cutant la cellule pr\u00e9vue \u00e0 cet effet. 1 2 3 def renverse ( c ): # Supprimer l'instruction 'pass' et compl\u00e9ter avec votre code pass 1 2 3 # Tests assert renverse ( 'a' ) == 'a' assert renverse ( 'moteur' ) == 'ruetom'","title":"Exercice 2 - Renverser une cha\u00eene"},{"location":"NSITerm/LP2/C1E1.html#exercice-3-conversion-binaire-encore","text":"On a vu en premi\u00e8re qu'on pouvait obtenir la conversion en binaire d'un entier naturel en r\u00e9alisant les divisions successives de son quotient par 2. Exprimons cette id\u00e9e de mani\u00e8re \u00e0 faire \u00e9merger une m\u00e9thode r\u00e9cursive. On peut voir la d\u00e9composition en binaire d'un nombre \\(n\\) comme la concat\u00e9nation de la d\u00e9composition en binaire du quotient de \\(n\\) par \\(2\\) , avec son reste. Le cas de base \u00e9tant obtenu lorsque le nombre \\(n\\) est nul, dans ce cas on renvoie une cha\u00eene vide. A faire Compl\u00e9ter la fonction binaire(n) qui prend en param\u00e8tre un entier naturel \\(n\\) et qui renvoie une cha\u00eene qui correspond \u00e0 sa conversion en binaire. Une m\u00e9thode r\u00e9cursive est exig\u00e9e. 1 2 3 def binaire ( n ): # Supprimer l'instruction 'pass' et compl\u00e9ter avec votre code pass 1 2 # Test assert binaire ( 40 ) == '101000'","title":"Exercice 3 - Conversion binaire (encore)"},{"location":"NSITerm/LP2/C1E1.html#exercice-4-la-recherche-lineaire-en-version-recursive","text":"L'algorithme de recherche s\u00e9quentielle ou lin\u00e9aire dans un tableau \\(t\\) a \u00e9t\u00e9 vue en classe de 1re . Donner une impl\u00e9mentation r\u00e9cursive de cet algorithme. Indication \\(x \\in t\\) si \\(x\\) correspond au caract\u00e8re en cours ou appartient au reste du tableau. 1 2 def appartient ( x , t ): pass 1 2 3 4 5 # Tests t4 = [ 1 , 2 , 10 , - 5 , 8 , 6 , - 2 ] t2 = [] assert appartient ( - 2 , t2 ) == False assert appartient ( 10 , t4 ) == True","title":"Exercice 4 - La recherche lin\u00e9aire en version r\u00e9cursive"},{"location":"NSITerm/LP2/C1E1.html#exercice-5-optionnel-le-tri-par-insertion","text":"Le tri par insertion a \u00e9galement \u00e9t\u00e9 vu en 1re . On se propose ici d'impl\u00e9menter une version r\u00e9cursive.","title":"Exercice 5 (optionnel) - Le tri par insertion"},{"location":"NSITerm/LP2/C1E1.html#exercice-6-un-autre-tri-le-tri-fusion","text":"Pr\u00e9ambule Avant d'aborder l'impl\u00e9mentation d'un nouvel algorithme de tri plus performant que ceux de 1re, on donne les deux fonctions ci-dessous. Malheureusement les sp\u00e9cifications ne sont pas toutes compl\u00e8tes ... 1 2 3 4 5 6 7 8 9 def est_trie ( t , g , d ): \"\"\" t: tableau g,d: entiers naturels renvoie True si t est tri\u00e9 par ordre croissant entre les indices g et d (inclus), False sinon. \"\"\" # par ordre croissant return all ( t [ i + 1 ] >= t [ i ] for i in range ( g , d )) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 def fusion ( t , g , m , d ): \"\"\" t: tableau g,m,d: entiers naturels .... \"\"\" assert est_trie ( t , g , m ) assert est_trie ( t , m + 1 , d ) i , j = g , m + 1 aux = t [:] # r\u00e9alise une copie de t for k in range ( g , d + 1 ): if i > m : t [ k ] = aux [ j ] j += 1 elif j > d : t [ k ] = aux [ i ] i += 1 elif aux [ j ] < aux [ i ]: t [ k ] = aux [ j ] j += 1 else : t [ k ] = aux [ i ] i += 1 assert est_trie ( t , g , d ) 1 2 3 4 # 1er exemple d'appel t1 = [ 1 , 3 , 7 , - 3 , 4 , 10 , 12 ] fusion ( t1 , 0 , 2 , 6 ) print ( t1 ) 1 [-3, 1, 3, 4, 7, 10, 12] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 k | v +---+---+---+---+---+---+--+ t | 1 | 3 | 7 |-3 | 4 |10 |12| +---+---+---+---+---+---+--+ g m d +---+---+---+---+---+---+--+ aux | 1 | 3 | 7 |-3 | 4 |10 |12| +---+---+---+---+---+---+--+ ^ ^ | | i j 1 2 3 4 # Autre exemple t2 = [ 'E' , 'E' , 'G' , 'M' , 'R' , 'A' , 'C' , 'E' , 'R' , 'T' ] fusion ( t2 , 0 , 4 , 9 ) print ( t2 ) 1 ['A', 'C', 'E', 'E', 'E', 'G', 'M', 'R', 'R', 'T'] \u00c0 faire \u00c0 partir du code et des exemples, dire ce que r\u00e9alise la fonction fusion . Quelle est l'utilit\u00e9 de la fonction est_trie ? Le tri fusion Le tri fusion d'un tableau est bas\u00e9 sur une id\u00e9e simple: s\u00e9parer le tableau en deux parties \u00e9gales ou presqu'\u00e9gales (\u00e0 un \u00e9l\u00e9ment pr\u00e8s); trier de mani\u00e8re ind\u00e9pendante et r\u00e9cursivement les deux parties; fusionner les deux parties de tableau tri\u00e9es. Le cas de base se produit lorsqu'on arrive \u00e0 un tableau \u00e0 un \u00e9l\u00e9ment. Dans ce cas, il est forc\u00e9ment tri\u00e9 et on le renvoie sans plus de traitement. \u00c0 faire \u00c9crire une fonction tri_fusion qui trie un tableau non vide t selon l'algorithme du tri fusion. On pourra introduire au pr\u00e9alable une fonction d'assistance qui r\u00e9alise l'essentiel du travail ( voir ci-dessous ). Tester. 1 2 3 4 5 6 7 8 9 # A compl\u00e9ter #def tri_recursivement(t, g, d): # \"\"\"Fonction d'assistance \"\"\" # if ...: # Cas de base # return # else: # cas r\u00e9cursif # m = g + (d - g) // 2 # sensiblement la moiti\u00e9 du tableau # ... 1 2 3 4 5 6 7 # Cellule de test t1 = [ 3 , - 8 , 10 , 1 , 3 , - 5 , 12 , 7 , 6 ] t2 = [] tri_fusion ( t1 , 0 , 8 ) tri_fusion ( t2 , 0 , 0 ) assert t1 == [ - 8 , - 5 , 1 , 3 , 3 , 6 , 7 , 10 , 12 ] assert t2 == []","title":"Exercice 6 - Un autre tri: le tri fusion"},{"location":"NSITerm/LP2/C1E1.html#probleme-classique-les-tours-de-hanoi","text":"Origine: wikipedia Le probl\u00e8me math\u00e9matique des tours de Hano\u00ef a \u00e9t\u00e9 invent\u00e9 par \u00c9douard Lucas. Il est publi\u00e9 dans le tome 3 de ses R\u00e9cr\u00e9ations math\u00e9matiques , parues \u00e0 titre posthume en 1892. Il annonce que ce probl\u00e8me est d\u00fb \u00e0 un de ses amis, N. Claus de Siam (anagramme de Lucas d'Amiens, Amiens \u00e9tant sa ville de naissance), pr\u00e9tendument professeur au coll\u00e8ge de Li-Sou-Stian (anagramme de Saint Louis, le lyc\u00e9e o\u00f9 Lucas enseignait). Sous le titre \u00ab Les brahmes tombent \u00bb, Lucas relate que \u00ab N. Claus de Siam a vu, dans ses voyages pour la publication des \u00e9crits de l'illustre Fer-Fer-Tam-Tam, dans le grand temple de B\u00e9nar\u00e8s, au-dessous du d\u00f4me qui marque le centre du monde, trois aiguilles de diamant, plant\u00e9es dans une dalle d'airain, hautes d'une coud\u00e9e et grosses comme le corps d'une abeille. Sur une de ces aiguilles, Dieu enfila au commencement des si\u00e8cles, 64 disques d'or pur, le plus large reposant sur l'airain, et les autres, de plus en plus \u00e9troits, superpos\u00e9s jusqu'au sommet. C'est la tour sacr\u00e9e du Brahm\u00e2. Nuit et jour, les pr\u00eatres se succ\u00e8dent sur les marches de l'autel, occup\u00e9s \u00e0 transporter la tour de la premi\u00e8re aiguille sur la troisi\u00e8me, sans s'\u00e9carter des r\u00e8gles fixes que nous venons d'indiquer, et qui ont \u00e9t\u00e9 impos\u00e9es par Brahma. Quand tout sera fini, la tour et les brahmes tomberont, et ce sera la fin des mondes ! \u00bb. Un jeu \u00e0 64 disques requiert un minimum de \\(2^{64}-1\\) d\u00e9placements. En admettant qu'il faille 1 seconde pour d\u00e9placer un disque, ce qui fait 86 400 d\u00e9placements par jour, la fin du jeu aurait lieu au bout d'environ 213 000 milliards de jours, ce qui \u00e9quivaut \u00e0 peu pr\u00e8s \u00e0 584,5 milliards d'ann\u00e9es, soit 43 fois l'\u00e2ge estim\u00e9 de l'univers (13,7 milliards d'ann\u00e9es selon certaines sources). Principe: tours de Hanoi - Chistian Queinnec 1 2 3 4 from IPython.display import YouTubeVideo YouTubeVideo ( 'U3nGNJTxYc4' , width = 800 , height = 450 ) L'objectif est de r\u00e9soudre ce casse-t\u00eate en utilisant une m\u00e9thode r\u00e9cursive. Le cas de base est obtenu lorsque le nombre \\(n\\) de disques \u00e0 d\u00e9placer est nul. Dans ce cas on retourne. Le cas r\u00e9cursif est \u00e0 faire appara\u00eetre avec la remarque suivante: pour d\u00e9placer \\(n\\) disques d'une tour A vers une tour C, il faut: d\u00e9placer les \\(n-1\\) premiers disques vers une tour interm\u00e9diaire (B par exemple); d\u00e9placer le plus grand disque restant vers sa destination (ici tour C); d\u00e9placer les \\(n-1\\) disques de la premi\u00e8re \u00e9tape vers C. A faire Proposer une solution r\u00e9cursive, en python, du probl\u00e8me des tours de Hano\u00ef. La fonction pourrait avoir une signature du type: hanoi(nb_disques, tour_depart, tour interm, tour_arrivee) . 1 2 3 4 5 6 7 def hanoi ( n , tour_A , tour_B , tour_C ): \"\"\" d\u00e9place n disques de 'tour_A' vers 'tour_C', en utilisant la tour interm\u00e9diaire 'tour_B' \"\"\" # Supprimer l'instruction 'pass' et compl\u00e9ter avec votre code pass","title":"Probl\u00e8me classique: les tours de Hano\u00ef"},{"location":"NSITerm/LP2/C1EP1.html","text":"Vers le bac: Rendu de monnaie \u2693\ufe0e Pour travailler \u00e0 la maison, sans installation de Jupyter, ouvrir le notebook avec basthon, depuis cette adresse Le probl\u00e8me du rendu de monnaie est un probl\u00e8me d'algorithmique. Il s'\u00e9nonce de la fa\u00e7on suivante: \u00e9tant donn\u00e9 un syst\u00e8me de monnaie (pi\u00e8ces et billets), comment rendre une somme donn\u00e9e de fa\u00e7on optimale, c'est-\u00e0-dire avec le nombre minimal de pi\u00e8ces et billets ? Par exemple, la meilleure fa\u00e7on de rendre 7 euros est de rendre un billet de cinq et une pi\u00e8ce de deux, m\u00eame si d'autres fa\u00e7ons existent (rendre 7 pi\u00e8ces de un euro, par exemple). Cependant pour certains syst\u00e8mes de monnaie dits canoniques , l' algorithme glouton , o\u00f9 il suffit de rendre syst\u00e9matiquement la pi\u00e8ce ou le billet de valeur maximale \u2014 tant qu'il reste quelque chose \u00e0 rendre , est optimal. C'est la m\u00e9thode employ\u00e9e en pratique, ce qui se justifie car la quasi-totalit\u00e9 des syst\u00e8mes ayant cours dans le monde sont canoniques. Source: wikipedia Mod\u00e9lisation du probl\u00e8me \u2693\ufe0e On consid\u00e8re un syst\u00e8me mon\u00e9taire canonique constitu\u00e9 de pi\u00e8ces ou billets \\(P=\\{p_1, p_2, \\cdots, p_n\\}\\) , avec \\(p_1>p_2>\\cdots >p_n\\) . Les \\(p_i\\) \u00e9tant les valeurs des diff\u00e9rentes pi\u00e8ces ou billets. On appelle \\(v\\) la valeur \u00e0 rendre et \\(sol\\) la solution du probl\u00e8me. Le probl\u00e8me du rendu de monnaie peut \u00eatre vu comme un probl\u00e8me de choix de pi\u00e8ces (billets) ou ... pas, suivant la valeur \u00e0 rendre. Si la valeur \\(v\\) \u00e0 rendre est nulle, on a termin\u00e9, il suffit de renvoyer la solution. Dans le cas contraire, on compare \\(v\\) \u00e0 la valeur de la i-\u00e8me pi\u00e8ce \\(P\\left[i\\right]\\) courante: si la valeur \u00e0 rendre est plus petite que la valeur de la i-\u00e8me pi\u00e8ce, on ne peut \u00e9videmment pas choisir cette derni\u00e8re; il faudra essayer de rendre la monnaie avec la prochaine pi\u00e8ce; sinon, la pi\u00e8ce peut \u00eatre choisie et doit \u00eatre incluse \u00e0 la solution et on doit essayer de rendre la monnaie sur \\(v-P\\left[ i\\right]\\) . \u00c0 faire On adopte une d\u00e9marche r\u00e9cursive pour r\u00e9soudre ce probl\u00e8me. En utilisant la description pr\u00e9c\u00e9dente: identifier le cas de base et le ou les cas r\u00e9cursifs; \u00e9crire une fonction rendu qui r\u00e9soud ce probl\u00e8me; on pourra s'appuyer sur une fonction auxilliaire rendu_aux (\u00e0 \u00e9crire \u00e9galement), dont la signature est donn\u00e9e ci-apr\u00e8s. Codage \u2693\ufe0e 1 2 3 4 5 6 7 8 9 10 def rendu_aux ( v , sol , i ): \"\"\" v (entier): valeur \u00e0 rendre; sol (liste python): la solution i (entier): index de la pi\u00e8ce \u00e0 tester \"\"\" if ... # Cas de base ... else : ... # Cas r\u00e9cursifs Indications \u2693\ufe0e La solution est une liste de python qui diff\u00e8re sensiblement du tableau, dans le sens o\u00f9 elle peut \u00eatre agrandie. Pour inclure une nouvelle pi\u00e8ce \u00e0 la solution, on utilisera la m\u00e9thode append . 1 2 sol = [] sol . append ( 10 ) # inclus 10 \u00e0 la liste sol Tests \u2693\ufe0e Tester votre fonction 1 2 3 4 P = [ 500 , 200 , 100 , 50 , 20 , 10 , 5 , 2 , 1 ] assert rendu ( 0 ) == [] assert rendu ( 37 ) == [ 20 , 10 , 5 , 2 ] assert rendu ( 300 ) == [ 200 , 100 ]","title":"C1EP1"},{"location":"NSITerm/LP2/C1EP1.html#vers-le-bac-rendu-de-monnaie","text":"Pour travailler \u00e0 la maison, sans installation de Jupyter, ouvrir le notebook avec basthon, depuis cette adresse Le probl\u00e8me du rendu de monnaie est un probl\u00e8me d'algorithmique. Il s'\u00e9nonce de la fa\u00e7on suivante: \u00e9tant donn\u00e9 un syst\u00e8me de monnaie (pi\u00e8ces et billets), comment rendre une somme donn\u00e9e de fa\u00e7on optimale, c'est-\u00e0-dire avec le nombre minimal de pi\u00e8ces et billets ? Par exemple, la meilleure fa\u00e7on de rendre 7 euros est de rendre un billet de cinq et une pi\u00e8ce de deux, m\u00eame si d'autres fa\u00e7ons existent (rendre 7 pi\u00e8ces de un euro, par exemple). Cependant pour certains syst\u00e8mes de monnaie dits canoniques , l' algorithme glouton , o\u00f9 il suffit de rendre syst\u00e9matiquement la pi\u00e8ce ou le billet de valeur maximale \u2014 tant qu'il reste quelque chose \u00e0 rendre , est optimal. C'est la m\u00e9thode employ\u00e9e en pratique, ce qui se justifie car la quasi-totalit\u00e9 des syst\u00e8mes ayant cours dans le monde sont canoniques. Source: wikipedia","title":"Vers le bac: Rendu de monnaie"},{"location":"NSITerm/LP2/C1EP1.html#modelisation-du-probleme","text":"On consid\u00e8re un syst\u00e8me mon\u00e9taire canonique constitu\u00e9 de pi\u00e8ces ou billets \\(P=\\{p_1, p_2, \\cdots, p_n\\}\\) , avec \\(p_1>p_2>\\cdots >p_n\\) . Les \\(p_i\\) \u00e9tant les valeurs des diff\u00e9rentes pi\u00e8ces ou billets. On appelle \\(v\\) la valeur \u00e0 rendre et \\(sol\\) la solution du probl\u00e8me. Le probl\u00e8me du rendu de monnaie peut \u00eatre vu comme un probl\u00e8me de choix de pi\u00e8ces (billets) ou ... pas, suivant la valeur \u00e0 rendre. Si la valeur \\(v\\) \u00e0 rendre est nulle, on a termin\u00e9, il suffit de renvoyer la solution. Dans le cas contraire, on compare \\(v\\) \u00e0 la valeur de la i-\u00e8me pi\u00e8ce \\(P\\left[i\\right]\\) courante: si la valeur \u00e0 rendre est plus petite que la valeur de la i-\u00e8me pi\u00e8ce, on ne peut \u00e9videmment pas choisir cette derni\u00e8re; il faudra essayer de rendre la monnaie avec la prochaine pi\u00e8ce; sinon, la pi\u00e8ce peut \u00eatre choisie et doit \u00eatre incluse \u00e0 la solution et on doit essayer de rendre la monnaie sur \\(v-P\\left[ i\\right]\\) . \u00c0 faire On adopte une d\u00e9marche r\u00e9cursive pour r\u00e9soudre ce probl\u00e8me. En utilisant la description pr\u00e9c\u00e9dente: identifier le cas de base et le ou les cas r\u00e9cursifs; \u00e9crire une fonction rendu qui r\u00e9soud ce probl\u00e8me; on pourra s'appuyer sur une fonction auxilliaire rendu_aux (\u00e0 \u00e9crire \u00e9galement), dont la signature est donn\u00e9e ci-apr\u00e8s.","title":"Mod\u00e9lisation du probl\u00e8me"},{"location":"NSITerm/LP2/C1EP1.html#codage","text":"1 2 3 4 5 6 7 8 9 10 def rendu_aux ( v , sol , i ): \"\"\" v (entier): valeur \u00e0 rendre; sol (liste python): la solution i (entier): index de la pi\u00e8ce \u00e0 tester \"\"\" if ... # Cas de base ... else : ... # Cas r\u00e9cursifs","title":"Codage"},{"location":"NSITerm/LP2/C1EP1.html#indications","text":"La solution est une liste de python qui diff\u00e8re sensiblement du tableau, dans le sens o\u00f9 elle peut \u00eatre agrandie. Pour inclure une nouvelle pi\u00e8ce \u00e0 la solution, on utilisera la m\u00e9thode append . 1 2 sol = [] sol . append ( 10 ) # inclus 10 \u00e0 la liste sol","title":"Indications"},{"location":"NSITerm/LP2/C1EP1.html#tests","text":"Tester votre fonction 1 2 3 4 P = [ 500 , 200 , 100 , 50 , 20 , 10 , 5 , 2 , 1 ] assert rendu ( 0 ) == [] assert rendu ( 37 ) == [ 20 , 10 , 5 , 2 ] assert rendu ( 300 ) == [ 200 , 100 ]","title":"Tests"},{"location":"NSITerm/LP2/C1TD1.html","text":"Adaptation (plus difficile) d'un sujet de bac: le rendu de monnaie \u2693\ufe0e Pour travailler \u00e0 la maison, sans installation de Jupyter, ouvrir le notebook avec basthon, depuis cette adresse Le probl\u00e8me du rendu de monnaie est un probl\u00e8me d'algorithmique. Il s'\u00e9nonce de la fa\u00e7on suivante: \u00e9tant donn\u00e9 un syst\u00e8me de monnaie (pi\u00e8ces et billets), comment rendre une somme donn\u00e9e de fa\u00e7on optimale, c'est-\u00e0-dire avec le nombre minimal de pi\u00e8ces et billets ? Par exemple, la meilleure fa\u00e7on de rendre 7 euros est de rendre un billet de cinq et une pi\u00e8ce de deux, m\u00eame si d'autres fa\u00e7ons existent (rendre 7 pi\u00e8ces de un euro, par exemple). Cependant pour certains syst\u00e8mes de monnaie dits canoniques , l' algorithme glouton est optimal, c'est-\u00e0-dire qu'il suffit de rendre syst\u00e9matiquement la pi\u00e8ce ou le billet de valeur maximale \u2014 ce tant qu'il reste quelque chose \u00e0 rendre. C'est la m\u00e9thode employ\u00e9e en pratique, ce qui se justifie car la quasi-totalit\u00e9 des syst\u00e8mes ayant cours dans le monde sont canoniques. Source: wikipedia Mod\u00e9lisation du probl\u00e8me \u2693\ufe0e On consid\u00e8re un syst\u00e8me mon\u00e9taire canonique constitu\u00e9 de pi\u00e8ces ou de billets \\(P=\\{p_1, p_2, \\cdots, p_n\\}\\) , avec \\(p_1>p_2>\\cdots >p_n\\) . On appelle \\(v\\) la valeur \u00e0 rendre et \\(sol\\) la solution du probl\u00e8me. Le probl\u00e8me du rendu de monnaie peut \u00eatre vu comme un probl\u00e8me de choix de pi\u00e8ces (billets) ou ... pas, suivant la valeur \u00e0 rendre. Si la valeur \\(v\\) \u00e0 rendre est nulle, on a termin\u00e9, il suffit de renvoyer la solution. Dans le cas contraire, on compare \\(v\\) \u00e0 la valeur de la i-\u00e8me pi\u00e8ce \\(P\\left[i\\right]\\) : si la valeur \u00e0 rendre est plus petite que la valeur de la i-\u00e8me pi\u00e8ce, on ne peut \u00e9videmment pas choisir cette derni\u00e8re; il faudra essayer de rendre la monnaie avec la prochaine pi\u00e8ce; sinon, la pi\u00e8ce peut \u00eatre choisie et doit \u00eatre ajout\u00e9e \u00e0 la solution et on doit essayer de rendre la monnaie sur \\(v-P\\left[ i\\right]\\) . A faire On adopte une d\u00e9marche r\u00e9cursive pour r\u00e9soudre ce probl\u00e8me. En utilisant la description pr\u00e9c\u00e9dente: identifier le cas de base et le ou les cas r\u00e9cursifs; \u00e9crire une fonction rendu_aux dont la signature est donn\u00e9e dans la cellule suivante. Codage \u2693\ufe0e 1 2 3 4 5 6 7 8 9 10 def rendu_aux ( v , sol , i ): \"\"\" v (entier): somme \u00e0 rendre; sol (liste python): la solution i (entier): index de la pi\u00e8ce \u00e0 tester \"\"\" if ... # Cas de base ... else : ... # Cas r\u00e9cursifs Rappel On ins\u00e8re (\u00e0 droite) une valeur dans une liste python en utilisant append . Exemple: sol.append(100) . Tests \u2693\ufe0e Tester votre fonction 1 2 3 4 PIECES = [ 100 , 50 , 20 , 10 , 5 , 2 , 1 ] assert rendu_aux ( 0 , [], 0 ) == [] assert rendu_aux ( 37 , [], 0 ) == [ 20 , 10 , 5 , 2 ] assert rendu_aux ( 300 , [], 0 ) == [ 100 , 100 , 100 ]","title":"Vers le bac"},{"location":"NSITerm/LP2/C1TD1.html#adaptation-plus-difficile-dun-sujet-de-bac-le-rendu-de-monnaie","text":"Pour travailler \u00e0 la maison, sans installation de Jupyter, ouvrir le notebook avec basthon, depuis cette adresse Le probl\u00e8me du rendu de monnaie est un probl\u00e8me d'algorithmique. Il s'\u00e9nonce de la fa\u00e7on suivante: \u00e9tant donn\u00e9 un syst\u00e8me de monnaie (pi\u00e8ces et billets), comment rendre une somme donn\u00e9e de fa\u00e7on optimale, c'est-\u00e0-dire avec le nombre minimal de pi\u00e8ces et billets ? Par exemple, la meilleure fa\u00e7on de rendre 7 euros est de rendre un billet de cinq et une pi\u00e8ce de deux, m\u00eame si d'autres fa\u00e7ons existent (rendre 7 pi\u00e8ces de un euro, par exemple). Cependant pour certains syst\u00e8mes de monnaie dits canoniques , l' algorithme glouton est optimal, c'est-\u00e0-dire qu'il suffit de rendre syst\u00e9matiquement la pi\u00e8ce ou le billet de valeur maximale \u2014 ce tant qu'il reste quelque chose \u00e0 rendre. C'est la m\u00e9thode employ\u00e9e en pratique, ce qui se justifie car la quasi-totalit\u00e9 des syst\u00e8mes ayant cours dans le monde sont canoniques. Source: wikipedia","title":"Adaptation (plus difficile) d'un sujet de bac: le rendu de monnaie"},{"location":"NSITerm/LP2/C1TD1.html#modelisation-du-probleme","text":"On consid\u00e8re un syst\u00e8me mon\u00e9taire canonique constitu\u00e9 de pi\u00e8ces ou de billets \\(P=\\{p_1, p_2, \\cdots, p_n\\}\\) , avec \\(p_1>p_2>\\cdots >p_n\\) . On appelle \\(v\\) la valeur \u00e0 rendre et \\(sol\\) la solution du probl\u00e8me. Le probl\u00e8me du rendu de monnaie peut \u00eatre vu comme un probl\u00e8me de choix de pi\u00e8ces (billets) ou ... pas, suivant la valeur \u00e0 rendre. Si la valeur \\(v\\) \u00e0 rendre est nulle, on a termin\u00e9, il suffit de renvoyer la solution. Dans le cas contraire, on compare \\(v\\) \u00e0 la valeur de la i-\u00e8me pi\u00e8ce \\(P\\left[i\\right]\\) : si la valeur \u00e0 rendre est plus petite que la valeur de la i-\u00e8me pi\u00e8ce, on ne peut \u00e9videmment pas choisir cette derni\u00e8re; il faudra essayer de rendre la monnaie avec la prochaine pi\u00e8ce; sinon, la pi\u00e8ce peut \u00eatre choisie et doit \u00eatre ajout\u00e9e \u00e0 la solution et on doit essayer de rendre la monnaie sur \\(v-P\\left[ i\\right]\\) . A faire On adopte une d\u00e9marche r\u00e9cursive pour r\u00e9soudre ce probl\u00e8me. En utilisant la description pr\u00e9c\u00e9dente: identifier le cas de base et le ou les cas r\u00e9cursifs; \u00e9crire une fonction rendu_aux dont la signature est donn\u00e9e dans la cellule suivante.","title":"Mod\u00e9lisation du probl\u00e8me"},{"location":"NSITerm/LP2/C1TD1.html#codage","text":"1 2 3 4 5 6 7 8 9 10 def rendu_aux ( v , sol , i ): \"\"\" v (entier): somme \u00e0 rendre; sol (liste python): la solution i (entier): index de la pi\u00e8ce \u00e0 tester \"\"\" if ... # Cas de base ... else : ... # Cas r\u00e9cursifs Rappel On ins\u00e8re (\u00e0 droite) une valeur dans une liste python en utilisant append . Exemple: sol.append(100) .","title":"Codage"},{"location":"NSITerm/LP2/C1TD1.html#tests","text":"Tester votre fonction 1 2 3 4 PIECES = [ 100 , 50 , 20 , 10 , 5 , 2 , 1 ] assert rendu_aux ( 0 , [], 0 ) == [] assert rendu_aux ( 37 , [], 0 ) == [ 20 , 10 , 5 , 2 ] assert rendu_aux ( 300 , [], 0 ) == [ 100 , 100 , 100 ]","title":"Tests"},{"location":"NSITerm/LP2/C1TD1C.html","text":"Le probl\u00e8me du rendu de monnaie \u2693\ufe0e Analyse de l'\u00e9nonc\u00e9 \u2693\ufe0e Pour plus de lisibilit\u00e9, certaines variables sugg\u00e9r\u00e9es par l'\u00e9nonc\u00e9 sont renomm\u00e9es. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 PIECES = [ 100 , 50 , 20 , 10 , 5 , 2 , 1 ] # syst\u00e8me monnaitaire canonique def rendu_aux ( somme_a_rendre , solution , i ): # Cas de base if somme_a_rendre == 0 : return solution # Cas r\u00e9cursifs if somme_a_rendre < PIECES [ i ]: # On ne peut prendre la pi\u00e8ce, on essaie avec la suivante return rendu_aux ( somme_a_rendre , solution , i + 1 ) else : solution . append ( PIECES [ i ]) # On prend la pi\u00e8ce... # ... et on r\u00e9soud le pb avec somme_a_rendre - PIECES[i] return rendu_aux ( somme_a_rendre - PIECES [ i ], solution , i ) 1 rendu_aux ( 73 , [], 0 ) 1 [50, 20, 2, 1] 1 rendu_aux ( 68 , [], 0 ) 1 [50, 10, 5, 2, 1] 1 rendu_aux ( 100 , [], 0 ) 1 [100] Autre solution \u2693\ufe0e On remarque que l'appel de la fonction rendu_aux est assez lourd et que les deux derniers param\u00e8tres seront syst\u00e9matiquement [] et 0 . On pourrait alors simplifier l'appel avec: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def rendu ( somme ): \"\"\" r\u00e9soud r\u00e9cursivement le pb du rendu de monnaie\"\"\" def rendu_aux ( somme_a_rendre , solution , i ): \"\"\" Une fonction auxiliaire\"\"\" # Cas de base if somme_a_rendre == 0 : return solution # Cas r\u00e9cursifs if somme_a_rendre < PIECES [ i ]: # On ne peut prendre la pi\u00e8ce, on essaie avec la suivante return rendu_aux ( somme_a_rendre , solution , i + 1 ) else : solution . append ( PIECES [ i ]) # On prend la pi\u00e8ce... # ... et on r\u00e9soud le pb avec somme_a_rendre - PIECES[i] return rendu_aux ( somme_a_rendre - PIECES [ i ], solution , i ) return rendu_aux ( somme , [], 0 ) 1 2 3 4 # TESTS assert rendu ( 0 ) == [] assert rendu ( 37 ) == [ 20 , 10 , 5 , 2 ] assert rendu ( 300 ) == [ 100 , 100 , 100 ]","title":"Correction"},{"location":"NSITerm/LP2/C1TD1C.html#le-probleme-du-rendu-de-monnaie","text":"","title":"Le probl\u00e8me du rendu de monnaie"},{"location":"NSITerm/LP2/C1TD1C.html#analyse-de-lenonce","text":"Pour plus de lisibilit\u00e9, certaines variables sugg\u00e9r\u00e9es par l'\u00e9nonc\u00e9 sont renomm\u00e9es. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 PIECES = [ 100 , 50 , 20 , 10 , 5 , 2 , 1 ] # syst\u00e8me monnaitaire canonique def rendu_aux ( somme_a_rendre , solution , i ): # Cas de base if somme_a_rendre == 0 : return solution # Cas r\u00e9cursifs if somme_a_rendre < PIECES [ i ]: # On ne peut prendre la pi\u00e8ce, on essaie avec la suivante return rendu_aux ( somme_a_rendre , solution , i + 1 ) else : solution . append ( PIECES [ i ]) # On prend la pi\u00e8ce... # ... et on r\u00e9soud le pb avec somme_a_rendre - PIECES[i] return rendu_aux ( somme_a_rendre - PIECES [ i ], solution , i ) 1 rendu_aux ( 73 , [], 0 ) 1 [50, 20, 2, 1] 1 rendu_aux ( 68 , [], 0 ) 1 [50, 10, 5, 2, 1] 1 rendu_aux ( 100 , [], 0 ) 1 [100]","title":"Analyse de l'\u00e9nonc\u00e9"},{"location":"NSITerm/LP2/C1TD1C.html#autre-solution","text":"On remarque que l'appel de la fonction rendu_aux est assez lourd et que les deux derniers param\u00e8tres seront syst\u00e9matiquement [] et 0 . On pourrait alors simplifier l'appel avec: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def rendu ( somme ): \"\"\" r\u00e9soud r\u00e9cursivement le pb du rendu de monnaie\"\"\" def rendu_aux ( somme_a_rendre , solution , i ): \"\"\" Une fonction auxiliaire\"\"\" # Cas de base if somme_a_rendre == 0 : return solution # Cas r\u00e9cursifs if somme_a_rendre < PIECES [ i ]: # On ne peut prendre la pi\u00e8ce, on essaie avec la suivante return rendu_aux ( somme_a_rendre , solution , i + 1 ) else : solution . append ( PIECES [ i ]) # On prend la pi\u00e8ce... # ... et on r\u00e9soud le pb avec somme_a_rendre - PIECES[i] return rendu_aux ( somme_a_rendre - PIECES [ i ], solution , i ) return rendu_aux ( somme , [], 0 ) 1 2 3 4 # TESTS assert rendu ( 0 ) == [] assert rendu ( 37 ) == [ 20 , 10 , 5 , 2 ] assert rendu ( 300 ) == [ 100 , 100 , 100 ]","title":"Autre solution"},{"location":"NSITerm/LP2/C1TD1Ex.html","text":"TD r\u00e9cursivit\u00e9: Rendu de monnaie \u2693\ufe0e Pour travailler \u00e0 la maison, sans installation de Jupyter, ouvrir le notebook avec basthon, depuis cette adresse Le probl\u00e8me du rendu de monnaie est un probl\u00e8me d'algorithmique. Il s'\u00e9nonce de la fa\u00e7on suivante: \u00e9tant donn\u00e9 un syst\u00e8me de monnaie (pi\u00e8ces et billets), comment rendre une somme donn\u00e9e de fa\u00e7on optimale, c'est-\u00e0-dire avec le nombre minimal de pi\u00e8ces et billets ? Par exemple, la meilleure fa\u00e7on de rendre 7 euros est de rendre un billet de cinq et une pi\u00e8ce de deux, m\u00eame si d'autres fa\u00e7ons existent (rendre 7 pi\u00e8ces de un euro, par exemple). Cependant pour certains syst\u00e8mes de monnaie dits canoniques , l' algorithme glouton est optimal, c'est-\u00e0-dire qu'il suffit de rendre syst\u00e9matiquement la pi\u00e8ce ou le billet de valeur maximale \u2014 ce tant qu'il reste quelque chose \u00e0 rendre. C'est la m\u00e9thode employ\u00e9e en pratique, ce qui se justifie car la quasi-totalit\u00e9 des syst\u00e8mes ayant cours dans le monde sont canoniques. Source: wikipedia Mod\u00e9lisation du probl\u00e8me \u2693\ufe0e On consid\u00e8re un syst\u00e8me mon\u00e9taire canonique \\(S=\\{p_1, p_2, \\cdots, p_n\\}\\) , avec \\(p_1>p_2>\\cdots >p_n\\) . On appelle \\(v\\) la valeur \u00e0 rendre et \\(sol\\) la solution du probl\u00e8me. Le probl\u00e8me du rendu de monnaie peut \u00eatre vu comme un probl\u00e8me de choix de pi\u00e8ces (billets) ou ... pas, suivant la valeur \u00e0 rendre. Si la valeur \\(v\\) \u00e0 rendre est nulle, on a termin\u00e9, il suffit de renvoyer la solution. Dans le cas contraire, on compare \\(v\\) \u00e0 la valeur de la i-\u00e8me pi\u00e8ce \\(S\\left[i\\right]\\) : si la valeur \u00e0 rendre est plus petite que la valeur de la i-\u00e8me pi\u00e8ce, on ne peut \u00e9videmment pas choisir cette derni\u00e8re; il faudra essayer de rendre la monnaie avec la prochaine pi\u00e8ce; sinon, la pi\u00e8ce peut \u00eatre choisie et doit \u00eatre ajout\u00e9e \u00e0 la solution et on doit essayer de rendre la monnaie sur \\(v-S\\left[ i\\right]\\) . A faire On adopte une d\u00e9marche r\u00e9cursive pour r\u00e9soudre ce probl\u00e8me. En utilisant la description pr\u00e9c\u00e9dente: identifier le cas de base et le ou les cas r\u00e9cursifs; coder une fonction rendu dont la signature est donn\u00e9e dans la cellule suivante. Codage \u2693\ufe0e 1 2 3 4 5 6 7 8 9 10 def rendu ( v , sol , i ): \"\"\" v (entier): valeur \u00e0 rendre; sol (liste python): la solution i (entier): index de la pi\u00e8ce \u00e0 tester \"\"\" if ... # Cas de base ... else : ... # Cas r\u00e9cursifs Tests \u2693\ufe0e Tester votre fonction 1 2 3 4 S = [ 500 , 200 , 100 , 50 , 20 , 10 , 5 , 2 , 1 ] assert rendu ( 0 , [], 0 ) == [] assert rendu ( 37 , [], 0 ) == [ 20 , 10 , 5 , 2 ] assert rendu ( 300 , [], 0 ) == [ 200 , 100 ]","title":"C1TD1Ex"},{"location":"NSITerm/LP2/C1TD1Ex.html#td-recursivite-rendu-de-monnaie","text":"Pour travailler \u00e0 la maison, sans installation de Jupyter, ouvrir le notebook avec basthon, depuis cette adresse Le probl\u00e8me du rendu de monnaie est un probl\u00e8me d'algorithmique. Il s'\u00e9nonce de la fa\u00e7on suivante: \u00e9tant donn\u00e9 un syst\u00e8me de monnaie (pi\u00e8ces et billets), comment rendre une somme donn\u00e9e de fa\u00e7on optimale, c'est-\u00e0-dire avec le nombre minimal de pi\u00e8ces et billets ? Par exemple, la meilleure fa\u00e7on de rendre 7 euros est de rendre un billet de cinq et une pi\u00e8ce de deux, m\u00eame si d'autres fa\u00e7ons existent (rendre 7 pi\u00e8ces de un euro, par exemple). Cependant pour certains syst\u00e8mes de monnaie dits canoniques , l' algorithme glouton est optimal, c'est-\u00e0-dire qu'il suffit de rendre syst\u00e9matiquement la pi\u00e8ce ou le billet de valeur maximale \u2014 ce tant qu'il reste quelque chose \u00e0 rendre. C'est la m\u00e9thode employ\u00e9e en pratique, ce qui se justifie car la quasi-totalit\u00e9 des syst\u00e8mes ayant cours dans le monde sont canoniques. Source: wikipedia","title":"TD r\u00e9cursivit\u00e9: Rendu de monnaie"},{"location":"NSITerm/LP2/C1TD1Ex.html#modelisation-du-probleme","text":"On consid\u00e8re un syst\u00e8me mon\u00e9taire canonique \\(S=\\{p_1, p_2, \\cdots, p_n\\}\\) , avec \\(p_1>p_2>\\cdots >p_n\\) . On appelle \\(v\\) la valeur \u00e0 rendre et \\(sol\\) la solution du probl\u00e8me. Le probl\u00e8me du rendu de monnaie peut \u00eatre vu comme un probl\u00e8me de choix de pi\u00e8ces (billets) ou ... pas, suivant la valeur \u00e0 rendre. Si la valeur \\(v\\) \u00e0 rendre est nulle, on a termin\u00e9, il suffit de renvoyer la solution. Dans le cas contraire, on compare \\(v\\) \u00e0 la valeur de la i-\u00e8me pi\u00e8ce \\(S\\left[i\\right]\\) : si la valeur \u00e0 rendre est plus petite que la valeur de la i-\u00e8me pi\u00e8ce, on ne peut \u00e9videmment pas choisir cette derni\u00e8re; il faudra essayer de rendre la monnaie avec la prochaine pi\u00e8ce; sinon, la pi\u00e8ce peut \u00eatre choisie et doit \u00eatre ajout\u00e9e \u00e0 la solution et on doit essayer de rendre la monnaie sur \\(v-S\\left[ i\\right]\\) . A faire On adopte une d\u00e9marche r\u00e9cursive pour r\u00e9soudre ce probl\u00e8me. En utilisant la description pr\u00e9c\u00e9dente: identifier le cas de base et le ou les cas r\u00e9cursifs; coder une fonction rendu dont la signature est donn\u00e9e dans la cellule suivante.","title":"Mod\u00e9lisation du probl\u00e8me"},{"location":"NSITerm/LP2/C1TD1Ex.html#codage","text":"1 2 3 4 5 6 7 8 9 10 def rendu ( v , sol , i ): \"\"\" v (entier): valeur \u00e0 rendre; sol (liste python): la solution i (entier): index de la pi\u00e8ce \u00e0 tester \"\"\" if ... # Cas de base ... else : ... # Cas r\u00e9cursifs","title":"Codage"},{"location":"NSITerm/LP2/C1TD1Ex.html#tests","text":"Tester votre fonction 1 2 3 4 S = [ 500 , 200 , 100 , 50 , 20 , 10 , 5 , 2 , 1 ] assert rendu ( 0 , [], 0 ) == [] assert rendu ( 37 , [], 0 ) == [ 20 , 10 , 5 , 2 ] assert rendu ( 300 , [], 0 ) == [ 200 , 100 ]","title":"Tests"},{"location":"NSITerm/LP2/C2E2.html","text":"Mise au point de programme \u2693\ufe0e Des fonctions mal \u00e9crites \u2693\ufe0e Soient les trois fonctions suivantes: 1 2 3 4 5 6 7 8 9 10 11 def f1 ( x ): return str ( 2 * 3.14 * x ) + ' cm' def f2 ( p ): x , y , z = p return x ** 2 + y ** 2 == z ** 2 def f3 ( d , s ): if s != 'nsi' : d [ s ] += 1 return d R\u00e9sultats de quelques appels 1 f1 ( 3 ) 1 '18.84 cm' 1 f2 (( 3 , 4 , 5 )) 1 True 1 f2 (( 1 , 5 , 9 )) 1 False 1 f3 ({ 'math' : 10 , 'ses' : 12.5 , 'nsi' : 6 }, 'ses' ) 1 {'math': 10, 'ses': 13.5, 'nsi': 6} 1 \u00c0 faire Apr\u00e8s une analyse rapide du code des trois fonctions pr\u00e9c\u00e9dentes et en tenant compte des conseils formul\u00e9s en cours, proc\u00e9dez aux am\u00e9liorations n\u00e9cessaires. Attention aux effets de bord \u2693\ufe0e Consid\u00e9rons le probl\u00e8me simple suivant: transformer un tableau de tableaux ( matrice ) en un tableau. En d'autres termes, passer de: 1 2 3 mat = [[ 1 , 2 , 3 ], [ 4 , 5 , 6 ,], [ 7 , 8 , 9 ]] \u00e0 1 t = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] Un \u00e9l\u00e8ve de terminale NSI* propose: 1 2 3 4 5 6 7 8 9 10 11 12 from typing import List def mat2tab ( m : List [ List [ int , int , int ]]) -> list : \"\"\" renvoie la matrice m sous la forme d'un tableau m: tableau de tableaux d'entiers \"\"\" tab = m [ 0 ] # on r\u00e9cup\u00e8re l'int\u00e9gralit\u00e9 du 1er sous tableau for t in m [ 1 :]: tab += t # on va concat\u00e9ner avec les sous tableaux restants return tab 1 2 3 4 5 mat = [[ 1 , 2 , 3 ], [ 4 , 5 , 6 ,], [ 7 , 8 , 9 ]] t = mat2tab ( mat ) print ( t ) 1 [1, 2, 3, 4, 5, 6, 7, 8, 9] La fonction est document\u00e9e et annot\u00e9e. Le r\u00e9sultat correspond \u00e0 ce qui \u00e9tait attendu. Malheureusement, un effet non souhait\u00e9 s'est produit. 1 print ( mat ) 1 [[1, 2, 3, 4, 5, 6, 7, 8, 9], [4, 5, 6], [7, 8, 9]] Identifiez le probl\u00e8me et corrigez le.","title":"Exercices 2"},{"location":"NSITerm/LP2/C2E2.html#mise-au-point-de-programme","text":"","title":"Mise au point de programme"},{"location":"NSITerm/LP2/C2E2.html#des-fonctions-mal-ecrites","text":"Soient les trois fonctions suivantes: 1 2 3 4 5 6 7 8 9 10 11 def f1 ( x ): return str ( 2 * 3.14 * x ) + ' cm' def f2 ( p ): x , y , z = p return x ** 2 + y ** 2 == z ** 2 def f3 ( d , s ): if s != 'nsi' : d [ s ] += 1 return d R\u00e9sultats de quelques appels 1 f1 ( 3 ) 1 '18.84 cm' 1 f2 (( 3 , 4 , 5 )) 1 True 1 f2 (( 1 , 5 , 9 )) 1 False 1 f3 ({ 'math' : 10 , 'ses' : 12.5 , 'nsi' : 6 }, 'ses' ) 1 {'math': 10, 'ses': 13.5, 'nsi': 6} 1 \u00c0 faire Apr\u00e8s une analyse rapide du code des trois fonctions pr\u00e9c\u00e9dentes et en tenant compte des conseils formul\u00e9s en cours, proc\u00e9dez aux am\u00e9liorations n\u00e9cessaires.","title":"Des fonctions mal \u00e9crites"},{"location":"NSITerm/LP2/C2E2.html#attention-aux-effets-de-bord","text":"Consid\u00e9rons le probl\u00e8me simple suivant: transformer un tableau de tableaux ( matrice ) en un tableau. En d'autres termes, passer de: 1 2 3 mat = [[ 1 , 2 , 3 ], [ 4 , 5 , 6 ,], [ 7 , 8 , 9 ]] \u00e0 1 t = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] Un \u00e9l\u00e8ve de terminale NSI* propose: 1 2 3 4 5 6 7 8 9 10 11 12 from typing import List def mat2tab ( m : List [ List [ int , int , int ]]) -> list : \"\"\" renvoie la matrice m sous la forme d'un tableau m: tableau de tableaux d'entiers \"\"\" tab = m [ 0 ] # on r\u00e9cup\u00e8re l'int\u00e9gralit\u00e9 du 1er sous tableau for t in m [ 1 :]: tab += t # on va concat\u00e9ner avec les sous tableaux restants return tab 1 2 3 4 5 mat = [[ 1 , 2 , 3 ], [ 4 , 5 , 6 ,], [ 7 , 8 , 9 ]] t = mat2tab ( mat ) print ( t ) 1 [1, 2, 3, 4, 5, 6, 7, 8, 9] La fonction est document\u00e9e et annot\u00e9e. Le r\u00e9sultat correspond \u00e0 ce qui \u00e9tait attendu. Malheureusement, un effet non souhait\u00e9 s'est produit. 1 print ( mat ) 1 [[1, 2, 3, 4, 5, 6, 7, 8, 9], [4, 5, 6], [7, 8, 9]] Identifiez le probl\u00e8me et corrigez le.","title":"Attention aux effets de bord"},{"location":"NSITerm/LP2/C2E2P.html","text":"1 2 3 4 5 6 7 8 9 10 11 12 from typing import List def mat2tab ( m : List [ List [ int ]]) -> list : \"\"\" renvoie la matrice m sous la forme d'un tableau m: tableau de tableaux d'entiers \"\"\" tab = m [ 0 ] # on r\u00e9cup\u00e8re l'int\u00e9gralit\u00e9 du 1er sous tableau for t in m [ 1 :]: tab += t # on va concat\u00e9ner avec les sous tableaux restants return tab 1 ! mypy mestests . py 1 \u001b[1m\u001b[32mSuccess: no issues found in 1 source file\u001b[m 1 2 3 4 5 mat = [[ 1 , 2 , 3 ], [ 4 , 5 , 6 ,], [ 7 , 8 , 9 ]] t = mat2tab ( mat ) print ( t ) 1 [1, 2, 3, 4, 5, 6, 7, 8, 9] 1 2 import ipytest ipytest . autoconfig () 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 %% ipytest import pytest from random import randint from tri import tri_insertion def test_tab_neg_1 (): t = [ - 1 , - 1 , - 1 ] tri_insertion ( t ) assert t == [ - 1 , - 1 , - 1 ] def test_inverse_2 (): t = [ 14 , 10 , 5 , 1 ] tri_insertion ( t ) assert t == [ 1 , 5 , 10 , 14 ] def test_vide_0 (): with pytest . raises ( ValueError ): tri_insertion ([]) def test_deja_tri_3 (): t = [ 1 , 2 , 3 , 4 , 5 ] tri_insertion ( t ) assert t == [ 1 , 2 , 3 , 4 , 5 ] def test_random_4 (): t = [ randint ( - 20 , 20 ) for _ in range ( 10 )] tri_insertion ( t ) assert all ( t [ i ] <= t [ i + 1 ] for i in range ( 9 )) def test_en_place_5 (): assert tri_insertion ([ 1 , 2 , 3 ]) is None 1 2 3 4 5 6 7 8 9 10 11 12 \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31mF\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [100%]\u001b[0m ============================================= FAILURES ============================================= \u001b[31m\u001b[1m___________________________________________ test_vide_0 ____________________________________________\u001b[0m \u001b[94mdef\u001b[39;49;00m \u001b[92mtest_vide_0\u001b[39;49;00m(): > \u001b[94mwith\u001b[39;49;00m pytest.raises(\u001b[96mValueError\u001b[39;49;00m): \u001b[1m\u001b[31mE Failed: DID NOT RAISE <class 'ValueError'>\u001b[0m \u001b[1m\u001b[31m/tmp/ipykernel_7122/2745413413.py\u001b[0m:17: Failed ===================================== short test summary info ====================================== FAILED tmpguxs08cg.py::test_vide_0 - Failed: DID NOT RAISE <class 'ValueError'> \u001b[31m\u001b[31m\u001b[1m1 failed\u001b[0m, \u001b[32m5 passed\u001b[0m\u001b[31m in 0.76s\u001b[0m\u001b[0m La fonction f1 effectue la multiplication de \\(2\\times \\pi\\) avec le nombre pass\u00e9 en param\u00e8tre. On pourrait imaginer qu'elle effectue le calcul du p\u00e9rim\u00e8tre d'un cercle. D'o\u00f9, la proposition: 1 2 3 4 5 6 7 8 9 def perimetre ( r : float ) -> str : \"\"\" Calcul le p\u00e9rim\u00e8tre d'un cercle de rayon r et renvoie le r\u00e9sultat sous forme d'une cha\u00eene de caract\u00e8re. r: rayon (float), d\u00e9cimal positif \"\"\" assert r > 0 , \"Erreur, r > 0\" return str ( 2 * 3.14 * r ) + ' cm' 1 perimetre ( 3 ) 1 '18.84 cm' La fonction f2 v\u00e9rifie si la somme du carr\u00e9 de deux nombres est \u00e9gal au carr\u00e9 d'un troisi\u00e8me. On peut supposer qu'il v\u00e9rifie si un triangle de c\u00f4t\u00e9s \\(a, b, c\\) est rectangle en testant l'\u00e9galit\u00e9 \\(a^2+b^2=c^2\\) ( Pythagore ). 1 2 3 4 5 6 7 8 9 10 11 12 from typing import Tuple def est_rectangle ( cotes : Tuple [ int , int , int ]) -> bool : \"\"\" V\u00e9rifie si un triangle rectangle. Renvoie True si oui ou False sinon. cotes: tuple d'entiers positifs \"\"\" a , b , c = cotes assert a > 0 and b > 0 and c > 0 , \"Erreur a,b,c positifs\" return a ** 2 + b ** 2 == c ** 2 1 est_rectangle (( 3 , 4 , 5 )) 1 True 1 est_rectangle ( 3 , 4 , 5 ) 1 2 3 4 5 6 7 8 9 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) /tmp/ipykernel_7122/681810540.py in <module> ----> 1 est_rectangle(3, 4, 5) TypeError: est_rectangle() takes 1 positional argument but 3 were given 1 est_rectangle (( 1 , 7 , 5 )) 1 False La fonction f3 augmente la valeur associ\u00e9e \u00e0 la cl\u00e9 pass\u00e9e en deuxi\u00e8me param\u00e8tre de 1, sauf si cette cl\u00e9 vaut nsi . Le code propos\u00e9 modifie une entr\u00e9e du dictionnaire, il serait souhaitable de v\u00e9rifier que celle-ci existe ! 1 2 3 4 5 6 7 8 def augmente_note ( releve : dict , matiere : str ) -> None : \"\"\" Augmente la valeur associ\u00e9e \u00e0 la cl\u00e9 mati\u00e8re de 1, sauf si celle-ci vaut 'nsi'. \"\"\" assert matiere in releve , \"Erreur: mati\u00e8re absente\" if matiere != 'nsi' : releve [ matiere ] += 1 1 2 3 r1 = { 'math' : 10 , 'ses' : 12.5 , 'nsi' : 6 } augmente_note ( r1 , 'ses' ) print ( r1 ) 1 {'math': 10, 'ses': 13.5, 'nsi': 6} 1 augmente_note ( r1 , 'anglais' ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 --------------------------------------------------------------------------- AssertionError Traceback (most recent call last) /tmp/ipykernel_7122/3385823553.py in <module> ----> 1 augmente_note(r1, 'anglais') /tmp/ipykernel_7122/1063914476.py in augmente_note(releve, matiere) 3 Augmente la valeur associ\u00e9e \u00e0 la cl\u00e9 mati\u00e8re de 1, sauf si celle-ci vaut 'nsi'. 4 \"\"\" ----> 5 assert matiere in releve, \"Erreur: mati\u00e8re absente\" 6 7 if matiere != 'nsi': AssertionError: Erreur: mati\u00e8re absente assert 'anglais' in {'math': 10, 'nsi': 6, 'ses': 13.5} 1 2 augmente_note ( r1 , 'nsi' ) print ( r1 ) 1 {'math': 10, 'ses': 13.5, 'nsi': 6} 1 2 3 4 5 6 7 8 9 10 11 12 13 14 from typing import List def mat2tab_v2 ( m : List [ list ]) -> list : \"\"\" renvoie la matrice m sous la forme d'un tableau m: tableau de tableaux d'entiers \"\"\" nb_element = len ( m ) a_plat = [] for i in range ( nb_element ): for valeur in m [ i ]: a_plat . append ( valeur ) return a_plat 1 2 3 4 5 mat = [[ 1 , 2 , 3 ], [ 4 , 5 , 6 ,], [ 7 , 8 , 9 ]] t = mat2tab_v2 ( mat ) print ( t ) 1 [1, 2, 3, 4, 5, 6, 7, 8, 9] 1 print ( mat ) 1 [[1, 2, 3], [4, 5, 6], [7, 8, 9]] ... ou de mani\u00e8re plus concise, en utilisant une compr\u00e9hension de liste: 1 2 3 4 5 6 def mat2tab_v3 ( m : List [ list ]) -> list : \"\"\" renvoie la matrice m sous la forme d'un tableau m: tableau de tableaux d'entiers \"\"\" return [ valeur for i in range ( len ( m )) for valeur in m [ i ]] 1 2 3 4 5 mat = [[ 1 , 2 , 3 ], [ 4 , 5 , 6 ,], [ 7 , 8 , 9 ]] t = mat2tab_v3 ( mat ) print ( t ) 1 [1, 2, 3, 4, 5, 6, 7, 8, 9] 1 print ( mat ) 1 [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","title":"C2E2P"},{"location":"NSITerm/LP2/C3A1.html","text":"Activit\u00e9: cr\u00e9er son propre module \u2693\ufe0e Comme il a \u00e9t\u00e9 pr\u00e9cis\u00e9 dans l'introduction du TP, il est important de d\u00e9couper son code en modules afin de pouvoir le r\u00e9utiliser facilement et d'en assurer une maintenance ais\u00e9e. Qu'est-ce qu'un module? \u2693\ufe0e D\u00e9finition Un module est un fichier texte, d'extension .py (ou un fichier binaire .pyc qui ne sera pas abord\u00e9 ici). Il peut contenir des variables, des fonctions des classes ou d'autres modules. Une bonne pratique en python consiste \u00e0 placer des commentaires ( docstring ) au d\u00e9but: des fichiers, pour informer l'utilisateur des diverses fonctionnalit\u00e9s du module; des fonctions afin d'en donner les sp\u00e9cifications. O\u00f9 placer un module personnel? \u2693\ufe0e Le plus simple, mais pas forc\u00e9ment le plus recommand\u00e9, est de placer le module dans le m\u00eame dossier que les programmes qui en feront appel. A faire Cr\u00e9er un module pile , correctement document\u00e9, qui regroupe l'impl\u00e9mentation des op\u00e9rations courantes sur une structure de donn\u00e9e de type pile (voir chap. IV). En faire de m\u00eame en cr\u00e9ant un module file . Cr\u00e9er une file nomm\u00e9e f puis enfiler successivement les valeurs 3, 9 et 27. V\u00e9rifier si la file f est vide. Enfin, d\u00e9filer f 4 fois de suite. Les r\u00e9sultats sont-ils coh\u00e9rents? 1 2 3 4 import pile , file # Tests - A compl\u00e9ter Comment cr\u00e9er un package? \u2693\ufe0e D\u00e9finition Un package ou librairie en fran\u00e7ais est un dossier sp\u00e9cial dans lequel on regroupe des modules. Supposons que l'on dispose de 4 modules nomm\u00e9s algo , langage , machine et information . On souhaite cr\u00e9er un package nsi qui regroupe ces 4 modules. On proc\u00e8de de la mani\u00e8re suivante: cr\u00e9er dans le dossier o\u00f9 se situe le programme appelant un dossier nomm\u00e9 nsi (en ligne de commande mkdir nsi ); cr\u00e9er dans le dossier nsi un fichier vide __init__.py (en ligne de commande touch nsi/__init__.py , attention \u00e0 la pr\u00e9sence des 2 caract\u00e8res 'soulign\u00e9' en d\u00e9but et fin de nom); d\u00e9placer les 4 fichiers py des modules dans le dossier nsi . Pour utiliser une fonction tri du module algo , on utilisera la syntaxe: 1 from nsi.algo import tri ou from nsi.algo import * ( d\u00e9conseill\u00e9 ) A faire R\u00e9aliser un package nomm\u00e9 sdd constitu\u00e9 des modules pile et file . Tester le bon fonctionnement des imports en indiquant les commandes utilis\u00e9es dans la cellule suivante.","title":"Actvit\u00e9"},{"location":"NSITerm/LP2/C3A1.html#activite-creer-son-propre-module","text":"Comme il a \u00e9t\u00e9 pr\u00e9cis\u00e9 dans l'introduction du TP, il est important de d\u00e9couper son code en modules afin de pouvoir le r\u00e9utiliser facilement et d'en assurer une maintenance ais\u00e9e.","title":"Activit\u00e9: cr\u00e9er son propre module"},{"location":"NSITerm/LP2/C3A1.html#quest-ce-quun-module","text":"D\u00e9finition Un module est un fichier texte, d'extension .py (ou un fichier binaire .pyc qui ne sera pas abord\u00e9 ici). Il peut contenir des variables, des fonctions des classes ou d'autres modules. Une bonne pratique en python consiste \u00e0 placer des commentaires ( docstring ) au d\u00e9but: des fichiers, pour informer l'utilisateur des diverses fonctionnalit\u00e9s du module; des fonctions afin d'en donner les sp\u00e9cifications.","title":"Qu'est-ce qu'un module?"},{"location":"NSITerm/LP2/C3A1.html#ou-placer-un-module-personnel","text":"Le plus simple, mais pas forc\u00e9ment le plus recommand\u00e9, est de placer le module dans le m\u00eame dossier que les programmes qui en feront appel. A faire Cr\u00e9er un module pile , correctement document\u00e9, qui regroupe l'impl\u00e9mentation des op\u00e9rations courantes sur une structure de donn\u00e9e de type pile (voir chap. IV). En faire de m\u00eame en cr\u00e9ant un module file . Cr\u00e9er une file nomm\u00e9e f puis enfiler successivement les valeurs 3, 9 et 27. V\u00e9rifier si la file f est vide. Enfin, d\u00e9filer f 4 fois de suite. Les r\u00e9sultats sont-ils coh\u00e9rents? 1 2 3 4 import pile , file # Tests - A compl\u00e9ter","title":"O\u00f9 placer un module personnel?"},{"location":"NSITerm/LP2/C3A1.html#comment-creer-un-package","text":"D\u00e9finition Un package ou librairie en fran\u00e7ais est un dossier sp\u00e9cial dans lequel on regroupe des modules. Supposons que l'on dispose de 4 modules nomm\u00e9s algo , langage , machine et information . On souhaite cr\u00e9er un package nsi qui regroupe ces 4 modules. On proc\u00e8de de la mani\u00e8re suivante: cr\u00e9er dans le dossier o\u00f9 se situe le programme appelant un dossier nomm\u00e9 nsi (en ligne de commande mkdir nsi ); cr\u00e9er dans le dossier nsi un fichier vide __init__.py (en ligne de commande touch nsi/__init__.py , attention \u00e0 la pr\u00e9sence des 2 caract\u00e8res 'soulign\u00e9' en d\u00e9but et fin de nom); d\u00e9placer les 4 fichiers py des modules dans le dossier nsi . Pour utiliser une fonction tri du module algo , on utilisera la syntaxe: 1 from nsi.algo import tri ou from nsi.algo import * ( d\u00e9conseill\u00e9 ) A faire R\u00e9aliser un package nomm\u00e9 sdd constitu\u00e9 des modules pile et file . Tester le bon fonctionnement des imports en indiquant les commandes utilis\u00e9es dans la cellule suivante.","title":"Comment cr\u00e9er un package?"},{"location":"NSITerm/LP2/C3TP1-2.html","text":"M\u00e9thodes de programmation modulaire \u2693\ufe0e Avantages d'une programmation modulaire \u2693\ufe0e En premi\u00e8re on a introduit les fonctions en r\u00e9ponse \u00e0 la r\u00e9p\u00e9tition de code au sein d'un programme. Cependant, la r\u00e9p\u00e9tition des fonctions entre programmes est encore possible. Une solution est de regrouper ces fonctions et classes dans un module . On d\u00e9compose ainsi une application en module(s) qui peuvent \u00eatre d\u00e9velopp\u00e9s ind\u00e9pendamment et r\u00e9utilis\u00e9s dans d'autres applications. Par ailleurs, cette organisation limite ou supprime les doublons de code, facilitant ainsi la maintenance ( un bug est corrig\u00e9 une fois ). Enfin, la programmation modulaire permet d'une certaine fa\u00e7on de cacher des d\u00e9tails d'impl\u00e9mentation , l'interaction utilisateur-module se faisant par le biais de l'interface. Il s'agira dans l'activit\u00e9 1, de se placer en temps qu'utilisateur de modules en se r\u00e9f\u00e9rant \u00e0 leur API, puis en temps que concepteur d'un module simple, dans la suivante. TP 1: traitement de donn\u00e9es au format JSON \u2693\ufe0e Pr\u00e9ambule: le format json \u2693\ufe0e Un fichier json est un fichier texte contenant de l'information structur\u00e9e, tr\u00e8s utilis\u00e9 sur internet. Cette structuration est assur\u00e9e par des scalaires (nombre, bool\u00e9en, cha\u00eene) et des types d'\u00e9l\u00e9ments tels que: des paires cl\u00e9/valeur (qui rappelle les dictionnaires de python); de listes ordonn\u00e9es de valeurs. Voir json sur wikipedia . Voici un exemple de donn\u00e9es au format json : 1 2 3 4 5 6 7 8 9 10 11 12 13 { \"menu\" : { \"id\" : \"file\" , \"value\" : \"File\" , \"popup\" : { \"menuitem\" : [ { \"value\" : \"New\" , \"onclick\" : \"CreateNewDoc()\" }, { \"value\" : \"Open\" , \"onclick\" : \"OpenDoc()\" }, { \"value\" : \"Close\" , \"onclick\" : \"CloseDoc()\" } ] } } } Travail sur un fichier r\u00e9el \u2693\ufe0e Le site openweathermap permet d'obtenir des informations m\u00e9t\u00e9o dans beaucoup de villes du monde entier. Pour obtenir le temps dans une ville donn\u00e9e, il faut fournir un identifiant unique ou la paire lattitude/longitude. Openweathermap propose un fichier json contenant les informations pr\u00e9c\u00e9dentes. Ce fichier a \u00e9t\u00e9 t\u00e9l\u00e9charg\u00e9 et une version zipp\u00e9e est fournie city.zip . \u00c0 faire D\u00e9zipper ce fichier et retrouver ce notebook. ATTENTION Ne pas double-cliquer sur le fichier se situant dans le dossier json , pour ouvrir avec l'application par d\u00e9faut. En effet, ce fichier a une taille de 33 Mo et plus de 2 millions de lignes!! On pr\u00e9f\u00e8rera un traitement en ligne de commande pour voir la structure du fichier. On rappelle que l'utilisation de la ligne de commande est possible dans une cellule jupyter notebook , il suffit de pr\u00e9fixer la commande avec le caract\u00e8re ! . Enfin, pour plus de pr\u00e9cisions sur une commande du shell , ne pas h\u00e9siter \u00e0 consulter le manuel (exemple: !man sed ). \u00c0 faire Que r\u00e9alise la commande suivante ? 1 ! cat ./ json / city . list . json | wc - l 1 2095791 \u00c0 faire Que r\u00e9alise la commande suivante ? 1 ! cat ./ json / city . list . json | grep - n \"RE\" | head - n 2 1 2 238646: \"country\": \"RE\", 238656: \"country\": \"RE\", Enfin, pour avoir une meilleure id\u00e9e du contenu du fichier, on affiche quelques lignes avec l'\u00e9diteur sed disponible avec le shell . 1 2 # Affichage de 20 lignes ! sed - n \"238642,+20p\" ./ json / city . list . json 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { \"id\": 935146, \"name\": \"Les Trois-Bassins\", \"state\": \"\", \"country\": \"RE\", \"coord\": { \"lon\": 55.299999, \"lat\": -21.1 } }, { \"id\": 935210, \"name\": \"Salazie\", \"state\": \"\", \"country\": \"RE\", \"coord\": { \"lon\": 55.539001, \"lat\": -21.02734 } }, { Les objectifs du TP \u2693\ufe0e Le principal objectif de ce premier TP est d'exploiter un module fourni par la biblioth\u00e8que standard de python. Il sera tr\u00e8s important de savoir utiliser la documentation du module afin d'extraire du fichier json fourni, uniquement les informations concernant les villes de la R\u00e9union mais aussi de sauvegarder ces derni\u00e8res dans un fichier au format json . Le fichier obtenu devrait \u00eatre nettement moins lourd et plus facilement utilisable (une soixantaine d'entr\u00e9es au lieu de plus de 200 000 dans le fichier original). Rappels de 1re Pour importer un module, on peut utiliser la syntaxe import mon_super_module ; ce qui nous obligera \u00e0 pr\u00e9fixer chaque appel de fonction par mon_super_module.ma_fonction() . On peut raccourcir les appels en utilisant un alias lors de l'import: import mon_super_module as msp , on appelle alors msp.ma_fonction() . Enfin, on peut cibler une fonction pr\u00e9cise \u00e0 importer. Dans ce cas, on utilisera la syntaxe: from mon_super_module import ma_fonction et l'appel se fera directement par ma_fonction() sans pr\u00e9fixe. Travail \u00e0 r\u00e9aliser \u2693\ufe0e A faire Prendre connaissance de l'api du module json , en ligne sur python.org ou \u00e0 d\u00e9faut dans une cellule de Jupyter en utilisant les fonctions dir et help . 1 2 3 4 import json dir ( json ) A faire Quelles sont les deux fonctions du module json susceptibles de nous int\u00e9resser en vue d'une ouverture et d'une \u00e9criture de fichiers json ? Pour obtenir de l'aide sur une fonction pr\u00e9sente dans un module on utilise la fonction help (par exemple help(json.xxxx) o\u00f9 xxxx est le nom d'une fonction du module json ). 1 # R\u00e9ponse A faire On ne va extraire que les informations concernant les villes de la R\u00e9union. Quelle fonction doit-on utiliser pour transformer le fichier city.list.json pr\u00e9sent sur le disque, en une structure de donn\u00e9e utilisable en python ? R\u00e9aliser cette op\u00e9ration en compl\u00e9tant le code ci-dessous. 1 2 3 4 5 6 import json # Cr\u00e9ation d'un objet fichier f li\u00e9 \u00e0 city.list.json with open ( './json/city.list.json' , 'r' ) as f : #A compl\u00e9ter (supprimer la ligne 'pass') pass A faire Quelle est le type de la structure de donn\u00e9e obtenue et combien d'entr\u00e9es poss\u00e8de-t-elle? 1 # R\u00e9ponse A faire Afficher la premi\u00e8re valeur de cette structure de donn\u00e9e. 1 # R\u00e9ponse (donner la ligne de code + r\u00e9sultat) A faire Proposer un code permettant de sauver les entr\u00e9es qui ne concernent que la R\u00e9union dans une liste python . 1 2 3 # R\u00e9ponse villes_RE = [] # \u00c0 compl\u00e9ter A faire Combien d'entr\u00e9es poss\u00e8de cette nouvelle liste ? 1 # R\u00e9ponse A faire Quelle fonction devra-t-on utilser pour sauver cette liste dans un fichier json ? 1 # R\u00e9ponse A faire Proposer un code qui r\u00e9alise la sauvergarde la liste villes_RE dans un fichier json villes_RE.json . 1 2 3 4 5 6 #R\u00e9ponse # Cr\u00e9ation d'un objet fichier f li\u00e9 \u00e0 villes_RE.json with open ( \"./json/villes_RE.json\" , \"w\" ) as f : #\u00e0 compl\u00e9ter ici pass","title":"C3TP1 2"},{"location":"NSITerm/LP2/C3TP1-2.html#methodes-de-programmation-modulaire","text":"","title":"M\u00e9thodes de programmation modulaire"},{"location":"NSITerm/LP2/C3TP1-2.html#avantages-dune-programmation-modulaire","text":"En premi\u00e8re on a introduit les fonctions en r\u00e9ponse \u00e0 la r\u00e9p\u00e9tition de code au sein d'un programme. Cependant, la r\u00e9p\u00e9tition des fonctions entre programmes est encore possible. Une solution est de regrouper ces fonctions et classes dans un module . On d\u00e9compose ainsi une application en module(s) qui peuvent \u00eatre d\u00e9velopp\u00e9s ind\u00e9pendamment et r\u00e9utilis\u00e9s dans d'autres applications. Par ailleurs, cette organisation limite ou supprime les doublons de code, facilitant ainsi la maintenance ( un bug est corrig\u00e9 une fois ). Enfin, la programmation modulaire permet d'une certaine fa\u00e7on de cacher des d\u00e9tails d'impl\u00e9mentation , l'interaction utilisateur-module se faisant par le biais de l'interface. Il s'agira dans l'activit\u00e9 1, de se placer en temps qu'utilisateur de modules en se r\u00e9f\u00e9rant \u00e0 leur API, puis en temps que concepteur d'un module simple, dans la suivante.","title":"Avantages d'une programmation modulaire"},{"location":"NSITerm/LP2/C3TP1-2.html#tp-1-traitement-de-donnees-au-format-json","text":"","title":"TP 1: traitement de donn\u00e9es au format JSON"},{"location":"NSITerm/LP2/C3TP1.html","text":"M\u00e9thodes de programmation modulaire \u2693\ufe0e Avantages d'une programmation modulaire \u2693\ufe0e En premi\u00e8re on a introduit les fonctions en r\u00e9ponse \u00e0 la r\u00e9p\u00e9tition de code au sein d'un programme. Cependant, la r\u00e9p\u00e9tition des fonctions entre programmes est encore possible. Une solution est de regrouper ces fonctions et classes dans un module . On d\u00e9compose ainsi une application en module(s) qui peuvent \u00eatre d\u00e9velopp\u00e9s ind\u00e9pendamment et r\u00e9utilis\u00e9s dans d'autres applications. Par ailleurs, cette organisation limite ou supprime les doublons de code, facilitant ainsi la maintenance ( un bug est corrig\u00e9 une fois ). Enfin, la programmation modulaire permet d'une certaine fa\u00e7on de cacher des d\u00e9tails d'impl\u00e9mentation , l'interaction utilisateur-module se faisant par le biais de l'interface. Il s'agira dans le TP, de se placer en temps qu'utilisateur de modules en se r\u00e9f\u00e9rant \u00e0 leur API, puis en temps que concepteur d'un module simple, dans l'activit\u00e9. TP: traitement de donn\u00e9es au format JSON \u2693\ufe0e Pr\u00e9ambule: le format json \u2693\ufe0e Un fichier json est un fichier texte contenant de l'information structur\u00e9e, tr\u00e8s utilis\u00e9 sur internet. Cette structuration est assur\u00e9e par des scalaires (nombre, bool\u00e9en, cha\u00eene) et des types d'\u00e9l\u00e9ments tels que: des paires cl\u00e9/valeur (qui rappelle les dictionnaires de python); de listes ordonn\u00e9es de valeurs. Voir json sur wikipedia . Voici un exemple de donn\u00e9es au format json : 1 2 3 4 5 6 7 8 9 10 11 12 13 { \"menu\" : { \"id\" : \"file\" , \"value\" : \"File\" , \"popup\" : { \"menuitem\" : [ { \"value\" : \"New\" , \"onclick\" : \"CreateNewDoc()\" }, { \"value\" : \"Open\" , \"onclick\" : \"OpenDoc()\" }, { \"value\" : \"Close\" , \"onclick\" : \"CloseDoc()\" } ] } } } Travail sur un fichier r\u00e9el \u2693\ufe0e Le site openweathermap permet d'obtenir des informations m\u00e9t\u00e9o dans beaucoup de villes du monde entier. Pour obtenir le temps dans une ville donn\u00e9e, il faut fournir un identifiant unique ou la paire lattitude/longitude. Openweathermap propose un fichier json contenant les informations pr\u00e9c\u00e9dentes. Ce fichier a \u00e9t\u00e9 t\u00e9l\u00e9charg\u00e9 et une version zipp\u00e9e est fournie city.zip . \u00c0 faire D\u00e9zipper ce fichier et retrouver ce notebook. ATTENTION Ne pas double-cliquer sur le fichier se situant dans le dossier json , pour ouvrir avec l'application par d\u00e9faut. En effet, ce fichier a une taille de 33 Mo et plus de 2 millions de lignes!! On pr\u00e9f\u00e8rera un traitement en ligne de commande pour voir la structure du fichier. On rappelle que l'utilisation de la ligne de commande est possible dans une cellule jupyter notebook , il suffit de pr\u00e9fixer la commande avec le caract\u00e8re ! . Enfin, pour plus de pr\u00e9cisions sur une commande du shell , ne pas h\u00e9siter \u00e0 consulter le manuel (exemple: !man sed ). \u00c0 faire Que r\u00e9alise la commande suivante ? 1 ! cat ./ json / city . list . json | wc - l 1 2095791 \u00c0 faire Que r\u00e9alise la commande suivante ? 1 ! cat ./ json / city . list . json | grep - n \"RE\" | head - n 2 1 2 238646: \"country\": \"RE\", 238656: \"country\": \"RE\", Enfin, pour avoir une meilleure id\u00e9e du contenu du fichier, on affiche quelques lignes avec l'\u00e9diteur sed disponible avec le shell . 1 2 # Affichage de 20 lignes ! sed - n \"238642,+20p\" ./ json / city . list . json 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { \"id\": 935146, \"name\": \"Les Trois-Bassins\", \"state\": \"\", \"country\": \"RE\", \"coord\": { \"lon\": 55.299999, \"lat\": -21.1 } }, { \"id\": 935210, \"name\": \"Salazie\", \"state\": \"\", \"country\": \"RE\", \"coord\": { \"lon\": 55.539001, \"lat\": -21.02734 } }, { Les objectifs du TP \u2693\ufe0e Le principal objectif de ce TP est d'exploiter un module fourni par la biblioth\u00e8que standard de python. Il sera tr\u00e8s important de savoir utiliser la documentation du module afin d'extraire du fichier json fourni, uniquement les informations concernant les villes de la R\u00e9union mais aussi de sauvegarder ces derni\u00e8res dans un fichier au format json . Le fichier obtenu devrait \u00eatre nettement moins lourd et plus facilement utilisable (une soixantaine d'entr\u00e9es au lieu de plus de 200 000 dans le fichier original). Rappels de 1re Pour importer un module, on peut utiliser la syntaxe import mon_super_module ; ce qui nous obligera \u00e0 pr\u00e9fixer chaque appel de fonction par mon_super_module.ma_fonction() . On peut raccourcir les appels en utilisant un alias lors de l'import: import mon_super_module as msp , on appelle alors msp.ma_fonction() . Enfin, on peut cibler une fonction pr\u00e9cise \u00e0 importer. Dans ce cas, on utilisera la syntaxe: from mon_super_module import ma_fonction et l'appel se fera directement par ma_fonction() sans pr\u00e9fixe. Travail \u00e0 r\u00e9aliser \u2693\ufe0e A faire Prendre connaissance de l'api du module json , en ligne sur python.org ou \u00e0 d\u00e9faut dans une cellule de Jupyter en utilisant les fonctions dir et help . 1 2 3 4 import json dir ( json ) A faire Quelles sont les deux fonctions du module json susceptibles de nous int\u00e9resser en vue d'une ouverture et d'une \u00e9criture de fichiers json ? Pour obtenir de l'aide sur une fonction pr\u00e9sente dans un module on utilise la fonction help (par exemple help(json.xxxx) o\u00f9 xxxx est le nom d'une fonction du module json ). 1 # R\u00e9ponse A faire On ne va extraire que les informations concernant les villes de la R\u00e9union. Quelle fonction doit-on utiliser pour transformer le fichier city.list.json pr\u00e9sent sur le disque, en une structure de donn\u00e9e utilisable en python ? R\u00e9aliser cette op\u00e9ration en compl\u00e9tant le code ci-dessous. 1 2 3 4 5 6 import json # Cr\u00e9ation d'un objet fichier f li\u00e9 \u00e0 city.list.json with open ( './json/city.list.json' , 'r' ) as f : #A compl\u00e9ter (supprimer la ligne 'pass') pass A faire Quelle est le type de la structure de donn\u00e9e obtenue et combien d'entr\u00e9es poss\u00e8de-t-elle? 1 # R\u00e9ponse A faire Afficher la premi\u00e8re valeur de cette structure de donn\u00e9e. 1 # R\u00e9ponse (donner la ligne de code + r\u00e9sultat) A faire Proposer un code permettant de sauver les entr\u00e9es qui ne concernent que la R\u00e9union dans une liste python . 1 2 3 # R\u00e9ponse villes_RE = [] # \u00c0 compl\u00e9ter A faire Combien d'entr\u00e9es poss\u00e8de cette nouvelle liste ? 1 # R\u00e9ponse A faire Quelle fonction devra-t-on utilser pour sauver cette liste dans un fichier json ? 1 # R\u00e9ponse A faire Proposer un code qui r\u00e9alise la sauvergarde la liste villes_RE dans un fichier json villes_RE.json . 1 2 3 4 5 6 #R\u00e9ponse # Cr\u00e9ation d'un objet fichier f li\u00e9 \u00e0 villes_RE.json with open ( \"./json/villes_RE.json\" , \"w\" ) as f : #\u00e0 compl\u00e9ter ici pass","title":"TP"},{"location":"NSITerm/LP2/C3TP1.html#methodes-de-programmation-modulaire","text":"","title":"M\u00e9thodes de programmation modulaire"},{"location":"NSITerm/LP2/C3TP1.html#avantages-dune-programmation-modulaire","text":"En premi\u00e8re on a introduit les fonctions en r\u00e9ponse \u00e0 la r\u00e9p\u00e9tition de code au sein d'un programme. Cependant, la r\u00e9p\u00e9tition des fonctions entre programmes est encore possible. Une solution est de regrouper ces fonctions et classes dans un module . On d\u00e9compose ainsi une application en module(s) qui peuvent \u00eatre d\u00e9velopp\u00e9s ind\u00e9pendamment et r\u00e9utilis\u00e9s dans d'autres applications. Par ailleurs, cette organisation limite ou supprime les doublons de code, facilitant ainsi la maintenance ( un bug est corrig\u00e9 une fois ). Enfin, la programmation modulaire permet d'une certaine fa\u00e7on de cacher des d\u00e9tails d'impl\u00e9mentation , l'interaction utilisateur-module se faisant par le biais de l'interface. Il s'agira dans le TP, de se placer en temps qu'utilisateur de modules en se r\u00e9f\u00e9rant \u00e0 leur API, puis en temps que concepteur d'un module simple, dans l'activit\u00e9.","title":"Avantages d'une programmation modulaire"},{"location":"NSITerm/LP2/C3TP1.html#tp-traitement-de-donnees-au-format-json","text":"","title":"TP: traitement de donn\u00e9es au format JSON"},{"location":"NSITerm/LP2/C4A1.html","text":"M\u00e9thodes de programmation modulaire \u2693\ufe0e Avantages d'une programmation modulaire \u2693\ufe0e En premi\u00e8re on a introduit les fonctions en r\u00e9ponse \u00e0 la r\u00e9p\u00e9tition de code au sein d'un programme. Cependant, la r\u00e9p\u00e9tition des fonctions entre programmes est encore possible. Une solution est de regrouper ces fonctions et classes dans un module . On d\u00e9compose ainsi une application en module(s) qui peuvent \u00eatre d\u00e9velopp\u00e9s ind\u00e9pendamment et r\u00e9utilis\u00e9s dans d'autres applications. Par ailleurs, cette organisation limite ou supprime les doublons de code, facilitant ainsi la maintenance ( un bug est corrig\u00e9 une fois ). Enfin, la programmation modulaire permet d'une certaine fa\u00e7on de cacher des d\u00e9tails d'impl\u00e9mentation , l'interaction utilisateur-module se faisant par le biais de l'interface. Il s'agira dans l'activit\u00e9 1, de se placer en temps qu'utilisateur de modules en se r\u00e9f\u00e9rant \u00e0 leur API, puis en temps que concepteur d'un module simple, dans la suivante. Activit\u00e9 1: traitement de donn\u00e9es au format JSON \u2693\ufe0e Pr\u00e9sentation rapide du format json \u2693\ufe0e Le fichier json est un fichier texte contenant de l'information structur\u00e9e, tr\u00e8s utilis\u00e9 sur internet. Cette structuration est assur\u00e9e par deux types d'\u00e9l\u00e9ments: des paires cl\u00e9/valeur (qui rappelle les dictionnaires de python); de listes ordonn\u00e9es de valeurs. Voir json sur wikipedia . Voici un exemple de donn\u00e9es au format json : 1 2 3 4 5 6 7 8 9 10 11 12 13 { \"menu\" : { \"id\" : \"file\" , \"value\" : \"File\" , \"popup\" : { \"menuitem\" : [ { \"value\" : \"New\" , \"onclick\" : \"CreateNewDoc()\" }, { \"value\" : \"Open\" , \"onclick\" : \"OpenDoc()\" }, { \"value\" : \"Close\" , \"onclick\" : \"CloseDoc()\" } ] } } } D\u00e9couvrir la structure d'un fichier r\u00e9el \u2693\ufe0e Le site openweathermap permet d'obtenir des informations m\u00e9t\u00e9o dans beaucoup de villes du monde entier. Pour obtenir le temps dans une ville donn\u00e9e, il faut fournir un identifiant unique ou la paire lattitude/longitude. Openweathermap propose un fichier json contenant ces informations. Ce fichier est disponible en version compress\u00e9e, ici . ATTENTION Ne pas double-cliquer pour ouvrir avec l'application par d\u00e9faut, le fichier a une taille de 33 Mo et plus de 2 millions de lignes!! On pr\u00e9f\u00e8rera un traitement en ligne de commande pour voir la structure du fichier. On rappelle que l'utilisation de la ligne de commande est possible dans une cellule jupyter notebook , il suffit de pr\u00e9fixer la commande avec le caract\u00e8re ! . Enfin, pour plus de pr\u00e9cisions sur une commande bash , ne pas h\u00e9siter \u00e0 consulter le manuel (exemple: man sed ). 1 2 # Nombre de lignes ! cat ./ json / city . list . json | wc - l 1 2095791 1 2 # 2 premi\u00e8res lignes concernant la R\u00e9union ! cat ./ json / city . list . json | grep - n \"RE\" | head - n 2 1 2 238646: \"country\": \"RE\", 238656: \"country\": \"RE\", 1 2 # Affichage de 20 lignes autour du 1er r\u00e9sultat ! sed - n \"238642,+20p\" ./ json / city . list . json 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { \"id\": 935146, \"name\": \"Les Trois-Bassins\", \"state\": \"\", \"country\": \"RE\", \"coord\": { \"lon\": 55.299999, \"lat\": -21.1 } }, { \"id\": 935210, \"name\": \"Salazie\", \"state\": \"\", \"country\": \"RE\", \"coord\": { \"lon\": 55.539001, \"lat\": -21.02734 } }, { Objectifs \u2693\ufe0e Le but de cette premi\u00e8re activit\u00e9 est d'extraire de ce fichier uniquement les informations concernant les villes de la R\u00e9union et de les sauvegarder dans un fichier au format json. Le fichier obtenu devrait \u00eatre nettement moins lourd et plus facilement utilisable (une soixantaine d'entr\u00e9es au lieu de plus de 200 000 dans le fichier original). Rappels de 1re Pour importer un module, on peut utiliser la syntaxe import mon_super_module ; ce qui nous obligera \u00e0 pr\u00e9fixer chaque appel de fonction par mon_super_module.ma_fonction() . On peut raccourcir les appels en utilisant un alias lors de l'import: import mon_super_module as msp , on appelle alors msp.ma_fonction() . Enfin, on peut cibler une fonction pr\u00e9cise \u00e0 importer. Dans ce cas, on utilisera la syntaxe: from mon_super_module import ma_fonction et l'appel se fera directement par ma_fonction() sans pr\u00e9fixe. Travail \u00e0 r\u00e9aliser \u2693\ufe0e A faire Prendre connaissance de l'api du module json, en ligne sur python.org ou \u00e0 d\u00e9faut dans une cellule de Jupyter en utilisant les fonctions dir et help . 1 2 3 4 import json dir ( json ) A faire Quelles sont les deux fonctions du module json susceptibles de nous int\u00e9resser en vue d'une ouverture et d'une \u00e9criture de fichiers json ? Pour obtenir de l'aide sur une fonction pr\u00e9sente dans un module on utilise la fonction help (par exemple help(json.xxxx) o\u00f9 xxxx est le nom d'une fonction du module json ). 1 #R\u00e9ponse A faire On va extraire que les informations concernant les villes de la R\u00e9union. Quelle fonction doit-on utiliser pour transformer le fichier city.list.json en une structure utilisable en python ? R\u00e9aliser cette op\u00e9ration en compl\u00e9tant le code ci-dessous. 1 2 3 4 5 6 import json # Cr\u00e9ation d'un objet fichier f li\u00e9 \u00e0 city.list.json with open ( './json/city.list.json' , 'r' ) as f : #A compl\u00e9ter (supprimer la ligne 'pass') pass A faire Quelle est le type de la structure obtenue et combien d'entr\u00e9es poss\u00e8de-t-elle? 1 #R\u00e9ponse A faire Afficher la 1ere entr\u00e9e. 1 #R\u00e9ponse A faire Proposer un code permettant de sauver les entr\u00e9es qui ne concernent que la R\u00e9union dans un tableau. 1 2 3 #R\u00e9ponse villes_RE = [] #A compl\u00e9ter A faire Combien d'entr\u00e9e poss\u00e8de ce nouveau tableau ? 1 #R\u00e9ponse A faire Quelle fonction devra-t-on utilser pour transformer ce tableau et le sauver dans un fichier json ? 1 #R\u00e9ponse A faire Proposer un code qui r\u00e9alise la sauvergarde du tableau villes_RE dans un fichier json villes_RE.json . 1 2 3 4 5 6 #R\u00e9ponse # Cr\u00e9ation d'un objet fichier f li\u00e9 \u00e0 villes_RE.json with open ( \"./json/villes_RE.json\" , \"w\" ) as f : #\u00e0 compl\u00e9ter ici pass 1","title":"C4A1"},{"location":"NSITerm/LP2/C4A1.html#methodes-de-programmation-modulaire","text":"","title":"M\u00e9thodes de programmation modulaire"},{"location":"NSITerm/LP2/C4A1.html#avantages-dune-programmation-modulaire","text":"En premi\u00e8re on a introduit les fonctions en r\u00e9ponse \u00e0 la r\u00e9p\u00e9tition de code au sein d'un programme. Cependant, la r\u00e9p\u00e9tition des fonctions entre programmes est encore possible. Une solution est de regrouper ces fonctions et classes dans un module . On d\u00e9compose ainsi une application en module(s) qui peuvent \u00eatre d\u00e9velopp\u00e9s ind\u00e9pendamment et r\u00e9utilis\u00e9s dans d'autres applications. Par ailleurs, cette organisation limite ou supprime les doublons de code, facilitant ainsi la maintenance ( un bug est corrig\u00e9 une fois ). Enfin, la programmation modulaire permet d'une certaine fa\u00e7on de cacher des d\u00e9tails d'impl\u00e9mentation , l'interaction utilisateur-module se faisant par le biais de l'interface. Il s'agira dans l'activit\u00e9 1, de se placer en temps qu'utilisateur de modules en se r\u00e9f\u00e9rant \u00e0 leur API, puis en temps que concepteur d'un module simple, dans la suivante.","title":"Avantages d'une programmation modulaire"},{"location":"NSITerm/LP2/C4A1.html#activite-1-traitement-de-donnees-au-format-json","text":"","title":"Activit\u00e9 1: traitement de donn\u00e9es au format JSON"},{"location":"NSITerm/LP2/C4A2.html","text":"Activit\u00e9 2: cr\u00e9er son propre module \u2693\ufe0e Comme il a \u00e9t\u00e9 pr\u00e9cis\u00e9 en introduction, il est important de d\u00e9couper son code en modules afin de pouvoir le r\u00e9utiliser facilement et d'en assurer une maintenance ais\u00e9e. Qu'est-ce qu'un module? \u2693\ufe0e D\u00e9finition Un module est un fichier texte, d'extension .py (ou un fichier binaire .pyc qui ne sera pas abord\u00e9 ici). Il peut contenir des variables, des fonctions des classes ou d'autres modules. Une bonne pratique en python consiste \u00e0 placer des commentaires ( docstring ) au d\u00e9but: des fichiers, pour informer l'utilisateur des diverses fonctionnalit\u00e9s du module; des fonctions afin d'en donner les sp\u00e9cifications. O\u00f9 placer un module personnel? \u2693\ufe0e Le plus simple, mais pas forc\u00e9ment le plus recommand\u00e9, est de placer le module dans le m\u00eame dossier que les programmes qui en feront appel. A faire Cr\u00e9er un module pile , correctement document\u00e9, qui regroupe l'impl\u00e9mentation des op\u00e9rations courantes sur une structure de donn\u00e9e de type pile (voir le\u00e7on pr\u00e9c\u00e9dente). En faire de m\u00eame en cr\u00e9ant un module file . Cr\u00e9er une file nomm\u00e9e f puis enfiler successivement les valeurs 3, 9 et 27. V\u00e9rifier si la file f est vide. Enfin, d\u00e9filer f 4 fois de suite. Les r\u00e9sultats sont-ils coh\u00e9rents? 1 2 3 4 import pile , file # Tests - A compl\u00e9ter Comment cr\u00e9er un package? \u2693\ufe0e D\u00e9finition Un package ou librairie en fran\u00e7ais est un dossier sp\u00e9cial dans lequel on regroupe des modules. Supposons que l'on dispose de 4 modules nomm\u00e9s algo , langage , machine et information . On souhaite cr\u00e9er un package nsi qui regroupe ces 4 modules. La proc\u00e9dure est la suivante: cr\u00e9er dans le dossier o\u00f9 se situe le programme appelant un dossier nomm\u00e9 nsi (en ligne de commande mkdir nsi ); cr\u00e9er dans le dossier nsi un fichier vide __init__.py (en ligne de commande touch nsi/__init__.py , attention \u00e0 la pr\u00e9sence des 2 caract\u00e8res 'soulign\u00e9' en d\u00e9but et fin de nom); d\u00e9placer les 4 fichiers py des modules dans le dossier nsi . Pour utiliser une fonction tri du module algo , on utilisera la syntaxe: 1 from nsi.algo import tri ou from nsi.algo import * ( d\u00e9conseill\u00e9 ) A faire R\u00e9aliser un package nomm\u00e9 sdd constitu\u00e9 des modules pile et file . Tester le bon fonctionnement des imports en indiquant les commandes utilis\u00e9es dans la cellule suivante.","title":"C4A2"},{"location":"NSITerm/LP2/C4A2.html#activite-2-creer-son-propre-module","text":"Comme il a \u00e9t\u00e9 pr\u00e9cis\u00e9 en introduction, il est important de d\u00e9couper son code en modules afin de pouvoir le r\u00e9utiliser facilement et d'en assurer une maintenance ais\u00e9e.","title":"Activit\u00e9 2: cr\u00e9er son propre module"},{"location":"NSITerm/LP2/C4A2.html#quest-ce-quun-module","text":"D\u00e9finition Un module est un fichier texte, d'extension .py (ou un fichier binaire .pyc qui ne sera pas abord\u00e9 ici). Il peut contenir des variables, des fonctions des classes ou d'autres modules. Une bonne pratique en python consiste \u00e0 placer des commentaires ( docstring ) au d\u00e9but: des fichiers, pour informer l'utilisateur des diverses fonctionnalit\u00e9s du module; des fonctions afin d'en donner les sp\u00e9cifications.","title":"Qu'est-ce qu'un module?"},{"location":"NSITerm/LP2/C4A2.html#ou-placer-un-module-personnel","text":"Le plus simple, mais pas forc\u00e9ment le plus recommand\u00e9, est de placer le module dans le m\u00eame dossier que les programmes qui en feront appel. A faire Cr\u00e9er un module pile , correctement document\u00e9, qui regroupe l'impl\u00e9mentation des op\u00e9rations courantes sur une structure de donn\u00e9e de type pile (voir le\u00e7on pr\u00e9c\u00e9dente). En faire de m\u00eame en cr\u00e9ant un module file . Cr\u00e9er une file nomm\u00e9e f puis enfiler successivement les valeurs 3, 9 et 27. V\u00e9rifier si la file f est vide. Enfin, d\u00e9filer f 4 fois de suite. Les r\u00e9sultats sont-ils coh\u00e9rents? 1 2 3 4 import pile , file # Tests - A compl\u00e9ter","title":"O\u00f9 placer un module personnel?"},{"location":"NSITerm/LP2/C4A2.html#comment-creer-un-package","text":"D\u00e9finition Un package ou librairie en fran\u00e7ais est un dossier sp\u00e9cial dans lequel on regroupe des modules. Supposons que l'on dispose de 4 modules nomm\u00e9s algo , langage , machine et information . On souhaite cr\u00e9er un package nsi qui regroupe ces 4 modules. La proc\u00e9dure est la suivante: cr\u00e9er dans le dossier o\u00f9 se situe le programme appelant un dossier nomm\u00e9 nsi (en ligne de commande mkdir nsi ); cr\u00e9er dans le dossier nsi un fichier vide __init__.py (en ligne de commande touch nsi/__init__.py , attention \u00e0 la pr\u00e9sence des 2 caract\u00e8res 'soulign\u00e9' en d\u00e9but et fin de nom); d\u00e9placer les 4 fichiers py des modules dans le dossier nsi . Pour utiliser une fonction tri du module algo , on utilisera la syntaxe: 1 from nsi.algo import tri ou from nsi.algo import * ( d\u00e9conseill\u00e9 ) A faire R\u00e9aliser un package nomm\u00e9 sdd constitu\u00e9 des modules pile et file . Tester le bon fonctionnement des imports en indiquant les commandes utilis\u00e9es dans la cellule suivante.","title":"Comment cr\u00e9er un package?"},{"location":"NSITerm/LP2/C5C1.html","text":"Mise au point des programmes - gestion des bugs \u2693\ufe0e Introduction: les bugs en informatique \u2693\ufe0e Un bug est une toute petite erreur qui peut avoir des cons\u00e9quences catastrophiques. La gestion des bugs est un des points fondamentaux de l'informatique. A voir Voir l'introduction (ou lien de secours Youtube ) de l'informaticien G\u00e9rard Berry \u00e0 ce sujet. Eviter les bugs \u2693\ufe0e Rien ne permet vraiment de garantir qu\u2019un programme ne pr\u00e9sente aucun bug. Toutefois, certains principes permettent de limiter les risques . Commenter le code \u2693\ufe0e Un module, un package, une fonction ou une classe doit \u00eatre document\u00e9. Cette documentation ou sp\u00e9cification sera disponible lorsqu'on utilisera la fonction help de python. Le moyen le plus simple pour documenter le code est l'utilisation d'une docstring . D\u00e9finition Une docstring est une cha\u00eene de caract\u00e8res situ\u00e9e entre une paire de triple double quotes \"\"\" \"\"\" , au d\u00e9but de l'entit\u00e9 qu'elle renseigne. Dans le cas d'une fonction, on y trouve les conditions portant sur les entr\u00e9es ou pr\u00e9conditions ainsi que ce qu'elle renvoie ou postcondition . Exemple 1 2 3 4 5 6 7 8 9 10 def max_tab ( t ): \"\"\" renvoie le maximum d'un tableau t; t: tableau d'\u00e9l\u00e9ments comparables, non vide \"\"\" m = t [ 0 ] for i in range ( 1 , len ( t )): if t [ i ] > m : m = t [ i ] return m 1 help ( max_tab ) 1 2 3 4 5 Help on function max_tab in module __main__: max_tab(t) renvoie le maximum d'un tableau t; t: tableau d'\u00e9l\u00e9ments comparables, non vide Le typage des donn\u00e9es \u2693\ufe0e On reprend la fonction max_tab pr\u00e9c\u00e9dente avec l'appel: 1 max_tab ( 5 ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-33-c8d064365998> in <module> ----> 1 max_tab(5) <ipython-input-29-4b5b186e2743> in max_tab(t) 4 t: tableau d'\u00e9l\u00e9ments comparables, non vide 5 \"\"\" ----> 6 assert len(t) > 0, \"Erreur: tableau vide\" # pr\u00e9condition 7 m = t[0] 8 for i in range(1, len(t)): TypeError: object of type 'int' has no len() On obtient une erreur de type TypeError . Il s'agit d'une erreur tr\u00e8s courante. Certains langages v\u00e9rifient avant l'ex\u00e9cution les probl\u00e8mes de typage. De par sa nature, Python ne le fait pas (du moins pas directement). Cependant, depuis la version 3.5, on peut annoter les programmes de mani\u00e8re \u00e0 bien pr\u00e9ciser les types des variables utilis\u00e9es ainsi que celui du r\u00e9sultat renvoy\u00e9. D'un point de vue syntaxique, il suffit de rajouter le type pr\u00e9c\u00e9d\u00e9 de: : juste apr\u00e8s le nom du param\u00e8tre ou de la variable; -> si c'est la valeur renvoy\u00e9e par la fonction. 1 2 3 4 5 6 7 8 9 10 def max_tab ( t : list ) -> int : \"\"\" renvoie le maximum d'un tableau t; t: tableau d'\u00e9l\u00e9ments comparables, non vide \"\"\" m = t [ 0 ] for i in range ( 1 , len ( t )): if t [ i ] > m : m = t [ i ] return m 1 help ( max_tab ) 1 2 3 4 5 Help on function max_tab in module __main__: max_tab(t: list) -> int renvoie le maximum d'un tableau t; t: tableau d'\u00e9l\u00e9ments comparables, non vide Le module typing de la biblioth\u00e8que standard permet d'aller encore plus loin dans l'annotation en pr\u00e9cisant le type d'objet pr\u00e9sent dans le tableau t . 1 2 3 4 5 6 7 8 9 10 11 12 13 from typing import List def max_tab ( t : List [ int ]) -> int : \"\"\" renvoie le maximum d'un tableau t; t: tableau d'entiers, non vide \"\"\" m = t [ 0 ] for i in range ( 1 , len ( t )): if t [ i ] > m : m = t [ i ] return m 1 help ( max_tab ) 1 2 3 4 5 Help on function max_tab in module __main__: max_tab(t: List[int]) -> int renvoie le maximum d'un tableau t; t: tableau d'entiers, non vide Remarques Le type du tableau est ici List avec un 'l' majuscule; On a modifi\u00e9 la sp\u00e9cification de la fonction, notamment sa pr\u00e9condition, en pr\u00e9cisant qu'on travaillait avec un tableau d'entiers. Hors programme On peut aller encore plus loin ( non exigible en terminale ) en faisant une v\u00e9rification des types avec un outil externe mypy . Utilisation: on copie la fonction pr\u00e9c\u00e9dente dans le fichier max_tab.py par exemple et on ex\u00e9cute la commande ci-dessous. 1 ! mypy max_tab . py Les tests \u2693\ufe0e On a vu en 1re qu'une bonne pratique de d\u00e9veloppement consistait \u00e0 \u00e9crire des proc\u00e9dures de tests suffisamment exhaustifs pour couvrir les cas normaux d'utilisation notamment aux limites ainsi que les cas anormaux. On s'int\u00e9resse ici aux tests unitaires , dont l'objectif est de tester ind\u00e9pendamment chaque fonction. il existe plusieurs outils permettant de r\u00e9aliser des tests unitaires. On en utilisera deux principalement. ATTENTION - Rappel Un test ne garantit jamais la correction d\u2019un programme. Une r\u00e9ussite du test n\u2019est pas significative, alors qu'un \u00e9chec \u00e9tablit de mani\u00e8re certaine la pr\u00e9sence d\u2019un bug. Les assertions \u2693\ufe0e Une assertion \u00e9choue si l'expression bool\u00e9enne qui suit le mot cl\u00e9 assert est fausse. L'exception AssertionError est alors lev\u00e9e. Si elle est vraie, l'ex\u00e9cution continue. Exemples 1 2 3 4 5 6 7 8 9 10 11 12 def max_tab ( t ): \"\"\" renvoie le maximum d'un tableau t; t: tableau d'\u00e9l\u00e9ments comparables, non vide \"\"\" assert len ( t ) > 0 , \"Erreur: tableau vide\" # pr\u00e9condition m = t [ 0 ] for i in range ( 1 , len ( t )): if t [ i ] > m : m = t [ i ] assert all ( t [ i ] <= m for i in range ( len ( t ))) # postcondition return m 1 2 3 4 5 # Tests assert max_tab ([ 1 , 1 , 1 ]) == 1 assert max_tab ([ 0 ]) == 0 assert max_tab ([ - 2 , - 1 , 0 ]) == 0 assert max_tab ([ 1 , 2 , 3 ]) == 3 Remarque On peut utiliser \u00e9galement assert au sein du code afin de v\u00e9rifier les pr\u00e9conditions et postconditions. Le module pytest \u2693\ufe0e Le module pytest permet de faire des tests plus complets et plus explicites. Dans Jupyter Notebook on ex\u00e9cute d'abord la cellule ci-dessous, puis on \u00e9crit ses fonctions de tests qui doivent commencer par test_ . 1 2 import ipytest ipytest . autoconfig () 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 %% ipytest import pytest from random import randint from tri import tri_insertion def test_tab_neg_1 (): t = [ - 1 , - 1 , - 1 ] tri_insertion ( t ) assert t == [ - 1 , - 1 , - 1 ] def test_inverse_2 (): t = [ 14 , 10 , 5 , 1 ] tri_insertion ( t ) assert t == [ 1 , 5 , 10 , 14 ] def test_vide_0 (): with pytest . raises ( ValueError ): tri_insertion ([]) def test_deja_tri_3 (): t = [ 1 , 2 , 3 , 4 , 5 ] tri_insertion ( t ) assert t == [ 1 , 2 , 3 , 4 , 5 ] def test_random_4 (): t = [ randint ( - 20 , 20 ) for _ in range ( 10 )] tri_insertion ( t ) assert all ( t [ i ] <= t [ i + 1 ] for i in range ( 9 )) def test_en_place_5 (): assert tri_insertion ([ 1 , 2 , 3 ]) is None Quand le bug est l\u00e0 \u2693\ufe0e Quand le bug survient, il faut alors : savoir mettre en \u00e9vidence le bug et le reproduire; comprendre la cause du bug; corriger le bug. C\u2019est ce qu\u2019on appelle la mise au point, ou le d\u00e9buggage. Parmi les erreurs classiques, on trouve notamment: division par zero : ZeroDivisionError acc\u00e8s hors des bornes d\u2019une liste : IndexError erreur de nom de variable : NameError erreur de nom de m\u00e9thode ou d\u2019attribut : AttributeError appel r\u00e9cursif trop profond : RecursionError modification d\u2019un objet non mutable : TypeError","title":"Cours"},{"location":"NSITerm/LP2/C5C1.html#mise-au-point-des-programmes-gestion-des-bugs","text":"","title":"Mise au point des programmes - gestion des bugs"},{"location":"NSITerm/LP2/C5C1.html#introduction-les-bugs-en-informatique","text":"Un bug est une toute petite erreur qui peut avoir des cons\u00e9quences catastrophiques. La gestion des bugs est un des points fondamentaux de l'informatique. A voir Voir l'introduction (ou lien de secours Youtube ) de l'informaticien G\u00e9rard Berry \u00e0 ce sujet.","title":"Introduction: les bugs en informatique"},{"location":"NSITerm/LP2/C5C1.html#eviter-les-bugs","text":"Rien ne permet vraiment de garantir qu\u2019un programme ne pr\u00e9sente aucun bug. Toutefois, certains principes permettent de limiter les risques .","title":"Eviter les bugs"},{"location":"NSITerm/LP2/C5C1.html#quand-le-bug-est-la","text":"Quand le bug survient, il faut alors : savoir mettre en \u00e9vidence le bug et le reproduire; comprendre la cause du bug; corriger le bug. C\u2019est ce qu\u2019on appelle la mise au point, ou le d\u00e9buggage. Parmi les erreurs classiques, on trouve notamment: division par zero : ZeroDivisionError acc\u00e8s hors des bornes d\u2019une liste : IndexError erreur de nom de variable : NameError erreur de nom de m\u00e9thode ou d\u2019attribut : AttributeError appel r\u00e9cursif trop profond : RecursionError modification d\u2019un objet non mutable : TypeError","title":"Quand le bug est l\u00e0"},{"location":"NSITerm/LP2/C5E1.html","text":"Mise au point de programmes - Exercices \u2693\ufe0e Voir fiche d'exercices Hatier Terminale","title":"Exercices 1"},{"location":"NSITerm/LP2/C5E1.html#mise-au-point-de-programmes-exercices","text":"Voir fiche d'exercices Hatier Terminale","title":"Mise au point de programmes - Exercices"},{"location":"NSITerm/LP2/Recursivite.html","text":"RECURSIVITE \u2693\ufe0e Introduction \u2693\ufe0e Soit le probl\u00e8me simple du calcul de la somme des \\(n+1\\) premiers entiers naturels: \\[ 0+1+2+3+\\cdots+n \\] Les connaissances de premi\u00e8re permettent de r\u00e9soudre tr\u00e8s facilement ce probl\u00e8me en utilisant une boucle ( for ou while ): 1 2 3 4 5 6 7 8 9 def somme ( n ): \"\"\" Renvoie la somme des n entiers compris entre 0 et n; n: entier naturel positif \"\"\" s = 0 for i in range ( n + 1 ): s += i return s 1 somme ( 8 ) 1 36 En proc\u00e9dant ainsi on a r\u00e9solu le probl\u00e8me en expliquant comment calculer somme(n) . On aurait pu aussi arriver au m\u00eame r\u00e9sultat en expliquant c'est quoi somme(n) . En effet, \\[ somme(n)=\\underbrace{0+1+2+3+\\cdots+(n-1)}_{somme(n-1)}+n=somme(n-1)+n \\] Ainsi on peut calculer la valeur de somme(n) comme \u00e9tant une fonction math\u00e9matique de \\(n\\) : \\[ somme(n)= \\begin{cases} 0 & \\text{si } n=0 \\\\ n+somme(n-1) & \\text{si } n\\geq 1 \\end{cases} \\] En python, cela se programme facilement: 1 2 3 4 5 def somme_rec ( n ): if n == 0 : return 0 else : return n + somme_rec ( n - 1 ) 1 somme_rec ( 8 ) 1 36 On remarque que somme_rec(n) fait appel \u00e0 somme_rec(n-1) . D\u00e9finition Une fonction qui fait appel \u00e0 elle m\u00eame est dite r\u00e9cursive . Application directe Enonc\u00e9 La puissance \\(n\\) -i\u00e8me d'un nombre \\(x\\) est la multiplication r\u00e9p\u00e9t\u00e9e \\(n\\) fois de \\(x\\) avec lui m\u00eame. Par convention \\(x^0=1\\) . La puissance \\(n\\) -i\u00e8me de \\(x\\) s'\u00e9crit: \\(x^n = \\underbrace{x\\times \\cdots \\times x}_{n-1 \\text{ fois}}\\times x=x^{n-1}\\times x\\) Coder de mani\u00e8re r\u00e9cursive cette fonction en python. Aide On peut donc d\u00e9finir une fonction puissance \\(n\\) -i\u00e8me de \\(x\\) telle que: \\[ puissance(x,n)=\\begin{cases} 1 & \\text{si } n=0\\\\ puissance(x,n-1)\\times x & \\text{si } n>0 \\end{cases} \\] 1 2 3 def puissance ( x , n ): # Supprimer l'instruction 'pass' et compl\u00e9ter avec votre code pass 1 2 3 #Cellule de test assert puissance ( 2 , 0 ) == 1 assert puissance ( 2 , 10 ) == 1024 La r\u00e9cursivit\u00e9: simple et magique ? \u2693\ufe0e Pour bien comprendre le d\u00e9roulement de l'ex\u00e9cution de la fonction r\u00e9cursive somme_rec , analysons l'appel somme_rec(4) ( on dit aussi l'arbre d'appels ). 1 2 3 4 5 6 7 8 9 somme_rec(4)--> return 4 + somme_rec(3) | return 3 + somme_rec(2) | return 2 + somme_rec(1) | return 1 + somme_rec(0) | return 0 L'appel de somme_rec(4) provoque une s\u00e9rie d'appels en cascade jusqu'\u00e0 l'appel somme_rec(0) qui renvoit 0. A ce moment l\u00e0, somme_rec(1) peut se terminer en renvoyant 1, puis somme_rec(2) en renvoyant 3, etc. Cette succession d'appels rend naturellement les boucles inutiles dans dans une fonction r\u00e9cursive. Chaque appel de fonction se traduit par le stockage dans une zone m\u00e9moire appel\u00e9e pile , de donn\u00e9es li\u00e9es au contexte d'ex\u00e9cution de la fonction appelante ( adresse de retour, param\u00e8tres de la fonction, etc. ). Application directe Enonc\u00e9 Analyser l'arbre d'appels de puissance(2, 4) et justifier la valeur renvoy\u00e9e. Aide Revoir l'exemple de la fonction somme_rec D'autres exemples de fonctions r\u00e9cursives - pr\u00e9cautions \u2693\ufe0e La suite de Fibonacci: \u00e9criture d'une fonction r\u00e9cursive na\u00efve \u2693\ufe0e Cette suite est d\u00e9finie pour tout entier naturel \\(n\\) , par: \\[ F(n)= \\begin{cases} n & \\text{si } n<2\\\\ F(n-1) + F(n-2)& \\text{si } n\\geq 2 \\end{cases} \\] Ecrire une fonction r\u00e9cursive en python fib(n) qui renvoie le calcul du \\((n+1)\\) -i\u00e8me terme de la suite de Fibonacci, compte tenu de la d\u00e9finition ci-dessus. 1 2 3 def fib ( n ): # Supprimer 'pass' et compl\u00e9ter avec votre code pass 1 2 3 4 # Tests assert fib ( 1 ) == 1 assert fib ( 2 ) == 1 assert fib ( 6 ) == 8 Analyse de la fonction na\u00efve \u2693\ufe0e Jupyter Notebook poss\u00e8de une extension int\u00e9ressante (les magic commands ) qui permet d'appeler une fonction python (ou autre). On va utiliser la commande %timeit fib(n) pour mesurer le temps d'ex\u00e9cution de fib(n) . Par exemple: 1 % timeit fib ( 10 ) Les r\u00e9sultats sont consign\u00e9s dans le tableau ci-dessous: n %timeit fib(n) 5 1.2 \u00b5s 10 14 \u00b5s 20 1.7 ms 30 0.22 s 35 2.4 s On constate que la complexit\u00e9 explose rapidement. Essayons de comprendre pourquoi en examinant une partie de l'arbre d'appels de fib(5) par exemple. Des calculs d\u00e9j\u00e0 effectu\u00e9s lors de l'appel de fib(4) sont \u00e0 nouveau effectu\u00e9s lors de l'appel de fib(3) !! Attention La traduction na\u00efve d'une fonction math\u00e9matique en une fonction r\u00e9cursive peut conduire \u00e0 une complexit\u00e9 inacceptable. Des techniques simples existent pour r\u00e9gler le probl\u00e8me pr\u00e9c\u00e9dent et seront abord\u00e9es plus loin dans le cours de terminale . Retour sur la pile \u2693\ufe0e Ex\u00e9cuter la cellule suivante et analyser le r\u00e9sultat obtenu. 1 2 3 4 def f ( n ): return 1 + f ( n + 1 ) f ( 0 ) 1 #Votre analyse Attention La taille de la pile est limit\u00e9e, le nombre d'appels r\u00e9cursifs est donc limit\u00e9 aussi. Python limite naturellement et assez s\u00e9v\u00e8rement d'ailleurs, le nombre d'appels r\u00e9cursifs. On peut avoir une id\u00e9e de cette limite avec le code suivant: 1 2 import sys print ( sys . getrecursionlimit ()) Bien \u00e9crire des fonctions r\u00e9cursives \u2693\ufe0e Il est g\u00e9n\u00e9ralement simple de traduire une fonction math\u00e9matique d\u00e9finie par r\u00e9currence en une fonction r\u00e9cursive python. On veillera n\u00e9anmoins \u00e0 ce que le sch\u00e9ma suivant soit toujours pr\u00e9sent dans la d\u00e9finition de la fonction: 1 2 3 4 5 6 7 8 def f_rec ( parametres ): if condition : #cas de base: cas trivial o\u00f9 la fonction termine return valeur else : #cas r\u00e9cursifs o\u00f9 on appelle \u00e0 nouveau f_rec ... return expression ( f_rec ( ... )) Les diff\u00e9rents cas sont typiquement examin\u00e9s avec des tests if ... else . Enfin, le cas de base peut \u00eatre ... constitu\u00e9 de plusieurs cas! A retenir \u2693\ufe0e La r\u00e9cursivit\u00e9 est une technique de programmation \u00e9l\u00e9gante, tr\u00e8s proche de la d\u00e9finition math\u00e9matique des fonctions ou des probl\u00e8mes. Les boucles y sont inutiles. Une fonction r\u00e9cursive est g\u00e9n\u00e9ralement constitu\u00e9 d'un ou de plusieurs cas de base, qui permet(tent) \u00e0 la fonction de terminer et de cas r\u00e9cursifs. La r\u00e9cursivit\u00e9 repose sur l'utilisation d'une zone m\u00e9moire appel\u00e9e pile, de capacit\u00e9 limit\u00e9e. Une erreur est signal\u00e9e lors d'une tentative de d\u00e9passement de cette capacit\u00e9. Enfin, il faut toujours \u00eatre vigilant sur le fait que cette technique appliqu\u00e9e de mani\u00e8re na\u00efve peut engendrer une complexit\u00e9 inacceptable.","title":"Recursivite"},{"location":"NSITerm/LP2/Recursivite.html#recursivite","text":"","title":"RECURSIVITE"},{"location":"NSITerm/LP2/Recursivite.html#introduction","text":"Soit le probl\u00e8me simple du calcul de la somme des \\(n+1\\) premiers entiers naturels: \\[ 0+1+2+3+\\cdots+n \\] Les connaissances de premi\u00e8re permettent de r\u00e9soudre tr\u00e8s facilement ce probl\u00e8me en utilisant une boucle ( for ou while ): 1 2 3 4 5 6 7 8 9 def somme ( n ): \"\"\" Renvoie la somme des n entiers compris entre 0 et n; n: entier naturel positif \"\"\" s = 0 for i in range ( n + 1 ): s += i return s 1 somme ( 8 ) 1 36 En proc\u00e9dant ainsi on a r\u00e9solu le probl\u00e8me en expliquant comment calculer somme(n) . On aurait pu aussi arriver au m\u00eame r\u00e9sultat en expliquant c'est quoi somme(n) . En effet, \\[ somme(n)=\\underbrace{0+1+2+3+\\cdots+(n-1)}_{somme(n-1)}+n=somme(n-1)+n \\] Ainsi on peut calculer la valeur de somme(n) comme \u00e9tant une fonction math\u00e9matique de \\(n\\) : \\[ somme(n)= \\begin{cases} 0 & \\text{si } n=0 \\\\ n+somme(n-1) & \\text{si } n\\geq 1 \\end{cases} \\] En python, cela se programme facilement: 1 2 3 4 5 def somme_rec ( n ): if n == 0 : return 0 else : return n + somme_rec ( n - 1 ) 1 somme_rec ( 8 ) 1 36 On remarque que somme_rec(n) fait appel \u00e0 somme_rec(n-1) . D\u00e9finition Une fonction qui fait appel \u00e0 elle m\u00eame est dite r\u00e9cursive . Application directe Enonc\u00e9 La puissance \\(n\\) -i\u00e8me d'un nombre \\(x\\) est la multiplication r\u00e9p\u00e9t\u00e9e \\(n\\) fois de \\(x\\) avec lui m\u00eame. Par convention \\(x^0=1\\) . La puissance \\(n\\) -i\u00e8me de \\(x\\) s'\u00e9crit: \\(x^n = \\underbrace{x\\times \\cdots \\times x}_{n-1 \\text{ fois}}\\times x=x^{n-1}\\times x\\) Coder de mani\u00e8re r\u00e9cursive cette fonction en python. Aide On peut donc d\u00e9finir une fonction puissance \\(n\\) -i\u00e8me de \\(x\\) telle que: \\[ puissance(x,n)=\\begin{cases} 1 & \\text{si } n=0\\\\ puissance(x,n-1)\\times x & \\text{si } n>0 \\end{cases} \\] 1 2 3 def puissance ( x , n ): # Supprimer l'instruction 'pass' et compl\u00e9ter avec votre code pass 1 2 3 #Cellule de test assert puissance ( 2 , 0 ) == 1 assert puissance ( 2 , 10 ) == 1024","title":"Introduction"},{"location":"NSITerm/LP2/Recursivite.html#la-recursivite-simple-et-magique","text":"Pour bien comprendre le d\u00e9roulement de l'ex\u00e9cution de la fonction r\u00e9cursive somme_rec , analysons l'appel somme_rec(4) ( on dit aussi l'arbre d'appels ). 1 2 3 4 5 6 7 8 9 somme_rec(4)--> return 4 + somme_rec(3) | return 3 + somme_rec(2) | return 2 + somme_rec(1) | return 1 + somme_rec(0) | return 0 L'appel de somme_rec(4) provoque une s\u00e9rie d'appels en cascade jusqu'\u00e0 l'appel somme_rec(0) qui renvoit 0. A ce moment l\u00e0, somme_rec(1) peut se terminer en renvoyant 1, puis somme_rec(2) en renvoyant 3, etc. Cette succession d'appels rend naturellement les boucles inutiles dans dans une fonction r\u00e9cursive. Chaque appel de fonction se traduit par le stockage dans une zone m\u00e9moire appel\u00e9e pile , de donn\u00e9es li\u00e9es au contexte d'ex\u00e9cution de la fonction appelante ( adresse de retour, param\u00e8tres de la fonction, etc. ). Application directe Enonc\u00e9 Analyser l'arbre d'appels de puissance(2, 4) et justifier la valeur renvoy\u00e9e. Aide Revoir l'exemple de la fonction somme_rec","title":"La r\u00e9cursivit\u00e9: simple et magique ?"},{"location":"NSITerm/LP2/Recursivite.html#dautres-exemples-de-fonctions-recursives-precautions","text":"","title":"D'autres exemples de fonctions r\u00e9cursives - pr\u00e9cautions"},{"location":"NSITerm/LP2/Recursivite.html#bien-ecrire-des-fonctions-recursives","text":"Il est g\u00e9n\u00e9ralement simple de traduire une fonction math\u00e9matique d\u00e9finie par r\u00e9currence en une fonction r\u00e9cursive python. On veillera n\u00e9anmoins \u00e0 ce que le sch\u00e9ma suivant soit toujours pr\u00e9sent dans la d\u00e9finition de la fonction: 1 2 3 4 5 6 7 8 def f_rec ( parametres ): if condition : #cas de base: cas trivial o\u00f9 la fonction termine return valeur else : #cas r\u00e9cursifs o\u00f9 on appelle \u00e0 nouveau f_rec ... return expression ( f_rec ( ... )) Les diff\u00e9rents cas sont typiquement examin\u00e9s avec des tests if ... else . Enfin, le cas de base peut \u00eatre ... constitu\u00e9 de plusieurs cas!","title":"Bien \u00e9crire des fonctions r\u00e9cursives"},{"location":"NSITerm/LP2/Recursivite.html#a-retenir","text":"La r\u00e9cursivit\u00e9 est une technique de programmation \u00e9l\u00e9gante, tr\u00e8s proche de la d\u00e9finition math\u00e9matique des fonctions ou des probl\u00e8mes. Les boucles y sont inutiles. Une fonction r\u00e9cursive est g\u00e9n\u00e9ralement constitu\u00e9 d'un ou de plusieurs cas de base, qui permet(tent) \u00e0 la fonction de terminer et de cas r\u00e9cursifs. La r\u00e9cursivit\u00e9 repose sur l'utilisation d'une zone m\u00e9moire appel\u00e9e pile, de capacit\u00e9 limit\u00e9e. Une erreur est signal\u00e9e lors d'une tentative de d\u00e9passement de cette capacit\u00e9. Enfin, il faut toujours \u00eatre vigilant sur le fait que cette technique appliqu\u00e9e de mani\u00e8re na\u00efve peut engendrer une complexit\u00e9 inacceptable.","title":"A retenir"},{"location":"NSITerm/SD/C11C1.html","text":"ARBRES \u2693\ufe0e Structures arborescentes \u2693\ufe0e La structure de liste cha\u00een\u00e9e rencontr\u00e9e pr\u00e9c\u00e9demment est int\u00e9ressante lorsqu'on a besoin d'un acc\u00e8s s\u00e9quentiel aux \u00e9l\u00e9ments. En revanche, elle est peu adapt\u00e9e \u00e0 des acc\u00e8s arbitraires. Dans ce cas de figure, une structure arborescente peut \u00eatre envisag\u00e9e. Il s'agit d'une autre famille de structures cha\u00een\u00e9es qui permet d'organiser les informations stock\u00e9es de mani\u00e8re hi\u00e9rarchique . Les applications sont tr\u00e8s nombreuses; on peut citer par exemple: arborescence du syst\u00e8me de fichier d'un ordinateur; expression arithm\u00e9tique; structure des pages web; arbre g\u00e9n\u00e9alogique; etc. Arbres binaires \u2693\ufe0e D\u00e9finitions \u2693\ufe0e Un arbre est une structure arborescente particuli\u00e8re, compos\u00e9e de noeuds . Dans un arbre binaire chaque noeud pr\u00e9sente au maximum 2 branches . Un arbre qui ne comporte pas de noeud est un arbre vide . Si l'arbre n'est pas vide, il comporte: un noeud particulier appel\u00e9 racine ; deux sous ensembles de noeuds appel\u00e9s sous arbre gauche et sous arbre droit . Remarque : la racine est reli\u00e9e \u00e0 la racine des sous arbres (sauf s'il est vide). Un noeud qui a deux sous arbres vides est une feuille . Dans l'exemple ci-dessus: A est la racine; D , E et F sont des feuilles. La taille \\(N\\) d'un arbre correspond au nombre de noeuds. Par exemple, la taille de l'arbre pr\u00e9sent\u00e9 en introduction est \\(N=6\\) . La hauteur \\(h\\) d'un arbre correspond au nombre maximal de noeuds rencontr\u00e9s en descendant de la racine \u00e0 une feuille . Par exemple, l'arbre pr\u00e9sent\u00e9 en introduction a une hauteur \\(h=3\\) . Encadrement de la taille \u2693\ufe0e La taille d'un arbre v\u00e9rifie une double in\u00e9galit\u00e9: \\[h \\leq N \\leq 2^{h} -1\\] La borne inf\u00e9rieure correspond \u00e0 un arbre dont chaque noeud ne pr\u00e9sente qu'une branche, dans ce cas \\(N = h\\) (Fig. 1). La borne sup\u00e9rieure correspond \u00e0 un arbre o\u00f9 chaque niveau est complet, dans ce cas \\(N=2^{h}-1\\) (Fig. 2). (Fig. 1) (Fig. 2) Une repr\u00e9sentation possible en python \u2693\ufe0e Utilisation d'une classe \u2693\ufe0e De la m\u00eame fa\u00e7on qu'on a construit les listes cha\u00een\u00e9es avec des cellules , on va utiliser une classe Noeud pour d\u00e9crire un arbre. Un noeud comporte une information ou valeur , une r\u00e9f\u00e9rence vers le sous arbre gauche et une r\u00e9f\u00e9rence vers le sous arbre droit. 1 2 3 4 5 6 7 class Noeud : \"\"\" Une classe pour mod\u00e9liser les noeuds d'un arbre\"\"\" def __init__ ( self , v , fg , fd ): self . val = v self . gauche = fg self . droit = fd Ainsi, l'arbre donn\u00e9 en introduction peut \u00eatre cod\u00e9 de la mani\u00e8re suivante: 1 2 3 4 arb1 = Noeud ( 'A' , Noeud ( 'B' , Noeud ( 'D' , None , None ), None ), Noeud ( 'C' , Noeud ( 'E' , None , None ), Noeud ( 'F' , None , None )) ) 1 2 print ( arb1 . val ) print ( arb1 . gauche . val ) 1 2 A B Taille et hauteur \u2693\ufe0e La taille d'un arbre vide vaut 0. S'il n'est pas vide, sa taille est: 1 (racine) + taille sous arbre gauche + taille sous arbre droit Une telle pr\u00e9sentation incite \u00e0 \u00e9crire une fonction r\u00e9cursive. Coder cette fonction. 1 2 3 4 5 6 7 def taille ( arb ): \"\"\" Renvoie la taille de l'arbre pass\u00e9 en param\u00e8tre\"\"\" if arb is None : return 0 else : return 1 + taille ( arb . gauche ) + taille ( arb . droit ) 1 assert taille ( arb1 ) == 6 La hauteur d'un arbre vide est nulle. Si l'arbre n'est pas vide, sa hauteur vaut: \\[ 1 + \\text{max}(hauteur(\\text{sous arbre gauche}), hauteur(\\text{sous arbre droit}))\\] Coder une fonction r\u00e9cursive qui renvoie la hauteur d'un arbre pass\u00e9 en param\u00e8tre. 1 2 3 4 5 6 7 def hauteur ( arb ): \"\"\" Renvoie la hauteur de l'arbre 'arb'\"\"\" if arb is None : return 0 else : return 1 + max ( hauteur ( arb . gauche ), hauteur ( arb . droit )) 1 hauteur ( arb1 ) 1 3 Parcours d'un arbre en profondeur d'abord \u2693\ufe0e Dans quel ordre parcourir les noeuds d'un arbre? Il existe plusieurs possibilit\u00e9s: si on traite d'abord la racine, puis le sous arbre gauche, puis le sous arbre droit, l'ordre est dit pr\u00e9fixe ; si on traite d'abord le sous arbre gauche, puis la racine, puis le sous arbre droit, l'ordre est dit infixe ; si on traite d'abord le sous arbre gauche, puis le sous arbre droit, puis la racine, l'ordre est dit postfixe ou suffixe . 1 2 3 4 5 6 7 8 9 def parcours_prefixe ( arb ): \"\"\" Parcours pr\u00e9fixe d'un arbre\"\"\" if arb is None : return else : print ( arb . val , end = ' ' ) parcours_prefixe ( arb . gauche ) parcours_prefixe ( arb . droit ) 1 parcours_prefixe ( arb1 ) 1 A B D C E F 1 2 3 4 5 6 7 8 9 def parcours_infixe ( arb ): \"\"\" Parcours pr\u00e9fixe d'un arbre\"\"\" if arb is None : return else : parcours_infixe ( arb . gauche ) print ( arb . val , end = ' ' ) parcours_infixe ( arb . droit ) 1 parcours_infixe ( arb1 ) 1 D B A E C F Ecrire la fonction qui renvoie le parcours postfixe d'un arbre. 1 2 from queue import Queue help ( Queue . get ) 1 2 3 4 5 6 7 8 9 10 11 12 Help on function get in module queue: get(self, block=True, timeout=None) Remove and return an item from the queue. If optional args 'block' is true and 'timeout' is None (the default), block if necessary until an item is available. If 'timeout' is a non-negative number, it blocks at most 'timeout' seconds and raises the Empty exception if no item was available within that time. Otherwise ('block' is false), return an item if one is immediately available, else raise the Empty exception ('timeout' is ignored in that case). Parcours en largeur d'abord \u2693\ufe0e Ce parcours est moins trivial que le pr\u00e9c\u00e9dent. Il s'agit de parcourir l'arbre par niveau. On commence par la racine puis les racines de ses deux sous arbres et ainsi de suite. Une structure de donn\u00e9es adapt\u00e9e \u00e0 ce probl\u00e8me est la file. Description d'un algorithme it\u00e9ratif On suppose l'arbre non vide . on enfile l'arbre; tant que la file n'est pas vide: on d\u00e9file un \u00e9l\u00e9ment (en fait un arbre); on affiche la valeur de sa racine; on enfile ses deux sous arbres s'ils ne sont pas vides \u00c0 faire Compl\u00e9ter la fonction parcours_largeur puis tester. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 from queue import Queue def parcours_largeur ( arbre ): \"\"\" Affiche la valeur des noeuds trouv\u00e9s lors d'un parcours en largeur d'un arbre; arbre: arbre binaire \"\"\" assert a is not None f = Queue () # On cr\u00e9e une file vide f . put ( arbre ) # On enfile l'arbre while not f . empty (): x = f . get () # d\u00e9file un \u00e9l\u00e9ment print ( x . val , end = ' ' ) if x . gauche is not None : ... if x . droit is not None : ...","title":"Cours 1"},{"location":"NSITerm/SD/C11C1.html#arbres","text":"","title":"ARBRES"},{"location":"NSITerm/SD/C11C1.html#structures-arborescentes","text":"La structure de liste cha\u00een\u00e9e rencontr\u00e9e pr\u00e9c\u00e9demment est int\u00e9ressante lorsqu'on a besoin d'un acc\u00e8s s\u00e9quentiel aux \u00e9l\u00e9ments. En revanche, elle est peu adapt\u00e9e \u00e0 des acc\u00e8s arbitraires. Dans ce cas de figure, une structure arborescente peut \u00eatre envisag\u00e9e. Il s'agit d'une autre famille de structures cha\u00een\u00e9es qui permet d'organiser les informations stock\u00e9es de mani\u00e8re hi\u00e9rarchique . Les applications sont tr\u00e8s nombreuses; on peut citer par exemple: arborescence du syst\u00e8me de fichier d'un ordinateur; expression arithm\u00e9tique; structure des pages web; arbre g\u00e9n\u00e9alogique; etc.","title":"Structures arborescentes"},{"location":"NSITerm/SD/C11C1.html#arbres-binaires","text":"","title":"Arbres binaires"},{"location":"NSITerm/SD/C11C1.html#une-representation-possible-en-python","text":"","title":"Une repr\u00e9sentation possible en python"},{"location":"NSITerm/SD/C11C1.html#parcours-dun-arbre-en-profondeur-dabord","text":"Dans quel ordre parcourir les noeuds d'un arbre? Il existe plusieurs possibilit\u00e9s: si on traite d'abord la racine, puis le sous arbre gauche, puis le sous arbre droit, l'ordre est dit pr\u00e9fixe ; si on traite d'abord le sous arbre gauche, puis la racine, puis le sous arbre droit, l'ordre est dit infixe ; si on traite d'abord le sous arbre gauche, puis le sous arbre droit, puis la racine, l'ordre est dit postfixe ou suffixe . 1 2 3 4 5 6 7 8 9 def parcours_prefixe ( arb ): \"\"\" Parcours pr\u00e9fixe d'un arbre\"\"\" if arb is None : return else : print ( arb . val , end = ' ' ) parcours_prefixe ( arb . gauche ) parcours_prefixe ( arb . droit ) 1 parcours_prefixe ( arb1 ) 1 A B D C E F 1 2 3 4 5 6 7 8 9 def parcours_infixe ( arb ): \"\"\" Parcours pr\u00e9fixe d'un arbre\"\"\" if arb is None : return else : parcours_infixe ( arb . gauche ) print ( arb . val , end = ' ' ) parcours_infixe ( arb . droit ) 1 parcours_infixe ( arb1 ) 1 D B A E C F Ecrire la fonction qui renvoie le parcours postfixe d'un arbre. 1 2 from queue import Queue help ( Queue . get ) 1 2 3 4 5 6 7 8 9 10 11 12 Help on function get in module queue: get(self, block=True, timeout=None) Remove and return an item from the queue. If optional args 'block' is true and 'timeout' is None (the default), block if necessary until an item is available. If 'timeout' is a non-negative number, it blocks at most 'timeout' seconds and raises the Empty exception if no item was available within that time. Otherwise ('block' is false), return an item if one is immediately available, else raise the Empty exception ('timeout' is ignored in that case).","title":"Parcours d'un arbre en profondeur d'abord"},{"location":"NSITerm/SD/C11C1.html#parcours-en-largeur-dabord","text":"Ce parcours est moins trivial que le pr\u00e9c\u00e9dent. Il s'agit de parcourir l'arbre par niveau. On commence par la racine puis les racines de ses deux sous arbres et ainsi de suite. Une structure de donn\u00e9es adapt\u00e9e \u00e0 ce probl\u00e8me est la file. Description d'un algorithme it\u00e9ratif On suppose l'arbre non vide . on enfile l'arbre; tant que la file n'est pas vide: on d\u00e9file un \u00e9l\u00e9ment (en fait un arbre); on affiche la valeur de sa racine; on enfile ses deux sous arbres s'ils ne sont pas vides \u00c0 faire Compl\u00e9ter la fonction parcours_largeur puis tester. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 from queue import Queue def parcours_largeur ( arbre ): \"\"\" Affiche la valeur des noeuds trouv\u00e9s lors d'un parcours en largeur d'un arbre; arbre: arbre binaire \"\"\" assert a is not None f = Queue () # On cr\u00e9e une file vide f . put ( arbre ) # On enfile l'arbre while not f . empty (): x = f . get () # d\u00e9file un \u00e9l\u00e9ment print ( x . val , end = ' ' ) if x . gauche is not None : ... if x . droit is not None : ...","title":"Parcours en largeur d'abord"},{"location":"NSITerm/SD/C11C2.html","text":"Algorithmes sur les ABR \u2693\ufe0e D\u00e9finition et repr\u00e9sentation des arbres binaires de recherche en python \u2693\ufe0e Un arbre binaire de recherche (en abr\u00e9g\u00e9 ABR ) est un arbre binaire dont les noeuds contiennent des valeurs comparables. Pour tout noeud d'un ABR toutes les valeurs situ\u00e9es dans le sous arbre gauche sont inf\u00e9rieures \u00e0 celle du noeud. De la m\u00eame fa\u00e7on, toutes les valeurs situ\u00e9es dans le sous arbre droit sont sup\u00e9rieures \u00e0 celle du noeud. Exemples d'ABR Un ABR \u00e9tant un arbre binaire, on peut le repr\u00e9senter comme pr\u00e9c\u00e9demment avec une classe Noeud avec une contrainte sur la valeur des noeuds: ils doivent \u00eatre comparables . Avec la classe Noeud du chapitre pr\u00e9c\u00e9dent, les deux ABR ci-dessus sont mod\u00e9lis\u00e9s de la fa\u00e7on suivante: 1 2 3 4 5 6 7 class Noeud : \"\"\" Une classe pour mod\u00e9liser les noeuds d'un arbre\"\"\" def __init__ ( self , v , fg = None , fd = None ): self . val = v self . gauche = fg self . droit = fd 1 2 3 4 5 6 7 8 9 abr1 = Noeud ( 20 , Noeud ( 10 , Noeud ( 5 ), Noeud ( 15 )), Noeud ( 25 , Noeud ( 21 ), Noeud ( 26 )) ) abr2 = Noeud ( 7 , Noeud ( 5 , Noeud ( 2 ), Noeud ( 6 )), Noeud ( 10 , Noeud ( 8 ), Noeud ( 12 , Noeud ( 11 ), Noeud ( 13 ))) ) Remarque : dans la m\u00e9thode __init__ , fg et fd ont une valeur par d\u00e9faut \u00e9gale \u00e0 None , cela permet juste une \u00e9criture plus compacte lors de la cr\u00e9ation d'une instance en \u00e9vitant de r\u00e9\u00e9crire None lorsqu'un noeud n'a pas de fils. Recherche dans un ABR \u2693\ufe0e Chercher une valeur dans un ABR revient \u00e0 la comparer \u00e0 la valeur de la racine puis, si elle est diff\u00e9rente, \u00e0 poursuivre la recherche dans un seul des sous arbres. La recherche d'une valeur ou cl\u00e9 \\(x\\) dans un arbre binaire de recherche arb peut \u00eatre men\u00e9e avec l'algorithme ci-dessous qui renvoie le noeud o\u00f9 la valeur est pr\u00e9sente ou None si la recherche n'aboutit pas. 1 2 3 4 5 6 7 8 9 10 Algorithme recherche(x, arbre) ---------------------------- si arbre est vide renvoyer Faux si x < arbre.val renvoyer recherche(x, arbre.gauche) sinon si x > arbre.val renvoyer recherche(x, arbre.droit) sinon renvoyer Vrai \u00c0 faire Impl\u00e9menter cet algorithme en python. 1 2 3 4 5 6 7 8 9 10 def rechercher ( x , arbre ): \"\"\" recherche une valeur x dans un ABR; renvoie un bool\u00e9en correspondant \u00e0 la presence ou non de x dans arbre x: \u00e9l\u00e9ment comparable avec les valeurs pr\u00e9sentes dans l'arbre arbre: arbre binaire de recherche \"\"\" if arbre is None : return False # \u00c0 compl\u00e9ter 1 2 3 4 # A DECOMMENTER ET EXECUTER assert rechercher ( 10 , abr2 ) == True assert rechercher ( 35 , abr2 ) == False print ( \"Valid\u00e9 !\" ) Efficacit\u00e9 de la recherche Dans le cas id\u00e9al, si l'arbre est \u00e9quilibr\u00e9 , chaque appel de rechercher(x, arbre) \u00e9limine la moiti\u00e9 des \u00e9l\u00e9ments. Cette recherche est alors \u00e0 rapprocher de la recherche dichotomique vue en 1re ( et dans des exercices d'entrainement EP ), dont la complexit\u00e9 est logarithmique . Dans le pire des cas, si l'arbre est filiforme , la recherche est peu efficace et sa complexit\u00e9 est alors lin\u00e9aire. Insertion dans un ABR \u2693\ufe0e Comme pr\u00e9c\u00e9demment, on va privil\u00e9gier une m\u00e9thode r\u00e9cursive pour ins\u00e9rer une valeur \\(x\\) dans un arbre tout en gardant la structure d'arbre binaire de recherche . Le cas de base est simple: si l'arbre est vide , il suffit de renvoyer un noeud ayant \\(x\\) comme valeur. Sinon ( cas r\u00e9cursif ), on compare \\(x\\) \u00e0 la valeur du noeud: 1 2 3 4 si x < arbre.val \"placer\" x dans le sous arbre gauche sinon \"placer\" x dans le sous arbre droit Attention \u00e0 l'interpr\u00e9tation de \"placer\" x lors de l'impl\u00e9mentation et notamment au type renvoy\u00e9. Impl\u00e9menter cette fonction en python. 1 2 3 4 5 6 7 8 9 def inserer ( x , arbre ): \"\"\" ins\u00e8re x dans un ABR tout en gardant la structure d'ABR; x: \u00e9l\u00e9ment comparable avec les valeurs pr\u00e9sentes dans l'arbre arbre: arbre binaire de recherche \"\"\" if arbre is None : return Noeud ( x ) # \u00c0 compl\u00e9ter \u00c0 faire V\u00e9rifier sur pythontutor que les insertions suivantes sont correctes. 1 2 3 4 5 abr = None # abr est un arbre vide abr = inserer ( 15 , abr ) abr = inserer ( 20 , abr ) abr = inserer ( 7 , abr ) abr = inserer ( 3 , abr ) Efficacit\u00e9 de l'insertion Cette fonction pr\u00e9sente une complexit\u00e9 temporelle identique \u00e0 celle qui effectuait la recherche. Cette complexit\u00e9 va d\u00e9pendre de la forme de l'arbre. \u00c0 faire Travail \u00e0 effectuer: comme pour les listes cha\u00een\u00e9es, compl\u00e9ter la classe ABR dont l'interface propose les m\u00e9thodes chercher et ajouter . 1 2 3 4 5 6 7 8 9 10 11 class ABR : \"\"\" Une classe pour els arbres binaires de recherche\"\"\" def __init__ ( self ): self . racine = None def ajouter ( self , x ): self . racine = ... def chercher ( self , x ): return ... 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 # Une autre possibilit\u00e9 : inclure les codes de inserer et rechercher # dans le code de la classe \"\"\" class ABR: def __init__(self): self.racine = None def ajouter(self, x): def insere(x, arbre): if arbre is None: return Noeud(x) if x < arbre.val: return Noeud(arbre.val, insere(x,arbre.gauche), arbre.droit) else: return Noeud(arbre.val, arbre.gauche, insere(x, arbre.droit)) self.racine = insere(x, self.racine) def chercher(self, x): def rechercher(x, arbre): if arbre is None: return False if x < arbre.val: return rechercher(x, arbre.gauche) elif x > arbre.val: return rechercher(x, arbre.droit) else: return True return rechercher(x, self.racine) \"\"\" 1 2 3 4 5 abr = ABR () abr . ajouter ( 15 ) abr . ajouter ( 20 ) abr . ajouter ( 7 ) abr . ajouter ( 3 ) Parcours d'un ABR \u2693\ufe0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 class Noeud : \"\"\" Une classe pour mod\u00e9liser les noeuds d'un arbre\"\"\" def __init__ ( self , v , fg = None , fd = None ): self . val = v self . gauche = fg self . droit = fd a = Noeud ( 'A' , Noeud ( 'B' ), Noeud ( 'K' , Noeud ( 'L' , Noeud ( 'S' ), Noeud ( 'Y' )), Noeud ( 'P' , None , Noeud ( 'Z' ))) ) def parcoursInfixe ( r ): if r is not None : parcoursInfixe ( r . gauche ) print ( r . val , end = ' ' ) parcoursInfixe ( r . droit ) def parcoursPostfixe ( r ): if r is not None : parcoursPostfixe ( r . gauche ) parcoursPostfixe ( r . droit ) print ( r . val , end = ' ' ) parcoursPostfixe ( a ) 1 B S Y L Z P K A","title":"Cours 2"},{"location":"NSITerm/SD/C11C2.html#algorithmes-sur-les-abr","text":"","title":"Algorithmes sur les ABR"},{"location":"NSITerm/SD/C11C2.html#definition-et-representation-des-arbres-binaires-de-recherche-en-python","text":"Un arbre binaire de recherche (en abr\u00e9g\u00e9 ABR ) est un arbre binaire dont les noeuds contiennent des valeurs comparables. Pour tout noeud d'un ABR toutes les valeurs situ\u00e9es dans le sous arbre gauche sont inf\u00e9rieures \u00e0 celle du noeud. De la m\u00eame fa\u00e7on, toutes les valeurs situ\u00e9es dans le sous arbre droit sont sup\u00e9rieures \u00e0 celle du noeud. Exemples d'ABR Un ABR \u00e9tant un arbre binaire, on peut le repr\u00e9senter comme pr\u00e9c\u00e9demment avec une classe Noeud avec une contrainte sur la valeur des noeuds: ils doivent \u00eatre comparables . Avec la classe Noeud du chapitre pr\u00e9c\u00e9dent, les deux ABR ci-dessus sont mod\u00e9lis\u00e9s de la fa\u00e7on suivante: 1 2 3 4 5 6 7 class Noeud : \"\"\" Une classe pour mod\u00e9liser les noeuds d'un arbre\"\"\" def __init__ ( self , v , fg = None , fd = None ): self . val = v self . gauche = fg self . droit = fd 1 2 3 4 5 6 7 8 9 abr1 = Noeud ( 20 , Noeud ( 10 , Noeud ( 5 ), Noeud ( 15 )), Noeud ( 25 , Noeud ( 21 ), Noeud ( 26 )) ) abr2 = Noeud ( 7 , Noeud ( 5 , Noeud ( 2 ), Noeud ( 6 )), Noeud ( 10 , Noeud ( 8 ), Noeud ( 12 , Noeud ( 11 ), Noeud ( 13 ))) ) Remarque : dans la m\u00e9thode __init__ , fg et fd ont une valeur par d\u00e9faut \u00e9gale \u00e0 None , cela permet juste une \u00e9criture plus compacte lors de la cr\u00e9ation d'une instance en \u00e9vitant de r\u00e9\u00e9crire None lorsqu'un noeud n'a pas de fils.","title":"D\u00e9finition et repr\u00e9sentation des arbres binaires de recherche en python"},{"location":"NSITerm/SD/C11C2.html#recherche-dans-un-abr","text":"Chercher une valeur dans un ABR revient \u00e0 la comparer \u00e0 la valeur de la racine puis, si elle est diff\u00e9rente, \u00e0 poursuivre la recherche dans un seul des sous arbres. La recherche d'une valeur ou cl\u00e9 \\(x\\) dans un arbre binaire de recherche arb peut \u00eatre men\u00e9e avec l'algorithme ci-dessous qui renvoie le noeud o\u00f9 la valeur est pr\u00e9sente ou None si la recherche n'aboutit pas. 1 2 3 4 5 6 7 8 9 10 Algorithme recherche(x, arbre) ---------------------------- si arbre est vide renvoyer Faux si x < arbre.val renvoyer recherche(x, arbre.gauche) sinon si x > arbre.val renvoyer recherche(x, arbre.droit) sinon renvoyer Vrai \u00c0 faire Impl\u00e9menter cet algorithme en python. 1 2 3 4 5 6 7 8 9 10 def rechercher ( x , arbre ): \"\"\" recherche une valeur x dans un ABR; renvoie un bool\u00e9en correspondant \u00e0 la presence ou non de x dans arbre x: \u00e9l\u00e9ment comparable avec les valeurs pr\u00e9sentes dans l'arbre arbre: arbre binaire de recherche \"\"\" if arbre is None : return False # \u00c0 compl\u00e9ter 1 2 3 4 # A DECOMMENTER ET EXECUTER assert rechercher ( 10 , abr2 ) == True assert rechercher ( 35 , abr2 ) == False print ( \"Valid\u00e9 !\" ) Efficacit\u00e9 de la recherche Dans le cas id\u00e9al, si l'arbre est \u00e9quilibr\u00e9 , chaque appel de rechercher(x, arbre) \u00e9limine la moiti\u00e9 des \u00e9l\u00e9ments. Cette recherche est alors \u00e0 rapprocher de la recherche dichotomique vue en 1re ( et dans des exercices d'entrainement EP ), dont la complexit\u00e9 est logarithmique . Dans le pire des cas, si l'arbre est filiforme , la recherche est peu efficace et sa complexit\u00e9 est alors lin\u00e9aire.","title":"Recherche dans un ABR"},{"location":"NSITerm/SD/C11C2.html#insertion-dans-un-abr","text":"Comme pr\u00e9c\u00e9demment, on va privil\u00e9gier une m\u00e9thode r\u00e9cursive pour ins\u00e9rer une valeur \\(x\\) dans un arbre tout en gardant la structure d'arbre binaire de recherche . Le cas de base est simple: si l'arbre est vide , il suffit de renvoyer un noeud ayant \\(x\\) comme valeur. Sinon ( cas r\u00e9cursif ), on compare \\(x\\) \u00e0 la valeur du noeud: 1 2 3 4 si x < arbre.val \"placer\" x dans le sous arbre gauche sinon \"placer\" x dans le sous arbre droit Attention \u00e0 l'interpr\u00e9tation de \"placer\" x lors de l'impl\u00e9mentation et notamment au type renvoy\u00e9. Impl\u00e9menter cette fonction en python. 1 2 3 4 5 6 7 8 9 def inserer ( x , arbre ): \"\"\" ins\u00e8re x dans un ABR tout en gardant la structure d'ABR; x: \u00e9l\u00e9ment comparable avec les valeurs pr\u00e9sentes dans l'arbre arbre: arbre binaire de recherche \"\"\" if arbre is None : return Noeud ( x ) # \u00c0 compl\u00e9ter \u00c0 faire V\u00e9rifier sur pythontutor que les insertions suivantes sont correctes. 1 2 3 4 5 abr = None # abr est un arbre vide abr = inserer ( 15 , abr ) abr = inserer ( 20 , abr ) abr = inserer ( 7 , abr ) abr = inserer ( 3 , abr ) Efficacit\u00e9 de l'insertion Cette fonction pr\u00e9sente une complexit\u00e9 temporelle identique \u00e0 celle qui effectuait la recherche. Cette complexit\u00e9 va d\u00e9pendre de la forme de l'arbre. \u00c0 faire Travail \u00e0 effectuer: comme pour les listes cha\u00een\u00e9es, compl\u00e9ter la classe ABR dont l'interface propose les m\u00e9thodes chercher et ajouter . 1 2 3 4 5 6 7 8 9 10 11 class ABR : \"\"\" Une classe pour els arbres binaires de recherche\"\"\" def __init__ ( self ): self . racine = None def ajouter ( self , x ): self . racine = ... def chercher ( self , x ): return ... 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 # Une autre possibilit\u00e9 : inclure les codes de inserer et rechercher # dans le code de la classe \"\"\" class ABR: def __init__(self): self.racine = None def ajouter(self, x): def insere(x, arbre): if arbre is None: return Noeud(x) if x < arbre.val: return Noeud(arbre.val, insere(x,arbre.gauche), arbre.droit) else: return Noeud(arbre.val, arbre.gauche, insere(x, arbre.droit)) self.racine = insere(x, self.racine) def chercher(self, x): def rechercher(x, arbre): if arbre is None: return False if x < arbre.val: return rechercher(x, arbre.gauche) elif x > arbre.val: return rechercher(x, arbre.droit) else: return True return rechercher(x, self.racine) \"\"\" 1 2 3 4 5 abr = ABR () abr . ajouter ( 15 ) abr . ajouter ( 20 ) abr . ajouter ( 7 ) abr . ajouter ( 3 )","title":"Insertion dans un ABR"},{"location":"NSITerm/SD/C11C2.html#parcours-dun-abr","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 class Noeud : \"\"\" Une classe pour mod\u00e9liser les noeuds d'un arbre\"\"\" def __init__ ( self , v , fg = None , fd = None ): self . val = v self . gauche = fg self . droit = fd a = Noeud ( 'A' , Noeud ( 'B' ), Noeud ( 'K' , Noeud ( 'L' , Noeud ( 'S' ), Noeud ( 'Y' )), Noeud ( 'P' , None , Noeud ( 'Z' ))) ) def parcoursInfixe ( r ): if r is not None : parcoursInfixe ( r . gauche ) print ( r . val , end = ' ' ) parcoursInfixe ( r . droit ) def parcoursPostfixe ( r ): if r is not None : parcoursPostfixe ( r . gauche ) parcoursPostfixe ( r . droit ) print ( r . val , end = ' ' ) parcoursPostfixe ( a ) 1 B S Y L Z P K A","title":"Parcours d'un ABR"},{"location":"NSITerm/SD/C11E1.html","text":"Les arbres binaires en terminale NSI \u2693\ufe0e Le cours \u2693\ufe0e Quelles sont la taille et la hauteur de cet arbre ? Dans un parcours infixe, donner l'ordre des noeuds visit\u00e9s. Donn\u00e9es 1 2 3 4 5 6 7 class Noeud : \"\"\" Une classe pour mod\u00e9liser les noeuds d'un arbre\"\"\" def __init__ ( self , v , fg , fd ): self . val = v self . gauche = fg self . droit = fd 1 2 3 4 5 6 7 arb1 = Noeud ( '1' , Noeud ( '2' , Noeud ( '4' , None , None ), Noeud ( '5' , None , None )), Noeud ( '3' , Noeud ( '6' , Noeud ( '8' , Noeud ( '10' , None , None ), Noeud ( '11' , None , None )), Noeud ( '9' , Noeud ( '12' , None , None ), Noeud ( '13' , None , None ))), Noeud ( '7' , None , None )) ) Applications directes \u2693\ufe0e Soit l'arbre de la figure suivante. En utilisant la classe Noeud de l'exercice pr\u00e9c\u00e9dent, d\u00e9finir un objet arb2 qui pourrait le d\u00e9crire. Pour \u00e9viter les ambiguit\u00e9s: G est le fils droit de D et F est le fils gauche de C Quelle est la hauteur de cet arbre? Donner les noeuds visit\u00e9s lors d'un parcours postfixe. Compl\u00e9ter la fonction r\u00e9cursive affiche qui: affiche un point . et qui ne renvoie rien pour un arbre vide; affiche une parenth\u00e8se ouvrante ( , le sous arbre gauche, le sous arbre droit, la valeur et enfin une parenth\u00e8se fermante ) autrement. Par exemple pour l'arbre pr\u00e9sent\u00e9 ici, affiche(arb2) fournit: 1 ( ( (. (..G )D ) (..E )B ) ( (..F ).C )A ) Dessiner l'arbre qui fournit ( (. (..C )B )(..D )A ) 1 2 3 4 5 6 arb2 = Noeud ( 'A' , Noeud ( 'B' , Noeud ( 'D' , None , Noeud ( 'G' , None , None )), Noeud ( 'E' , None , None )), Noeud ( 'C' , Noeud ( 'F' , None , None ), None ) ) 1 2 3 4 5 6 7 8 9 10 11 12 def affiche ( arb ): \"\"\" Affiche un arbre binaire\"\"\" if arb is None : print ( '.' , end = '' ) return else : print ( ' (' , end = '' ) ... ... print ( ... , end = '' ) print ( ' )' , end = '' ) 1 affiche ( arb2 ) 1 ( ( (. (..G )D ) (..E )B ) ( (..F ).C )A ) Un peigne gauche \u2693\ufe0e Compl\u00e9ter la fonction qui prend en param\u00e8tre un entier naturel \\(h\\) et qui renvoie un arbre de hauteur \\(h\\) o\u00f9 chaque noeud n'a pas de sous arbre droit . V\u00e9rifier le r\u00e9sultat avec la fonction affiche de l'exercice pr\u00e9c\u00e9dent. Indication 1 Deux m\u00e9thodes sont accept\u00e9es: r\u00e9cursive ou it\u00e9rative. Indication 1: M\u00e9thode r\u00e9cursive peigne_recursif(h) un peigne vide a une hauteur nulle; un peigne de hauteur h est un noeud dont: la valeur est h; le sous arbre gauche est un peigne de hauteur h-1; le sous arbre droit est vide 1 2 3 4 5 6 7 8 9 10 11 12 def peigne ( h ): \"\"\" Renvoie un peigne gauche de hauteur h (m\u00e9thode it\u00e9rative); h: entier naturel \"\"\" noeud_courant = None i = h while i > 0 : noeud_courant = Noeud ( ... , ... , ... ) i -= 1 return noeud_courant 1 p = peigne ( 4 ) 1 p 1 <__main__.Noeud at 0x7f75fbf36eb8> 1 2 # Tester affiche ( p ) 1 2 3 4 5 6 7 8 9 10 11 # Une version r\u00e9cursive def peignerec ( h , acc = 1 ): \"\"\" Renvoie un peigne gauche de hauteur h; h: entier naturel \"\"\" if h == 0 : return None else : return Noeud ( acc , peignerec ( h - 1 , acc + 1 ), None ) 1 p2 = peignerec ( 4 ) 1 p2 . gauche 1 2 # Tester affiche ( p2 )","title":"Exercices 1"},{"location":"NSITerm/SD/C11E1.html#les-arbres-binaires-en-terminale-nsi","text":"","title":"Les arbres binaires en terminale NSI"},{"location":"NSITerm/SD/C11E1.html#le-cours","text":"Quelles sont la taille et la hauteur de cet arbre ? Dans un parcours infixe, donner l'ordre des noeuds visit\u00e9s. Donn\u00e9es 1 2 3 4 5 6 7 class Noeud : \"\"\" Une classe pour mod\u00e9liser les noeuds d'un arbre\"\"\" def __init__ ( self , v , fg , fd ): self . val = v self . gauche = fg self . droit = fd 1 2 3 4 5 6 7 arb1 = Noeud ( '1' , Noeud ( '2' , Noeud ( '4' , None , None ), Noeud ( '5' , None , None )), Noeud ( '3' , Noeud ( '6' , Noeud ( '8' , Noeud ( '10' , None , None ), Noeud ( '11' , None , None )), Noeud ( '9' , Noeud ( '12' , None , None ), Noeud ( '13' , None , None ))), Noeud ( '7' , None , None )) )","title":"Le cours"},{"location":"NSITerm/SD/C11E1.html#applications-directes","text":"Soit l'arbre de la figure suivante. En utilisant la classe Noeud de l'exercice pr\u00e9c\u00e9dent, d\u00e9finir un objet arb2 qui pourrait le d\u00e9crire. Pour \u00e9viter les ambiguit\u00e9s: G est le fils droit de D et F est le fils gauche de C Quelle est la hauteur de cet arbre? Donner les noeuds visit\u00e9s lors d'un parcours postfixe. Compl\u00e9ter la fonction r\u00e9cursive affiche qui: affiche un point . et qui ne renvoie rien pour un arbre vide; affiche une parenth\u00e8se ouvrante ( , le sous arbre gauche, le sous arbre droit, la valeur et enfin une parenth\u00e8se fermante ) autrement. Par exemple pour l'arbre pr\u00e9sent\u00e9 ici, affiche(arb2) fournit: 1 ( ( (. (..G )D ) (..E )B ) ( (..F ).C )A ) Dessiner l'arbre qui fournit ( (. (..C )B )(..D )A ) 1 2 3 4 5 6 arb2 = Noeud ( 'A' , Noeud ( 'B' , Noeud ( 'D' , None , Noeud ( 'G' , None , None )), Noeud ( 'E' , None , None )), Noeud ( 'C' , Noeud ( 'F' , None , None ), None ) ) 1 2 3 4 5 6 7 8 9 10 11 12 def affiche ( arb ): \"\"\" Affiche un arbre binaire\"\"\" if arb is None : print ( '.' , end = '' ) return else : print ( ' (' , end = '' ) ... ... print ( ... , end = '' ) print ( ' )' , end = '' ) 1 affiche ( arb2 ) 1 ( ( (. (..G )D ) (..E )B ) ( (..F ).C )A )","title":"Applications directes"},{"location":"NSITerm/SD/C11E1.html#un-peigne-gauche","text":"Compl\u00e9ter la fonction qui prend en param\u00e8tre un entier naturel \\(h\\) et qui renvoie un arbre de hauteur \\(h\\) o\u00f9 chaque noeud n'a pas de sous arbre droit . V\u00e9rifier le r\u00e9sultat avec la fonction affiche de l'exercice pr\u00e9c\u00e9dent. Indication 1 Deux m\u00e9thodes sont accept\u00e9es: r\u00e9cursive ou it\u00e9rative. Indication 1: M\u00e9thode r\u00e9cursive peigne_recursif(h) un peigne vide a une hauteur nulle; un peigne de hauteur h est un noeud dont: la valeur est h; le sous arbre gauche est un peigne de hauteur h-1; le sous arbre droit est vide 1 2 3 4 5 6 7 8 9 10 11 12 def peigne ( h ): \"\"\" Renvoie un peigne gauche de hauteur h (m\u00e9thode it\u00e9rative); h: entier naturel \"\"\" noeud_courant = None i = h while i > 0 : noeud_courant = Noeud ( ... , ... , ... ) i -= 1 return noeud_courant 1 p = peigne ( 4 ) 1 p 1 <__main__.Noeud at 0x7f75fbf36eb8> 1 2 # Tester affiche ( p ) 1 2 3 4 5 6 7 8 9 10 11 # Une version r\u00e9cursive def peignerec ( h , acc = 1 ): \"\"\" Renvoie un peigne gauche de hauteur h; h: entier naturel \"\"\" if h == 0 : return None else : return Noeud ( acc , peignerec ( h - 1 , acc + 1 ), None ) 1 p2 = peignerec ( 4 ) 1 p2 . gauche 1 2 # Tester affiche ( p2 )","title":"Un peigne gauche"},{"location":"NSITerm/SD/C2C1.html","text":"Structures de donn\u00e9es lin\u00e9aires 1: pile et file - impl\u00e9mentation et interface \u2693\ufe0e Compl\u00e9ment-rappels: les tableaux/listes de python (le retour) En classe de premi\u00e8re on a rencontr\u00e9 et utilis\u00e9 les tableaux. En toute rigueur, ce sont des structures ayant une taille fixe et contenant des objets de m\u00eame type. Cependant, Python n'impl\u00e9mente pas des tableaux r\u00e9pondant \u00e0 ces crit\u00e8res (du moins pas sans module sp\u00e9cialis\u00e9). A la place, on trouve des structures plus complexes: les tableaux dynamiques ( les fameuses \"listes de python\" ) qui ont la propri\u00e9t\u00e9 de pouvoir \u00eatre agrandis, \u00e0 droite. On peut ajouter ou retirer des \u00e9l\u00e9ments d'une liste de python avec les m\u00e9thodes append et pop . 1 2 3 4 5 6 7 8 9 10 t = [ 10 , 20 , 30 ] t . append ( 50 ) t . append ( 70 ) print ( t ) >>> [ 10 , 20 , 30 , 50 , 70 ] t . pop () >>> 70 print ( t ) >>> [ 10 , 20 , 30 , 50 ] On peut \u00e9ventuellement agrandir le tableau \"par la gauche\" avec la m\u00e9thode insert: 1 2 3 4 t . insert ( 0 , - 20 ) print ( t ) >>> [ - 20 , 10 , 20 , 30 , 50 ] On \u00e9vitera autant que possible cette pratique \u00e0 cause de ses m\u00e9diocres performances, notamment sur les tableaux de grande taille. Rappelons enfin, que l'acc\u00e8s \u00e0 la derni\u00e8re valeur du tableau peut se faire avec l'index -1 : 1 2 print ( t [ - 1 ]) >>> 50 Les structures de donn\u00e9es lin\u00e9aires \u2693\ufe0e En informatique, pour chaque type de donn\u00e9es, pour chaque utilisation pr\u00e9vue, une structure particuli\u00e8re de donn\u00e9es se rev\u00e8lera probablement plus adapt\u00e9e qu'une autre. Lorsque les donn\u00e9es ne comportent pas de hi\u00e9rarchie et jouent le m\u00eame r\u00f4le, on utilise des structures de donn\u00e9es lin\u00e9aires comme les dictionnaires ou les listes. Par ailleurs, le probl\u00e8me de l'entr\u00e9e ou de la sortie des donn\u00e9es dans la structure peut \u00eatre important. Ce qui nous am\u00e8nera \u00e0 distinguer ces structures lin\u00e9aires entre elles. Une premi\u00e8re structure simple: la pile \u2693\ufe0e Pr\u00e9sentation \u2693\ufe0e Pile d'assiettes Dans une pile d'assiettes, les manipulations enlever ou d\u00e9poser une nouvelle assiette, ne peuvent se faire qu'au sommet. Une propri\u00e9t\u00e9 remarquable est qu'une assiette ne peut \u00eatre enlev\u00e9e qu'apr\u00e8s avoir enlev\u00e9 toutes celles qui se trouvaient au dessus. Il s'agit d'une structure de type LIFO , qui signifie Last In First Out . En informatique, il existe une structure de donn\u00e9e appel\u00e9e pile ( stack en anglais) dont le fonctionnnement peut rappeler celui de la pile d'assiette. Les applications sont tr\u00e8s nombreuses. Citons par exemple, le probl\u00e8me de l'annulation de la derni\u00e8re action enregistr\u00e9e de nombreux logiciels (le fameux Ctrl \uff0b Z ). Il s'agit de sauvegarder les actions de l'utilisateur et de pouvoir restaurer la derni\u00e8re si besoin. Il existe \u00e9norm\u00e9ment de ressources de vulgarisation sur Internet permettant de d\u00e9couvrir son fonctionnement R\u00e9alisation (impl\u00e9mentation) simple \u2693\ufe0e Une premi\u00e8re r\u00e9alisation possible d'une pile ( born\u00e9e ) peut se faire avec un tableau (de taille fixe \\(N+1\\) ). La premi\u00e8re case du tableau (index 0) stockera le nombre \\(n\\) d'\u00e9l\u00e9ments de la pile, permettant ainsi d'avoir acc\u00e8s au sommet . 1 2 3 4 5 6 7 N = 5 #la taille choisie est arbitraire # Cr\u00e9ation d'un pile vide capable d'accueillir N \u00e9l\u00e9ments par d\u00e9faut def creer_pile ( n = N ): p = [ None for _ in range ( n + 1 )] p [ 0 ] = 0 return p Les op\u00e9rations d'insertions et de suppressions, qu'on nommera ici empiler et d\u00e9piler , se font au sommet. Il est \u00e9vident qu'on ne peut pas d\u00e9piler une pile vide ou empiler une pile pleine ! Il faut donc g\u00e9rer ces cas. On peut \u00e9ventuellement pr\u00e9voir une fonction est_pilevide . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 def est_pilevide ( p ): return p [ 0 ] == 0 def depiler ( p ): n = p [ 0 ] assert not est_pilevide ( p ), \"Erreur: pile vide\" p [ 0 ] -= 1 # ne pas oublier de r\u00e9ajuster le sommet return p [ n ] def empiler ( p , val ): n = p [ 0 ] assert n < len ( p ) - 1 , \"Erreur: pile pleine\" n += 1 # la pile va contenir un \u00e9l\u00e9ment de plus p [ 0 ] = n p [ n ] = val Enfin, il est courant d'avoir une fonction sommet qui r\u00e9cup\u00e8re le seul \u00e9l\u00e9ment accessible de la pile. 1 2 3 def sommet ( p ): assert not est_pilevide ( p ), \"Erreur: pile vide\" return p [ p [ 0 ]] Application Donner la situation de la pile apr\u00e8s chacune des op\u00e9rations suivantes: 1 2 3 4 5 p = creer_pile () empiler ( p , 5 ) empiler ( p , 15 ) empiler ( p , 25 ) depiler ( p ) Quelle valeur se trouve au sommet de la pile? Le v\u00e9rifier. On peut aussi r\u00e9aliser une pile ( non born\u00e9e ) avec des listes de python et leurs m\u00e9thodes append et pop . A faire Compl\u00e9ter les fonctions depiler , empiler et sommet . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 def creer_pile (): return [] def est_pilevide ( p ): return len ( p ) == 0 def depiler ( p ): # A compl\u00e9ter pass def empiler ( p , val ): # A compl\u00e9ter pass def sommet ( p ): # A compl\u00e9ter pass 1 2 3 4 5 6 7 8 p = creer_pile () empiler ( p , 5 ) empiler ( p , 15 ) empiler ( p , 25 ) depiler ( p ) print ( sommet ( p )) depiler ( p ) print ( sommet ( p )) 1 2 15 5 A retenir Les op\u00e9rations r\u00e9alisables sur une pile peuvent donner lieu \u00e0 des r\u00e9alisations (on dit aussi impl\u00e9mentations) diff\u00e9rentes. Une deuxi\u00e8me structure: la file \u2693\ufe0e Pr\u00e9sentation \u2693\ufe0e File d'attente La file est une structure qui diff\u00e8re de la pile dans le sens o\u00f9 l'insertion et la suppression ne se font pas du m\u00eame c\u00f4t\u00e9 (penser \u00e0 une file d'attente devant un guichet). Ces op\u00e9rations sont nomm\u00e9es enfiler et d\u00e9filer . Les files sont par exemple utilis\u00e9es dans les gestionnaires d'impression (des imprimantes). Il s'agit d'une structure de type FIFO , pour First In First Out . Impl\u00e9mentation \u2693\ufe0e Une impl\u00e9mentation triviale peut \u00eatre r\u00e9alis\u00e9e avec des listes de python . A faire Compl\u00e9ter le code suivant. Coup de pouce : utiliser les m\u00e9thodes append , pop et insert . 1 2 3 4 5 6 7 8 9 10 11 12 13 def creer_file (): return [] def est_filevide ( f ): return len ( f ) == 0 def defiler ( f ): # A compl\u00e9ter pass def enfiler ( f , val ): # A compl\u00e9ter pass V\u00e9rifier que l'on a bien une structure de file en ex\u00e9cutant la cellule suivante 1 2 3 4 5 6 f = creer_file () enfiler ( f , 5 ) enfiler ( f , 15 ) enfiler ( f , 25 ) while not est_filevide ( f ): print ( defiler ( f ), end = ' ' ) 1 5 15 25 1 defiler ( f ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 --------------------------------------------------------------------------- AssertionError Traceback (most recent call last) <ipython-input-66-cbba2ba98b42> in <module> ----> 1 defiler(f) <ipython-input-64-bfde421bb079> in defiler(f) 7 def defiler(f): 8 #A compl\u00e9ter ----> 9 assert not est_filevide(f), \"Erreur: file vide\" 10 return f.pop() 11 AssertionError: Erreur: file vide Une autre r\u00e9alisation est possible en utilisant 2 piles qu'on nommera p_in et p_out . Les op\u00e9rations enfiler et d\u00e9filer sont d\u00e9taill\u00e9es ci dessous: enfiler 1 empiler sur p_in. defiler 1 2 3 4 Si p_out est vide: Tant que p_in n'est pas vide: depiler p_in et empiler cet \u00e9l\u00e9ment sur p_out depiler p_out A faire Compl\u00e9ter l'impl\u00e9mentation d'une file qui utilise deux piles, dans la cellule suivante. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def creer_file (): return ( creer_pile (), creer_pile ()) def enfiler ( f , val ): p_in = f [ 0 ] # A compl\u00e9ter pass def defiler ( f ): assert not est_filevide ( f ), \"Erreur: file vide\" # A compl\u00e9ter pass def est_filevide ( f ): p_in , p_out = f [ 0 ], f [ 1 ] return est_pilevide ( p_in ) and est_pilevide ( p_out ) 1 2 3 4 5 6 7 #Cellule de tests \u00e0 ex\u00e9cuter f = creer_file () enfiler ( f , 5 ) enfiler ( f , 15 ) enfiler ( f , 25 ) while not est_filevide ( f ): print ( defiler ( f ), end = ' ' ) 1 defiler ( f ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 --------------------------------------------------------------------------- AssertionError Traceback (most recent call last) <ipython-input-70-cbba2ba98b42> in <module> ----> 1 defiler(f) <ipython-input-68-6de1afd1571e> in defiler(f) 7 8 def defiler(f): ----> 9 assert not est_filevide(f), \"Erreur: file vide\" 10 p_in, p_out = f[0], f[1] 11 if est_pilevide(p_out): AssertionError: Erreur: file vide Comme pour la pile, m\u00eame si les impl\u00e9mentations d'une file peuvent \u00eatre tr\u00e8s diff\u00e9rentes les fonctionnalit\u00e9s qu'elles offrent sont identiques . Vers une abstraction des structures de donn\u00e9es \u2693\ufe0e Les exemples pr\u00e9c\u00e9dents ont montr\u00e9 qu'on pouvait d\u00e9finir une structure de donn\u00e9es comme \u00e9tant une description logique de la fa\u00e7on dont on voit ces donn\u00e9es et des op\u00e9rations permises . D'un point de vue utilisateur ( c'est-\u00e0-dire le programmeur ), manipuler une structure de donn\u00e9es c'est se pr\u00e9occuper de ce que les donn\u00e9es repr\u00e9sentent et utiliser les op\u00e9rations autoris\u00e9es sans se soucier de leur impl\u00e9mentation . Les d\u00e9tails de mise en oeuvre des structures de donn\u00e9es \u00e9tant cach\u00e9s \u00e0 l'utilisateur, celui-ci acc\u00e8de \u00e0 ces objets par le biais d'une interface (ensemble des op\u00e9rations permises et d'une description informelle de leur effet). Voici par exemple, les sp\u00e9cifications de la structure de donn\u00e9es pile pr\u00e9cedente: Struture de donn\u00e9es Pile Op\u00e9rations Description creer_pile(n) Cr\u00e9\u00e9 une pile vide de taille n optionnelle est_pilevide(p) retourne un bool\u00e9en correspondant \u00e0 l'\u00e9tat de la pile p. empiler(p, val) empile val dans la pile p. depiler(p) renvoie le sommet de la pile p et le supprime de celle-ci sommet(p) renvoie le sommet de la pile p, sans le supprimer Cette liste de sp\u00e9cifications est souvent appel\u00e9e API pour A pplication P rogramming I nterface.","title":"Cours"},{"location":"NSITerm/SD/C2C1.html#structures-de-donnees-lineaires-1-pile-et-file-implementation-et-interface","text":"Compl\u00e9ment-rappels: les tableaux/listes de python (le retour) En classe de premi\u00e8re on a rencontr\u00e9 et utilis\u00e9 les tableaux. En toute rigueur, ce sont des structures ayant une taille fixe et contenant des objets de m\u00eame type. Cependant, Python n'impl\u00e9mente pas des tableaux r\u00e9pondant \u00e0 ces crit\u00e8res (du moins pas sans module sp\u00e9cialis\u00e9). A la place, on trouve des structures plus complexes: les tableaux dynamiques ( les fameuses \"listes de python\" ) qui ont la propri\u00e9t\u00e9 de pouvoir \u00eatre agrandis, \u00e0 droite. On peut ajouter ou retirer des \u00e9l\u00e9ments d'une liste de python avec les m\u00e9thodes append et pop . 1 2 3 4 5 6 7 8 9 10 t = [ 10 , 20 , 30 ] t . append ( 50 ) t . append ( 70 ) print ( t ) >>> [ 10 , 20 , 30 , 50 , 70 ] t . pop () >>> 70 print ( t ) >>> [ 10 , 20 , 30 , 50 ] On peut \u00e9ventuellement agrandir le tableau \"par la gauche\" avec la m\u00e9thode insert: 1 2 3 4 t . insert ( 0 , - 20 ) print ( t ) >>> [ - 20 , 10 , 20 , 30 , 50 ] On \u00e9vitera autant que possible cette pratique \u00e0 cause de ses m\u00e9diocres performances, notamment sur les tableaux de grande taille. Rappelons enfin, que l'acc\u00e8s \u00e0 la derni\u00e8re valeur du tableau peut se faire avec l'index -1 : 1 2 print ( t [ - 1 ]) >>> 50","title":"Structures de donn\u00e9es lin\u00e9aires 1: pile et file - impl\u00e9mentation et interface"},{"location":"NSITerm/SD/C2C1.html#les-structures-de-donnees-lineaires","text":"En informatique, pour chaque type de donn\u00e9es, pour chaque utilisation pr\u00e9vue, une structure particuli\u00e8re de donn\u00e9es se rev\u00e8lera probablement plus adapt\u00e9e qu'une autre. Lorsque les donn\u00e9es ne comportent pas de hi\u00e9rarchie et jouent le m\u00eame r\u00f4le, on utilise des structures de donn\u00e9es lin\u00e9aires comme les dictionnaires ou les listes. Par ailleurs, le probl\u00e8me de l'entr\u00e9e ou de la sortie des donn\u00e9es dans la structure peut \u00eatre important. Ce qui nous am\u00e8nera \u00e0 distinguer ces structures lin\u00e9aires entre elles.","title":"Les structures de donn\u00e9es lin\u00e9aires"},{"location":"NSITerm/SD/C2C1.html#une-premiere-structure-simple-la-pile","text":"","title":"Une premi\u00e8re structure simple: la pile"},{"location":"NSITerm/SD/C2C1.html#une-deuxieme-structure-la-file","text":"","title":"Une deuxi\u00e8me structure: la file"},{"location":"NSITerm/SD/C2C1.html#vers-une-abstraction-des-structures-de-donnees","text":"Les exemples pr\u00e9c\u00e9dents ont montr\u00e9 qu'on pouvait d\u00e9finir une structure de donn\u00e9es comme \u00e9tant une description logique de la fa\u00e7on dont on voit ces donn\u00e9es et des op\u00e9rations permises . D'un point de vue utilisateur ( c'est-\u00e0-dire le programmeur ), manipuler une structure de donn\u00e9es c'est se pr\u00e9occuper de ce que les donn\u00e9es repr\u00e9sentent et utiliser les op\u00e9rations autoris\u00e9es sans se soucier de leur impl\u00e9mentation . Les d\u00e9tails de mise en oeuvre des structures de donn\u00e9es \u00e9tant cach\u00e9s \u00e0 l'utilisateur, celui-ci acc\u00e8de \u00e0 ces objets par le biais d'une interface (ensemble des op\u00e9rations permises et d'une description informelle de leur effet). Voici par exemple, les sp\u00e9cifications de la structure de donn\u00e9es pile pr\u00e9cedente: Struture de donn\u00e9es Pile Op\u00e9rations Description creer_pile(n) Cr\u00e9\u00e9 une pile vide de taille n optionnelle est_pilevide(p) retourne un bool\u00e9en correspondant \u00e0 l'\u00e9tat de la pile p. empiler(p, val) empile val dans la pile p. depiler(p) renvoie le sommet de la pile p et le supprime de celle-ci sommet(p) renvoie le sommet de la pile p, sans le supprimer Cette liste de sp\u00e9cifications est souvent appel\u00e9e API pour A pplication P rogramming I nterface.","title":"Vers une abstraction des structures de donn\u00e9es"},{"location":"NSITerm/SD/C2E1.html","text":"Exercices \u2693\ufe0e Exercice 1 \u2693\ufe0e Reprendre la structure de pile du cours impl\u00e9ment\u00e9e avec des list de python et ajouter \u00e0 l'interface deux op\u00e9rations: vider(p) qui vide une pile p ; taille(p) qui renvoie la taille de la pile p . Exercice 2 - Notation polonaise inverse \u2693\ufe0e L' \u00e9criture polonaise inverse des expressions arithm\u00e9tiques place l'op\u00e9rateur apr\u00e8s ses op\u00e9randes. Cette notation ne n\u00e9cessite aucune parenth\u00e8se, ni aucune r\u00e8gle de priorit\u00e9. Ainsi l'expression polonaise inverse d\u00e9crite par la cha\u00eene de caract\u00e8res 1 2 3 * + 4 * d\u00e9signe l\u2019expression traditionnellement not\u00e9e \\((1+ 2 \\times 3)\\times 4\\) . La valeur d\u2019une telle expression peut \u00eatre calcul\u00e9e facilement en utilisant une pile pour stocker les r\u00e9sultats interm\u00e9diaires. Pour cela, on parcours un \u00e0 un les \u00e9l\u00e9ments de l'expression et on effectue les actions suivantes: si on trouve un nombre, on l'empile; si on trouve un op\u00e9rateur binaire, on d\u00e9pile le dernier et l'avant dernier nombre, on leur applique l\u2019op\u00e9rateur, et on empile r\u00e9sultat. Si l'expression \u00e9tait bien \u00e9crite, il y a bien toujours deux nombres sur la pile lorsque l\u2019on voit un op\u00e9rateur, et \u00e0 la fin du processus il reste exactement un nombre sur la pile, qui est le r\u00e9sultat . \u00c9crire une fonction prenant en param\u00e8tre une cha\u00eene de caract\u00e8res repr\u00e9sentant une expression en notation polonaise inverse compos\u00e9e d\u2019additions et de de multiplications de nombres entiers et renvoyant la valeur de cette expression. On supposera que les \u00e9l\u00e9ments de l'expression sont s\u00e9par\u00e9s par des espaces. Attention, cette fonction ne doit pas renvoyer de r\u00e9sultat si l'expression est mal \u00e9crite . Exercice 3 - Cha\u00eenes bien parenth\u00e9s\u00e9es \u2693\ufe0e On consid\u00e8re une cha\u00eene de caract\u00e8res incluant \u00e0 la fois des parenth\u00e8ses rondes ( et ) et des parenth\u00e8ses carr\u00e9es [ et ] . La cha\u00eene est bien parenth\u00e9s\u00e9e si chaque ouvrante est associ\u00e9e \u00e0 une unique fermante de m\u00eame forme, et r\u00e9ciproquement. \u00c9crire une fonction prenant en param\u00e8tre une cha\u00eene de caract\u00e8res contenant, entre autres, les parenth\u00e8ses d\u00e9crites et qui renvoie True si la cha\u00eene est bien parenth\u00e9s\u00e9e et False sinon. Exercice 4 - File born\u00e9e \u2693\ufe0e On propose ici une autre r\u00e9alisation possible d'une file born\u00e9e \u00e0 partir d'un tableau. Les extr\u00e9mit\u00e9s de la file seront rep\u00e9r\u00e9es par deux index tete et queue . On enfile par la queue et d\u00e9file par la t\u00eate. Soit MAXFILE la capacit\u00e9 de la file. On pr\u00e9voit un tableau de taille MAXFILE+3 car on souhaite stocker \u00e9galement: la position de la t\u00eate (index 0); la position de la queue (index 1); le nombre d'\u00e9l\u00e9ment pr\u00e9sent dans la file (index 3) La position de la queue indique l'endroit o\u00f9 sera enfil\u00e9e la prochaine donn\u00e9e et la position de la t\u00eate, la prochaine donn\u00e9e qui sera d\u00e9fil\u00e9e. La figure (a) ci-dessous montre l'\u00e9tat d'une file f de ce type et de capacit\u00e9 maximale 7, dans laquelle figurent d\u00e9j\u00e0 4 \u00e9l\u00e9ments. \u00c0 partir de cette situation et apr\u00e8s les op\u00e9rations: 1 2 3 4 5 defiler ( f ) defiler ( f ) enfiler ( f , 4 ) enfiler ( f , 17 ) enfiler ( f , 10 ) on se trouve dans la situation (b). 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 MAXFILE = 7 # Capacit\u00e9 de la pile def creer_file ( n = MAXFILE ): return [ 3 , 3 , 0 ] + [ None ] * n def est_vide ( f ): return f [ 2 ] == 0 def est_pleine ( f ): return f [ 2 ] == len ( f ) - 3 def enfiler ( f , val ): # A compl\u00e9ter pass def defiler ( f ): # A compl\u00e9ter pass A partir des informations disponibles: dire combien d'op\u00e9rations sont autoris\u00e9es sur cette structure; r\u00e9diger leur sp\u00e9cification. Pr\u00e9voir les r\u00e9ponses de l'interpr\u00e9teur python apr\u00e8s les s\u00e9quences de commandes ci-dessous ( qui se suivent! ). Proposer une impl\u00e9mentation pour enfiler et defiler . S\u00e9quence 1 1 2 f1 = creer_file () est_vide ( f1 ) S\u00e9quence 2 1 2 enfiler ( f1 , 5 ) est_vide ( f1 ) S\u00e9quence 3 1 2 3 4 5 enfiler ( f1 , - 10 ) enfiler ( f1 , 25 ) enfiler ( f1 , - 35 ) while not est_vide ( f1 ): print ( defiler ( f1 ), end = ' ' ) S\u00e9quence 4 1 2 3 4 5 f2 = creer_file ( 3 ) enfiler ( f2 , 10 ) enfiler ( f2 , 100 ) enfiler ( f2 , 1000 ) enfiler ( f2 , 50 ) 1","title":"Exercices"},{"location":"NSITerm/SD/C2E1.html#exercices","text":"","title":"Exercices"},{"location":"NSITerm/SD/C2E1.html#exercice-1","text":"Reprendre la structure de pile du cours impl\u00e9ment\u00e9e avec des list de python et ajouter \u00e0 l'interface deux op\u00e9rations: vider(p) qui vide une pile p ; taille(p) qui renvoie la taille de la pile p .","title":"Exercice 1"},{"location":"NSITerm/SD/C2E1.html#exercice-2-notation-polonaise-inverse","text":"L' \u00e9criture polonaise inverse des expressions arithm\u00e9tiques place l'op\u00e9rateur apr\u00e8s ses op\u00e9randes. Cette notation ne n\u00e9cessite aucune parenth\u00e8se, ni aucune r\u00e8gle de priorit\u00e9. Ainsi l'expression polonaise inverse d\u00e9crite par la cha\u00eene de caract\u00e8res 1 2 3 * + 4 * d\u00e9signe l\u2019expression traditionnellement not\u00e9e \\((1+ 2 \\times 3)\\times 4\\) . La valeur d\u2019une telle expression peut \u00eatre calcul\u00e9e facilement en utilisant une pile pour stocker les r\u00e9sultats interm\u00e9diaires. Pour cela, on parcours un \u00e0 un les \u00e9l\u00e9ments de l'expression et on effectue les actions suivantes: si on trouve un nombre, on l'empile; si on trouve un op\u00e9rateur binaire, on d\u00e9pile le dernier et l'avant dernier nombre, on leur applique l\u2019op\u00e9rateur, et on empile r\u00e9sultat. Si l'expression \u00e9tait bien \u00e9crite, il y a bien toujours deux nombres sur la pile lorsque l\u2019on voit un op\u00e9rateur, et \u00e0 la fin du processus il reste exactement un nombre sur la pile, qui est le r\u00e9sultat . \u00c9crire une fonction prenant en param\u00e8tre une cha\u00eene de caract\u00e8res repr\u00e9sentant une expression en notation polonaise inverse compos\u00e9e d\u2019additions et de de multiplications de nombres entiers et renvoyant la valeur de cette expression. On supposera que les \u00e9l\u00e9ments de l'expression sont s\u00e9par\u00e9s par des espaces. Attention, cette fonction ne doit pas renvoyer de r\u00e9sultat si l'expression est mal \u00e9crite .","title":"Exercice 2 - Notation polonaise inverse"},{"location":"NSITerm/SD/C2E1.html#exercice-3-chaines-bien-parenthesees","text":"On consid\u00e8re une cha\u00eene de caract\u00e8res incluant \u00e0 la fois des parenth\u00e8ses rondes ( et ) et des parenth\u00e8ses carr\u00e9es [ et ] . La cha\u00eene est bien parenth\u00e9s\u00e9e si chaque ouvrante est associ\u00e9e \u00e0 une unique fermante de m\u00eame forme, et r\u00e9ciproquement. \u00c9crire une fonction prenant en param\u00e8tre une cha\u00eene de caract\u00e8res contenant, entre autres, les parenth\u00e8ses d\u00e9crites et qui renvoie True si la cha\u00eene est bien parenth\u00e9s\u00e9e et False sinon.","title":"Exercice 3 - Cha\u00eenes bien parenth\u00e9s\u00e9es"},{"location":"NSITerm/SD/C2E1.html#exercice-4-file-bornee","text":"On propose ici une autre r\u00e9alisation possible d'une file born\u00e9e \u00e0 partir d'un tableau. Les extr\u00e9mit\u00e9s de la file seront rep\u00e9r\u00e9es par deux index tete et queue . On enfile par la queue et d\u00e9file par la t\u00eate. Soit MAXFILE la capacit\u00e9 de la file. On pr\u00e9voit un tableau de taille MAXFILE+3 car on souhaite stocker \u00e9galement: la position de la t\u00eate (index 0); la position de la queue (index 1); le nombre d'\u00e9l\u00e9ment pr\u00e9sent dans la file (index 3) La position de la queue indique l'endroit o\u00f9 sera enfil\u00e9e la prochaine donn\u00e9e et la position de la t\u00eate, la prochaine donn\u00e9e qui sera d\u00e9fil\u00e9e. La figure (a) ci-dessous montre l'\u00e9tat d'une file f de ce type et de capacit\u00e9 maximale 7, dans laquelle figurent d\u00e9j\u00e0 4 \u00e9l\u00e9ments. \u00c0 partir de cette situation et apr\u00e8s les op\u00e9rations: 1 2 3 4 5 defiler ( f ) defiler ( f ) enfiler ( f , 4 ) enfiler ( f , 17 ) enfiler ( f , 10 ) on se trouve dans la situation (b). 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 MAXFILE = 7 # Capacit\u00e9 de la pile def creer_file ( n = MAXFILE ): return [ 3 , 3 , 0 ] + [ None ] * n def est_vide ( f ): return f [ 2 ] == 0 def est_pleine ( f ): return f [ 2 ] == len ( f ) - 3 def enfiler ( f , val ): # A compl\u00e9ter pass def defiler ( f ): # A compl\u00e9ter pass A partir des informations disponibles: dire combien d'op\u00e9rations sont autoris\u00e9es sur cette structure; r\u00e9diger leur sp\u00e9cification. Pr\u00e9voir les r\u00e9ponses de l'interpr\u00e9teur python apr\u00e8s les s\u00e9quences de commandes ci-dessous ( qui se suivent! ). Proposer une impl\u00e9mentation pour enfiler et defiler . S\u00e9quence 1 1 2 f1 = creer_file () est_vide ( f1 ) S\u00e9quence 2 1 2 enfiler ( f1 , 5 ) est_vide ( f1 ) S\u00e9quence 3 1 2 3 4 5 enfiler ( f1 , - 10 ) enfiler ( f1 , 25 ) enfiler ( f1 , - 35 ) while not est_vide ( f1 ): print ( defiler ( f1 ), end = ' ' ) S\u00e9quence 4 1 2 3 4 5 f2 = creer_file ( 3 ) enfiler ( f2 , 10 ) enfiler ( f2 , 100 ) enfiler ( f2 , 1000 ) enfiler ( f2 , 50 ) 1","title":"Exercice 4 - File born\u00e9e"},{"location":"NSITerm/SD/C2E1P.html","text":"Exercice 1 \u2693\ufe0e Reprendre la structure de pile du cours impl\u00e9ment\u00e9e avec des list de python et ajouter \u00e0 l'interface deux op\u00e9rations: vider(p) qui vide une pile p ; taille(p) qui renvoie la taille de la pile p . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 def creer_pile (): return [] def est_pilevide ( p ): return len ( p ) == 0 def depiler ( p ): # A compl\u00e9ter assert not est_pilevide ( p ), 'Erreur pile vide' v = p . pop () return v def empiler ( p , val ): # A compl\u00e9ter p . append ( val ) def sommet ( p ): # A compl\u00e9ter assert not est_pilevide ( p ), 'Erreur pile vide' return p [ - 1 ] def vider ( p ): p . clear () def taille ( p ): return len ( p ) 1 2 3 4 5 6 p1 = creer_pile () empiler ( p1 , 10 ) empiler ( p1 , 1 ) empiler ( p1 , 5 ) empiler ( p1 , 4 ) est_pilevide ( p1 ) 1 False 1 2 3 print ( sommet ( p1 )) vider ( p1 ) print ( est_pilevide ( p1 )) 1 2 4 True Exercice 2 - Notation polonaise inverse \u2693\ufe0e L' \u00e9criture polonaise inverse des expressions arithm\u00e9tiques place l'op\u00e9rateur apr\u00e8s ses op\u00e9randes. Cette notation ne n\u00e9cessite aucune parenth\u00e8se, ni aucune r\u00e8gle de priorit\u00e9. Ainsi l'expression polonaise inverse d\u00e9crite par la cha\u00eene de caract\u00e8res 1 2 3 * + 4 * d\u00e9signe l\u2019expression traditionnellement not\u00e9e \\((1+ 2 \\times 3)\\times 4\\) . La valeur d\u2019une telle expression peut \u00eatre calcul\u00e9e facilement en utilisant une pile pour stocker les r\u00e9sultats interm\u00e9diaires. Pour cela, on parcours un \u00e0 un les \u00e9l\u00e9ments de l'expression et on effectue les actions suivantes: si on trouve un nombre, on l'empile; si on trouve un op\u00e9rateur binaire, on d\u00e9pile le dernier et l'avant dernier nombre, on leur applique l\u2019op\u00e9rateur, et on empile r\u00e9sultat. Si l'expression \u00e9tait bien \u00e9crite, il y a bien toujours deux nombres sur la pile lorsque l\u2019on voit un op\u00e9rateur, et \u00e0 la fin du processus il reste exactement un nombre sur la pile, qui est le r\u00e9sultat . \u00c9crire une fonction prenant en param\u00e8tre une cha\u00eene de caract\u00e8res repr\u00e9sentant une expression en notation polonaise inverse compos\u00e9e d\u2019additions et de de multiplications de nombres entiers et renvoyant la valeur de cette expression. On supposera que les \u00e9l\u00e9ments de l'expression sont s\u00e9par\u00e9s par des espaces. Attention, cette fonction ne doit pas renvoyer de r\u00e9sultat si l'expression est mal \u00e9crite . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 def npi ( c ): exp = c . split () p = creer_pile () for elt in exp : print ( f '----Examen de { elt } ' ) if elt . isdigit (): empiler ( p , int ( elt )) print ( f \"J'ai empil\u00e9 { int ( elt ) } \" ) print ( p ) elif elt in ( '+' , '*' ): a = depiler ( p ) print ( f \"J'ai d\u00e9pil\u00e9 { a } \" ) b = depiler ( p ) print ( f \"J'ai d\u00e9pil\u00e9 { b } \" ) r = a + b if elt == '+' else a * b empiler ( p , r ) print ( f \"J'ai empil\u00e9 { r } \" ) else : raise ValueError print () assert taille ( p ) == 1 , 'Mal \u00e9crit' return sommet ( p ) 1 npi ( '1 2 + 3 * 2 + 4 *' ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 ----Examen de 1 J'ai empil\u00e9 1 [1] ----Examen de 2 J'ai empil\u00e9 2 [1, 2] ----Examen de + J'ai d\u00e9pil\u00e9 2 J'ai d\u00e9pil\u00e9 1 J'ai empil\u00e9 3 ----Examen de 3 J'ai empil\u00e9 3 [3, 3] ----Examen de * J'ai d\u00e9pil\u00e9 3 J'ai d\u00e9pil\u00e9 3 J'ai empil\u00e9 9 ----Examen de 2 J'ai empil\u00e9 2 [9, 2] ----Examen de + J'ai d\u00e9pil\u00e9 2 J'ai d\u00e9pil\u00e9 9 J'ai empil\u00e9 11 ----Examen de 4 J'ai empil\u00e9 4 [11, 4] ----Examen de * J'ai d\u00e9pil\u00e9 4 J'ai d\u00e9pil\u00e9 11 J'ai empil\u00e9 44 44 Exercice 3 - Cha\u00eenes bien parenth\u00e9s\u00e9es \u2693\ufe0e On consid\u00e8re consid\u00e8re une cha\u00eene de caract\u00e8res incluant \u00e0 la la fois fois des parenth\u00e8ses rondes ( et ) et des parenth\u00e8ses carr\u00e9es [ et ] . La cha\u00eene est bien parenth\u00e9s\u00e9e si chaque ouvrante est associ\u00e9e \u00e0 une unique fermante de m\u00eame forme, et r\u00e9ciproquement. \u00c9crire une fonction prenant en param\u00e8tre une cha\u00eene de caract\u00e8res contenant, entre autres, les parenth\u00e8ses d\u00e9crites et qui renvoie True si la cha\u00eene est bien parenth\u00e9s\u00e9e et False sinon. 1 2 3 4 5 6 7 8 9 10 11 12 par = { '(' : ')' , '[' : ']' } def est_bien_parent ( c ): p = creer_pile () for elt in c : if elt in par : empiler ( p , elt ) elif elt in par . values (): s = depiler ( p ) if s not in par or par [ s ] != elt : return False return taille ( p ) == 0 1 est_bien_parent ( '1*3+(2-[2/5])' ) 1 True Exercice 4 - File born\u00e9e \u2693\ufe0e On propose ici une autre r\u00e9alisation possible d'une file born\u00e9e \u00e0 partir d'un tableau. La file sera rep\u00e9r\u00e9e par deux index tete et queue . On enfile par la queue et d\u00e9file par la t\u00eate. Soit \\(N\\) la capacit\u00e9 de la file. On pr\u00e9voit un tableau de taille \\(N+3\\) car on souhaite stocker \u00e9galement: la position de la t\u00eate (index 0); la position de la queue (index 1); la longueur effective de la file (index 3) La position de la queue indique l'endroit o\u00f9 sera enfil\u00e9e la prochaine donn\u00e9e. La figure (a) ci-dessous montre une file f de ce type et de capacit\u00e9 maximale 7, dans laquelle figurent d\u00e9j\u00e0 4 \u00e9l\u00e9ments. A partir de cette situation et apr\u00e8s les op\u00e9rations: 1 2 3 4 5 defiler ( f ) defiler ( f ) enfiler ( f , 4 ) enfiler ( f , 17 ) enfiler ( f , 10 ) on se trouve dans la situation (b). 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 MAXFILE = 8 # Capacit\u00e9 de la pile def creer_file ( n = MAXFILE ): return [ 3 , 3 , 0 ] + [ None ] * n def enfiler ( f , x ): assert not est_pleine ( f ), 'Erreur: file pleine' queue , taille = f [ 1 ], f [ 2 ] # Pour la lisibilit\u00e9 f [ queue ] = x f [ 2 ] = taille + 1 # la file comporte un elt suppl\u00e9mentaire # D\u00e9placement de la queue - mod\u00e8le circulaire if queue == len ( f ) - 1 : queue = 3 else : queue += 1 f [ 1 ] = queue def est_pleine ( f ): return f [ 2 ] == len ( f ) - 3 def est_vide ( f ): return f [ 2 ] == 0 def defiler ( f ): assert not est_vide ( f ), 'Erreur: file vide' tete = f [ 0 ] v = f [ tete ] f [ tete ] = None # Optionnel f [ 2 ] -= 1 # la file a un elt de moins # D\u00e9placement de la tete - mod\u00e8le circulaire if tete == len ( f ) - 1 : tete = 3 else : tete += 1 f [ 0 ] = tete return v 1 2 3 4 5 6 7 8 9 10 11 f = creer_file () #f[0], f[1], f[2] = 4, 8, 4 #f[4], f[5], f[6], f[7] = 15, 6, 9, 8 print ( f ) enfiler ( f , 3 ) print ( f ) enfiler ( f , - 1 ) print ( f ) enfiler ( f , 100 ) print ( f ) enfiler ( f , 8 ) 1 2 3 4 [3, 3, 0, None, None, None, None, None, None, None, None] [3, 4, 1, 3, None, None, None, None, None, None, None] [3, 5, 2, 3, -1, None, None, None, None, None, None] [3, 6, 3, 3, -1, 100, None, None, None, None, None] A partir des informations disponibles: dire combien d'op\u00e9rations sont autoris\u00e9es sur cette structure; r\u00e9diger leur sp\u00e9cification. Pr\u00e9voir les r\u00e9ponses de l'interpr\u00e9teur python apr\u00e8s les s\u00e9quences de commandes suivantes ( qui se suivent! ): S\u00e9quence 1 1 2 f1 = creer_file () est_filevide ( f1 ) S\u00e9quence 2 1 2 enfiler ( f1 , 5 ) est_filevide ( f1 ) S\u00e9quence 3 1 2 3 4 5 enfiler ( f1 , - 10 ) enfiler ( f1 , 25 ) enfiler ( f1 , - 35 ) while not est_filevide ( f1 ): print ( defiler ( f1 ), end = ' ' ) S\u00e9quence 4 1 2 3 4 5 f2 = creer_file ( 3 ) enfiler ( f2 , 10 ) enfiler ( f2 , 100 ) enfiler ( f2 , 1000 ) enfiler ( f2 , 50 ) Proposer une impl\u00e9mentation pour enfiler et defiler . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 f = creer_file ( 5 ) print ( f ) enfiler ( f , 5 ) #print(f) enfiler ( f , 10 ) #print(f) enfiler ( f , - 1 ) #print(f) print ( est_pleine ( f )) defiler ( f ) #print(f) defiler ( f ) #print(f) defiler ( f ) print ( f ) 1 2 3 [3, 3, 0, None, None, None, None, None] False [6, 6, 0, None, None, None, None, None] 1 2 f1 = creer_file () est_filevide ( f1 ) 1 True 1 2 enfiler ( f1 , 5 ) est_filevide ( f1 ) 1 False 1 2 3 4 5 enfiler ( f1 , - 10 ) enfiler ( f1 , 25 ) enfiler ( f1 , - 35 ) while not est_filevide ( f1 ): print ( defiler ( f1 ), end = ' ' ) 1 5 -10 25 -35 1 2 3 4 5 f2 = creer_file ( 3 ) enfiler ( f2 , 10 ) enfiler ( f2 , 100 ) enfiler ( f2 , 1000 ) enfiler ( f2 , 50 ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 --------------------------------------------------------------------------- AssertionError Traceback (most recent call last) <ipython-input-15-c43f6bea7b7e> in <module> 3 enfiler(f2, 100) 4 enfiler(f2, 1000) ----> 5 enfiler(f2, 50) <ipython-input-11-a90013406bf0> in enfiler(f, x) 6 7 def enfiler(f, x): ----> 8 assert not est_pleine(f), 'Erreur: file pleine' 9 10 queue, taille = f[1], f[2] # Pour la lisibilit\u00e9 AssertionError: Erreur: file pleine 1","title":"C2E1P"},{"location":"NSITerm/SD/C2E1P.html#exercice-1","text":"Reprendre la structure de pile du cours impl\u00e9ment\u00e9e avec des list de python et ajouter \u00e0 l'interface deux op\u00e9rations: vider(p) qui vide une pile p ; taille(p) qui renvoie la taille de la pile p . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 def creer_pile (): return [] def est_pilevide ( p ): return len ( p ) == 0 def depiler ( p ): # A compl\u00e9ter assert not est_pilevide ( p ), 'Erreur pile vide' v = p . pop () return v def empiler ( p , val ): # A compl\u00e9ter p . append ( val ) def sommet ( p ): # A compl\u00e9ter assert not est_pilevide ( p ), 'Erreur pile vide' return p [ - 1 ] def vider ( p ): p . clear () def taille ( p ): return len ( p ) 1 2 3 4 5 6 p1 = creer_pile () empiler ( p1 , 10 ) empiler ( p1 , 1 ) empiler ( p1 , 5 ) empiler ( p1 , 4 ) est_pilevide ( p1 ) 1 False 1 2 3 print ( sommet ( p1 )) vider ( p1 ) print ( est_pilevide ( p1 )) 1 2 4 True","title":"Exercice 1"},{"location":"NSITerm/SD/C2E1P.html#exercice-2-notation-polonaise-inverse","text":"L' \u00e9criture polonaise inverse des expressions arithm\u00e9tiques place l'op\u00e9rateur apr\u00e8s ses op\u00e9randes. Cette notation ne n\u00e9cessite aucune parenth\u00e8se, ni aucune r\u00e8gle de priorit\u00e9. Ainsi l'expression polonaise inverse d\u00e9crite par la cha\u00eene de caract\u00e8res 1 2 3 * + 4 * d\u00e9signe l\u2019expression traditionnellement not\u00e9e \\((1+ 2 \\times 3)\\times 4\\) . La valeur d\u2019une telle expression peut \u00eatre calcul\u00e9e facilement en utilisant une pile pour stocker les r\u00e9sultats interm\u00e9diaires. Pour cela, on parcours un \u00e0 un les \u00e9l\u00e9ments de l'expression et on effectue les actions suivantes: si on trouve un nombre, on l'empile; si on trouve un op\u00e9rateur binaire, on d\u00e9pile le dernier et l'avant dernier nombre, on leur applique l\u2019op\u00e9rateur, et on empile r\u00e9sultat. Si l'expression \u00e9tait bien \u00e9crite, il y a bien toujours deux nombres sur la pile lorsque l\u2019on voit un op\u00e9rateur, et \u00e0 la fin du processus il reste exactement un nombre sur la pile, qui est le r\u00e9sultat . \u00c9crire une fonction prenant en param\u00e8tre une cha\u00eene de caract\u00e8res repr\u00e9sentant une expression en notation polonaise inverse compos\u00e9e d\u2019additions et de de multiplications de nombres entiers et renvoyant la valeur de cette expression. On supposera que les \u00e9l\u00e9ments de l'expression sont s\u00e9par\u00e9s par des espaces. Attention, cette fonction ne doit pas renvoyer de r\u00e9sultat si l'expression est mal \u00e9crite . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 def npi ( c ): exp = c . split () p = creer_pile () for elt in exp : print ( f '----Examen de { elt } ' ) if elt . isdigit (): empiler ( p , int ( elt )) print ( f \"J'ai empil\u00e9 { int ( elt ) } \" ) print ( p ) elif elt in ( '+' , '*' ): a = depiler ( p ) print ( f \"J'ai d\u00e9pil\u00e9 { a } \" ) b = depiler ( p ) print ( f \"J'ai d\u00e9pil\u00e9 { b } \" ) r = a + b if elt == '+' else a * b empiler ( p , r ) print ( f \"J'ai empil\u00e9 { r } \" ) else : raise ValueError print () assert taille ( p ) == 1 , 'Mal \u00e9crit' return sommet ( p ) 1 npi ( '1 2 + 3 * 2 + 4 *' ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 ----Examen de 1 J'ai empil\u00e9 1 [1] ----Examen de 2 J'ai empil\u00e9 2 [1, 2] ----Examen de + J'ai d\u00e9pil\u00e9 2 J'ai d\u00e9pil\u00e9 1 J'ai empil\u00e9 3 ----Examen de 3 J'ai empil\u00e9 3 [3, 3] ----Examen de * J'ai d\u00e9pil\u00e9 3 J'ai d\u00e9pil\u00e9 3 J'ai empil\u00e9 9 ----Examen de 2 J'ai empil\u00e9 2 [9, 2] ----Examen de + J'ai d\u00e9pil\u00e9 2 J'ai d\u00e9pil\u00e9 9 J'ai empil\u00e9 11 ----Examen de 4 J'ai empil\u00e9 4 [11, 4] ----Examen de * J'ai d\u00e9pil\u00e9 4 J'ai d\u00e9pil\u00e9 11 J'ai empil\u00e9 44 44","title":"Exercice 2 - Notation polonaise inverse"},{"location":"NSITerm/SD/C2E1P.html#exercice-3-chaines-bien-parenthesees","text":"On consid\u00e8re consid\u00e8re une cha\u00eene de caract\u00e8res incluant \u00e0 la la fois fois des parenth\u00e8ses rondes ( et ) et des parenth\u00e8ses carr\u00e9es [ et ] . La cha\u00eene est bien parenth\u00e9s\u00e9e si chaque ouvrante est associ\u00e9e \u00e0 une unique fermante de m\u00eame forme, et r\u00e9ciproquement. \u00c9crire une fonction prenant en param\u00e8tre une cha\u00eene de caract\u00e8res contenant, entre autres, les parenth\u00e8ses d\u00e9crites et qui renvoie True si la cha\u00eene est bien parenth\u00e9s\u00e9e et False sinon. 1 2 3 4 5 6 7 8 9 10 11 12 par = { '(' : ')' , '[' : ']' } def est_bien_parent ( c ): p = creer_pile () for elt in c : if elt in par : empiler ( p , elt ) elif elt in par . values (): s = depiler ( p ) if s not in par or par [ s ] != elt : return False return taille ( p ) == 0 1 est_bien_parent ( '1*3+(2-[2/5])' ) 1 True","title":"Exercice 3 - Cha\u00eenes bien parenth\u00e9s\u00e9es"},{"location":"NSITerm/SD/C2E1P.html#exercice-4-file-bornee","text":"On propose ici une autre r\u00e9alisation possible d'une file born\u00e9e \u00e0 partir d'un tableau. La file sera rep\u00e9r\u00e9e par deux index tete et queue . On enfile par la queue et d\u00e9file par la t\u00eate. Soit \\(N\\) la capacit\u00e9 de la file. On pr\u00e9voit un tableau de taille \\(N+3\\) car on souhaite stocker \u00e9galement: la position de la t\u00eate (index 0); la position de la queue (index 1); la longueur effective de la file (index 3) La position de la queue indique l'endroit o\u00f9 sera enfil\u00e9e la prochaine donn\u00e9e. La figure (a) ci-dessous montre une file f de ce type et de capacit\u00e9 maximale 7, dans laquelle figurent d\u00e9j\u00e0 4 \u00e9l\u00e9ments. A partir de cette situation et apr\u00e8s les op\u00e9rations: 1 2 3 4 5 defiler ( f ) defiler ( f ) enfiler ( f , 4 ) enfiler ( f , 17 ) enfiler ( f , 10 ) on se trouve dans la situation (b). 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 MAXFILE = 8 # Capacit\u00e9 de la pile def creer_file ( n = MAXFILE ): return [ 3 , 3 , 0 ] + [ None ] * n def enfiler ( f , x ): assert not est_pleine ( f ), 'Erreur: file pleine' queue , taille = f [ 1 ], f [ 2 ] # Pour la lisibilit\u00e9 f [ queue ] = x f [ 2 ] = taille + 1 # la file comporte un elt suppl\u00e9mentaire # D\u00e9placement de la queue - mod\u00e8le circulaire if queue == len ( f ) - 1 : queue = 3 else : queue += 1 f [ 1 ] = queue def est_pleine ( f ): return f [ 2 ] == len ( f ) - 3 def est_vide ( f ): return f [ 2 ] == 0 def defiler ( f ): assert not est_vide ( f ), 'Erreur: file vide' tete = f [ 0 ] v = f [ tete ] f [ tete ] = None # Optionnel f [ 2 ] -= 1 # la file a un elt de moins # D\u00e9placement de la tete - mod\u00e8le circulaire if tete == len ( f ) - 1 : tete = 3 else : tete += 1 f [ 0 ] = tete return v 1 2 3 4 5 6 7 8 9 10 11 f = creer_file () #f[0], f[1], f[2] = 4, 8, 4 #f[4], f[5], f[6], f[7] = 15, 6, 9, 8 print ( f ) enfiler ( f , 3 ) print ( f ) enfiler ( f , - 1 ) print ( f ) enfiler ( f , 100 ) print ( f ) enfiler ( f , 8 ) 1 2 3 4 [3, 3, 0, None, None, None, None, None, None, None, None] [3, 4, 1, 3, None, None, None, None, None, None, None] [3, 5, 2, 3, -1, None, None, None, None, None, None] [3, 6, 3, 3, -1, 100, None, None, None, None, None] A partir des informations disponibles: dire combien d'op\u00e9rations sont autoris\u00e9es sur cette structure; r\u00e9diger leur sp\u00e9cification. Pr\u00e9voir les r\u00e9ponses de l'interpr\u00e9teur python apr\u00e8s les s\u00e9quences de commandes suivantes ( qui se suivent! ): S\u00e9quence 1 1 2 f1 = creer_file () est_filevide ( f1 ) S\u00e9quence 2 1 2 enfiler ( f1 , 5 ) est_filevide ( f1 ) S\u00e9quence 3 1 2 3 4 5 enfiler ( f1 , - 10 ) enfiler ( f1 , 25 ) enfiler ( f1 , - 35 ) while not est_filevide ( f1 ): print ( defiler ( f1 ), end = ' ' ) S\u00e9quence 4 1 2 3 4 5 f2 = creer_file ( 3 ) enfiler ( f2 , 10 ) enfiler ( f2 , 100 ) enfiler ( f2 , 1000 ) enfiler ( f2 , 50 ) Proposer une impl\u00e9mentation pour enfiler et defiler . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 f = creer_file ( 5 ) print ( f ) enfiler ( f , 5 ) #print(f) enfiler ( f , 10 ) #print(f) enfiler ( f , - 1 ) #print(f) print ( est_pleine ( f )) defiler ( f ) #print(f) defiler ( f ) #print(f) defiler ( f ) print ( f ) 1 2 3 [3, 3, 0, None, None, None, None, None] False [6, 6, 0, None, None, None, None, None] 1 2 f1 = creer_file () est_filevide ( f1 ) 1 True 1 2 enfiler ( f1 , 5 ) est_filevide ( f1 ) 1 False 1 2 3 4 5 enfiler ( f1 , - 10 ) enfiler ( f1 , 25 ) enfiler ( f1 , - 35 ) while not est_filevide ( f1 ): print ( defiler ( f1 ), end = ' ' ) 1 5 -10 25 -35 1 2 3 4 5 f2 = creer_file ( 3 ) enfiler ( f2 , 10 ) enfiler ( f2 , 100 ) enfiler ( f2 , 1000 ) enfiler ( f2 , 50 ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 --------------------------------------------------------------------------- AssertionError Traceback (most recent call last) <ipython-input-15-c43f6bea7b7e> in <module> 3 enfiler(f2, 100) 4 enfiler(f2, 1000) ----> 5 enfiler(f2, 50) <ipython-input-11-a90013406bf0> in enfiler(f, x) 6 7 def enfiler(f, x): ----> 8 assert not est_pleine(f), 'Erreur: file pleine' 9 10 queue, taille = f[1], f[2] # Pour la lisibilit\u00e9 AssertionError: Erreur: file pleine 1","title":"Exercice 4 - File born\u00e9e"},{"location":"NSITerm/SD/C3C1.html","text":"Vocabulaire de la programmation objet \u2693\ufe0e Introduction \u2693\ufe0e En python on ne manipule que des objets. On en a rencontr\u00e9 de plusieurs sortes depuis la classe de premi\u00e8re. Le type d'un objet peut \u00eatre obtenu avec la fonction ... type ! 1 2 3 4 5 6 7 ch = 'bonjour' print ( type ( ch )) < class ' str '> l = 3.1 print ( type ( l )) < class ' float '> M\u00eame si les types d'objets natifs de Python sont tr\u00e8s puissants, on pourra souvent \u00eatre amen\u00e9 \u00e0 en cr\u00e9er d'autres. Les paragraphes qui suivent ont pour objectif de: se familiariser avec tout le vocabulaire n\u00e9cessaire \u00e0 la compr\u00e9hension de la construction des objets; pr\u00e9senter les bases permettant de cr\u00e9er ses propres classes d'objets. Voyage en premi\u00e8re classe avec les objets \u2693\ufe0e Descritption d'une classe \u2693\ufe0e D\u00e9finition Une classe est une structure qui peut contenir des variables et des d\u00e9finitions de fonctions. On peut faire l'analogie avec une usine ayant des plans de construction et qui pourra donc construire des objets . Dans le cas le plus simple, en python on d\u00e9finit une classe avec le mot cl\u00e9 class suivi d'un nom de classe ( qu'on \u00e9crit avec une premi\u00e8re lettre en majuscule, par convention ) puis des : annon\u00e7ant l'arriv\u00e9e d'un bloc. Construisons notre premi\u00e8re classe. Il s'agit d'une classe permettant de construire des objets de type Rectangle . 1 2 3 4 5 6 class Rectangle : \"\"\" Une classe pour d\u00e9crire les rectangles\"\"\" def __init__ ( self , longueur , largeur ): self . long = longueur self . larg = largeur Une bonne habitude est de fournir une documentation. On trouve ensuite une d\u00e9finition de fonction __init__ qui sera d\u00e9taill\u00e9e plus loin. Cr\u00e9ation d'un objet \u2693\ufe0e Pour construire un objet de type Rectangle , on fait suivre le nom de la classe de la liste d'arguments attendus par __init__ sauf self . 1 Rectangle ( 2 , 6 ) 1 <__main__.Rectangle at 0x7f70f92fd220> L'interpr\u00e9teur nous informe qu'un objet a \u00e9t\u00e9 cr\u00e9\u00e9. N\u00e9anmoins, construire un objet de cette fa\u00e7on n'est pas tr\u00e8s utile. On va plut\u00f4t affecter l'objet cr\u00e9\u00e9 \u00e0 une variable. 1 2 r1 = Rectangle ( 6 , 4 ) r2 = Rectangle ( 5 , 2 ) La classe permet de cr\u00e9er des objets. Ce processus de cr\u00e9ation d'objet est appel\u00e9 instanciation et l'objet cr\u00e9\u00e9 est une instance de la classe. A ce stade, voici la situation relev\u00e9e avec Pythontutor . Chaque objet Rectangle cr\u00e9\u00e9 poss\u00e8de ses propres variables larg et long . Ce sont les attributs de l'objet. On dit aussi attributs d'instance . On peut acc\u00e9der aux attributs faisant partie de l'interface de l'objet avec la notation objet.attribut . 1 print ( r1 . larg ) 1 4 Les attributs des objets sont mutables en python. N\u00e9anmoins, on \u00e9vitera de recourir \u00e0 cette propri\u00e9t\u00e9 et on privil\u00e9giera l'interaction avec les objets via des m\u00e9thodes (voir ci-dessous). Manipuler les donn\u00e9es \u2693\ufe0e Supposons que l'on veuille calculer l'aire ou la diagonale du rectangle correspondant \u00e0 l'objet r1 . On peut utiliser les attributs de r1 . 1 2 3 4 from math import sqrt print ( \"A = \" , r1 . larg * r1 . long ) print ( \"d = \" , sqrt ( r1 . larg ** 2 + r1 . long ** 2 )) 1 2 A = 24 d = 7.211102550927978 Cependant, cela ne correspond pas au style de la programmation orient\u00e9e objet. C'est la classe qui doit se charger de d\u00e9finir les traitements possibles sur les objets. Cela se fait par le biais de m\u00e9thodes . D\u00e9finition Une m\u00e9thode est fonction rattach\u00e9e \u00e0 une classe. On peut compl\u00e9ter la classe rectangle. 1 2 3 4 5 6 7 8 9 10 11 12 class Rectangle : \"\"\" Une classe pour d\u00e9crire les rectangles\"\"\" def __init__ ( self , longueur , largeur ): self . long = longueur self . larg = largeur def surface ( self ): return self . long * self . larg def diagonale ( self ): return sqrt ( self . larg ** 2 + self . long ** 2 ) 1 2 r1 = Rectangle ( 6 , 4 ) print ( \"A =\" , r1 . surface (), \"; d =\" , r1 . diagonale ()) 1 A = 24 ; d = 7.211102550927978 Une m\u00e9thode destin\u00e9e \u00e0 manipuler les objets se d\u00e9finit dans la classe comme une fonction ordinaire. L'interpr\u00e9teur le confirme. 1 Rectangle . surface 1 <function __main__.Rectangle.surface(self)> Par contre, on doit imp\u00e9rativement d\u00e9finir comme premier param\u00e8tre self . Il s'agit d'une r\u00e9f\u00e9rence vers l'objet sur lequel on op\u00e8re. Remarque self est juste une convention adopt\u00e9e par la communaut\u00e9 python, on aurait pu nommer ce param\u00e8tre autrement. Lors de l'appel de la m\u00e9thode sur l'objet, on ne fait pas appara\u00eetre self . En r\u00e9alit\u00e9, quand on \u00e9crit r1.surface() , c'est un raccourci pour Rectangle.surface(r1) o\u00f9 r1 est associ\u00e9 \u00e0 self . M\u00e9thodes sp\u00e9ciales \u2693\ufe0e Lors de la cr\u00e9ation d'un objet, python appelle automatiquement deux m\u00e9thodes sp\u00e9ciales. L'une d'entre elle __init__ est charg\u00e9e d'initialiser les attributs de l'objet. Son premier param\u00e8tre est aussi self . Il existe d'autres m\u00e9thodes sp\u00e9ciales, reconnaissables \u00e0 leur syntaxe: elles commencent et se terminent par un double soulign\u00e9 ( underscore en anglais) __ . Elles ne sont pas sp\u00e9cifiquement au programmes de NSI mais seront quelques fois rencontr\u00e9es dans des exercices. A titre d'exemple, montrons une utilisation de la m\u00e9thode __str__ qui est automatiquement appel\u00e9 par print . 1 2 # Affichage de l'objet r1 print ( r1 ) 1 <__main__.Rectangle object at 0x7f70e36f0490> Ce n'est pas tr\u00e8s explicite, on va d\u00e9finir la m\u00e9thode __str__ . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class Rectangle : \"\"\" Une classe pour d\u00e9crire les rectangles\"\"\" def __init__ ( self , longueur , largeur ): self . long = longueur self . larg = largeur def surface ( self ): return self . long * self . larg def diagonale ( self ): return sqrt ( self . larg ** 2 + self . long ** 2 ) def __str__ ( self ): return f 'Rect( { self . long } X { self . larg } )' 1 2 r2 = Rectangle ( 8 , 3 ) print ( r2 ) 1 Rect(8 X 3)","title":"Cours"},{"location":"NSITerm/SD/C3C1.html#vocabulaire-de-la-programmation-objet","text":"","title":"Vocabulaire de la programmation objet"},{"location":"NSITerm/SD/C3C1.html#introduction","text":"En python on ne manipule que des objets. On en a rencontr\u00e9 de plusieurs sortes depuis la classe de premi\u00e8re. Le type d'un objet peut \u00eatre obtenu avec la fonction ... type ! 1 2 3 4 5 6 7 ch = 'bonjour' print ( type ( ch )) < class ' str '> l = 3.1 print ( type ( l )) < class ' float '> M\u00eame si les types d'objets natifs de Python sont tr\u00e8s puissants, on pourra souvent \u00eatre amen\u00e9 \u00e0 en cr\u00e9er d'autres. Les paragraphes qui suivent ont pour objectif de: se familiariser avec tout le vocabulaire n\u00e9cessaire \u00e0 la compr\u00e9hension de la construction des objets; pr\u00e9senter les bases permettant de cr\u00e9er ses propres classes d'objets.","title":"Introduction"},{"location":"NSITerm/SD/C3C1.html#voyage-en-premiere-classe-avec-les-objets","text":"","title":"Voyage en premi\u00e8re classe avec les objets"},{"location":"NSITerm/SD/C3E1.html","text":"Vocabulaire de la programmation objet - Manipuler des classes \u2693\ufe0e Le vocabulaire \u2693\ufe0e Donner la d\u00e9finition des termes apparaissant en gras dans la consigne ci-dessous. Il existe dans la librairie standard un module nomm\u00e9 datetime qui permet de manipuler les dates. Il impl\u00e9mente notamment une classe date ( voir help(datetime.date) pour une description plus compl\u00e8te ). Des objets de type date seront instanci\u00e9s en utilisant la syntaxe date(annee, mois, jour) ( voir exemple ci-dessous ). Une date poss\u00e8de des attributs int\u00e9ressants: year , month et day dont les noms sont suffisamment explicites. Enfin, la date du jour peut \u00eatre obtenue avec la m\u00e9thode today . 1 2 3 4 5 6 7 from datetime import date d = date ( 2000 , 12 , 1 ) # le 1er d\u00e9cembre 2000 print ( d . day ) # le jour print ( d . month ) # le mois print ( d . year ) # l'ann\u00e9e print ( date . today ()) 1 2 3 4 1 12 2000 2021-07-30 1 2 3 import inspect print ( inspect . getsource ( date )) Une classe Personne \u2693\ufe0e Cr\u00e9er une classe Personne qui initialisera les instances avec 3 param\u00e8tres: nom , prenom et une date de naissance nais . Cette classe fournit une m\u00e9thode age qui renvoie l'age de la personne. Cr\u00e9er un objet p1 de type Personne qui sera initialis\u00e9 avec les informations suivantes: 'Bob' , 'Leponge' n\u00e9 le 17 juillet 1999 . Donner alors son \u00e2ge. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # R\u00e9ponses # Cellule \u00e0 compl\u00e9ter from datetime import date class Personne : \"\"\"Informations personnelles sur une personne\"\"\" def __init__ ( self , nom , prenom , dnais ): pass # \u00e0 compl\u00e9ter - SUPPRIMER la ligne contenant l'instruction 'pass' !! def age ( self ): d = date . today () # \u00e0 compl\u00e9ter Une classe Article \u2693\ufe0e Compl\u00e9ter la cellule suivante dans laquelle on devra cr\u00e9er une classe Article qui initialisera les objets instanci\u00e9s avec les param\u00e8tres ref , prixHT , et tva . Cette classe impl\u00e9mentera les m\u00e9thodes: prixTTC qui renvoie le prix TTC calcul\u00e9 de la mani\u00e8re suivante: prixHT + prixHT*tva/100 ; affiche qui affiche toutes la r\u00e9f\u00e9rence de l'article, son prix HT et son prixTTC. Tester ( avec une TVA \u00e0 20% par exemple ). 1 2 3 4 5 6 7 8 9 10 11 # R\u00e9ponses # Cellule \u00e0 compl\u00e9ter class Article : \"\"\"Une classe pour manipuler les caract\u00e9ristiques des articles\"\"\" #def __init__(...): #def prixTTC(...): #def affiche(...): Compte bancaire \u2693\ufe0e On d\u00e9finit compte bancaire par la donn\u00e9e: d'un nom et d'un pr\u00e9nom d'un num\u00e9ro de compte d'un solde initial de 50 (la banque offre 50\u20ac de bienvenue pour l'ouverture d'un compte) Par ailleurs, le titulaire peut d\u00e9biter son compte, le cr\u00e9diter ou le consulter ( c-\u00e0-d obtenir la valeur du solde ). Attention, on ne peut d\u00e9biter son compte que si son solde le permet ! Ecrire et tester une classe CompteBancaire qui r\u00e9pond \u00e0 ce cahier des charges.","title":"Exercices 1"},{"location":"NSITerm/SD/C3E1.html#vocabulaire-de-la-programmation-objet-manipuler-des-classes","text":"","title":"Vocabulaire de la programmation objet - Manipuler des classes"},{"location":"NSITerm/SD/C3E1.html#le-vocabulaire","text":"Donner la d\u00e9finition des termes apparaissant en gras dans la consigne ci-dessous. Il existe dans la librairie standard un module nomm\u00e9 datetime qui permet de manipuler les dates. Il impl\u00e9mente notamment une classe date ( voir help(datetime.date) pour une description plus compl\u00e8te ). Des objets de type date seront instanci\u00e9s en utilisant la syntaxe date(annee, mois, jour) ( voir exemple ci-dessous ). Une date poss\u00e8de des attributs int\u00e9ressants: year , month et day dont les noms sont suffisamment explicites. Enfin, la date du jour peut \u00eatre obtenue avec la m\u00e9thode today . 1 2 3 4 5 6 7 from datetime import date d = date ( 2000 , 12 , 1 ) # le 1er d\u00e9cembre 2000 print ( d . day ) # le jour print ( d . month ) # le mois print ( d . year ) # l'ann\u00e9e print ( date . today ()) 1 2 3 4 1 12 2000 2021-07-30 1 2 3 import inspect print ( inspect . getsource ( date ))","title":"Le vocabulaire"},{"location":"NSITerm/SD/C3E1.html#une-classe-personne","text":"Cr\u00e9er une classe Personne qui initialisera les instances avec 3 param\u00e8tres: nom , prenom et une date de naissance nais . Cette classe fournit une m\u00e9thode age qui renvoie l'age de la personne. Cr\u00e9er un objet p1 de type Personne qui sera initialis\u00e9 avec les informations suivantes: 'Bob' , 'Leponge' n\u00e9 le 17 juillet 1999 . Donner alors son \u00e2ge. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # R\u00e9ponses # Cellule \u00e0 compl\u00e9ter from datetime import date class Personne : \"\"\"Informations personnelles sur une personne\"\"\" def __init__ ( self , nom , prenom , dnais ): pass # \u00e0 compl\u00e9ter - SUPPRIMER la ligne contenant l'instruction 'pass' !! def age ( self ): d = date . today () # \u00e0 compl\u00e9ter","title":"Une classe Personne"},{"location":"NSITerm/SD/C3E1.html#une-classe-article","text":"Compl\u00e9ter la cellule suivante dans laquelle on devra cr\u00e9er une classe Article qui initialisera les objets instanci\u00e9s avec les param\u00e8tres ref , prixHT , et tva . Cette classe impl\u00e9mentera les m\u00e9thodes: prixTTC qui renvoie le prix TTC calcul\u00e9 de la mani\u00e8re suivante: prixHT + prixHT*tva/100 ; affiche qui affiche toutes la r\u00e9f\u00e9rence de l'article, son prix HT et son prixTTC. Tester ( avec une TVA \u00e0 20% par exemple ). 1 2 3 4 5 6 7 8 9 10 11 # R\u00e9ponses # Cellule \u00e0 compl\u00e9ter class Article : \"\"\"Une classe pour manipuler les caract\u00e9ristiques des articles\"\"\" #def __init__(...): #def prixTTC(...): #def affiche(...):","title":"Une classe Article"},{"location":"NSITerm/SD/C3E1.html#compte-bancaire","text":"On d\u00e9finit compte bancaire par la donn\u00e9e: d'un nom et d'un pr\u00e9nom d'un num\u00e9ro de compte d'un solde initial de 50 (la banque offre 50\u20ac de bienvenue pour l'ouverture d'un compte) Par ailleurs, le titulaire peut d\u00e9biter son compte, le cr\u00e9diter ou le consulter ( c-\u00e0-d obtenir la valeur du solde ). Attention, on ne peut d\u00e9biter son compte que si son solde le permet ! Ecrire et tester une classe CompteBancaire qui r\u00e9pond \u00e0 ce cahier des charges.","title":"Compte bancaire"},{"location":"NSITerm/SD/C3E2.html","text":"Impl\u00e9mentation des piles et files avec des classes \u2693\ufe0e Les piles \u2693\ufe0e On se propose de cr\u00e9er une classe Pile r\u00e9pondant \u00e0 l'interface suivante: Op\u00e9ration Description est_vide() renvoie un bool\u00e9en correspondant \u00e0 l'\u00e9tat de la pile empiler(x) empile la valeur x; depiler() renvoie le sommet de la pile SI elle est non vide La cr\u00e9ation d'une pile vide (initialisation) se fera avec un objet de type list de python, vide. On pourra utiliser les m\u00e9thodes pop et append. R\u00e9-\u00e9crire la m\u00e9thode __str__ de mani\u00e8re \u00e0 ce qu'apr\u00e8s les op\u00e9rations suivantes: 1 2 3 4 5 p = Pile () p . empiler ( 4 ) p . empiler ( 8 ) p . empiler ( 12 ) print ( p ) on obtienne une sortie du genre: 1 2 3 4 12 <- Sommet 8 4 ____________ Les files \u2693\ufe0e Impl\u00e9menter une classe File avec deux piles.","title":"Exercices 2"},{"location":"NSITerm/SD/C3E2.html#implementation-des-piles-et-files-avec-des-classes","text":"","title":"Impl\u00e9mentation des piles et files avec des classes"},{"location":"NSITerm/SD/C3E2.html#les-piles","text":"On se propose de cr\u00e9er une classe Pile r\u00e9pondant \u00e0 l'interface suivante: Op\u00e9ration Description est_vide() renvoie un bool\u00e9en correspondant \u00e0 l'\u00e9tat de la pile empiler(x) empile la valeur x; depiler() renvoie le sommet de la pile SI elle est non vide La cr\u00e9ation d'une pile vide (initialisation) se fera avec un objet de type list de python, vide. On pourra utiliser les m\u00e9thodes pop et append. R\u00e9-\u00e9crire la m\u00e9thode __str__ de mani\u00e8re \u00e0 ce qu'apr\u00e8s les op\u00e9rations suivantes: 1 2 3 4 5 p = Pile () p . empiler ( 4 ) p . empiler ( 8 ) p . empiler ( 12 ) print ( p ) on obtienne une sortie du genre: 1 2 3 4 12 <- Sommet 8 4 ____________","title":"Les piles"},{"location":"NSITerm/SD/C3E2.html#les-files","text":"Impl\u00e9menter une classe File avec deux piles.","title":"Les files"},{"location":"NSITerm/SD/C6C1.html","text":"Le TAD liste - Exemples d'impl\u00e9mentation \u2693\ufe0e TAD pour T ype A bstrait de D onn\u00e9es: description d\u2019un ensemble organis\u00e9 d\u2019objets et des op\u00e9rations de manipulation sur cet ensemble ( Jean Berstel dans \u00c9l\u00e9ments d'algorithmique page 38). Rep\u00e8re historique \u2693\ufe0e John McCarthy , prix Turing en 1971, cr\u00e9a en 1958 le langage Lisp qui signifie LIS t P rocessor. Les listes constituent le fondement de Lisp. Introduction \u2693\ufe0e D\u00e9finitions Une liste est une collection finie d\u2019\u00e9l\u00e9ments qui se suivent. C\u2019est une structure de donn\u00e9es lin\u00e9aire . Une liste qui ne contient aucun \u00e9l\u00e9ment est une liste vide . Les doublons sont possibles. On formalisera cette d\u00e9finition dans un premier temps, avant de donner des impl\u00e9mentations possibles des op\u00e9rations fondamentales sur les listes. Exemples liste des gaz nobles dans l'ordre de leur masse atomique: [h\u00e9lium, n\u00e9on, argon, krypton, x\u00e9non, radon]; liste des nombres de jour des mois d'une ann\u00e9e non bissextile: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31] Comment formaliser une liste ? \u2693\ufe0e Supposons une liste compos\u00e9e de trois \u00e9l\u00e9ments, ici des entiers: \\(\\ell = [3, 7, 9]\\) . Une fa\u00e7on de d\u00e9crire cette liste consiste \u00e0 voir \\(\\ell\\) comme l'association: d'un premier \u00e9l\u00e9ment 3 qu\u2019on nomme \u00e9l\u00e9ment de t\u00eate; et d'une liste \\(\\ell_1 = [7, 9]\\) des \u00e9l\u00e9ments qui suivent (liste qu\u2019on nomme souvent reste ). Cette description de \\(\\ell\\) est aussi valable pour \\(\\ell_1\\) qui est constitu\u00e9e: d\u2019un \u00e9l\u00e9ment de t\u00eate : 7, et d\u2019un reste : \\(\\ell_2 = [9]\\) . De la m\u00eame fa\u00e7on que pr\u00e9c\u00e9demment, la liste \\(\\ell_2\\) est constitu\u00e9e: d\u2019un \u00e9l\u00e9ment de t\u00eate : 9, et d\u2019un reste : \\(\\ell_3 = []\\) . La liste \\(\\ell_3\\) \u00e9tant vide, elle ne poss\u00e8de pas d\u2019\u00e9lement de t\u00eate, et ne peut donc pas \u00eatre d\u00e9compos\u00e9e comme nous venons de le faire \u00e0 trois reprises. D\u00e9finition Une liste \\(\\ell\\) d'\u00e9l\u00e9ments d'un ensemble \\(E\\) , est: soit une liste vide; soit un couple \\((x,L)\\) form\u00e9 d'un \u00e9l\u00e9ment de t\u00eate \\(x\\in E\\) et d'une liste \\(L\\) d'\u00e9l\u00e9ments de \\(E\\) : Cette d\u00e9finition est r\u00e9cursive. Op\u00e9rations sur les listes \u2693\ufe0e Parmi les op\u00e9rations fondamentales sur les listes, on peut citer celles mises en \u00e9vidence ci-dessous. Op\u00e9rations cr\u00e9ation d'une liste vide; construction d'une liste \u00e0 partir d'un \u00e9l\u00e9ment et d'une autre liste; test d'une liste afin de savoir si elle est vide ou pas; pour une liste non vide, r\u00e9cup\u00e9ration de la t\u00eate et du reste (on dit aussi queue ). Structures concr\u00e8tes \u2693\ufe0e Une liste peut \u00eatre impl\u00e9ment\u00e9e de diff\u00e9rentes fa\u00e7ons. On verra ici rapidement une r\u00e9alisation \u00e0 base de couples, puis, de mani\u00e8re plus d\u00e9taill\u00e9e, une impl\u00e9mentation \u00e0 base d'\u00e9l\u00e9ments cha\u00een\u00e9s entre eux. R\u00e9alisation avec des couples \u2693\ufe0e ### Lancer # TESTSbksl-nlpremiers = cons(2, cons(3, cons(5, cons(7, listepy-undvide()))))bksl-nlassert tete(premiers) == 2, \"tete(premiers) == 2\"bksl-nlassert queue(premiers) == (3, (5, (7, None))), \"queue(premiers) == (3, (5, (7, None)))\"bksl-nlassert estpy-undvide(premiers) == False, \"estpy-undvide(premiers)\"bksl-nlbksl-nl Valider 5/5 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder def listepy-undvide():bksl-nl return Nonebksl-nlbksl-nldef cons(e, l):bksl-nl \"\"\" Construit une liste \u00e0 partir d'un \u00e9l\u00e9ment e et d'une liste l\"\"\"bksl-nl return (e, l)bksl-nlbksl-nldef tete(l):bksl-nl \"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\"bksl-nl assert l is not None, \"tete: erreur liste vide\"bksl-nl return l[0]bksl-nlbksl-nldef queue(l):bksl-nl \"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\"bksl-nl assert l is not None, \"queue: erreur liste vide\"bksl-nl return l[1]bksl-nlbksl-nldef estpy-undvide(l):bksl-nl return l is Nonebksl-nlbksl-nl# TESTSbksl-nlpremiers = cons(2, cons(3, cons(5, cons(7, listepy-undvide()))))bksl-nlprint(tete(premiers))bksl-nlprint(queue(premiers))bksl-nlprint(estpy-undvide(premiers))bksl-nlbksl-nl A Z Insertion L'insertion d'un \u00e9l\u00e9ment \u00e0 l'int\u00e9rieur de la liste, pas tr\u00e8s pratique, est laiss\u00e9e en guise d'exercice. R\u00e9alisation avec des listes cha\u00een\u00e9es \u2693\ufe0e Dans cette r\u00e9alisation concr\u00e8te d'une liste, les \u00e9l\u00e9ments sont cha\u00een\u00e9s entre eux. Chaque \u00e9l\u00e9ment, qu'on nomme habituellement cellule ou maillon en fran\u00e7ais ( Node en anglais), contient une valeur ou cl\u00e9 et une r\u00e9f\u00e9rence ( qui peut \u00eatre vue comme l'adresse m\u00e9moire ) vers la cellule suivante. On va repr\u00e9senter une cellule par une classe Cell en python. 1 2 3 4 5 6 class Cell : \"\"\" Une classe pour d\u00e9crire une cellule (maillon) d'une liste chain\u00e9e\"\"\" def __init__ ( self , v , s ): self . cle = v self . suiv = s La construction d'une liste ressemble beaucoup \u00e0 la r\u00e9alisation par couple. La liste sch\u00e9matis\u00e9e ci-dessus est obtenue par: 1 lst = Cell ( 3 , Cell ( 7 , Cell ( 9 , None ))) On remarque que la liste vide est obtenue avec None . La t\u00eate et la queue d'une liste cha\u00een\u00e9e peuvent \u00eatre obtenues avec les fonctions suivantes: 1 2 3 4 5 6 7 8 9 def tete ( l ): \"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\" assert not est_vide ( l ), \"tete: erreur liste vide\" return l . cle def queue ( l ): \"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\" assert not est_vide ( l ), \"queue: erreur liste vide\" return l . suiv Dans un IDE: ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule (maillon) d'une liste chain\u00e9e\"\"\"bksl-nlbksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.cle = vbksl-nl self.suiv = sbksl-nl bksl-nldef estpy-undvide(l):bksl-nl return l is Nonebksl-nl bksl-nldef tete(l):bksl-nl \"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\"bksl-nl assert not estpy-undvide(l), \"tete: erreur liste vide\"bksl-nl return l.clebksl-nlbksl-nldef queue(l):bksl-nl \"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\"bksl-nl assert not estpy-undvide(l), \"queue: erreur liste vide\"bksl-nl return l.suivbksl-nl bksl-nllst = Cell(3, Cell(7, Cell(9, None)))bksl-nlprint(estpy-undvide(lst))bksl-nlprint(tete(lst))bksl-nlprint(queue(lst))bksl-nlprint(tete(queue(lst)))bksl-nlbksl-nl A Z Autres op\u00e9rations sur les listes \u2693\ufe0e Longueur d'une liste \u2693\ufe0e Une premi\u00e8re possibilit\u00e9 est d'\u00e9crire une fonction r\u00e9cursive: si la liste est vide, sa longueur est nulle; sinon sa longueur vaut 1 plus la longueur de la liste suivante ( rappel: une liste est un \u00e9l\u00e9ment suivi d'une autre liste, la queue ). 1 2 3 4 5 6 7 def longueur ( l ): \"\"\" renvoie la longueur d'une liste l\"\"\" if est_vide ( l ): return 0 else : return 1 + longueur ( queue ( l )) 1 2 print ( longueur ( lst )) print ( longueur ( queue ( lst ))) 1 2 3 2 Seconde possibilit\u00e9: \u00c0 faire \u00c9crire une version it\u00e9rative de la fonction longueur . 1 2 3 4 5 def longueur_iter ( l ): \"\"\" Version it\u00e9rative de la fonction 'longueur' \"\"\" # Supprimer l'instruction pass et proposer votre code pass Le co\u00fbt en temps est proportionnel \u00e0 la taille \\(n\\) de la liste (complexit\u00e9 temporelle en \\(\\mathcal{O}(n)\\) ). Acc\u00e9der au n-i\u00e8me \u00e9l\u00e9ment \u2693\ufe0e On souhaite acc\u00e9der \u00e0 la cl\u00e9 (avoir la valeur) de l'\u00e9l\u00e9ment d'index \\(k\\) d'une liste lst avec une fonction kieme(k, lst) . On peut proc\u00e8der encore une fois de mani\u00e8re r\u00e9cursive: si \\(k=0\\) , on renvoie simplement la t\u00eate de lst ; sinon, on renvoie la cl\u00e9 de l'\u00e9l\u00e9ment d'index \\((k-1)\\) de la queue de lst . \u00c9videmment acc\u00e9der \u00e0 l'\u00e9l\u00e9ment d'index \\(k\\) n'est pas d\u00e9fini pour une liste vide. \u00c0 faire \u00c9crire la fonction 1 2 3 4 5 6 7 8 def kieme ( k , lst ): \"\"\" renvoie la cl\u00e9 du k-i\u00e8me \u00e9l\u00e9ment de la liste lst; k: entier naturel, lst: liste non vide \"\"\" assert not est_vide ( lst ), \"Erreur: acc\u00e8s impossible\" # Compl\u00e9ter avec votre code Le pire des cas se produit pour un acc\u00e8s \u00e0 la cl\u00e9 de la derni\u00e8re cellule. Dans ce cas, le co\u00fbt en temps est proportionnel \u00e0 la taille \\(n\\) de la liste (complexit\u00e9 temporelle en \\(\\mathcal{O}(n)\\) ). Ins\u00e9rer ou supprimer un \u00e9l\u00e9ment \u2693\ufe0e \u00c0 faire Voir exercice 1 de la fiche d'exercices","title":"Cours"},{"location":"NSITerm/SD/C6C1.html#le-tad-liste-exemples-dimplementation","text":"TAD pour T ype A bstrait de D onn\u00e9es: description d\u2019un ensemble organis\u00e9 d\u2019objets et des op\u00e9rations de manipulation sur cet ensemble ( Jean Berstel dans \u00c9l\u00e9ments d'algorithmique page 38).","title":"Le TAD liste - Exemples d'impl\u00e9mentation"},{"location":"NSITerm/SD/C6C1.html#repere-historique","text":"John McCarthy , prix Turing en 1971, cr\u00e9a en 1958 le langage Lisp qui signifie LIS t P rocessor. Les listes constituent le fondement de Lisp.","title":"Rep\u00e8re historique"},{"location":"NSITerm/SD/C6C1.html#introduction","text":"D\u00e9finitions Une liste est une collection finie d\u2019\u00e9l\u00e9ments qui se suivent. C\u2019est une structure de donn\u00e9es lin\u00e9aire . Une liste qui ne contient aucun \u00e9l\u00e9ment est une liste vide . Les doublons sont possibles. On formalisera cette d\u00e9finition dans un premier temps, avant de donner des impl\u00e9mentations possibles des op\u00e9rations fondamentales sur les listes. Exemples liste des gaz nobles dans l'ordre de leur masse atomique: [h\u00e9lium, n\u00e9on, argon, krypton, x\u00e9non, radon]; liste des nombres de jour des mois d'une ann\u00e9e non bissextile: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]","title":"Introduction"},{"location":"NSITerm/SD/C6C1.html#comment-formaliser-une-liste","text":"Supposons une liste compos\u00e9e de trois \u00e9l\u00e9ments, ici des entiers: \\(\\ell = [3, 7, 9]\\) . Une fa\u00e7on de d\u00e9crire cette liste consiste \u00e0 voir \\(\\ell\\) comme l'association: d'un premier \u00e9l\u00e9ment 3 qu\u2019on nomme \u00e9l\u00e9ment de t\u00eate; et d'une liste \\(\\ell_1 = [7, 9]\\) des \u00e9l\u00e9ments qui suivent (liste qu\u2019on nomme souvent reste ). Cette description de \\(\\ell\\) est aussi valable pour \\(\\ell_1\\) qui est constitu\u00e9e: d\u2019un \u00e9l\u00e9ment de t\u00eate : 7, et d\u2019un reste : \\(\\ell_2 = [9]\\) . De la m\u00eame fa\u00e7on que pr\u00e9c\u00e9demment, la liste \\(\\ell_2\\) est constitu\u00e9e: d\u2019un \u00e9l\u00e9ment de t\u00eate : 9, et d\u2019un reste : \\(\\ell_3 = []\\) . La liste \\(\\ell_3\\) \u00e9tant vide, elle ne poss\u00e8de pas d\u2019\u00e9lement de t\u00eate, et ne peut donc pas \u00eatre d\u00e9compos\u00e9e comme nous venons de le faire \u00e0 trois reprises. D\u00e9finition Une liste \\(\\ell\\) d'\u00e9l\u00e9ments d'un ensemble \\(E\\) , est: soit une liste vide; soit un couple \\((x,L)\\) form\u00e9 d'un \u00e9l\u00e9ment de t\u00eate \\(x\\in E\\) et d'une liste \\(L\\) d'\u00e9l\u00e9ments de \\(E\\) : Cette d\u00e9finition est r\u00e9cursive.","title":"Comment formaliser une liste ?"},{"location":"NSITerm/SD/C6C1.html#operations-sur-les-listes","text":"Parmi les op\u00e9rations fondamentales sur les listes, on peut citer celles mises en \u00e9vidence ci-dessous. Op\u00e9rations cr\u00e9ation d'une liste vide; construction d'une liste \u00e0 partir d'un \u00e9l\u00e9ment et d'une autre liste; test d'une liste afin de savoir si elle est vide ou pas; pour une liste non vide, r\u00e9cup\u00e9ration de la t\u00eate et du reste (on dit aussi queue ).","title":"Op\u00e9rations sur les listes"},{"location":"NSITerm/SD/C6C1.html#structures-concretes","text":"Une liste peut \u00eatre impl\u00e9ment\u00e9e de diff\u00e9rentes fa\u00e7ons. On verra ici rapidement une r\u00e9alisation \u00e0 base de couples, puis, de mani\u00e8re plus d\u00e9taill\u00e9e, une impl\u00e9mentation \u00e0 base d'\u00e9l\u00e9ments cha\u00een\u00e9s entre eux.","title":"Structures concr\u00e8tes"},{"location":"NSITerm/SD/C6E1.html","text":"Du type abstrait \u00e0 la structure de donn\u00e9e Liste : Exercices \u2693\ufe0e L'utilisation de l'\u00e9diteur int\u00e9gr\u00e9 \u00e0 la page est largement envisageable pour toute solution it\u00e9rative. L'utilisation de la r\u00e9cursion est ... un peu lente ! On pourrait \u00e9galement choisir de t\u00e9l\u00e9charger le script, en utilisant le bouton \u00e0 cet effet et l'inclure dans un notebook ... Exercice 1 Insertion / Suppression \u2693\ufe0e On reprend la r\u00e9alisation d'une liste cha\u00een\u00e9e du cours et on se propose d'ajouter \u00e0 l'ensemble des op\u00e9rations, l'insertion et la suppression d'un \u00e9l\u00e9ment \u00e0 un index donn\u00e9. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Cell : \"\"\" Une classe pour d\u00e9crire une cellule (maillon) d'une liste chain\u00e9e\"\"\" def __init__ ( self , v , s ): self . cle = v self . suiv = s def est_vide ( l ): return l is None def tete ( l ): \"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\" assert l is not None , \"tete: erreur liste vide\" return l . cle def queue ( l ): \"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\" assert not est_vide ( l ), \"queue: erreur liste vide\" return l . suiv 1. \u00c9crire une fonction inserer qui prend pour param\u00e8tres un \u00e9l\u00e9ment x , une position k , une liste cha\u00een\u00e9e non vide lst et qui va ins\u00e8rer x \u00e0 l'index k de la liste lst . 1 2 3 4 5 6 def inserer ( x , k , lst ): \"\"\" Ins\u00e8re x \u00e0 l'index k de la liste lst non vide. Ne renvoie rien: lst est modifi\u00e9! \"\"\" pass ### Lancer lst = Cell(3, Cell(7, Cell(9, Cell(0, None))))bksl-nlinserer(-1, 3, lst)bksl-nlbksl-nlassert tete(lst) == 3bksl-nlassert tete(queue(queue(queue(lst)))) == -1bksl-nlinserer(1000, 0, lst)bksl-nlassert tete(lst) == 1000bksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule (maillon) d'une liste chain\u00e9e\"\"\"bksl-nlbksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.cle = vbksl-nl self.suiv = sbksl-nlbksl-nldef estpy-undvide(l):bksl-nl return l is Nonebksl-nlbksl-nldef tete(l):bksl-nl \"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\"bksl-nl assert l is not None, \"tete: erreur liste vide\"bksl-nl return l.clebksl-nlbksl-nldef queue(l):bksl-nl \"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\"bksl-nl assert not estpy-undvide(l), \"queue: erreur liste vide\"bksl-nl return l.suivbksl-nlbksl-nl# A compl\u00e9terbksl-nldef inserer(x, k, lst):bksl-nl \"\"\" bksl-nl Ins\u00e8re x \u00e0 l'index k de la liste lst non vide.bksl-nl Ne renvoie rien: lst est modifi\u00e9!bksl-nl \"\"\"bksl-nl passbksl-nlbksl-nl def inserer(x, k, lst):bksl-nl \"\"\" Ins\u00e8re x \u00e0 l'index k de la liste lst non vide.bksl-nl Ne renvoie rien: lst est modifi\u00e9!bksl-nl \"\"\"bksl-nl if k == 0: # il s'agit d'une insertion en t\u00eatebksl-nl c = Cell(tete(lst), queue(lst))bksl-nl lst.cle = xbksl-nl lst.suiv = cbksl-nl else:bksl-nl ## 1) Initialisation des variables utiles## bksl-nl # compteur pour trouver l'index d'insertionbksl-nl pos = 1 bksl-nl bksl-nl # 2 pointeurs 'precedent' et 'cellpy-undapy-unddecaler'bksl-nl # ---+--------+---+-----+...bksl-nl # | xk-1 | xk| xk+1|...bksl-nl # ---+--------+---+-----+...bksl-nl # ^ ^ bksl-nl # | |bksl-nl #cell. prec cell. \u00e0 d\u00e9caler (pour l'insertion)bksl-nl # bksl-nl precedent = lstbksl-nl cellpy-undapy-unddecaler = queue(lst)bksl-nl # Cr\u00e9ation de la cellule \u00e0 ins\u00e9rerbksl-nl cellpy-undapy-undinserer = Cell(x, None)bksl-nl bksl-nl # 2) D\u00e9placement des pointeurs jusqu'\u00e0 trouver l'index kbksl-nl while pos != k:bksl-nl cellpy-undapy-unddecaler = queue(cellpy-undapy-unddecaler)bksl-nl precedent = queue(precedent)bksl-nl pos += 1bksl-nl bksl-nl # On a trouv\u00e9 la position, on assure maintenant le cha\u00eenagebksl-nl precedent.suiv = cellpy-undapy-undinsererbksl-nl cellpy-undapy-undinserer.suiv = cellpy-undapy-unddecalerbksl-nl A Commentaires Le cas d'une insertion en t\u00eate est trivial ! Dans le cas d'une insertion \u00e0 un index quelconque \\(k\\gt 0\\) , on doit d'abord cr\u00e9er deux pointeurs vers les cellules concern\u00e9es par l'insertion. Ensuite, dans une boucle, on d\u00e9cale ces pointeurs jusqu'\u00e0 ce l'on trouve la position o\u00f9 sera ins\u00e9r\u00e9 la nouvelle cellule. Z 2. \u00c9crire une fonction supprimer qui prend en param\u00e8tres un index k et une liste lst non vide et qui supprime l'\u00e9l\u00e9ment d'index k de la liste. 1 2 3 4 5 6 def supprimer ( k , l ): \"\"\" Supprime la cellule d'index k de la liste non vide lst. Ne renvoie rien: lst est modifi\u00e9 ! \"\"\" pass ### Lancer # TESTSbksl-nllst = Cell(3, Cell(7, Cell(9, Cell(0, None))))bksl-nlsupprimer(0, lst)bksl-nlassert tete(lst) == 7bksl-nlassert tete(queue(queue(lst))) == 0bksl-nlsupprimer(2, lst)bksl-nlassert tete(queue(lst)) == 9bksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule (maillon) d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.cle = vbksl-nl self.suiv = sbksl-nlbksl-nldef estpy-undvide(l):bksl-nl return l is Nonebksl-nlbksl-nldef tete(l):bksl-nl \"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\"bksl-nl assert l is not None, \"tete: erreur liste vide\"bksl-nl return l.clebksl-nlbksl-nldef queue(l):bksl-nl \"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\"bksl-nl assert not estpy-undvide(l), \"queue: erreur liste vide\"bksl-nl return l.suivbksl-nlbksl-nlbksl-nldef supprimer(k, lst):bksl-nl \"\"\" bksl-nl Supprime la cellule d'index k de la liste non vide lst.bksl-nl Ne renvoie rien: lst est modifi\u00e9 !bksl-nl \"\"\"bksl-nl passbksl-nlbksl-nl class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule (maillon) d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.cle = vbksl-nl self.suiv = sbksl-nlbksl-nldef estpy-undvide(l):bksl-nl return l is Nonebksl-nlbksl-nldef tete(l):bksl-nl \"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\"bksl-nl assert l is not None, \"tete: erreur liste vide\"bksl-nl return l.clebksl-nlbksl-nldef queue(l):bksl-nl \"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\"bksl-nl assert not estpy-undvide(l), \"queue: erreur liste vide\"bksl-nl return l.suivbksl-nlbksl-nlbksl-nlbksl-nldef supprimer(k, lst):bksl-nl \"\"\" bksl-nl Supprime la cellule d'index k de la liste non vide lst.bksl-nl Ne renvoie rien: lst est modifi\u00e9 !bksl-nl \"\"\"bksl-nl if k == 0:bksl-nl # Suppression en t\u00eate: on \u00e9crase la 1re cl\u00e9 avec la 2\u00e8mebksl-nl # puis on \u00e9tablit le cha\u00eenage de mani\u00e8re \u00e0 supprimer la 2eme cellule.bksl-nl lst.cle = tete(queue(lst))bksl-nl lst.suiv = queue(queue(lst))bksl-nl else:bksl-nl # Initialisation de variables utilesbksl-nl # Compteur (index)bksl-nl pos = 1bksl-nl # D\u00e9claration de 2 pointeurs autour de la cellule \u00e0 supprimerbksl-nl # ----+--------+-------+-------+---bksl-nl # ... | xk-1 | xk | xk+1 |...bksl-nl # ----+--------+-------+-------+---bksl-nl # ^ ^ ^bksl-nl # | | |bksl-nl # prec. \u00e0 suppr. suivantbksl-nl bksl-nl precedent = lstbksl-nl suivant = queue(queue(lst))bksl-nl bksl-nl # D\u00e9placement des pointeurs autour de l'index kbksl-nl while pos != k:bksl-nl suivant = queue(suivant)bksl-nl precedent = queue(precedent)bksl-nl pos += 1bksl-nl bksl-nl # On a trouv\u00e9 la cellule \u00e0 supprimer, on \u00e9tablitbksl-nl # le cha\u00eenage de mani\u00e8re \u00e0 la \"court-circuiter\"bksl-nl precedent.suiv = suivantbksl-nl A Z 3. Que peut-on dire du co\u00fbt en temps de ces op\u00e9rations? Probl\u00e8me 1 - La concat\u00e9nation de deux listes cha\u00een\u00e9es \u2693\ufe0e L'objectif de ce probl\u00e8me est d'\u00e9crire plusieurs versions d'une fonction permettant de concat\u00e9ner ( mettre bout \u00e0 bout ) deux listes. Avertissement Bien que moins facile \u00e0 appr\u00e9hender, cette impl\u00e9mentation ne vous demandera pas de produire du code \u00e0 partir de z\u00e9ro mais plut\u00f4t \u00e0 comprendre et compl\u00e9ter du code existant. Ce qui est \u00e0 la port\u00e9e d'un \u00e9l\u00e8ve de terminale NSI. Solution r\u00e9cursive autorisant les effets de bords \u2693\ufe0e \u00c9tant donn\u00e9es deux listes cha\u00een\u00e9es l1 et l2 : 1 2 3 4 5 6 7 8 l1 = ListeChainee () l1 . insert ( 5 ) l1 . insert ( 3 ) l1 . insert ( 1 ) l2 = ListeChainee () l2 . insert ( 10 ) l2 . insert ( 7 ) Question essentielle : qu'est-ce que la concat\u00e9nation de deux listes cha\u00een\u00e9es l1 et l2 ? Si l1 est vide, la r\u00e9ponse est triviale, il s'agit de la liste cha\u00een\u00e9e l2 ; Sinon il s'agit de la liste cha\u00een\u00e9e r\u00e9sultant de la concat\u00e9nation de la queue de l1 avec l2 , \u00e0 laquelle on a ins\u00e9r\u00e9 la t\u00eate de l1 . Apr\u00e8s application de la fonction concat apr\u00e8s l3 = concat(l1, l2) : 1. Compl\u00e9ter la fonction concat ci-dessous qui prend en param\u00e8tres deux listes cha\u00een\u00e9es l1 et l2 et qui proc\u00e8de \u00e0 leur concat\u00e9nation l1---l2 , c'est-\u00e0-dire qui place l2 au bout de l1 . Le r\u00e9sultat de la concat\u00e9nation sera affect\u00e9 \u00e0 l2 c'est-\u00e0-dire l2 <- l1---l2 . Attention r\u00e9cursion Les tests de fonctions r\u00e9cursives peuvent \u00eatre relativement lents (typiquement 1 \u00e0 2 minutes selon le navigateur). Soyez patients ... surtout si votre fonction est fausse ! Par ailleurs, en cas d'alerte du navigateur, choisir Attendre (et non terminer le programme ou fermer la fen\u00eatre). Si cela vous semble r\u00e9dhibitoire, copier-coller dans un notebook ... ### Lancer l1 = ListeChainee()bksl-nll1.insert(5)bksl-nll1.insert(3)bksl-nll1.insert(1)bksl-nlbksl-nll2 = ListeChainee()bksl-nll2.insert(10)bksl-nll2.insert(7)bksl-nll = concat(l1, l2)bksl-nlassert l.tete() == 1bksl-nlassert l.queue().tete() == 3bksl-nlassert l.queue().queue().tete() == 5bksl-nlassert l.queue().queue().queue().tete() == 7bksl-nlassert l.queue().queue().queue().queue().tete() == 10bksl-nlbksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.val = vbksl-nl self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl \"\"\"Initialise une liste vide.\"\"\"bksl-nl self.head = Nonebksl-nl bksl-nl def estpy-undvide(self):bksl-nl return self.head is Nonebksl-nl bksl-nl def insert(self, element):bksl-nl \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl self.head = Cell(element, self.head)bksl-nl bksl-nl def tete(self):bksl-nl \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl bksl-nl assert self.head is not None , \"tete : erreur liste vide\"bksl-nl return self.head.valbksl-nl bksl-nl def queue(self):bksl-nl \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl assert self.head is not None , \"queue : erreur liste vide\"bksl-nl bksl-nl reste = ListeChainee()bksl-nl reste.head = self.head.suivbksl-nl return restebksl-nl bksl-nldef concat(l1, l2):bksl-nl \"\"\"bksl-nl Renvoie la concat\u00e9nation l1---l2, en modifiant l2 (l1 plac\u00e9 enbksl-nl t\u00eate de l2).bksl-nl \"\"\"bksl-nl bksl-nl # \u00c0 compl\u00e9terbksl-nl if ...:bksl-nl return l2bksl-nl else:bksl-nl concat(l1.queue(), ...).insert(...)bksl-nl return l2bksl-nlbksl-nl class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire un maillon d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.val = vbksl-nl self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl \"\"\"Initialise une liste cha\u00een\u00e9e vide.\"\"\"bksl-nl self.head = Nonebksl-nl bksl-nl def estpy-undvide(self):bksl-nl return self.head is Nonebksl-nl bksl-nl def insert(self, element):bksl-nl \"\"\" Construit une liste en ins\u00e9rant 'element' en tete\"\"\"bksl-nl self.head = Cell(element, self.head)bksl-nl bksl-nl def tete(self):bksl-nl \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl bksl-nl assert self.head is not None , \"tete : erreur liste vide\"bksl-nl return self.head.valbksl-nl bksl-nl def queue(self):bksl-nl \"\"\"Renvoie une liste cha\u00een\u00e9e correpsondant \u00e0 la queue de la liste\"\"\"bksl-nl bksl-nl assert self.head is not None , \"queue : erreur liste vide\"bksl-nl reste = ListeChainee()bksl-nl reste.head = self.head.suivbksl-nl return restebksl-nl bksl-nldef concat(l1, l2):bksl-nl \"\"\" bksl-nl Renvoie la concat\u00e9nation l1---l2, en modifiant l2 (l1 plac\u00e9 enbksl-nl t\u00eate de l2.bksl-nl \"\"\"bksl-nl bksl-nl if l1.estpy-undvide():bksl-nl return l2bksl-nl else:bksl-nl concat(l1.queue(), l2).insert(l1.tete())bksl-nl return l2bksl-nl A Z 2. La fonction concat est-elle r\u00e9cursive? Justifier. 3. Quel probl\u00e8me potentiel peut-on identifier ( en cas de difficult\u00e9, observer l'illustration Pythontutor )? Solution r\u00e9duisant les effets de bords \u2693\ufe0e On souhaite contourner le probl\u00e8me identifi\u00e9 pr\u00e9c\u00e9d\u00e9mment. L'id\u00e9e est de renvoyer une nouvelle liste cha\u00een\u00e9e contenant les cellules de la premi\u00e8re liste puis celles de la seconde. Compl\u00e9ter le code ci-dessous. Justifier la pr\u00e9sence de la ligne 20. ### Lancer # TESTSbksl-nldef testpy-undconcatener():bksl-nl l1 = ListeChainee()bksl-nl l1.insert(5)bksl-nl l1.insert(3)bksl-nl l1.insert(1)bksl-nlbksl-nl l2 = ListeChainee()bksl-nl l2.insert(10)bksl-nl l2.insert(7)bksl-nl l2.insert(-5)bksl-nlbksl-nl l3 = concatener(l1, l2) # /!\\ Attention \u00e0 l'ordre, ici l2 au bout de l1bksl-nl result = ''bksl-nl while not l3.estpy-undvide():bksl-nl result += str(l3.tete()) + ' 'bksl-nl l3 = l3.queue()bksl-nl return resultbksl-nlbksl-nlassert testpy-undconcatener() == '1 3 5 -5 7 10 'bksl-nlbksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder def concatener(lst1, lst2):bksl-nl \"\"\" Renvoie une nouvelle liste cha\u00een\u00e9e issue de la concat\u00e9nation de lst1 et lst2, c-a-dbksl-nl form\u00e9e des \u00e9l\u00e9ments de lst1 puis de lst2;bksl-nl lst1, lst2: listes cha\u00een\u00e9es non videsbksl-nl \"\"\"bksl-nl assert not lst1.estpy-undvide() and not lst2.estpy-undvide(), \"Erreur: liste vide\"bksl-nl bksl-nl # Cr\u00e9ation d'une nouvelle liste et d'une r\u00e9f\u00e9rence sur le premier \u00e9l\u00e9ment de cette listebksl-nl lst3 = ListeChainee()bksl-nl lst3.head = Cell(lst1.tete(), None)bksl-nl cellulepy-undcourante = lst3.headbksl-nl # N\u00e9cessit\u00e9 de r\u00e9ajuster lst1, sinon on risque de copier deux fois son 1er \u00e9l\u00e9ment !!bksl-nl lst1.head = lst1.head.suivbksl-nl bksl-nl for liste in (lst1, lst2):bksl-nl while not liste.estpy-undvide():bksl-nl x = liste.tete()bksl-nl cellulepy-undcourante.suiv = ...bksl-nl cellulepy-undcourante = ...bksl-nl liste = liste.queue()bksl-nl bksl-nl return lst3 bksl-nlbksl-nl def concatener(lst1, lst2):bksl-nl \"\"\" Renvoie une nouvelle liste cha\u00een\u00e9e issue de la concat\u00e9nation de l1 et l2, c-a-dbksl-nl form\u00e9e des \u00e9l\u00e9ments de l2 puis de l1;bksl-nl l1, l2: listes cha\u00een\u00e9es non videsbksl-nl \"\"\"bksl-nl assert not lst1.estpy-undvide() and not lst2.estpy-undvide(), \"Erreur: liste vide\"bksl-nl bksl-nl # Cr\u00e9ation d'une liste vide et d'une r\u00e9f\u00e9rence sur le dernier \u00e9l\u00e9ment de cette listebksl-nl lst3 = ListeChainee()bksl-nl lst3.head = Cell(lst1.tete(), None)bksl-nl cellulepy-undcourante = lst3.headbksl-nl # N\u00e9cessit\u00e9 de r\u00e9ajuster lst1, sinon on risque de copier deux fois son 1er \u00e9l\u00e9ment !!bksl-nl lst1.head = lst1.head.suivbksl-nl bksl-nl for liste in (lst1, lst2):bksl-nl while not liste.estpy-undvide():bksl-nl x = liste.tete()bksl-nl cellulepy-undcourante.suiv = Cell(x, None)bksl-nl cellulepy-undcourante = cellulepy-undcourante.suivbksl-nl liste = liste.queue()bksl-nl bksl-nl return lst3 bksl-nlbksl-nl A Z Exercice 2 - Recherche s\u00e9quentielle dans une liste cha\u00een\u00e9e \u2693\ufe0e La fonction chercher(x, lst) renvoie l'index de la premi\u00e8re occurence de x dans la liste cha\u00een\u00e9e lst ou None si non trouv\u00e9. Elle s'appuie sur la fonction auxilliaire recherche_aux qui r\u00e9alise ce travail r\u00e9cursivement. L'id\u00e9e retenue pour recherche_aux est la suivante: la recherche s\u00e9quentielle de x dans lst \u00e0 un index i est: soit None si la liste lst est vide; soit i si x correspond \u00e0 la t\u00eate de lst ; soit la recherche_aux de x dans la queue de lst . Indication On utilise ici l'impl\u00e9mentation des listes cha\u00een\u00e9es avec la classe ListeChainee . Version r\u00e9cursive \u2693\ufe0e Attention r\u00e9cursion Les tests de fonctions r\u00e9cursives peuvent \u00eatre relativement lents (typiquement 1 \u00e0 2 minutes selon le navigateur). Soyez patients ... surtout si votre fonction est fausse ! Par ailleurs, en cas d'alerte du navigateur, choisir Attendre (et non terminer le programme ou fermer la fen\u00eatre). ### Lancer # TESTSbksl-nll1 = ListeChainee()bksl-nll1.insert(5)bksl-nll1.insert(3)bksl-nll1.insert(1)bksl-nll1.insert(10)bksl-nll1.insert(7)bksl-nlbksl-nlassert chercher(7, l1) == 0bksl-nlassert chercher(5, l1) == 4bksl-nlassert chercher(100, l1) == Nonebksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.val = vbksl-nl self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl \"\"\"Initialise une liste vide.\"\"\"bksl-nl self.head = Nonebksl-nl bksl-nl def estpy-undvide(self):bksl-nl return self.head is Nonebksl-nl bksl-nl def insert(self, element):bksl-nl \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl self.head = Cell(element, self.head)bksl-nl bksl-nl def tete(self):bksl-nl \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl bksl-nl assert self.head is not None , \"tete : erreur liste vide\"bksl-nl return self.head.valbksl-nl bksl-nl def queue(self):bksl-nl \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl assert self.head is not None , \"queue : erreur liste vide\"bksl-nl bksl-nl reste = ListeChainee()bksl-nl reste.head = self.head.suivbksl-nl return restebksl-nl bksl-nl# Recherche s\u00e9quentiellebksl-nl# 1) R\u00e9cursivebksl-nlbksl-nldef recherchepy-undaux(x, lst, i):bksl-nl \"\"\" bksl-nl Fonction auxilliaire r\u00e9cursive qui recherche 'x' dans 'lst'bksl-nl \u00e0 partir d'une position 'i';bksl-nl x: valeur \u00e0 rechercherbksl-nl lst: liste chain\u00e9ebksl-nl i: index o\u00f9 se trouve \u00e9ventuellement xbksl-nl \"\"\"bksl-nl if lst.estpy-undvide():bksl-nl return Nonebksl-nl elif x == lst.tete():bksl-nl return ...bksl-nl else:bksl-nl return recherchepy-undaux(..., ..., ...)bksl-nl bksl-nldef chercher(x, lst):bksl-nl return recherchepy-undaux(x, lst, 0)bksl-nlbksl-nl class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire un maillon d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.val = vbksl-nl self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl \"\"\"Initialise une liste vide.\"\"\"bksl-nl self.head = Nonebksl-nl bksl-nl def estpy-undvide(self):bksl-nl return self.head is Nonebksl-nl bksl-nl def insert(self, element):bksl-nl \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl self.head = Cell(element, self.head)bksl-nl bksl-nl def tete(self):bksl-nl \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl bksl-nl assert self.head is not None , \"tete : erreur liste vide\"bksl-nl return self.head.valbksl-nl bksl-nl def queue(self):bksl-nl \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl assert self.head is not None , \"queue : erreur liste vide\"bksl-nl bksl-nl reste = ListeChainee()bksl-nl reste.head = self.head.suivbksl-nl return restebksl-nl bksl-nl# Recherche s\u00e9quentiellebksl-nl# 1) R\u00e9cursivebksl-nlbksl-nldef recherchepy-undaux(x, lst, i):bksl-nl \"\"\" bksl-nl Fonction auxilliaire r\u00e9cursive qui recherche 'x' dans 'lst'bksl-nl \u00e0 partir d'une position 'i';bksl-nl \"\"\"bksl-nl if lst.estpy-undvide():bksl-nl return Nonebksl-nl elif x == lst.tete():bksl-nl return ibksl-nl else:bksl-nl return recherchepy-undaux(x, lst.queue(), i+1)bksl-nl bksl-nldef chercher(x, lst):bksl-nl return recherchepy-undaux(x, lst, 0)bksl-nl A Z Version it\u00e9rative \u2693\ufe0e ### Lancer # TESTSbksl-nll1 = ListeChainee()bksl-nll1.insert(5)bksl-nll1.insert(3)bksl-nll1.insert(1)bksl-nll1.insert(10)bksl-nll1.insert(7)bksl-nlbksl-nlassert chercherpy-unditer(1, l1) == 2bksl-nlassert chercherpy-unditer(100, l1) == Nonebksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.val = vbksl-nl self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl \"\"\"Initialise une liste vide.\"\"\"bksl-nl self.head = Nonebksl-nl bksl-nl def estpy-undvide(self):bksl-nl return self.head is Nonebksl-nl bksl-nl def insert(self, element):bksl-nl \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl self.head = Cell(element, self.head)bksl-nl bksl-nl def tete(self):bksl-nl \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl bksl-nl assert self.head is not None , \"tete : erreur liste vide\"bksl-nl return self.head.valbksl-nl bksl-nl def queue(self):bksl-nl \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl assert self.head is not None , \"queue : erreur liste vide\"bksl-nl bksl-nl reste = ListeChainee()bksl-nl reste.head = self.head.suivbksl-nl return restebksl-nl bksl-nl# Recherche s\u00e9quentiellebksl-nl# 2) It\u00e9ratifbksl-nlbksl-nldef chercherpy-unditer(x, lst):bksl-nl i = 0bksl-nl while ...:bksl-nl if lst.tete() == x:bksl-nl return ibksl-nl i += 1bksl-nl lst.head = ...bksl-nl return Nonebksl-nlbksl-nl class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire un maillon d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.val = vbksl-nl self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl \"\"\"Initialise une liste vide.\"\"\"bksl-nl self.head = Nonebksl-nl bksl-nl def estpy-undvide(self):bksl-nl return self.head is Nonebksl-nl bksl-nl def insert(self, element):bksl-nl \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl self.head = Cell(element, self.head)bksl-nl bksl-nl def tete(self):bksl-nl \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl bksl-nl assert self.head is not None , \"tete : erreur liste vide\"bksl-nl return self.head.valbksl-nl bksl-nl def queue(self):bksl-nl \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl assert self.head is not None , \"queue : erreur liste vide\"bksl-nl bksl-nl reste = ListeChainee()bksl-nl reste.head = self.head.suivbksl-nl return restebksl-nl bksl-nl# Recherche s\u00e9quentiellebksl-nl# 2) It\u00e9ratifbksl-nlbksl-nldef chercherpy-unditer(x, lst):bksl-nl i = 0bksl-nl while not lst.estpy-undvide():bksl-nl if lst.tete() == x:bksl-nl return ibksl-nl i += 1bksl-nl lst = lst.queue()bksl-nl return Nonebksl-nl A Z Exercice 3 - Insertion dans une liste cha\u00een\u00e9e tri\u00e9e ... version r\u00e9cursive ;) \u2693\ufe0e 1. Compl\u00e9ter la fonction list_insert(x, lst) qui prend en param\u00e8tres un entier x et une liste cha\u00een\u00e9e lst d'entiers, suppos\u00e9e tri\u00e9e par ordre croissant et qui renvoie une nouvelle liste dans laquelle x a \u00e9t\u00e9 ins\u00e9r\u00e9 \u00e0 sa place . 1 2 3 4 +-----+-----+-----+--- lst| n0 | n1 | n2 | .. +-----+-----+-----+--- avec n0 <= n1 <= n2 <= ... <= nk-1 si lst comporte k \u00e9l\u00e9ments Indication On utilise ici l'impl\u00e9mentation des listes cha\u00een\u00e9es avec la classe ListeChainee ainsi que la fonction concatener en version effets de bord r\u00e9duits . Par ailleurs, une m\u00e9thode affiche a \u00e9t\u00e9 ajout\u00e9e afin de faciliter le debugage. On remarque que: si lst est vide, il suffit de renvoyer une liste cha\u00een\u00e9e dans laquelle on a ins\u00e9r\u00e9 x ; si \\(x<n_0\\) , on cr\u00e9e une liste cha\u00een\u00e9e l avec x comme seul \u00e9l\u00e9ment et on renvoie la concat\u00e9nation de cette liste avec lst. Attention \u00e0 l'ordre des param\u00e8tres lors de l'appel de concatener ! ; sinon ( c-\u00e0-d \\(x\\ge n_0\\) ) on renvoie la concat\u00e9nation de l'insertion de x dans la queue de lst , avec une liste l constitu\u00e9e de la t\u00eate de lst . Il est important de noter que nous avons ici deux cas de base . Coup de pouce Pensez \u00e9ventuellement \u00e0 revoir l'exercice 5 (optionnel) du chapitre 1. ### Lancer l1 = ListeChainee()bksl-nll1.insert(5)bksl-nll1.insert(3)bksl-nll1.insert(1)bksl-nll2 = listpy-undinsert(-1, l1)bksl-nll1 = ListeChainee()bksl-nll1.insert(5)bksl-nll1.insert(3)bksl-nll1.insert(1)bksl-nll3 = listpy-undinsert(6, l1)bksl-nll1 = ListeChainee()bksl-nll1.insert(5)bksl-nll1.insert(3)bksl-nll1.insert(1)bksl-nll4 = listpy-undinsert(4, l1)bksl-nlassert l2.affiche() == '[-1,1,3,5]'bksl-nlassert l3.affiche() == '[1,3,5,6]'bksl-nlassert l4.affiche() == '[1,3,4,5]'bksl-nlbksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.val = vbksl-nl self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl \"\"\"Initialise une liste vide.\"\"\"bksl-nl self.head = Nonebksl-nl bksl-nl def estpy-undvide(self):bksl-nl return self.head is Nonebksl-nl bksl-nl def insert(self, element):bksl-nl \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl self.head = Cell(element, self.head)bksl-nl bksl-nl def tete(self):bksl-nl \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl bksl-nl assert self.head is not None , \"tete : erreur liste vide\"bksl-nl return self.head.valbksl-nl bksl-nl def queue(self):bksl-nl \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl assert self.head is not None , \"queue : erreur liste vide\"bksl-nl bksl-nl reste = ListeChainee()bksl-nl reste.head = self.head.suivbksl-nl return restebksl-nl bksl-nl def affiche(self):bksl-nl \"\"\" Affiche les \u00e9l\u00e9ments d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl liste = selfbksl-nl elements = []bksl-nl while not liste.estpy-undvide():bksl-nl elements.append(str(liste.tete()))bksl-nl liste = liste.queue()bksl-nl return '[' + ','.join(elements) + ']'bksl-nlbksl-nldef concatener(lst1, lst2):bksl-nl \"\"\" Renvoie une nouvelle liste cha\u00een\u00e9e issue de la concat\u00e9nation de lst1 et lst2, c-a-dbksl-nl form\u00e9e des \u00e9l\u00e9ments de l1 puis de l2;bksl-nl lst1, lst2: listes cha\u00een\u00e9es non videsbksl-nl \"\"\"bksl-nl assert not lst1.estpy-undvide() and not lst2.estpy-undvide(), \"Erreur: liste vide\"bksl-nl bksl-nl # Cr\u00e9ation d'une liste vide et d'une r\u00e9f\u00e9rence sur le dernier \u00e9l\u00e9ment de cette listebksl-nl lst3 = ListeChainee()bksl-nl lst3.head = Cell(lst1.tete(), None)bksl-nl cellulepy-undcourante = lst3.headbksl-nl # N\u00e9cessit\u00e9 de r\u00e9ajuster lst1, sinon on risque de copier deux fois son 1er \u00e9l\u00e9ment !!bksl-nl lst1.head = lst1.head.suivbksl-nl bksl-nl for liste in (lst1, lst2):bksl-nl while not liste.estpy-undvide():bksl-nl x = liste.tete()bksl-nl cellulepy-undcourante.suiv = Cell(x, None)bksl-nl cellulepy-undcourante = cellulepy-undcourante.suivbksl-nl liste = liste.queue()bksl-nl bksl-nl return lst3bksl-nlbksl-nlbksl-nldef listpy-undinsert(x, lst):bksl-nl if lst.estpy-undvide():bksl-nl l = ListeChainee()bksl-nl l.insert(x)bksl-nl return lbksl-nl elif x < lst.tete():bksl-nl l = ListeChainee()bksl-nl l.insert(x)bksl-nl return ...bksl-nl else:bksl-nl l = ListeChainee()bksl-nl l.insert(lst.tete())bksl-nl return ...bksl-nl class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.val = vbksl-nl self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl \"\"\"Initialise une liste vide.\"\"\"bksl-nl self.head = Nonebksl-nl bksl-nl def estpy-undvide(self):bksl-nl return self.head is Nonebksl-nl bksl-nl def insert(self, element):bksl-nl \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl self.head = Cell(element, self.head)bksl-nl bksl-nl def tete(self):bksl-nl \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl bksl-nl assert self.head is not None , \"tete : erreur liste vide\"bksl-nl return self.head.valbksl-nl bksl-nl def queue(self):bksl-nl \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl assert self.head is not None , \"queue : erreur liste vide\"bksl-nl bksl-nl reste = ListeChainee()bksl-nl reste.head = self.head.suivbksl-nl return restebksl-nl bksl-nl def affiche(self):bksl-nl \"\"\" Affiche les \u00e9l\u00e9ments d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl liste = selfbksl-nl elements = []bksl-nl while not liste.estpy-undvide():bksl-nl elements.append(str(liste.tete()))bksl-nl liste = liste.queue()bksl-nl return '[' + ','.join(elements) + ']'bksl-nlbksl-nldef concatener(lst1, lst2):bksl-nl \"\"\" Renvoie une nouvelle liste cha\u00een\u00e9e issue de la concat\u00e9nation de lst1 et lst2, c-a-dbksl-nl form\u00e9e des \u00e9l\u00e9ments de l1 puis de l2;bksl-nl lst1, lst2: listes cha\u00een\u00e9es non videsbksl-nl \"\"\"bksl-nl assert not lst1.estpy-undvide() and not lst2.estpy-undvide(), \"Erreur: liste vide\"bksl-nl bksl-nl # Cr\u00e9ation d'une liste vide et d'une r\u00e9f\u00e9rence sur le dernier \u00e9l\u00e9ment de cette listebksl-nl lst3 = ListeChainee()bksl-nl lst3.head = Cell(lst1.tete(), None)bksl-nl cellulepy-undcourante = lst3.headbksl-nl # N\u00e9cessit\u00e9 de r\u00e9ajuster lst1, sinon on risque de copier deux fois son 1er \u00e9l\u00e9ment !!bksl-nl lst1.head = lst1.head.suivbksl-nl bksl-nl for liste in (lst1, lst2):bksl-nl while not liste.estpy-undvide():bksl-nl x = liste.tete()bksl-nl cellulepy-undcourante.suiv = Cell(x, None)bksl-nl cellulepy-undcourante = cellulepy-undcourante.suivbksl-nl liste = liste.queue()bksl-nl bksl-nl return lst3bksl-nlbksl-nlbksl-nldef listpy-undinsert(x, lst):bksl-nl if lst.estpy-undvide():bksl-nl l = ListeChainee()bksl-nl l.insert(x)bksl-nl return lbksl-nl elif x < lst.tete():bksl-nl l = ListeChainee()bksl-nl l.insert(x)bksl-nl return concatener(l, lst)bksl-nl else:bksl-nl l = ListeChainee()bksl-nl l.insert(lst.tete())bksl-nl return concatener(l, listpy-undinsert(x, lst.queue()))bksl-nl A Z Exercice 4 - Listes identiques \u2693\ufe0e Compl\u00e9ter la fonction identiques(lst1, lst2) qui renvoie un bool\u00e9en indiquant si les listes lst1 et lst2 sont identiques c'est-\u00e0-dire contiennent les m\u00eames \u00e9l\u00e9ments, dans le m\u00eame ordre. Une approche it\u00e9rative sera adopt\u00e9e (... pour une fois \ud83e\udd73) Indication On utilise ici l'impl\u00e9mentation des listes cha\u00een\u00e9es avec la classe ListeChainee . On essaiera de tirer au mieux profit des commentaires. ### Lancer l1 = ListeChainee()bksl-nll2 = ListeChainee()bksl-nll3 = ListeChainee()bksl-nll4 = ListeChainee()bksl-nl bksl-nll1.insert(5)bksl-nll1.insert(3)bksl-nll1.insert(1)bksl-nl bksl-nll3.insert(5)bksl-nll3.insert(3)bksl-nll3.insert(1)bksl-nl bksl-nlassert identiques(l1, l3) is Truebksl-nlassert identiques(l1, l2) is Falsebksl-nlassert identiques(l2, l4) is Truebksl-nlassert identiques(l2, l3) is Falsebksl-nlbksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.val = vbksl-nl self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl \"\"\"Initialise une liste vide.\"\"\"bksl-nl self.head = Nonebksl-nl bksl-nl def estpy-undvide(self):bksl-nl return self.head is Nonebksl-nl bksl-nl def insert(self, element):bksl-nl \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl self.head = Cell(element, self.head)bksl-nl bksl-nl def tete(self):bksl-nl \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl bksl-nl assert self.head is not None , \"tete : erreur liste vide\"bksl-nl return self.head.valbksl-nl bksl-nl def queue(self):bksl-nl \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl assert self.head is not None , \"queue : erreur liste vide\"bksl-nl bksl-nl reste = ListeChainee()bksl-nl reste.head = self.head.suivbksl-nl return restebksl-nl bksl-nl def affiche(self):bksl-nl \"\"\" Renvoie les \u00e9l\u00e9ments d'une liste chain\u00e9e sous forme d'une chaine\"\"\"bksl-nl bksl-nl liste = selfbksl-nl elements = []bksl-nl while not liste.estpy-undvide():bksl-nl elements.append(str(liste.tete()))bksl-nl liste = liste.queue()bksl-nl return '[' + ','.join(elements) + ']'bksl-nlbksl-nl# Fonction 'identiques'bksl-nl# \u00c0 compl\u00e9terbksl-nlbksl-nldef identiques(lst1, lst2):bksl-nl \"\"\"bksl-nl Renvoie True si lst1 et lst2 sont identiques, False sinon.bksl-nl \"\"\"bksl-nl # 1) On parcours les 2 listes en m\u00eame tempsbksl-nl while not lst1.estpy-undvide() and not lst2.estpy-undvide():bksl-nl if lst1.tete() != lst2.tete():bksl-nl return Falsebksl-nl # Les \u00e9l\u00e9ments sont identiques, on avance jusqu'\u00e0 la prochaine cellulebksl-nl ...bksl-nl ...bksl-nl bksl-nl # 2) On a quitt\u00e9 la boucle: les \u00e9l\u00e9ments sont jusqu'ici identiques, maisbksl-nl # au moins une des 2 listes est vide!bksl-nl if lst1.estpy-undvide():bksl-nl # On aura identit\u00e9 uniquement si lst2 est aussi vide!bksl-nl return ...bksl-nl else:bksl-nl # Cas trivial: ici lst2 est vide mais pas lst1, donc ...!?bksl-nl return ...bksl-nl class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.val = vbksl-nl self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl \"\"\"Initialise une liste vide.\"\"\"bksl-nl self.head = Nonebksl-nl bksl-nl def estpy-undvide(self):bksl-nl return self.head is Nonebksl-nl bksl-nl def insert(self, element):bksl-nl \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl self.head = Cell(element, self.head)bksl-nl bksl-nl def tete(self):bksl-nl \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl bksl-nl assert self.head is not None , \"tete : erreur liste vide\"bksl-nl return self.head.valbksl-nl bksl-nl def queue(self):bksl-nl \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl assert self.head is not None , \"queue : erreur liste vide\"bksl-nl bksl-nl reste = ListeChainee()bksl-nl reste.head = self.head.suivbksl-nl return restebksl-nl bksl-nl def affiche(self):bksl-nl \"\"\" Renvoie les \u00e9l\u00e9ments d'une liste chain\u00e9e sous forme d'une chaine\"\"\"bksl-nl bksl-nl liste = selfbksl-nl elements = []bksl-nl while not liste.estpy-undvide():bksl-nl elements.append(str(liste.tete()))bksl-nl liste = liste.queue()bksl-nl return '[' + ','.join(elements) + ']'bksl-nlbksl-nl# Fonction 'identiques'bksl-nl# \u00c0 compl\u00e9terbksl-nlbksl-nldef identiques(lst1, lst2):bksl-nl \"\"\"bksl-nl Renvoie True si lst1 et lst2 sont identiques, False sinon.bksl-nl \"\"\"bksl-nl # 1) On parcours les 2 listes en m\u00eame tempsbksl-nl while not lst1.estpy-undvide() and not lst2.estpy-undvide():bksl-nl if lst1.tete() != lst2.tete():bksl-nl return Falsebksl-nl # Les \u00e9l\u00e9ments sont identiques, on avance jusqu'\u00e0 la prochaine cellulebksl-nl lst1 = lst1.queue()bksl-nl lst2 = lst2.queue(bksl-nl bksl-nl # 2) On a quitt\u00e9 la boucle: les \u00e9l\u00e9ments sont jusqu'ici identiques, maisbksl-nl # au moins une des 2 listes est vide!bksl-nl if lst1.estpy-undvide():bksl-nl # On aura identit\u00e9 uniquement si lst2 est aussi vide!bksl-nl return lst2.estpy-undvide()bksl-nl else:bksl-nl # Cas trivial: ici lst2 est vide mais pas lst1, donc ...!?bksl-nl return Falsebksl-nl A Z Probl\u00e8me 2 - Cr\u00e9ation d'une classe Pile avec une liste cha\u00een\u00e9e \u2693\ufe0e On consid\u00e8re le type abstrait de donn\u00e9es Pile muni des op\u00e9rations suivantes: creer_pile_vide: \\(\\varnothing\\longrightarrow\\) Pile ; est_pilevide: Pile \\(\\longrightarrow\\) Bool\u00e9en ; empiler: Pile , element \\(\\longrightarrow\\varnothing\\) ; d\u00e9piler: Pile \\(\\longrightarrow\\) element ( avec Pile non vide ); On se propose de donner une r\u00e9alisation possible de ce TAD avec une liste cha\u00een\u00e9e. Indication On utilise ici l'impl\u00e9mentation des listes cha\u00een\u00e9es avec la classe ListeChainee donn\u00e9e plus haut. De plus, \u00e9tant donn\u00e9 la particularit\u00e9 de l'initialisateur ( __init__ ) en python, la cr\u00e9ation de la pile vide se fera simplement en instanciant un objet pile par l'appel Pile() . On cr\u00e9e une classe Pile en l'initialisant avec une liste vide. Compl\u00e9ter les m\u00e9thodes de cette classe. ### Lancer p = Pile()bksl-nlp.empiler(10)bksl-nlp.empiler(5)bksl-nlp.empiler(1)bksl-nlassert p.depiler() == 1bksl-nlassert p.depiler() == 5bksl-nlassert p.depiler() == 10bksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.val = vbksl-nl self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl \"\"\"Initialise une liste vide.\"\"\"bksl-nl self.head = Nonebksl-nl bksl-nl def estpy-undvide(self):bksl-nl return self.head is Nonebksl-nl bksl-nl def insert(self, element):bksl-nl \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl self.head = Cell(element, self.head)bksl-nl bksl-nl def tete(self):bksl-nl \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl bksl-nl assert self.head is not None , \"tete : erreur liste vide\"bksl-nl return self.head.valbksl-nl bksl-nl def queue(self):bksl-nl \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl assert self.head is not None , \"queue : erreur liste vide\"bksl-nl bksl-nl reste = ListeChainee()bksl-nl reste.head = self.head.suivbksl-nl return restebksl-nl bksl-nl def affiche(self):bksl-nl \"\"\" Renvoie les \u00e9l\u00e9ments d'une liste chain\u00e9e sous forme d'une chaine\"\"\"bksl-nl bksl-nl liste = selfbksl-nl elements = []bksl-nl while not liste.estpy-undvide():bksl-nl elements.append(str(liste.tete()))bksl-nl liste = liste.queue()bksl-nl return '[' + ','.join(elements) + ']'bksl-nl bksl-nl# \u00c0 compl\u00e9terbksl-nlbksl-nlclass Pile:bksl-nl \"\"\" Une classe pile \u00e0 base de liste cha\u00een\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl self.py-undpile = ListeChainee()bksl-nl bksl-nl def estpy-undpilevide(self):bksl-nl return self.py-undpile.estpy-undvide()bksl-nl bksl-nl def empiler(self, x):bksl-nl passbksl-nl bksl-nl def depiler(self):bksl-nl assert not self.estpy-undpilevide(), \"Erreur pile vide\"bksl-nl passbksl-nlbksl-nl class Pile:bksl-nl \"\"\" Une classe pile \u00e0 base de liste cha\u00een\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl self.py-undpile = ListeChainee()bksl-nl bksl-nl def estpy-undpilevide(self):bksl-nl return self.py-undpile.estpy-undvide()bksl-nl bksl-nl def empiler(self, x):bksl-nl self.py-undpile.insert(x)bksl-nl bksl-nl def depiler(self):bksl-nl assert not self.estpy-undpilevide(), \"Erreur pile vide\"bksl-nl bksl-nl val = self.py-undpile.tete()bksl-nl self.py-undpile = self.py-undpile.queue()bksl-nl return valbksl-nl bksl-nl def sommet(self):bksl-nl assert not self.estpy-undpilevide()bksl-nl return self.py-undpile.tete()bksl-nl A Z","title":"Exercices"},{"location":"NSITerm/SD/C6E1.html#du-type-abstrait-a-la-structure-de-donnee-liste-exercices","text":"L'utilisation de l'\u00e9diteur int\u00e9gr\u00e9 \u00e0 la page est largement envisageable pour toute solution it\u00e9rative. L'utilisation de la r\u00e9cursion est ... un peu lente ! On pourrait \u00e9galement choisir de t\u00e9l\u00e9charger le script, en utilisant le bouton \u00e0 cet effet et l'inclure dans un notebook ...","title":"Du type abstrait \u00e0 la structure de donn\u00e9e Liste : Exercices"},{"location":"NSITerm/SD/C6E1.html#exercice-1-insertion-suppression","text":"On reprend la r\u00e9alisation d'une liste cha\u00een\u00e9e du cours et on se propose d'ajouter \u00e0 l'ensemble des op\u00e9rations, l'insertion et la suppression d'un \u00e9l\u00e9ment \u00e0 un index donn\u00e9. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Cell : \"\"\" Une classe pour d\u00e9crire une cellule (maillon) d'une liste chain\u00e9e\"\"\" def __init__ ( self , v , s ): self . cle = v self . suiv = s def est_vide ( l ): return l is None def tete ( l ): \"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\" assert l is not None , \"tete: erreur liste vide\" return l . cle def queue ( l ): \"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\" assert not est_vide ( l ), \"queue: erreur liste vide\" return l . suiv 1. \u00c9crire une fonction inserer qui prend pour param\u00e8tres un \u00e9l\u00e9ment x , une position k , une liste cha\u00een\u00e9e non vide lst et qui va ins\u00e8rer x \u00e0 l'index k de la liste lst . 1 2 3 4 5 6 def inserer ( x , k , lst ): \"\"\" Ins\u00e8re x \u00e0 l'index k de la liste lst non vide. Ne renvoie rien: lst est modifi\u00e9! \"\"\" pass ### Lancer lst = Cell(3, Cell(7, Cell(9, Cell(0, None))))bksl-nlinserer(-1, 3, lst)bksl-nlbksl-nlassert tete(lst) == 3bksl-nlassert tete(queue(queue(queue(lst)))) == -1bksl-nlinserer(1000, 0, lst)bksl-nlassert tete(lst) == 1000bksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule (maillon) d'une liste chain\u00e9e\"\"\"bksl-nlbksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.cle = vbksl-nl self.suiv = sbksl-nlbksl-nldef estpy-undvide(l):bksl-nl return l is Nonebksl-nlbksl-nldef tete(l):bksl-nl \"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\"bksl-nl assert l is not None, \"tete: erreur liste vide\"bksl-nl return l.clebksl-nlbksl-nldef queue(l):bksl-nl \"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\"bksl-nl assert not estpy-undvide(l), \"queue: erreur liste vide\"bksl-nl return l.suivbksl-nlbksl-nl# A compl\u00e9terbksl-nldef inserer(x, k, lst):bksl-nl \"\"\" bksl-nl Ins\u00e8re x \u00e0 l'index k de la liste lst non vide.bksl-nl Ne renvoie rien: lst est modifi\u00e9!bksl-nl \"\"\"bksl-nl passbksl-nlbksl-nl def inserer(x, k, lst):bksl-nl \"\"\" Ins\u00e8re x \u00e0 l'index k de la liste lst non vide.bksl-nl Ne renvoie rien: lst est modifi\u00e9!bksl-nl \"\"\"bksl-nl if k == 0: # il s'agit d'une insertion en t\u00eatebksl-nl c = Cell(tete(lst), queue(lst))bksl-nl lst.cle = xbksl-nl lst.suiv = cbksl-nl else:bksl-nl ## 1) Initialisation des variables utiles## bksl-nl # compteur pour trouver l'index d'insertionbksl-nl pos = 1 bksl-nl bksl-nl # 2 pointeurs 'precedent' et 'cellpy-undapy-unddecaler'bksl-nl # ---+--------+---+-----+...bksl-nl # | xk-1 | xk| xk+1|...bksl-nl # ---+--------+---+-----+...bksl-nl # ^ ^ bksl-nl # | |bksl-nl #cell. prec cell. \u00e0 d\u00e9caler (pour l'insertion)bksl-nl # bksl-nl precedent = lstbksl-nl cellpy-undapy-unddecaler = queue(lst)bksl-nl # Cr\u00e9ation de la cellule \u00e0 ins\u00e9rerbksl-nl cellpy-undapy-undinserer = Cell(x, None)bksl-nl bksl-nl # 2) D\u00e9placement des pointeurs jusqu'\u00e0 trouver l'index kbksl-nl while pos != k:bksl-nl cellpy-undapy-unddecaler = queue(cellpy-undapy-unddecaler)bksl-nl precedent = queue(precedent)bksl-nl pos += 1bksl-nl bksl-nl # On a trouv\u00e9 la position, on assure maintenant le cha\u00eenagebksl-nl precedent.suiv = cellpy-undapy-undinsererbksl-nl cellpy-undapy-undinserer.suiv = cellpy-undapy-unddecalerbksl-nl A Commentaires Le cas d'une insertion en t\u00eate est trivial ! Dans le cas d'une insertion \u00e0 un index quelconque \\(k\\gt 0\\) , on doit d'abord cr\u00e9er deux pointeurs vers les cellules concern\u00e9es par l'insertion. Ensuite, dans une boucle, on d\u00e9cale ces pointeurs jusqu'\u00e0 ce l'on trouve la position o\u00f9 sera ins\u00e9r\u00e9 la nouvelle cellule. Z 2. \u00c9crire une fonction supprimer qui prend en param\u00e8tres un index k et une liste lst non vide et qui supprime l'\u00e9l\u00e9ment d'index k de la liste. 1 2 3 4 5 6 def supprimer ( k , l ): \"\"\" Supprime la cellule d'index k de la liste non vide lst. Ne renvoie rien: lst est modifi\u00e9 ! \"\"\" pass ### Lancer # TESTSbksl-nllst = Cell(3, Cell(7, Cell(9, Cell(0, None))))bksl-nlsupprimer(0, lst)bksl-nlassert tete(lst) == 7bksl-nlassert tete(queue(queue(lst))) == 0bksl-nlsupprimer(2, lst)bksl-nlassert tete(queue(lst)) == 9bksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule (maillon) d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.cle = vbksl-nl self.suiv = sbksl-nlbksl-nldef estpy-undvide(l):bksl-nl return l is Nonebksl-nlbksl-nldef tete(l):bksl-nl \"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\"bksl-nl assert l is not None, \"tete: erreur liste vide\"bksl-nl return l.clebksl-nlbksl-nldef queue(l):bksl-nl \"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\"bksl-nl assert not estpy-undvide(l), \"queue: erreur liste vide\"bksl-nl return l.suivbksl-nlbksl-nlbksl-nldef supprimer(k, lst):bksl-nl \"\"\" bksl-nl Supprime la cellule d'index k de la liste non vide lst.bksl-nl Ne renvoie rien: lst est modifi\u00e9 !bksl-nl \"\"\"bksl-nl passbksl-nlbksl-nl class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule (maillon) d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.cle = vbksl-nl self.suiv = sbksl-nlbksl-nldef estpy-undvide(l):bksl-nl return l is Nonebksl-nlbksl-nldef tete(l):bksl-nl \"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\"bksl-nl assert l is not None, \"tete: erreur liste vide\"bksl-nl return l.clebksl-nlbksl-nldef queue(l):bksl-nl \"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\"bksl-nl assert not estpy-undvide(l), \"queue: erreur liste vide\"bksl-nl return l.suivbksl-nlbksl-nlbksl-nlbksl-nldef supprimer(k, lst):bksl-nl \"\"\" bksl-nl Supprime la cellule d'index k de la liste non vide lst.bksl-nl Ne renvoie rien: lst est modifi\u00e9 !bksl-nl \"\"\"bksl-nl if k == 0:bksl-nl # Suppression en t\u00eate: on \u00e9crase la 1re cl\u00e9 avec la 2\u00e8mebksl-nl # puis on \u00e9tablit le cha\u00eenage de mani\u00e8re \u00e0 supprimer la 2eme cellule.bksl-nl lst.cle = tete(queue(lst))bksl-nl lst.suiv = queue(queue(lst))bksl-nl else:bksl-nl # Initialisation de variables utilesbksl-nl # Compteur (index)bksl-nl pos = 1bksl-nl # D\u00e9claration de 2 pointeurs autour de la cellule \u00e0 supprimerbksl-nl # ----+--------+-------+-------+---bksl-nl # ... | xk-1 | xk | xk+1 |...bksl-nl # ----+--------+-------+-------+---bksl-nl # ^ ^ ^bksl-nl # | | |bksl-nl # prec. \u00e0 suppr. suivantbksl-nl bksl-nl precedent = lstbksl-nl suivant = queue(queue(lst))bksl-nl bksl-nl # D\u00e9placement des pointeurs autour de l'index kbksl-nl while pos != k:bksl-nl suivant = queue(suivant)bksl-nl precedent = queue(precedent)bksl-nl pos += 1bksl-nl bksl-nl # On a trouv\u00e9 la cellule \u00e0 supprimer, on \u00e9tablitbksl-nl # le cha\u00eenage de mani\u00e8re \u00e0 la \"court-circuiter\"bksl-nl precedent.suiv = suivantbksl-nl A Z 3. Que peut-on dire du co\u00fbt en temps de ces op\u00e9rations?","title":"Exercice 1 Insertion / Suppression"},{"location":"NSITerm/SD/C6E1.html#probleme-1-la-concatenation-de-deux-listes-chainees","text":"L'objectif de ce probl\u00e8me est d'\u00e9crire plusieurs versions d'une fonction permettant de concat\u00e9ner ( mettre bout \u00e0 bout ) deux listes. Avertissement Bien que moins facile \u00e0 appr\u00e9hender, cette impl\u00e9mentation ne vous demandera pas de produire du code \u00e0 partir de z\u00e9ro mais plut\u00f4t \u00e0 comprendre et compl\u00e9ter du code existant. Ce qui est \u00e0 la port\u00e9e d'un \u00e9l\u00e8ve de terminale NSI.","title":"Probl\u00e8me 1 - La concat\u00e9nation de deux listes cha\u00een\u00e9es"},{"location":"NSITerm/SD/C6E1.html#exercice-2-recherche-sequentielle-dans-une-liste-chainee","text":"La fonction chercher(x, lst) renvoie l'index de la premi\u00e8re occurence de x dans la liste cha\u00een\u00e9e lst ou None si non trouv\u00e9. Elle s'appuie sur la fonction auxilliaire recherche_aux qui r\u00e9alise ce travail r\u00e9cursivement. L'id\u00e9e retenue pour recherche_aux est la suivante: la recherche s\u00e9quentielle de x dans lst \u00e0 un index i est: soit None si la liste lst est vide; soit i si x correspond \u00e0 la t\u00eate de lst ; soit la recherche_aux de x dans la queue de lst . Indication On utilise ici l'impl\u00e9mentation des listes cha\u00een\u00e9es avec la classe ListeChainee .","title":"Exercice 2 - Recherche s\u00e9quentielle dans une liste cha\u00een\u00e9e"},{"location":"NSITerm/SD/C6E1.html#exercice-3-insertion-dans-une-liste-chainee-triee-version-recursive","text":"1. Compl\u00e9ter la fonction list_insert(x, lst) qui prend en param\u00e8tres un entier x et une liste cha\u00een\u00e9e lst d'entiers, suppos\u00e9e tri\u00e9e par ordre croissant et qui renvoie une nouvelle liste dans laquelle x a \u00e9t\u00e9 ins\u00e9r\u00e9 \u00e0 sa place . 1 2 3 4 +-----+-----+-----+--- lst| n0 | n1 | n2 | .. +-----+-----+-----+--- avec n0 <= n1 <= n2 <= ... <= nk-1 si lst comporte k \u00e9l\u00e9ments Indication On utilise ici l'impl\u00e9mentation des listes cha\u00een\u00e9es avec la classe ListeChainee ainsi que la fonction concatener en version effets de bord r\u00e9duits . Par ailleurs, une m\u00e9thode affiche a \u00e9t\u00e9 ajout\u00e9e afin de faciliter le debugage. On remarque que: si lst est vide, il suffit de renvoyer une liste cha\u00een\u00e9e dans laquelle on a ins\u00e9r\u00e9 x ; si \\(x<n_0\\) , on cr\u00e9e une liste cha\u00een\u00e9e l avec x comme seul \u00e9l\u00e9ment et on renvoie la concat\u00e9nation de cette liste avec lst. Attention \u00e0 l'ordre des param\u00e8tres lors de l'appel de concatener ! ; sinon ( c-\u00e0-d \\(x\\ge n_0\\) ) on renvoie la concat\u00e9nation de l'insertion de x dans la queue de lst , avec une liste l constitu\u00e9e de la t\u00eate de lst . Il est important de noter que nous avons ici deux cas de base . Coup de pouce Pensez \u00e9ventuellement \u00e0 revoir l'exercice 5 (optionnel) du chapitre 1. ### Lancer l1 = ListeChainee()bksl-nll1.insert(5)bksl-nll1.insert(3)bksl-nll1.insert(1)bksl-nll2 = listpy-undinsert(-1, l1)bksl-nll1 = ListeChainee()bksl-nll1.insert(5)bksl-nll1.insert(3)bksl-nll1.insert(1)bksl-nll3 = listpy-undinsert(6, l1)bksl-nll1 = ListeChainee()bksl-nll1.insert(5)bksl-nll1.insert(3)bksl-nll1.insert(1)bksl-nll4 = listpy-undinsert(4, l1)bksl-nlassert l2.affiche() == '[-1,1,3,5]'bksl-nlassert l3.affiche() == '[1,3,5,6]'bksl-nlassert l4.affiche() == '[1,3,4,5]'bksl-nlbksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.val = vbksl-nl self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl \"\"\"Initialise une liste vide.\"\"\"bksl-nl self.head = Nonebksl-nl bksl-nl def estpy-undvide(self):bksl-nl return self.head is Nonebksl-nl bksl-nl def insert(self, element):bksl-nl \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl self.head = Cell(element, self.head)bksl-nl bksl-nl def tete(self):bksl-nl \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl bksl-nl assert self.head is not None , \"tete : erreur liste vide\"bksl-nl return self.head.valbksl-nl bksl-nl def queue(self):bksl-nl \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl assert self.head is not None , \"queue : erreur liste vide\"bksl-nl bksl-nl reste = ListeChainee()bksl-nl reste.head = self.head.suivbksl-nl return restebksl-nl bksl-nl def affiche(self):bksl-nl \"\"\" Affiche les \u00e9l\u00e9ments d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl liste = selfbksl-nl elements = []bksl-nl while not liste.estpy-undvide():bksl-nl elements.append(str(liste.tete()))bksl-nl liste = liste.queue()bksl-nl return '[' + ','.join(elements) + ']'bksl-nlbksl-nldef concatener(lst1, lst2):bksl-nl \"\"\" Renvoie une nouvelle liste cha\u00een\u00e9e issue de la concat\u00e9nation de lst1 et lst2, c-a-dbksl-nl form\u00e9e des \u00e9l\u00e9ments de l1 puis de l2;bksl-nl lst1, lst2: listes cha\u00een\u00e9es non videsbksl-nl \"\"\"bksl-nl assert not lst1.estpy-undvide() and not lst2.estpy-undvide(), \"Erreur: liste vide\"bksl-nl bksl-nl # Cr\u00e9ation d'une liste vide et d'une r\u00e9f\u00e9rence sur le dernier \u00e9l\u00e9ment de cette listebksl-nl lst3 = ListeChainee()bksl-nl lst3.head = Cell(lst1.tete(), None)bksl-nl cellulepy-undcourante = lst3.headbksl-nl # N\u00e9cessit\u00e9 de r\u00e9ajuster lst1, sinon on risque de copier deux fois son 1er \u00e9l\u00e9ment !!bksl-nl lst1.head = lst1.head.suivbksl-nl bksl-nl for liste in (lst1, lst2):bksl-nl while not liste.estpy-undvide():bksl-nl x = liste.tete()bksl-nl cellulepy-undcourante.suiv = Cell(x, None)bksl-nl cellulepy-undcourante = cellulepy-undcourante.suivbksl-nl liste = liste.queue()bksl-nl bksl-nl return lst3bksl-nlbksl-nlbksl-nldef listpy-undinsert(x, lst):bksl-nl if lst.estpy-undvide():bksl-nl l = ListeChainee()bksl-nl l.insert(x)bksl-nl return lbksl-nl elif x < lst.tete():bksl-nl l = ListeChainee()bksl-nl l.insert(x)bksl-nl return ...bksl-nl else:bksl-nl l = ListeChainee()bksl-nl l.insert(lst.tete())bksl-nl return ...bksl-nl class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.val = vbksl-nl self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl \"\"\"Initialise une liste vide.\"\"\"bksl-nl self.head = Nonebksl-nl bksl-nl def estpy-undvide(self):bksl-nl return self.head is Nonebksl-nl bksl-nl def insert(self, element):bksl-nl \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl self.head = Cell(element, self.head)bksl-nl bksl-nl def tete(self):bksl-nl \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl bksl-nl assert self.head is not None , \"tete : erreur liste vide\"bksl-nl return self.head.valbksl-nl bksl-nl def queue(self):bksl-nl \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl assert self.head is not None , \"queue : erreur liste vide\"bksl-nl bksl-nl reste = ListeChainee()bksl-nl reste.head = self.head.suivbksl-nl return restebksl-nl bksl-nl def affiche(self):bksl-nl \"\"\" Affiche les \u00e9l\u00e9ments d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl liste = selfbksl-nl elements = []bksl-nl while not liste.estpy-undvide():bksl-nl elements.append(str(liste.tete()))bksl-nl liste = liste.queue()bksl-nl return '[' + ','.join(elements) + ']'bksl-nlbksl-nldef concatener(lst1, lst2):bksl-nl \"\"\" Renvoie une nouvelle liste cha\u00een\u00e9e issue de la concat\u00e9nation de lst1 et lst2, c-a-dbksl-nl form\u00e9e des \u00e9l\u00e9ments de l1 puis de l2;bksl-nl lst1, lst2: listes cha\u00een\u00e9es non videsbksl-nl \"\"\"bksl-nl assert not lst1.estpy-undvide() and not lst2.estpy-undvide(), \"Erreur: liste vide\"bksl-nl bksl-nl # Cr\u00e9ation d'une liste vide et d'une r\u00e9f\u00e9rence sur le dernier \u00e9l\u00e9ment de cette listebksl-nl lst3 = ListeChainee()bksl-nl lst3.head = Cell(lst1.tete(), None)bksl-nl cellulepy-undcourante = lst3.headbksl-nl # N\u00e9cessit\u00e9 de r\u00e9ajuster lst1, sinon on risque de copier deux fois son 1er \u00e9l\u00e9ment !!bksl-nl lst1.head = lst1.head.suivbksl-nl bksl-nl for liste in (lst1, lst2):bksl-nl while not liste.estpy-undvide():bksl-nl x = liste.tete()bksl-nl cellulepy-undcourante.suiv = Cell(x, None)bksl-nl cellulepy-undcourante = cellulepy-undcourante.suivbksl-nl liste = liste.queue()bksl-nl bksl-nl return lst3bksl-nlbksl-nlbksl-nldef listpy-undinsert(x, lst):bksl-nl if lst.estpy-undvide():bksl-nl l = ListeChainee()bksl-nl l.insert(x)bksl-nl return lbksl-nl elif x < lst.tete():bksl-nl l = ListeChainee()bksl-nl l.insert(x)bksl-nl return concatener(l, lst)bksl-nl else:bksl-nl l = ListeChainee()bksl-nl l.insert(lst.tete())bksl-nl return concatener(l, listpy-undinsert(x, lst.queue()))bksl-nl A Z","title":"Exercice 3 - Insertion dans une liste cha\u00een\u00e9e tri\u00e9e ... version r\u00e9cursive ;)"},{"location":"NSITerm/SD/C6E1.html#exercice-4-listes-identiques","text":"Compl\u00e9ter la fonction identiques(lst1, lst2) qui renvoie un bool\u00e9en indiquant si les listes lst1 et lst2 sont identiques c'est-\u00e0-dire contiennent les m\u00eames \u00e9l\u00e9ments, dans le m\u00eame ordre. Une approche it\u00e9rative sera adopt\u00e9e (... pour une fois \ud83e\udd73) Indication On utilise ici l'impl\u00e9mentation des listes cha\u00een\u00e9es avec la classe ListeChainee . On essaiera de tirer au mieux profit des commentaires. ### Lancer l1 = ListeChainee()bksl-nll2 = ListeChainee()bksl-nll3 = ListeChainee()bksl-nll4 = ListeChainee()bksl-nl bksl-nll1.insert(5)bksl-nll1.insert(3)bksl-nll1.insert(1)bksl-nl bksl-nll3.insert(5)bksl-nll3.insert(3)bksl-nll3.insert(1)bksl-nl bksl-nlassert identiques(l1, l3) is Truebksl-nlassert identiques(l1, l2) is Falsebksl-nlassert identiques(l2, l4) is Truebksl-nlassert identiques(l2, l3) is Falsebksl-nlbksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.val = vbksl-nl self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl \"\"\"Initialise une liste vide.\"\"\"bksl-nl self.head = Nonebksl-nl bksl-nl def estpy-undvide(self):bksl-nl return self.head is Nonebksl-nl bksl-nl def insert(self, element):bksl-nl \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl self.head = Cell(element, self.head)bksl-nl bksl-nl def tete(self):bksl-nl \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl bksl-nl assert self.head is not None , \"tete : erreur liste vide\"bksl-nl return self.head.valbksl-nl bksl-nl def queue(self):bksl-nl \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl assert self.head is not None , \"queue : erreur liste vide\"bksl-nl bksl-nl reste = ListeChainee()bksl-nl reste.head = self.head.suivbksl-nl return restebksl-nl bksl-nl def affiche(self):bksl-nl \"\"\" Renvoie les \u00e9l\u00e9ments d'une liste chain\u00e9e sous forme d'une chaine\"\"\"bksl-nl bksl-nl liste = selfbksl-nl elements = []bksl-nl while not liste.estpy-undvide():bksl-nl elements.append(str(liste.tete()))bksl-nl liste = liste.queue()bksl-nl return '[' + ','.join(elements) + ']'bksl-nlbksl-nl# Fonction 'identiques'bksl-nl# \u00c0 compl\u00e9terbksl-nlbksl-nldef identiques(lst1, lst2):bksl-nl \"\"\"bksl-nl Renvoie True si lst1 et lst2 sont identiques, False sinon.bksl-nl \"\"\"bksl-nl # 1) On parcours les 2 listes en m\u00eame tempsbksl-nl while not lst1.estpy-undvide() and not lst2.estpy-undvide():bksl-nl if lst1.tete() != lst2.tete():bksl-nl return Falsebksl-nl # Les \u00e9l\u00e9ments sont identiques, on avance jusqu'\u00e0 la prochaine cellulebksl-nl ...bksl-nl ...bksl-nl bksl-nl # 2) On a quitt\u00e9 la boucle: les \u00e9l\u00e9ments sont jusqu'ici identiques, maisbksl-nl # au moins une des 2 listes est vide!bksl-nl if lst1.estpy-undvide():bksl-nl # On aura identit\u00e9 uniquement si lst2 est aussi vide!bksl-nl return ...bksl-nl else:bksl-nl # Cas trivial: ici lst2 est vide mais pas lst1, donc ...!?bksl-nl return ...bksl-nl class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.val = vbksl-nl self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl \"\"\"Initialise une liste vide.\"\"\"bksl-nl self.head = Nonebksl-nl bksl-nl def estpy-undvide(self):bksl-nl return self.head is Nonebksl-nl bksl-nl def insert(self, element):bksl-nl \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl self.head = Cell(element, self.head)bksl-nl bksl-nl def tete(self):bksl-nl \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl bksl-nl assert self.head is not None , \"tete : erreur liste vide\"bksl-nl return self.head.valbksl-nl bksl-nl def queue(self):bksl-nl \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl assert self.head is not None , \"queue : erreur liste vide\"bksl-nl bksl-nl reste = ListeChainee()bksl-nl reste.head = self.head.suivbksl-nl return restebksl-nl bksl-nl def affiche(self):bksl-nl \"\"\" Renvoie les \u00e9l\u00e9ments d'une liste chain\u00e9e sous forme d'une chaine\"\"\"bksl-nl bksl-nl liste = selfbksl-nl elements = []bksl-nl while not liste.estpy-undvide():bksl-nl elements.append(str(liste.tete()))bksl-nl liste = liste.queue()bksl-nl return '[' + ','.join(elements) + ']'bksl-nlbksl-nl# Fonction 'identiques'bksl-nl# \u00c0 compl\u00e9terbksl-nlbksl-nldef identiques(lst1, lst2):bksl-nl \"\"\"bksl-nl Renvoie True si lst1 et lst2 sont identiques, False sinon.bksl-nl \"\"\"bksl-nl # 1) On parcours les 2 listes en m\u00eame tempsbksl-nl while not lst1.estpy-undvide() and not lst2.estpy-undvide():bksl-nl if lst1.tete() != lst2.tete():bksl-nl return Falsebksl-nl # Les \u00e9l\u00e9ments sont identiques, on avance jusqu'\u00e0 la prochaine cellulebksl-nl lst1 = lst1.queue()bksl-nl lst2 = lst2.queue(bksl-nl bksl-nl # 2) On a quitt\u00e9 la boucle: les \u00e9l\u00e9ments sont jusqu'ici identiques, maisbksl-nl # au moins une des 2 listes est vide!bksl-nl if lst1.estpy-undvide():bksl-nl # On aura identit\u00e9 uniquement si lst2 est aussi vide!bksl-nl return lst2.estpy-undvide()bksl-nl else:bksl-nl # Cas trivial: ici lst2 est vide mais pas lst1, donc ...!?bksl-nl return Falsebksl-nl A Z","title":"Exercice 4 - Listes identiques"},{"location":"NSITerm/SD/C6E1.html#probleme-2-creation-dune-classe-pile-avec-une-liste-chainee","text":"On consid\u00e8re le type abstrait de donn\u00e9es Pile muni des op\u00e9rations suivantes: creer_pile_vide: \\(\\varnothing\\longrightarrow\\) Pile ; est_pilevide: Pile \\(\\longrightarrow\\) Bool\u00e9en ; empiler: Pile , element \\(\\longrightarrow\\varnothing\\) ; d\u00e9piler: Pile \\(\\longrightarrow\\) element ( avec Pile non vide ); On se propose de donner une r\u00e9alisation possible de ce TAD avec une liste cha\u00een\u00e9e. Indication On utilise ici l'impl\u00e9mentation des listes cha\u00een\u00e9es avec la classe ListeChainee donn\u00e9e plus haut. De plus, \u00e9tant donn\u00e9 la particularit\u00e9 de l'initialisateur ( __init__ ) en python, la cr\u00e9ation de la pile vide se fera simplement en instanciant un objet pile par l'appel Pile() . On cr\u00e9e une classe Pile en l'initialisant avec une liste vide. Compl\u00e9ter les m\u00e9thodes de cette classe. ### Lancer p = Pile()bksl-nlp.empiler(10)bksl-nlp.empiler(5)bksl-nlp.empiler(1)bksl-nlassert p.depiler() == 1bksl-nlassert p.depiler() == 5bksl-nlassert p.depiler() == 10bksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder class Cell:bksl-nl \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl self.val = vbksl-nl self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl \"\"\"Initialise une liste vide.\"\"\"bksl-nl self.head = Nonebksl-nl bksl-nl def estpy-undvide(self):bksl-nl return self.head is Nonebksl-nl bksl-nl def insert(self, element):bksl-nl \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl self.head = Cell(element, self.head)bksl-nl bksl-nl def tete(self):bksl-nl \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl bksl-nl assert self.head is not None , \"tete : erreur liste vide\"bksl-nl return self.head.valbksl-nl bksl-nl def queue(self):bksl-nl \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl assert self.head is not None , \"queue : erreur liste vide\"bksl-nl bksl-nl reste = ListeChainee()bksl-nl reste.head = self.head.suivbksl-nl return restebksl-nl bksl-nl def affiche(self):bksl-nl \"\"\" Renvoie les \u00e9l\u00e9ments d'une liste chain\u00e9e sous forme d'une chaine\"\"\"bksl-nl bksl-nl liste = selfbksl-nl elements = []bksl-nl while not liste.estpy-undvide():bksl-nl elements.append(str(liste.tete()))bksl-nl liste = liste.queue()bksl-nl return '[' + ','.join(elements) + ']'bksl-nl bksl-nl# \u00c0 compl\u00e9terbksl-nlbksl-nlclass Pile:bksl-nl \"\"\" Une classe pile \u00e0 base de liste cha\u00een\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl self.py-undpile = ListeChainee()bksl-nl bksl-nl def estpy-undpilevide(self):bksl-nl return self.py-undpile.estpy-undvide()bksl-nl bksl-nl def empiler(self, x):bksl-nl passbksl-nl bksl-nl def depiler(self):bksl-nl assert not self.estpy-undpilevide(), \"Erreur pile vide\"bksl-nl passbksl-nlbksl-nl class Pile:bksl-nl \"\"\" Une classe pile \u00e0 base de liste cha\u00een\u00e9e\"\"\"bksl-nl bksl-nl def py-undpy-undinitpy-undpy-und(self):bksl-nl self.py-undpile = ListeChainee()bksl-nl bksl-nl def estpy-undpilevide(self):bksl-nl return self.py-undpile.estpy-undvide()bksl-nl bksl-nl def empiler(self, x):bksl-nl self.py-undpile.insert(x)bksl-nl bksl-nl def depiler(self):bksl-nl assert not self.estpy-undpilevide(), \"Erreur pile vide\"bksl-nl bksl-nl val = self.py-undpile.tete()bksl-nl self.py-undpile = self.py-undpile.queue()bksl-nl return valbksl-nl bksl-nl def sommet(self):bksl-nl assert not self.estpy-undpilevide()bksl-nl return self.py-undpile.tete()bksl-nl A Z","title":"Probl\u00e8me 2 - Cr\u00e9ation d'une classe Pile avec une liste cha\u00een\u00e9e"},{"location":"NSITerm/SD/C6E1P.html","text":"TAD Liste : Exercices \u2693\ufe0e Exercice 1 Insertion / Suppression \u2693\ufe0e On reprend la r\u00e9alisation d'une liste cha\u00een\u00e9e du cours et on se propose d'ajouter \u00e0 l'ensemble des op\u00e9rations, l'insertion et la suppression d'un \u00e9l\u00e9ment \u00e0 un index donn\u00e9. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Cell : \"\"\" Une classe pour d\u00e9crire une cellule (maillon) d'une liste chain\u00e9e\"\"\" def __init__ ( self , v , s ): self . cle = v self . suiv = s def est_vide ( l ): return l is None def tete ( l ): \"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\" assert l is not None , \"tete: erreur liste vide\" return l . cle def queue ( l ): \"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\" assert not est_vide ( l ), \"queue: erreur liste vide\" return l . suiv 1. \u00c9crire une fonction inserer qui prend pour param\u00e8tres un \u00e9l\u00e9ment x , une position k , une liste cha\u00een\u00e9e non vide l et qui va ins\u00e8rer x \u00e0 l'index k de la liste l . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 def inserer ( x , k , l ): \"\"\" Ins\u00e8re x \u00e0 l'index k de la liste l non vide\"\"\" if k == 0 : c = Cell ( tete ( l ), queue ( l )) l . cle = x l . suiv = c else : pos = 1 # Initialisation de 2 pointeurs et de la cellule \u00e0 ins\u00e9rer # +---+---+---+... # | x0| x1| x2|... # +---+---+---+... # ^ ^ # | | # av. insertion # (pos) cell_avant = l cell_insertion = queue ( l ) cell_a_inserer = Cell ( x , None ) # D\u00e9placement des pointeurs jusqu'\u00e0 trouver l'index k while pos != k : cell_insertion = queue ( cell_insertion ) cell_avant = queue ( cell_avant ) pos += 1 # On a trouv\u00e9 la position, on assure maintenant le cha\u00eenage cell_avant . suiv = cell_a_inserer cell_a_inserer . suiv = cell_insertion lst = Cell ( 3 , Cell ( 7 , Cell ( 9 , None ))) inserer ( - 1 , 0 , lst ) print ( tete ( queue ( lst ))) print ( tete ( lst )) 1 2 3 -1 2. \u00c9crire une fonction supprimer qui prend en param\u00e8tres un index k et une liste l non vide et qui supprime l'\u00e9l\u00e9ment d'index k de la liste. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 def supprimer ( k , l ): \"\"\" Supprime la cellule d'index k de la liste non vide l\"\"\" if k == 0 : l . cle = tete ( queue ( l )) l . suiv = queue ( queue ( l )) else : pos = 1 # Initialisation de 2 pointeurs autour de la cellule \u00e0 supprimer # +---+---+---+... # | x0| x1| x2|... # +---+---+---+... # ^ ^ ^ # | | | # av.suppr \\ # apres cell_avant = l cell_apres = queue ( queue ( l )) # D\u00e9placement des pointeurs autour de l'index k while pos != k : cell_apres = queue ( cell_apres ) cell_avant = queue ( cell_avant ) pos += 1 # On a trouv\u00e9 la cellule \u00e0 supprimer, on \u00e9tablit # le cha\u00eenage de mani\u00e8re \u00e0 la \"court-circuiter\" cell_avant . suiv = cell_apres 1 2 3 supprimer ( 0 , lst ) print ( tete ( lst )) print ( tete ( queue ( lst ))) 1 2 3 7 3. Que peut-on dire du co\u00fbt en temps de ces op\u00e9rations? Probl\u00e8me 1 - La concat\u00e9nation de deux listes cha\u00een\u00e9es \u2693\ufe0e On reprend la structure de liste chain\u00e9e vue en cours, construite avec la classe ListeChainee . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 class Cell : \"\"\" Une classe pour d\u00e9crire un maillon d'une liste chain\u00e9e\"\"\" def __init__ ( self , v , s ): self . val = v self . suiv = s class ListeChainee : def __init__ ( self , m = None ): \"\"\"Initialise une liste vide.\"\"\" self . maillon = m def est_vide ( self ): return self . maillon is None def insert ( self , element ): \"\"\" Construit une liste en ins\u00e9rant 'element' en tete\"\"\" # On fait attention \u00e0 maintenir un cha\u00eenage correct: # un maillon a 2 composantes: un \u00e9l\u00e9ment et une ListeChainee ! self . maillon = Cell ( element , ListeChainee ( self . maillon )) def tete ( self ): \"\"\"Renvoie le contenu de la premiere cellule\"\"\" assert self . maillon is not None , \"tete : erreur liste vide\" return self . maillon . val def queue ( self ): \"\"\"Renvoie la queue de la liste\"\"\" assert self . maillon is not None , \"queue : erreur liste vide\" return self . maillon . suiv L'objectif de cet exercice est d'\u00e9crire une fonction permettant de concat\u00e9ner ( mettre bout \u00e0 bout ) deux listes. Solution autorisant les effets de bord \u2693\ufe0e \u00c9tant donn\u00e9es deux listes chain\u00e9es l1 et l2 : 1 2 3 4 5 6 7 8 l1 = ListeChainee () l1 . insert ( 5 ) l1 . insert ( 3 ) l1 . insert ( 1 ) l2 = ListeChainee () l2 . insert ( 10 ) l2 . insert ( 7 ) Qu'est-ce que la concat\u00e9nation de l1 et l2 ? Si l2 est vide, la r\u00e9ponse est triviale, il s'agit de l1 ; Sinon il s'agit de la liste construite \u00e0 partir de l'\u00e9l\u00e9ment de t\u00eate de l2 et de la concat\u00e9nation de l1 avec la queue de l2 . Voici une illustration de la situation apr\u00e8s une telle concat\u00e9nation: Compl\u00e9ter la fonction concat ci-dessous qui prend en param\u00e8tres deux listes l1 et l2 et qui proc\u00e8de \u00e0 leur concat\u00e9nation, c'est-\u00e0-dire qui place l1 au bout de l2 . Le r\u00e9sultat de la concat\u00e9nation se trouvant dans l1 . 1 2 3 4 5 6 7 def concat ( l1 , l2 ): \"\"\" renvoie la concat\u00e9nation l2,l1, avec r\u00e9sultat dans l1\"\"\" if ... : return l1 else : concat ( l1 , ... ) . insert ( ... ) return l1 1 # Votre r\u00e9ponse 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 # TESTS - \u00c0 ex\u00e9cuter l1 = ListeChainee () l1 . insert ( 5 ) l1 . insert ( 3 ) l1 . insert ( 1 ) l2 = ListeChainee () l2 . insert ( 10 ) l2 . insert ( 7 ) def dernier ( l ): \"\"\" renvoie la derni\u00e8re cellule de l\"\"\" assert not l . est_vide () cellule = l # On d\u00e9place la cellule tant que la queue n'est vide. while not cellule . queue () . est_vide (): cellule = cellule . queue () return cellule l = concat ( l1 , l2 ) assert l . tete () == 7 assert l . queue () . tete () == 10 assert dernier ( l ) . tete () == 5 print ( 'Test OK' ) 1 Test OK La fonction concat est-elle r\u00e9cursive? Quel probl\u00e8me peut-on identifier? Solution r\u00e9duisant les effets de bord \u2693\ufe0e On souhaite contourner le probl\u00e8me identifi\u00e9 pr\u00e9c\u00e9d\u00e9mment, en travaillant sur une copie de liste. Le code d'une fonction copie est donn\u00e9e ci-dessous. 1 2 3 4 5 6 7 def copie ( c , liste ): \"\"\" R\u00e9alise la copie de 'liste' dans une liste cha\u00een\u00e9e vide c.\"\"\" if liste . queue () . est_vide (): c . insert ( liste . tete ()) else : copie ( c , liste . queue ()) c . insert ( liste . tete ()) 1. \u00c9crire le code permettant de r\u00e9aliser une copie de la liste l1 utilis\u00e9e dans les tests pr\u00e9c\u00e9dents. 1 # R\u00e9ponse 2. Compl\u00e9ter la fonction concat\u00e9ner ci-dessous: 1 2 3 4 5 6 7 8 def concatener ( l1 , l2 ): \"\"\" Renvoie une nouvelle liste cha\u00een\u00e9e issue de la concat\u00e9nation de l1 et l2; l1, l2: listes cha\u00een\u00e9es \"\"\" l1_copie = ... copie ( l1_copie , l1 ) concat ( ... , ... ) return l1_copie 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def concat ( l1 , l2 ): \"\"\" renvoie la concat\u00e9nation de l2 + l1 (l1 \"au bout\" de l2) en mettant le r\u00e9sultat \u00e9tant dans l1\"\"\" if l2 . est_vide (): return l1 else : concat ( l1 , l2 . queue ()) . insert ( l2 . tete ()) return l1 def concatener ( l1 , l2 ): \"\"\" Renvoie une nouvelle liste cha\u00een\u00e9e issue de la concat\u00e9nation de l1 et l2; l1, l2: listes cha\u00een\u00e9es \"\"\" l1_copie = ListeChainee () copie ( l1_copie , l1 ) concat ( l1_copie , l2 ) return l1_copie 3. Tester votre fonction concat\u00e9ner . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # TESTS l1 = ListeChainee () l1 . insert ( 5 ) l1 . insert ( 3 ) l1 . insert ( 1 ) l2 = ListeChainee () l2 . insert ( 10 ) l2 . insert ( 7 ) l3 = concatener ( l2 , l1 ) while not l3 . est_vide (): print ( l3 . tete (), end = ' ' ) l3 = l3 . queue () Exercice 1 - Recherche s\u00e9quentielle dans une liste cha\u00een\u00e9e \u2693\ufe0e Ecrire une fonction trouver(x, lst) qui renvoie l'index de la premi\u00e8re occurence de x dans la liste cha\u00een\u00e9e lst ou None si non trouv\u00e9. On donnera deux versions: r\u00e9cursive et it\u00e9rative. Tester. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 # r\u00e9cursif def place ( x , l , i ): \"\"\" Fonction auxilliaire r\u00e9cursive pour 'trouver' \"\"\" if l . est_vide (): return None elif x == l . tete (): return i else : return place ( x , l . queue (), i + 1 ) def trouver ( x , lst ): return place ( x , lst , 0 ) # it\u00e9ratif def trouver_iter ( x , lst ): i = 0 while not lst . est_vide (): if lst . tete () == x : return i i += 1 lst = lst . queue () return None 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 # TESTS l1 = ListeChainee () l1 . insert ( 5 ) l1 . insert ( 3 ) l1 . insert ( 1 ) l1 . insert ( 10 ) l1 . insert ( 7 ) def test_trouver ( val , lst ): t = lst print ( f 'Cherche { val } r\u00e9cursif ----' ) print ( trouver ( val , t )) while not t . est_vide (): print ( t . tete (), end = ' ' ) t = t . queue () t = lst print ( f ' \\n\\n Cherche { val } It\u00e9ratif ----' ) print ( trouver_iter ( val , t )) while not t . est_vide (): print ( t . tete (), end = ' ' ) t = t . queue () print ( ' \\n\\n ' ) test_trouver ( 1 , l1 ) test_trouver ( 100 , l1 ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Cherche 1 r\u00e9cursif ---- 2 7 10 1 3 5 Cherche 1 It\u00e9ratif ---- 2 7 10 1 3 5 Cherche 100 r\u00e9cursif ---- None 7 10 1 3 5 Cherche 100 It\u00e9ratif ---- None 7 10 1 3 5 Exercice 2 - Insertion dans une liste tri\u00e9e \u2693\ufe0e 1. \u00c9crire une fonction inserer(x, lst) qui prend en param\u00e8tres un entier x et une liste cha\u00een\u00e9e lst d'entiers, suppos\u00e9e tri\u00e9e par ordre croissant et qui renvoie une nouvelle liste dans laquelle x a \u00e9t\u00e9 ins\u00e9r\u00e9 \u00e0 sa place . Coup de pouce Pensez \u00e0 revoir l'exercice 5 (optionnel) du chapitre 1. 1 2 3 4 5 6 7 8 9 10 11 12 13 def insert ( x , lst ): if lst . est_vide (): l = ListeChainee () l . insert ( x ) return l elif x < lst . tete (): l = ListeChainee () l . insert ( x ) return concatener ( lst , l ) else : l = ListeChainee () l . insert ( lst . tete ()) return concatener ( insert ( x , lst . queue ()), l ) 2. V\u00e9rifier votre r\u00e9ponse en utilisant la cellule ci-dessous. 1 2 3 4 5 6 7 8 9 10 # Tests l1 = ListeChainee () l1 . insert ( 5 ) l1 . insert ( 3 ) l1 . insert ( 1 ) l2 = ListeChainee () l4 = insert ( 5 , l1 ) while not l4 . est_vide (): print ( l4 . tete (), end = ' ' ) l4 = l4 . queue () Exercice 3 - Listes identiques \u2693\ufe0e Ecrire une fonction identiques(l1, l2) qui renvoie un bool\u00e9en indiquant si les listes l1 et l2 sont identiques c'est-\u00e0-dire contiennent les m\u00eames \u00e9l\u00e9ments, dans le m\u00eame ordre. 1 2 3 4 5 6 7 8 9 def identiques ( l1 , l2 ): while not l1 . est_vide () and not l2 . est_vide (): if l1 . tete () != l2 . tete (): return False l1 = l1 . queue () l2 = l2 . queue () if l1 . est_vide (): return l2 . est_vide () return l1 . est_vide () 1 2 3 4 5 6 7 8 9 10 11 12 # Tests l1 = ListeChainee () l1 . insert ( 5 ) l1 . insert ( 3 ) l1 . insert ( 1 ) l2 = ListeChainee () l3 = ListeChainee () l3 . insert ( 5 ) l3 . insert ( 3 ) l3 . insert ( 1 ) print ( identiques ( l1 , l3 )) print ( identiques ( l1 , l2 )) Probl\u00e8me 4 - Cr\u00e9ation d'une classe Pile avec une liste cha\u00een\u00e9e \u2693\ufe0e L'interface de la structure de donn\u00e9es Pile comporte ( rappels ! ) les op\u00e9rations suivantes: est_pilevide; empiler; d\u00e9piler; On se propose de donner une r\u00e9alisation possible avec une liste cha\u00een\u00e9e, en adoptant le paradigme objet. 1 2 3 4 5 6 class Cell : \"\"\" Une classe pour d\u00e9crire un maillon d'une liste chain\u00e9e\"\"\" def __init__ ( self , v , s ): self . val = v self . suiv = s On cr\u00e9e une classe Pile en l'initialisant avec une liste vide. Compl\u00e9ter les m\u00e9thodes de cette classe. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 class Pile : \"\"\" Une classe pile \u00e0 base de liste cha\u00een\u00e9e\"\"\" def __init__ ( self ): self . _pile = ListeChainee () def est_pilevide ( self ): return self . _pile . est_vide () def empiler ( self , x ): self . _pile . insert ( x ) def depiler ( self ): assert not self . est_pilevide (), \"Erreur pile vide\" val = self . _pile . tete () self . _pile = self . _pile . queue () return val def sommet ( self ): assert not self . est_pilevide () return self . _pile . tete () 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # TESTS - A EXECUTER def test_pile (): p = Pile () p . empiler ( 10 ) p . empiler ( 20 ) p . empiler ( 5 ) assert p . sommet () == 5 assert p . depiler () == 5 assert p . sommet () == 20 p . depiler () p . depiler () p . est_pilevide () return 'Tests OK' test_pile ()","title":"C6E1P"},{"location":"NSITerm/SD/C6E1P.html#tad-liste-exercices","text":"","title":"TAD Liste : Exercices"},{"location":"NSITerm/SD/C6E1P.html#exercice-1-insertion-suppression","text":"On reprend la r\u00e9alisation d'une liste cha\u00een\u00e9e du cours et on se propose d'ajouter \u00e0 l'ensemble des op\u00e9rations, l'insertion et la suppression d'un \u00e9l\u00e9ment \u00e0 un index donn\u00e9. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Cell : \"\"\" Une classe pour d\u00e9crire une cellule (maillon) d'une liste chain\u00e9e\"\"\" def __init__ ( self , v , s ): self . cle = v self . suiv = s def est_vide ( l ): return l is None def tete ( l ): \"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\" assert l is not None , \"tete: erreur liste vide\" return l . cle def queue ( l ): \"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\" assert not est_vide ( l ), \"queue: erreur liste vide\" return l . suiv 1. \u00c9crire une fonction inserer qui prend pour param\u00e8tres un \u00e9l\u00e9ment x , une position k , une liste cha\u00een\u00e9e non vide l et qui va ins\u00e8rer x \u00e0 l'index k de la liste l . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 def inserer ( x , k , l ): \"\"\" Ins\u00e8re x \u00e0 l'index k de la liste l non vide\"\"\" if k == 0 : c = Cell ( tete ( l ), queue ( l )) l . cle = x l . suiv = c else : pos = 1 # Initialisation de 2 pointeurs et de la cellule \u00e0 ins\u00e9rer # +---+---+---+... # | x0| x1| x2|... # +---+---+---+... # ^ ^ # | | # av. insertion # (pos) cell_avant = l cell_insertion = queue ( l ) cell_a_inserer = Cell ( x , None ) # D\u00e9placement des pointeurs jusqu'\u00e0 trouver l'index k while pos != k : cell_insertion = queue ( cell_insertion ) cell_avant = queue ( cell_avant ) pos += 1 # On a trouv\u00e9 la position, on assure maintenant le cha\u00eenage cell_avant . suiv = cell_a_inserer cell_a_inserer . suiv = cell_insertion lst = Cell ( 3 , Cell ( 7 , Cell ( 9 , None ))) inserer ( - 1 , 0 , lst ) print ( tete ( queue ( lst ))) print ( tete ( lst )) 1 2 3 -1 2. \u00c9crire une fonction supprimer qui prend en param\u00e8tres un index k et une liste l non vide et qui supprime l'\u00e9l\u00e9ment d'index k de la liste. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 def supprimer ( k , l ): \"\"\" Supprime la cellule d'index k de la liste non vide l\"\"\" if k == 0 : l . cle = tete ( queue ( l )) l . suiv = queue ( queue ( l )) else : pos = 1 # Initialisation de 2 pointeurs autour de la cellule \u00e0 supprimer # +---+---+---+... # | x0| x1| x2|... # +---+---+---+... # ^ ^ ^ # | | | # av.suppr \\ # apres cell_avant = l cell_apres = queue ( queue ( l )) # D\u00e9placement des pointeurs autour de l'index k while pos != k : cell_apres = queue ( cell_apres ) cell_avant = queue ( cell_avant ) pos += 1 # On a trouv\u00e9 la cellule \u00e0 supprimer, on \u00e9tablit # le cha\u00eenage de mani\u00e8re \u00e0 la \"court-circuiter\" cell_avant . suiv = cell_apres 1 2 3 supprimer ( 0 , lst ) print ( tete ( lst )) print ( tete ( queue ( lst ))) 1 2 3 7 3. Que peut-on dire du co\u00fbt en temps de ces op\u00e9rations?","title":"Exercice 1 Insertion / Suppression"},{"location":"NSITerm/SD/C6E1P.html#probleme-1-la-concatenation-de-deux-listes-chainees","text":"On reprend la structure de liste chain\u00e9e vue en cours, construite avec la classe ListeChainee . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 class Cell : \"\"\" Une classe pour d\u00e9crire un maillon d'une liste chain\u00e9e\"\"\" def __init__ ( self , v , s ): self . val = v self . suiv = s class ListeChainee : def __init__ ( self , m = None ): \"\"\"Initialise une liste vide.\"\"\" self . maillon = m def est_vide ( self ): return self . maillon is None def insert ( self , element ): \"\"\" Construit une liste en ins\u00e9rant 'element' en tete\"\"\" # On fait attention \u00e0 maintenir un cha\u00eenage correct: # un maillon a 2 composantes: un \u00e9l\u00e9ment et une ListeChainee ! self . maillon = Cell ( element , ListeChainee ( self . maillon )) def tete ( self ): \"\"\"Renvoie le contenu de la premiere cellule\"\"\" assert self . maillon is not None , \"tete : erreur liste vide\" return self . maillon . val def queue ( self ): \"\"\"Renvoie la queue de la liste\"\"\" assert self . maillon is not None , \"queue : erreur liste vide\" return self . maillon . suiv L'objectif de cet exercice est d'\u00e9crire une fonction permettant de concat\u00e9ner ( mettre bout \u00e0 bout ) deux listes.","title":"Probl\u00e8me 1 - La concat\u00e9nation de deux listes cha\u00een\u00e9es"},{"location":"NSITerm/SD/C6E1P.html#exercice-1-recherche-sequentielle-dans-une-liste-chainee","text":"Ecrire une fonction trouver(x, lst) qui renvoie l'index de la premi\u00e8re occurence de x dans la liste cha\u00een\u00e9e lst ou None si non trouv\u00e9. On donnera deux versions: r\u00e9cursive et it\u00e9rative. Tester. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 # r\u00e9cursif def place ( x , l , i ): \"\"\" Fonction auxilliaire r\u00e9cursive pour 'trouver' \"\"\" if l . est_vide (): return None elif x == l . tete (): return i else : return place ( x , l . queue (), i + 1 ) def trouver ( x , lst ): return place ( x , lst , 0 ) # it\u00e9ratif def trouver_iter ( x , lst ): i = 0 while not lst . est_vide (): if lst . tete () == x : return i i += 1 lst = lst . queue () return None 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 # TESTS l1 = ListeChainee () l1 . insert ( 5 ) l1 . insert ( 3 ) l1 . insert ( 1 ) l1 . insert ( 10 ) l1 . insert ( 7 ) def test_trouver ( val , lst ): t = lst print ( f 'Cherche { val } r\u00e9cursif ----' ) print ( trouver ( val , t )) while not t . est_vide (): print ( t . tete (), end = ' ' ) t = t . queue () t = lst print ( f ' \\n\\n Cherche { val } It\u00e9ratif ----' ) print ( trouver_iter ( val , t )) while not t . est_vide (): print ( t . tete (), end = ' ' ) t = t . queue () print ( ' \\n\\n ' ) test_trouver ( 1 , l1 ) test_trouver ( 100 , l1 ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Cherche 1 r\u00e9cursif ---- 2 7 10 1 3 5 Cherche 1 It\u00e9ratif ---- 2 7 10 1 3 5 Cherche 100 r\u00e9cursif ---- None 7 10 1 3 5 Cherche 100 It\u00e9ratif ---- None 7 10 1 3 5","title":"Exercice 1 - Recherche s\u00e9quentielle dans une liste cha\u00een\u00e9e"},{"location":"NSITerm/SD/C6E1P.html#exercice-2-insertion-dans-une-liste-triee","text":"1. \u00c9crire une fonction inserer(x, lst) qui prend en param\u00e8tres un entier x et une liste cha\u00een\u00e9e lst d'entiers, suppos\u00e9e tri\u00e9e par ordre croissant et qui renvoie une nouvelle liste dans laquelle x a \u00e9t\u00e9 ins\u00e9r\u00e9 \u00e0 sa place . Coup de pouce Pensez \u00e0 revoir l'exercice 5 (optionnel) du chapitre 1. 1 2 3 4 5 6 7 8 9 10 11 12 13 def insert ( x , lst ): if lst . est_vide (): l = ListeChainee () l . insert ( x ) return l elif x < lst . tete (): l = ListeChainee () l . insert ( x ) return concatener ( lst , l ) else : l = ListeChainee () l . insert ( lst . tete ()) return concatener ( insert ( x , lst . queue ()), l ) 2. V\u00e9rifier votre r\u00e9ponse en utilisant la cellule ci-dessous. 1 2 3 4 5 6 7 8 9 10 # Tests l1 = ListeChainee () l1 . insert ( 5 ) l1 . insert ( 3 ) l1 . insert ( 1 ) l2 = ListeChainee () l4 = insert ( 5 , l1 ) while not l4 . est_vide (): print ( l4 . tete (), end = ' ' ) l4 = l4 . queue ()","title":"Exercice 2 - Insertion dans une liste tri\u00e9e"},{"location":"NSITerm/SD/C6E1P.html#probleme-4-creation-dune-classe-pile-avec-une-liste-chainee","text":"L'interface de la structure de donn\u00e9es Pile comporte ( rappels ! ) les op\u00e9rations suivantes: est_pilevide; empiler; d\u00e9piler; On se propose de donner une r\u00e9alisation possible avec une liste cha\u00een\u00e9e, en adoptant le paradigme objet. 1 2 3 4 5 6 class Cell : \"\"\" Une classe pour d\u00e9crire un maillon d'une liste chain\u00e9e\"\"\" def __init__ ( self , v , s ): self . val = v self . suiv = s On cr\u00e9e une classe Pile en l'initialisant avec une liste vide. Compl\u00e9ter les m\u00e9thodes de cette classe. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 class Pile : \"\"\" Une classe pile \u00e0 base de liste cha\u00een\u00e9e\"\"\" def __init__ ( self ): self . _pile = ListeChainee () def est_pilevide ( self ): return self . _pile . est_vide () def empiler ( self , x ): self . _pile . insert ( x ) def depiler ( self ): assert not self . est_pilevide (), \"Erreur pile vide\" val = self . _pile . tete () self . _pile = self . _pile . queue () return val def sommet ( self ): assert not self . est_pilevide () return self . _pile . tete () 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # TESTS - A EXECUTER def test_pile (): p = Pile () p . empiler ( 10 ) p . empiler ( 20 ) p . empiler ( 5 ) assert p . sommet () == 5 assert p . depiler () == 5 assert p . sommet () == 20 p . depiler () p . depiler () p . est_pilevide () return 'Tests OK' test_pile ()","title":"Probl\u00e8me 4 - Cr\u00e9ation d'une classe Pile avec une liste cha\u00een\u00e9e"},{"location":"NSITerm/SD/C6bC1.html","text":"Le TAD dictionnaire \u2693\ufe0e Description \u2693\ufe0e Un dictionnaire ( ou tableau associatif ) peut \u00eatre vu comme la g\u00e9n\u00e9ralisation du tableau vu en 1re, o\u00f9 son index n'est plus forc\u00e9ment un entier naturel. D'un point de vue formel, un dictionnaire ou tableau associatif est un ensemble de paire ( cl\u00e9, valeur ) dans lequel chaque cl\u00e9 n'appara\u00eet qu'une fois. Contrairement \u00e0 la liste o\u00f9 l'ordre est fondamental, un dictionnaire n'est, \u00e0 priori, pas ordonn\u00e9. La propri\u00e9t\u00e9 importante d'un dictionnaire est la pr\u00e9sence ou l'absence d'un \u00e9l\u00e9ment. Les applications sont nombreuses: compilateurs, routeurs, base de donn\u00e9es, etc. Les op\u00e9rations \u2693\ufe0e Les trois principales op\u00e9rations portant sur les dictionnaires sont: l'insertion, la suppression et la recherche. Plus formellement, si \\(D\\) est un dictionnaire: D.inserer(e: \u00e9l\u00e9ment de type (cl\u00e9, valeur)) : la nouvelle paire a \u00e9t\u00e9 int\u00e9gr\u00e9 au dictionnaire; D.supprimer(k: cl\u00e9) : l'\u00e9l\u00e9ment dont la cl\u00e9 est k a \u00e9t\u00e9 supprim\u00e9 du dictionnaire; D.rechercher(k) : si l'\u00e9l\u00e9ment dont la cl\u00e9 est k est pr\u00e9sent dans \\(D\\) , alors on renvoie la valeur associ\u00e9e sinon on renvoie rien . Par ailleurs, on trouve fr\u00e9quemment une op\u00e9ration iterer qui permet de boucler sur toutes les cl\u00e9s du dictionnaire. Impl\u00e9mentation \u2693\ufe0e Les solutions \u2693\ufe0e Les deux principales impl\u00e9mentations efficaces de dictionnaires sont r\u00e9alis\u00e9es \u00e0 base de table de hachage et d' arbre . Savoir r\u00e9aliser ces deux impl\u00e9mentations ne figure pas au programme de terminale NSI . Cependant, on va exposer ici les principales id\u00e9es utilis\u00e9es dans les tables de hachage. Les cl\u00e9s sont transform\u00e9es au pr\u00e9alable en index entier gr\u00e2ce \u00e0 une fonction dite de hachage . Gr\u00e2ce \u00e0 cet index, on peut stocker l'information ( cl\u00e9, valeur ) dans un tableau (appel\u00e9 table de hachage). On peut remarquer que deux cl\u00e9s peuvent conduire \u00e0 un m\u00eame index. Cet \u00e9v\u00e9nement s'appelle une collision . Divers algorithmes existent pour g\u00e9rer les cas de collision. Exemple (peu efficace) \u2693\ufe0e On utilise une fonction de hachage qui transforme une cl\u00e9 de type cha\u00eene de caract\u00e8res en entier, \u00e0 partir de leur code ascii . Voir cet exemple d'impl\u00e9mentation sur Capytale Recherche d'une valeur: comparaison liste / dictionnaire \u2693\ufe0e Dans une liste, la recherche d'une valeur peut avoir un co\u00fbt en temps proportionnel \u00e0 la taille \\(n\\) de la liste (ou \\(\\mathcal{O}(n)\\) ). Le pire des cas arrive si la valeur est absente de la liste. Dans le cas du dictionnaire, tout va d\u00e9pendre de la qualit\u00e9 de la fonction de hachage et de la taille de la table de hachage. Un bon choix peut conduire \u00e0 des recherches en temps constant (ou \\(\\mathcal{O}(1)\\) ). Voici un r\u00e9sum\u00e9 des performances de ces deux types de donn\u00e9es ( disponible sur la page wikipedia en anglais consacr\u00e9e aux tableaux associatifs). Attention c'est l'impl\u00e9mentation avec des tables hachages qui est privil\u00e9gi\u00e9e. Recherche Insertion En moyenne Pire des cas En moyenne Pire des cas Dictionnaire \\(\\mathcal{O}(1)\\) \\(\\mathcal{O}(n)\\) \\(\\mathcal{O}(1)\\) \\(\\mathcal{O}(n)\\) Liste \\(\\mathcal{O}(n)\\) \\(\\mathcal{O}(n)\\) \\(\\mathcal{O}(1)\\) \\(\\mathcal{O}(1)\\) 1","title":"Cours"},{"location":"NSITerm/SD/C6bC1.html#le-tad-dictionnaire","text":"","title":"Le TAD dictionnaire"},{"location":"NSITerm/SD/C6bC1.html#description","text":"Un dictionnaire ( ou tableau associatif ) peut \u00eatre vu comme la g\u00e9n\u00e9ralisation du tableau vu en 1re, o\u00f9 son index n'est plus forc\u00e9ment un entier naturel. D'un point de vue formel, un dictionnaire ou tableau associatif est un ensemble de paire ( cl\u00e9, valeur ) dans lequel chaque cl\u00e9 n'appara\u00eet qu'une fois. Contrairement \u00e0 la liste o\u00f9 l'ordre est fondamental, un dictionnaire n'est, \u00e0 priori, pas ordonn\u00e9. La propri\u00e9t\u00e9 importante d'un dictionnaire est la pr\u00e9sence ou l'absence d'un \u00e9l\u00e9ment. Les applications sont nombreuses: compilateurs, routeurs, base de donn\u00e9es, etc.","title":"Description"},{"location":"NSITerm/SD/C6bC1.html#les-operations","text":"Les trois principales op\u00e9rations portant sur les dictionnaires sont: l'insertion, la suppression et la recherche. Plus formellement, si \\(D\\) est un dictionnaire: D.inserer(e: \u00e9l\u00e9ment de type (cl\u00e9, valeur)) : la nouvelle paire a \u00e9t\u00e9 int\u00e9gr\u00e9 au dictionnaire; D.supprimer(k: cl\u00e9) : l'\u00e9l\u00e9ment dont la cl\u00e9 est k a \u00e9t\u00e9 supprim\u00e9 du dictionnaire; D.rechercher(k) : si l'\u00e9l\u00e9ment dont la cl\u00e9 est k est pr\u00e9sent dans \\(D\\) , alors on renvoie la valeur associ\u00e9e sinon on renvoie rien . Par ailleurs, on trouve fr\u00e9quemment une op\u00e9ration iterer qui permet de boucler sur toutes les cl\u00e9s du dictionnaire.","title":"Les op\u00e9rations"},{"location":"NSITerm/SD/C6bC1.html#implementation","text":"","title":"Impl\u00e9mentation"},{"location":"NSITerm/SD/C6bC1.html#recherche-dune-valeur-comparaison-liste-dictionnaire","text":"Dans une liste, la recherche d'une valeur peut avoir un co\u00fbt en temps proportionnel \u00e0 la taille \\(n\\) de la liste (ou \\(\\mathcal{O}(n)\\) ). Le pire des cas arrive si la valeur est absente de la liste. Dans le cas du dictionnaire, tout va d\u00e9pendre de la qualit\u00e9 de la fonction de hachage et de la taille de la table de hachage. Un bon choix peut conduire \u00e0 des recherches en temps constant (ou \\(\\mathcal{O}(1)\\) ). Voici un r\u00e9sum\u00e9 des performances de ces deux types de donn\u00e9es ( disponible sur la page wikipedia en anglais consacr\u00e9e aux tableaux associatifs). Attention c'est l'impl\u00e9mentation avec des tables hachages qui est privil\u00e9gi\u00e9e. Recherche Insertion En moyenne Pire des cas En moyenne Pire des cas Dictionnaire \\(\\mathcal{O}(1)\\) \\(\\mathcal{O}(n)\\) \\(\\mathcal{O}(1)\\) \\(\\mathcal{O}(n)\\) Liste \\(\\mathcal{O}(n)\\) \\(\\mathcal{O}(n)\\) \\(\\mathcal{O}(1)\\) \\(\\mathcal{O}(1)\\) 1","title":"Recherche d'une valeur: comparaison liste / dictionnaire"},{"location":"PC/HelloWorld.html","text":"Hello World \u2693\ufe0e Il est coutume de commencer l'apprentissage d'un nouveau langage de programmation par le code d'affichage de la phrase Hello World . La d\u00e9clinaison dans le monde des microcontr\u00f4leurs est le clignotement d'une led. Le montage \u2693\ufe0e On connecte une led sur la broche D2 du bo\u00eetier en s\u00e9rie avec une r\u00e9sistance de \\(220\\ \\Omega\\) , en utilisant les connecteurs SIL ( solution 1 ) ou SATA associ\u00e9s \u00e0 la platine de c\u00e2blage ( solution 2 ) de Sciencethic. Solution 1 Solution 2 Dialogue via un terminal REPL \u2693\ufe0e Apr\u00e8s avoir \u00e9tabli une connexion avec le Plug'Py, on va tester via l'interpr\u00e9teur (REPL) quelques instructions, en python, destin\u00e9es \u00e0 allumer puis \u00e9teindre une led. On peut le faire avec PuTTY ou Thonny Commentaires du code L'essentiel des fonctionnalit\u00e9s de la carte r\u00e9side dans le module ppy . Par cons\u00e9quent, on importera presque syst\u00e9matiquement ce module avec import ppy ou uniquement quelques fonctions ou classes par from ppy import ... . Avant de pouvoir utiliser une broche du microcontr\u00f4leur en sortie ou en entr\u00e9e, il faut cr\u00e9er un objet de la classe Pin qui r\u00e9f\u00e9rence cette broche. La syntaxe est la suivante: 1 ma_led = Pin ( 'D2' , Pin . OUT ) Les instructions ma_led.on() et ma_led.off() permettent de placer un niveau haut ou bas de tension sur la broche r\u00e9f\u00e9renc\u00e9e par ma_led . Enfin, delay(...) provoque une attente (la valeur en milliseconde doit \u00eatre plac\u00e9e en param\u00e8tre). Ecriture d'un script \u2693\ufe0e Afin de sauvegarder son travail, on peut naturellement enregistrer son code dans un fichier sur la carte (avec les recommandations d\u00e9j\u00e0 faites sur le lieu de stockage).","title":"Hello World"},{"location":"PC/HelloWorld.html#hello-world","text":"Il est coutume de commencer l'apprentissage d'un nouveau langage de programmation par le code d'affichage de la phrase Hello World . La d\u00e9clinaison dans le monde des microcontr\u00f4leurs est le clignotement d'une led.","title":"Hello World"},{"location":"PC/HelloWorld.html#le-montage","text":"On connecte une led sur la broche D2 du bo\u00eetier en s\u00e9rie avec une r\u00e9sistance de \\(220\\ \\Omega\\) , en utilisant les connecteurs SIL ( solution 1 ) ou SATA associ\u00e9s \u00e0 la platine de c\u00e2blage ( solution 2 ) de Sciencethic. Solution 1 Solution 2","title":"Le montage"},{"location":"PC/HelloWorld.html#dialogue-via-un-terminal-repl","text":"Apr\u00e8s avoir \u00e9tabli une connexion avec le Plug'Py, on va tester via l'interpr\u00e9teur (REPL) quelques instructions, en python, destin\u00e9es \u00e0 allumer puis \u00e9teindre une led. On peut le faire avec PuTTY ou Thonny Commentaires du code L'essentiel des fonctionnalit\u00e9s de la carte r\u00e9side dans le module ppy . Par cons\u00e9quent, on importera presque syst\u00e9matiquement ce module avec import ppy ou uniquement quelques fonctions ou classes par from ppy import ... . Avant de pouvoir utiliser une broche du microcontr\u00f4leur en sortie ou en entr\u00e9e, il faut cr\u00e9er un objet de la classe Pin qui r\u00e9f\u00e9rence cette broche. La syntaxe est la suivante: 1 ma_led = Pin ( 'D2' , Pin . OUT ) Les instructions ma_led.on() et ma_led.off() permettent de placer un niveau haut ou bas de tension sur la broche r\u00e9f\u00e9renc\u00e9e par ma_led . Enfin, delay(...) provoque une attente (la valeur en milliseconde doit \u00eatre plac\u00e9e en param\u00e8tre).","title":"Dialogue via un terminal REPL"},{"location":"PC/HelloWorld.html#ecriture-dun-script","text":"Afin de sauvegarder son travail, on peut naturellement enregistrer son code dans un fichier sur la carte (avec les recommandations d\u00e9j\u00e0 faites sur le lieu de stockage).","title":"Ecriture d'un script"},{"location":"PC/capteurs.html","text":"Mise en \u0153uvre de capteurs \u2693\ufe0e Capteur de temp\u00e9rature \u2693\ufe0e Courbe d'\u00e9talonnage d'une CTN \u2693\ufe0e Il s'agit d'utiliser le Plug'Uino Py pour mesurer la r\u00e9sistance d'une CTN (module 651 054), en faisant varier la temp\u00e9rature. Les r\u00e9sultats seront sauvegard\u00e9s dans un fichier csv . Apr\u00e8s avoir branch\u00e9 le capteur fourni par Sciencethic sur la broche A0 et ouvert l'\u00e9diteur Thonny , on cr\u00e9e un fichier releve_temp.py dont le contenu est le suivant: Script releve_temp.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 # Relev\u00e9 R=f(\u03b8) d'une CTN # Par d\u00e9faut l'acquisition se fait toutes les 30 secondes. Pour changer cette valeur # modifier la constante DELAI (valeur en seconde) __author__ = 'Bruno DARID' __license__ = 'CC-BY-NC-SA 4.0' __email__ = 'bruno.darid@ac-reunion.fr' import os from ppy import ADC , Pin , delay # Quelques 'constantes' DELAI = 30 MSG = \"\"\"==== Acquisition toutes les 30 sec ou param\u00e9trage personnel ==== 1) A l'invite, entrer la temperature lue au thermom\u00e8tre 2) Pour quitter --> ctrl + C \"\"\" def lecture ( entree ): \"\"\" R\u00e9alise une conversion A/N sur 'entree' et renvoie sa valeur \"\"\" return entree . read () def acquisition ( nom_fichier , entree ): \"\"\" Demande une lecture sur 'entree' et \u00e9crit la valeur dans 'nom_fichier'.csv nom_fichier: chaine correspondant au nom du fichier SANS EXTENSION. \"\"\" with open ( nom_fichier + '.csv' , 'w' ) as f : while True : temp = input ( 'Nouvelle valeur de temperature: ' ) n = lecture ( entree ) # demande une conversion f . write ( str ( 10_000 * ( 4095 / n - 1 )) + ';' + temp + ' \\n ' ) # Diviseur de tension avec Rctn et R1=10k sur entr\u00e9e A0 delay ( DELAI * 1000 ) # delay attend des millisecondes def main (): print ( MSG ) os . chdir ( '/flash/Samples/Perso' ) # Se d\u00e9placer dans le r\u00e9p. de travail perso entree_A0 = ADC ( Pin ( 'A0' , Pin . IN )) # On suppose que le capteur est branch\u00e9 sur A0 acquisition ( 'etalonnage' , entree_A0 ) # le fichier sera nomm\u00e9 'etalonnage.csv' if __name__ == \"__main__\" : main () Commentaires de code \u2693\ufe0e La fonction aquisition m\u00e9rite une attention particuli\u00e8re. Elle a pour objectif de commander une lecture et d'\u00e9crire le r\u00e9sultat dans un fichier. Les op\u00e9rations d'entr\u00e9e/sortie sur les fichiers sont g\u00e9n\u00e9ralement effectu\u00e9es avec la fonction open \u00e0 qui on fournit le nom du fichier et le mode d'acc\u00e8s. Typiquement, on utilise une d\u00e9claration comme: 1 2 3 f = open ( mon_fichier , 'r' ) ... f . close () ou 1 2 3 f = open ( mon_fichier , 'w' ) ... f . close () Ici, on utilise une construction un peu plus s\u00fbre, form\u00e9e de la mani\u00e8re suivante: 1 with open ( nom_fichier + '.csv' , 'w' ) as f : qui fermera le fichier quoi qu'il arrive, m\u00eame si une erreur s'est produite. Il s'agit de concepts (tr\u00e8s) avanc\u00e9s du langage ( Exception et Context manager ) qui ne seront pas abord\u00e9s ici. Remarque La relation de la ligne 34 vient du diviseur de tension form\u00e9 par une r\u00e9sistance \\(R_1=10\\ \\mathrm{k\\Omega}\\) et \\(R_{CTN}\\) sur l'entr\u00e9e A0 La fonction main ne pose pas de probl\u00e8me de compr\u00e9hension particulier. Exploitation \u2693\ufe0e Trac\u00e9 d'une courbe d'\u00e9talonnage \u2693\ufe0e L'impl\u00e9mentation Micropython de la carte ne permet pas le trac\u00e9 \\(R=f(\\theta)\\) , la librairie matplotlib n'\u00e9tant pas pr\u00e9sente! A titre indicatif, on peut r\u00e9cup\u00e9rer le fichier csv avec Thonny ( clic droit sur le fichier, puis t\u00e9l\u00e9chargement ). Avec l'installation python de l'ordinateur ou sur basthon , on peut facilement tracer \\(R=f(\\theta)\\) , par exemple avec le code suivant: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import matplotlib.pyplot as plt # A d\u00e9commenter, si l'installation le permet #%matplotlib widget with open ( 'etalonnage2.csv' , 'r' ) as f : mesures = [ ligne . strip () . split ( ';' ) for ligne in f ] # R\u00e9cup\u00e9ration de chaque ligne R = [ float ( point [ 0 ]) for point in mesures ] theta = [ float ( point [ 1 ]) for point in mesures ] fig , ax = plt . subplots ( figsize = ( 10 , 7 )) ax . set ( xlabel = r '$\\theta$(\u00b0C)' , ylabel = r 'R ($\\Omega$)' , ylim = ( 0 , 25_000 ), title = \"Courbe d'\u00e9talonnage d'une CTN\" ) ax . grid () ax . scatter ( theta , R , color = 'green' , marker = 'o' ) # A d\u00e9commenter si l'installation le n\u00e9cessite #fig.show() On obtient alors la courbe d'\u00e9talonnage: Mod\u00e9lisation \u2693\ufe0e Pour mod\u00e9liser la CTN on utilise la relation de Steinhart-Hart ( source Wikipedia ): \\[\\dfrac{1}{T}=A + B\\times \\ln(R) + C\\times(\\ln(R))^3\\] avec : \\(T\\) sa temp\u00e9rature (en kelvins); \\(R\\) sa r\u00e9sistance \u00e9lectrique (en ohms); \\(A, B\\) et \\(C\\) les coefficients de Steinhart-Hart qui caract\u00e9risent chaque thermistance. Il s'agit de calculer les trois coefficients \u00e0 partir de trois mesures de temp\u00e9rature. L'impl\u00e9mentation micropython de la carte n'int\u00e8gre pas les librairies de calculs numpy ou sympy , on programmera directement la r\u00e9solution de ce probl\u00e8me comme indiqu\u00e9 sur la page de Wikipedia . Script model_temp.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 # Calcule les \u00e9l\u00e9ments du mod\u00e8le de Steinhart-Hart; # Application: affichage de la temp\u00e9rature from math import log as ln from ppy import ADC , Pin def model_steinhart (): \"\"\" Calcule le mod\u00e8le de Steinhart-Hart et renvoie un tuple (A, B, C) tel que: 1/T = A + B*ln(R) + C*(ln(R))**3 \"\"\" with open ( '/flash/Samples/Perso/etalonnage2.csv' , 'r' ) as f : releve = [ ligne . strip () . split ( ';' ) for ligne in f ] # R\u00e9cup\u00e9ration de chaque ligne releve = [[ float ( valeur [ 0 ]), float ( valeur [ 1 ])] for valeur in releve ] # Conversion en flottant # On r\u00e9cupere 3 pts dans notre relev\u00e9 R = [ releve [ i ][ 0 ] for i in ( 0 , len ( releve ) // 2 , - 1 )] # on prend 1 pt au d\u00e9but, milieu et \u00e0 la fin T = [ releve [ i ][ 1 ] + 273.15 for i in ( 0 , len ( releve ) // 2 , - 1 )] # Quelques changements de variables # D\u00e9tails --> https://fr.wikipedia.org/wiki/Relation_de_Steinhart-Hart Y1 , Y2 , Y3 = 1 / T [ 0 ], 1 / T [ 1 ], 1 / T [ 2 ] L1 , L2 , L3 = ln ( R [ 0 ]), ln ( R [ 1 ]), ln ( R [ 2 ]) a = (( L2 - L3 ) / ( L1 - L2 )) * (( L2 ) ** 3 - ( L1 ) ** 3 ) + (( L2 ) ** 3 - ( L3 ) ** 3 ) b = Y2 - Y3 - (( L2 - L3 ) / ( L1 - L2 )) * ( Y1 - Y2 ) C = b / a B = ( Y1 - Y2 - (( L1 ) ** 3 - ( L2 ) ** 3 ) * C ) / ( L1 - L2 ) A = Y1 - L1 * B - ( L1 ) ** 3 * C return A , B , C def main (): A , B , C = model_steinhart () # R\u00e9cup\u00e9ration des coefficients du mod\u00e8le entree_A0 = ADC ( Pin ( 'A0' , Pin . IN )) v = entree_A0 . read () # lecture d'une valeur R = 10_000 * ( 4095 / v - 1 ) # La CTN est inclus dans un diviseur de tension avec R=10K T = 1 / ( A + B * ln ( R ) + C * ln ( R ) ** 3 ) print ( ' \\u03B8 = {} \u00b0C' . format ( round ( T - 273.15 , 1 ))) # Affichage au dixi\u00e8me pr\u00e8s if __name__ == \"__main__\" : main () Ex\u00e9cution du programme: thermom\u00e8tre Capteur \u00e0 ultrasons \u2693\ufe0e On utilise le module Sciencethic 651 049 Vu que le module HC-SR04 est mont\u00e9 dans une coque plastique, il nous est impossible d'avoir acc\u00e8s \u00e0 ses bornes et donc de visualiser les signaux \u00e9mis et re\u00e7us. Documentation du HC-SR04 \u2693\ufe0e Avant de proposer une utilisation, il est toujours int\u00e9ressant de consulter la documentation associ\u00e9e \u00e0 ce type de capteur. on peut trouver une copie \u00e0 cette adresse . La page 6 est particlui\u00e8rement int\u00e9ressante. Sans surprise on y apprend que la dur\u00e9e du signal pr\u00e9sent dur la broche 'ECHO' est proportionnelle \u00e0 la distance entre l'\u00e9metteur et l'obstacle. Une activit\u00e9 possible \u2693\ufe0e On met en \u0153uvre ici le principe du radar de recul des voitures. Le module ultrason est branch\u00e9e sur la sortie A0 du microcontrolleur. Voici un exemple de script. Script radar_recul.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 # Principe du radar de recul # Utilisation du module 'T\u00e9l\u00e9m\u00e8tre' r\u00e9f. Sciencethic 651 049 # on simule l'alarme en envoyant un son sur la sortie A0, par # l'interm\u00e9diaire d'un convertisseur num\u00e9rique/analogique (DAC) __author__ = 'Bruno DARID' __license__ = 'CC-BY-NC-SA 4.0' __email__ = 'bruno.darid@ac-reunion.fr' from lib.USRanger import USRanger from ppy import Pin , delay , DAC from math import sin , pi def alarme ( sortie , off = False ): \"\"\" Produit d'un son sinusoidal de freq = 600 Hz; sortie: instance de DAC off: booleen, si off=True, alors on coupe le son. \"\"\" if off : sortie . write ( 0 ) else : buf = bytearray ( 100 ) # tableau d'octets pour un buffer for i in range ( 100 ): # Remplissage du buffer contenant la fonction sinus buf [ i ] = 128 + int ( 127 * sin ( 2 * pi * i / 100 )) # voir documentation pour la syntaxe de write_timed sortie . write_timed ( buf , 600 * len ( buf ), mode = DAC . CIRCULAR ) def main (): # Affectation des broches: t\u00e9l\u00e9m\u00e8tre sur D2 et son sur A0 module = USRanger ( Pin ( 'D2' , Pin . OUT )) sortie_son = DAC ( Pin ( 'A0' , Pin . OUT )) while True : # Il vaudrait mieux effectuer une moyenne sur quelques mesures # plutot qu'une seule ! mesures = [] for i in range ( 20 ): # Utilisation de la librairie pour la mesure de d mesures . append ( module . mesureCentimeters ()) delay ( 10 ) # conform\u00e9ment \u00e0 la documentation dist = sum ( mesures ) / len ( mesures ) # Prise de d\u00e9cision suivant la valeur de la distance if dist < 20 : alarme ( sortie_son ) else : alarme ( sortie_son , off = True ) if __name__ == \"__main__\" : main () Commentaires de code \u2693\ufe0e Production de son \u2693\ufe0e On utilise les fonctionnalit\u00e9s du convertisseur num\u00e9rique analogique. On cr\u00e9\u00e9 d'abord le tableau de valeurs \u00e0 envoyer vers le DAC, puis on r\u00e9alise effectivement l'\u00e9criture. 1 2 3 4 buf = bytearray ( 100 ) # tableau d'octets pour un buffer for i in range ( 100 ): # Remplissage du buffer contenant la fonction sinus buf [ i ] = 128 + int ( 127 * sin ( 2 * pi * i / 100 )) Le tableau d'octet cr\u00e9\u00e9 va contenir une p\u00e9riode d'un sinus. On a choisi ici arbitrairement de d\u00e9couper l'intervalle \\(\\left[0\\cdots 2\\pi\\right[\\) en 100 points. 1 sortie . write_timed ( buf , 600 * len ( buf ), mode = DAC . CIRCULAR ) La m\u00e9thode write_timed de la classe DAC est document\u00e9e ici . Les param\u00e8tres utilis\u00e9s ici sont les donn\u00e9es buf \u00e0 \u00e9crire sur la broche d\u00e9sign\u00e9e par sortie . La fr\u00e9quence du signal est transmise par 600 * len(buf) que l'on peut interpr\u00e9ter comme 600 signaux buf \u00e0 \u00e9crire par seconde. Enfin, le mode CIRCULAR est \u00e0 prendre au sens en continu . La fonction prinpale main \u2693\ufe0e L'algorithme est trivial: on r\u00e9alise une boucle infinie dans laquelle on mesure la distance avec l'obstacle, si celle-ci est inf\u00e9rieure \u00e0 20 cm, on d\u00e9clenche l'alarme. Remarque On quitte la boucle infinie avec la s\u00e9quence de touches Ctrl \uff0b C . L'interpr\u00e9teur stoppe le script en levant une exception KeyboardInterrupt . Capteur de pression \u2693\ufe0e On utilise le module r\u00e9f. 651 055 de Sciencethic connect\u00e9 \u00e0 l'entr\u00e9e analogique A3 . Quelques remarques pr\u00e9liminaires \u2693\ufe0e Il est impossible d'acc\u00e9der \u00e0 la documentation du capteur utilis\u00e9. Sciencethic ne fournit qu'une r\u00e9f\u00e9rence interne et ne mentionne aucun composant ! En effectuant quelques recherches on y apprend que: c'est un capteur de pression absolue (-1000;+2000 hPa) (source fiche de TP \"Mariotte\" de la rubrique T\u00e9l\u00e9chargement du site de Sciencethic); le signal de sortie est un Signal 0-5 V proportionnel \u00e0 la pression (source https://www.sciencethic.com/shop/651066-capteur-arduino-tm-pression-pour-mariotte-4858?page=2&category=556#attr= ); la relation de proportionnalit\u00e9 est du type pression = (valeur lue / Nmax) * 3010 (source ligne 140 du script Loi de Mariotte-PlugUino-Py.py pr\u00e9sent dans le dossier TP de la carte). La suite de ce document repose sur ces hypoth\u00e8ses ... Enfin, la liaison entre le module capteur et la seringue semble fragile . Activit\u00e9 possible \u2693\ufe0e On choisit ici de v\u00e9rifier que le produit \\(P\\times V\\) reste constant pour une quantit\u00e9 d'air (qu'on assimile \u00e0 un GP) donn\u00e9e \u00e0 une temp\u00e9rature donn\u00e9e. Le script ci-dessous permet la r\u00e9cup\u00e9ration et la sauvegarde de la pression et du volume dans un fichier csv . Script pression.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 # Relev\u00e9 de la pression en fonction du volume d'air emprisonn\u00e9 dans une seringue. # La sauvegarde se fait dans un fichier csv __author__ = 'Bruno DARID' __license__ = 'CC-BY-NC-SA 4.0' __email__ = 'bruno.darid@ac-reunion.fr' import os from ppy import ADC , Pin # Quelques 'constantes' MSG = \"\"\"==== Relev\u00e9 de la pression en fonction du volume ==== 1) A l'invite, entrer le volume d'air pr\u00e9sent dans la seringue 2) Pour quitter --> ctrl + C \"\"\" def lecture ( entree ): \"\"\" R\u00e9alise une conversion A/N sur 'entree' et renvoie sa valeur \"\"\" return entree . read () def acquisition ( nom_fichier , entree ): \"\"\" Demande une valeur de volume et mesure la pression correspondante. Les r\u00e9sultats sont \u00e9crits dans 'nom_fichier'.csv nom_fichier: chaine correspondant au nom du fichier SANS EXTENSION. entree: instance de classe ADC, d\u00e9signe la broche sur laquelle est branch\u00e9e le module \"\"\" with open ( nom_fichier + '.csv' , 'w' ) as f : while True : v = input ( 'Nouvelle valeur de volume (mL): ' ) volume = float ( v ) n = lecture ( entree ) # demande une conversion f . write ( str ( n * 3010 / 4095 ) + ';' + str ( volume + 3.1 ) + ' \\n ' ) # Sauvegarde 'Pression ; # Volume' dans le fichier csv. # On a tenu compte du volume de 3.1 mL (tuyau avant capteur) # 3010 est le facteur de proportionnalit\u00e9 entre P et la tension d'entr\u00e9e def main (): print ( MSG ) os . chdir ( '/flash/Samples/Perso' ) # Se d\u00e9placer dans le r\u00e9p. de travail perso entree_A3 = ADC ( Pin ( 'A3' , Pin . IN )) # On suppose que le capteur est branch\u00e9 sur A3 acquisition ( 'PV' , entree_A3 ) if __name__ == \"__main__\" : main () Commentaires de code \u2693\ufe0e La structure de la fonction aquisition est quasiment identique \u00e0 celle de l'activit\u00e9 sur la CTN. Seuls les r\u00e9sultats \u00e0 sauvegarder changent. La ligne os.chdir('/flash/Samples/Perso') est utile si on veut que le fichier \u00e0 sauvegarder soit situ\u00e9 dans Perso . Exploitation des r\u00e9sultats \u2693\ufe0e Le trac\u00e9 du graphe \\(P\\cdot V=f(V)\\) ne peut se faire avec l'interpr\u00e9teur Micropython. On utilisera un serveur de notebook Jupyter ( par exemple https://nsiboisdo.bdrd.fr/basthon/ ). Exemple de code python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import matplotlib.pyplot as plt import numpy as np # A d\u00e9commenter, si l'installation le permet #%matplotlib widget with open ( 'PV.csv' , 'r' ) as f : mesures = [ ligne . strip () . split ( ';' ) for ligne in f ] # R\u00e9cup\u00e9ration de chaque ligne P = np . array ([ float ( point [ 0 ]) for point in mesures ]) V = np . array ([ float ( point [ 1 ]) for point in mesures ]) fig , ax = plt . subplots ( figsize = ( 10 , 7 )) ax . set ( xlabel = r 'V (en mL)' , ylabel = r 'Produit $P\\times V\\ (\\mathrm{en\\ hPa\\cdot mL})$' , title = 'Loi de Mariotte' , ylim = ( 0 , 80_000 ) ) ax . grid () ax . scatter ( V , P * V , color = 'green' , marker = 'o' ) # A d\u00e9commenter si l'installation le n\u00e9cessite #fig.show() Ex\u00e9cution","title":"Mise en oeuvre"},{"location":"PC/capteurs.html#mise-en-uvre-de-capteurs","text":"","title":"Mise en \u0153uvre de capteurs"},{"location":"PC/capteurs.html#capteur-de-temperature","text":"","title":"Capteur de temp\u00e9rature"},{"location":"PC/capteurs.html#capteur-a-ultrasons","text":"On utilise le module Sciencethic 651 049 Vu que le module HC-SR04 est mont\u00e9 dans une coque plastique, il nous est impossible d'avoir acc\u00e8s \u00e0 ses bornes et donc de visualiser les signaux \u00e9mis et re\u00e7us.","title":"Capteur \u00e0 ultrasons"},{"location":"PC/capteurs.html#capteur-de-pression","text":"On utilise le module r\u00e9f. 651 055 de Sciencethic connect\u00e9 \u00e0 l'entr\u00e9e analogique A3 .","title":"Capteur de pression"},{"location":"PC/conclusion.html","text":"Conclusions \u2693\ufe0e Points forts du kit \u2693\ufe0e Le boitier incorporant la carte ainsi que les connecteurs sata semblent robustes et devraient r\u00e9sister aux chocs. Les capteurs sont bien prot\u00e9g\u00e9s si on exclus la faiblesse entre le capteur de pression et la seringue. Par ailleurs, les entr\u00e9es sont prot\u00e9g\u00e9es \u00e9lectriquement et l'utilisateur n'a pas \u00e0 se soucier de conversions de niveau logique 3V-5V. Enfin, la pr\u00e9sence de l'interpr\u00e9teur Micropython est \u00e9galement un avantage. L'\u00e9l\u00e8ve retrouve un langage utilis\u00e9 dans d'autres disciplines. Points faibles \u2693\ufe0e La principale faiblesse de ce kit se situe au niveau de sa documentation. Celle-ci est soit absente (caract\u00e9ristiques des capteurs utilis\u00e9s) soit de tr\u00e8s mauvaise qualit\u00e9 (les codes python fourni en exemple sont tr\u00e8s mal \u00e9crits, ne respectant en rien les r\u00e8gles \u00e9l\u00e9mentaires \u00e9nonc\u00e9es dans la PEP8). Un autre probl\u00e8me est constat\u00e9 au niveau de la mise \u00e0 jour du micro-programme (firmware) de la carte. Cette MAJ doit \u00eatre possible via un fichier binaire distribu\u00e9 par Sciencethic. Il n'existe aucune trace de ce fichier sur le site du vendeur. Pour information, la version de micropython install\u00e9e (1.11) date de 2019. Au 10 novembre 2021, la version 1.17 est disponible ... Quelques r\u00e9f\u00e9rences \u2693\ufe0e Le livre de Dominique Meurisse (Ed. ENI) est disponible dans Magist\u00e8re / Biblioth\u00e8que en ligne. Enfin, la documentation officielle de Micropython pour pyboard est une source incontournable. Bruno DARID novembre 2021.","title":"Conclusion"},{"location":"PC/conclusion.html#conclusions","text":"","title":"Conclusions"},{"location":"PC/conclusion.html#points-forts-du-kit","text":"Le boitier incorporant la carte ainsi que les connecteurs sata semblent robustes et devraient r\u00e9sister aux chocs. Les capteurs sont bien prot\u00e9g\u00e9s si on exclus la faiblesse entre le capteur de pression et la seringue. Par ailleurs, les entr\u00e9es sont prot\u00e9g\u00e9es \u00e9lectriquement et l'utilisateur n'a pas \u00e0 se soucier de conversions de niveau logique 3V-5V. Enfin, la pr\u00e9sence de l'interpr\u00e9teur Micropython est \u00e9galement un avantage. L'\u00e9l\u00e8ve retrouve un langage utilis\u00e9 dans d'autres disciplines.","title":"Points forts du kit"},{"location":"PC/conclusion.html#points-faibles","text":"La principale faiblesse de ce kit se situe au niveau de sa documentation. Celle-ci est soit absente (caract\u00e9ristiques des capteurs utilis\u00e9s) soit de tr\u00e8s mauvaise qualit\u00e9 (les codes python fourni en exemple sont tr\u00e8s mal \u00e9crits, ne respectant en rien les r\u00e8gles \u00e9l\u00e9mentaires \u00e9nonc\u00e9es dans la PEP8). Un autre probl\u00e8me est constat\u00e9 au niveau de la mise \u00e0 jour du micro-programme (firmware) de la carte. Cette MAJ doit \u00eatre possible via un fichier binaire distribu\u00e9 par Sciencethic. Il n'existe aucune trace de ce fichier sur le site du vendeur. Pour information, la version de micropython install\u00e9e (1.11) date de 2019. Au 10 novembre 2021, la version 1.17 est disponible ...","title":"Points faibles"},{"location":"PC/conclusion.html#quelques-references","text":"Le livre de Dominique Meurisse (Ed. ENI) est disponible dans Magist\u00e8re / Biblioth\u00e8que en ligne. Enfin, la documentation officielle de Micropython pour pyboard est une source incontournable. Bruno DARID novembre 2021.","title":"Quelques r\u00e9f\u00e9rences"},{"location":"PC/connexion.html","text":"Connexion avec un ordinateur \u2693\ufe0e Liaison \u00e0 l'ordinateur \u2693\ufe0e On se place dans un mode de fonctionnement non autonome o\u00f9 le Plug' py est connect\u00e9 \u00e0 l'ordinateur via le bus USB, avec le c\u00e2ble fourni. On utilise le connecteur micro-usb dans le coin haut gauche du boitier et un des ports USB de l'ordinateur. D\u00e9tection \u2693\ufe0e La d\u00e9tection ne pose aucun soucis avec les syst\u00e8mes d'exploitation r\u00e9cents. Le boitier est vu comme un p\u00e9riph\u00e9rique de stockage externe dont la taille proche de 128 Mo ( taille de la carte SD pr\u00e9sente sur le syst\u00e8me ), nomm\u00e9 PPYFLASH . Par ailleurs, on peut noter que le boitier est vu \u00e9galement comme un p\u00e9riph\u00e9rique s\u00e9rie, dont il est important de relever le num\u00e9ro COM (pour les syst\u00e8mes windows). Il suffit de faire un clic droit sur Ce PC , puis propri\u00e9t\u00e9s et gestionnaire de p\u00e9riph\u00e9rique . En cas, d'\u00e9chec du clic droit (absence de Propri\u00e9t\u00e9s ), utiliser un raccourci vers le gestionnaire de p\u00e9riph\u00e9rique, sur le bureau. Dans le cas de la capture, on note COM5 . Attention, cette valeur n'est pas garantie sur les autres machines.","title":"Connexions"},{"location":"PC/connexion.html#connexion-avec-un-ordinateur","text":"","title":"Connexion avec un ordinateur"},{"location":"PC/connexion.html#liaison-a-lordinateur","text":"On se place dans un mode de fonctionnement non autonome o\u00f9 le Plug' py est connect\u00e9 \u00e0 l'ordinateur via le bus USB, avec le c\u00e2ble fourni. On utilise le connecteur micro-usb dans le coin haut gauche du boitier et un des ports USB de l'ordinateur.","title":"Liaison \u00e0 l'ordinateur"},{"location":"PC/connexion.html#detection","text":"La d\u00e9tection ne pose aucun soucis avec les syst\u00e8mes d'exploitation r\u00e9cents. Le boitier est vu comme un p\u00e9riph\u00e9rique de stockage externe dont la taille proche de 128 Mo ( taille de la carte SD pr\u00e9sente sur le syst\u00e8me ), nomm\u00e9 PPYFLASH . Par ailleurs, on peut noter que le boitier est vu \u00e9galement comme un p\u00e9riph\u00e9rique s\u00e9rie, dont il est important de relever le num\u00e9ro COM (pour les syst\u00e8mes windows). Il suffit de faire un clic droit sur Ce PC , puis propri\u00e9t\u00e9s et gestionnaire de p\u00e9riph\u00e9rique . En cas, d'\u00e9chec du clic droit (absence de Propri\u00e9t\u00e9s ), utiliser un raccourci vers le gestionnaire de p\u00e9riph\u00e9rique, sur le bureau. Dans le cas de la capture, on note COM5 . Attention, cette valeur n'est pas garantie sur les autres machines.","title":"D\u00e9tection"},{"location":"PC/matplotlib.html","text":"Tracer une courbe avec Matplotlib \u2693\ufe0e Br\u00e8ve introduction \u2693\ufe0e Matplotlib a \u00e9t\u00e9 cr\u00e9\u00e9 en 2003 par un neurobiologiste ( John Hunter ) pour s'affranchir du logiciel MATLAB et notamment son caract\u00e8re propri\u00e9taire. Une des caract\u00e9ristiques de MATLAB est son style global totalement \u00e0 l'oppos\u00e9 des processus d' importation de python. Un graphique matplotlib est constitu\u00e9 de nombreux objets hi\u00e9rarchis\u00e9s de la mani\u00e8re suivante: Les objets les plus importants \u00e0 notre niveau sont: Figure , Axes et dans une moindre mesure Axis . Matplotlib est assez difficile d'approche pour les raisons suivantes: la librairie est \u00e9norme (entre 70000 et 200000 lignes de code suivant les sources) il fournit plusieurs interfaces (fa\u00e7on de tracer une figure); certains points de la documentation ne sont pas \u00e0 jour. Enfin, d'un point de vue architecturale, matplotlib peut \u00eatre d\u00e9compos\u00e9 en trois couches: Remarque La tr\u00e8s grande majorit\u00e9 des scripts pr\u00e9sents dans les manuels du secondaire, mais aussi dans la formation Python en sciences physiques dispens\u00e9e sur Magist\u00e8re, utilisent la couche de script avec Pyplot . Ce n'est pas forc\u00e9ment le meilleur choix ... ( voir ci-apr\u00e8s ) Quelle interface choisir ? \u2693\ufe0e Interface Pylab \u2693\ufe0e Afin de retrouver le style global de MATLAB, un module de matplotlib a \u00e9t\u00e9 con\u00e7u: Pylab . L'utilisation de Pylab est contraire aux bonnes habitudes codage en python et peut \u00eatre de surcroit \u00e0 l'origine de nombreux bugs difficiles \u00e0 cerner. D'apr\u00e8s la documentation, disponible ici : pylab is a module that includes matplotlib.pyplot, numpy, numpy.fft, numpy.linalg, numpy.random, and some additional functions, all within a single namespace. Its original purpose was to mimic a MATLAB-like way of working by importing all functions into the global namespace. This is considered bad style nowadays. On ne devrait donc PAS UTILISER CE MODULE , contrairement au sujet E3C Physique Chimie n\u00b0 02715 , page 2! Interface avec \u00e9tat Pyplot (pour des cas tr\u00e8s simples) \u2693\ufe0e Pyplot fait partie de la couche de script de matplotlib . Pyplot poss\u00e8de une multitude de fonction permettant de tracer simplement des graphiques. Son utilisation lib\u00e8re l'utilisateur de toutes manipulations d' objets de plus bas niveau. En arri\u00e8re plan, Pyplot cr\u00e9\u00e9, enregistre l'\u00e9tat de tous les objets utiles ( Figure , Axes , etc.). Au final, on n'a qu'\u00e0 saisir les commandes comme on le ferait dans un shell interactif. Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import matplotlib.pyplot as plt import numpy as np g = 9.81 # Intensit\u00e9 de la pesanteur H = 2.5 # hauteur initiale t = np . arange ( 0 , 1 , step = 0.05 , dtype = float ) vy = - g * t y = - 0.5 * g * t ** 2 + H plt . title ( \"y=f(t)\" ) plt . xlabel ( \"t (s)\" ) plt . ylabel ( \"y (m)\" ) plt . title ( \"Chute libre\" ) plt . plot ( t , y , label = \"y\" ) plt . plot ( t , vy , label = \"vy\" ) plt . legend () plt . grid () plt . show () Toutes les fonctions de Pyplot se r\u00e9f\u00e8rent aux objets Figure ou Axes courants (ou alors les cr\u00e9ent si ces derniers n'existent pas). Mais qu'en est-il si on a plusieurs graphiques ( Axes ) \u00e0 g\u00e9rer ? On voit sur l'exemple ci-dessus les premiers probl\u00e8mes appara\u00eetre: les deux trac\u00e9s partagent les m\u00eames axes et ... la parabole est tr\u00e8s \u00e9cras\u00e9e ! Par ailleurs, le fait que Pyplot g\u00e8re tout en arri\u00e8re plan, ne nous permet pas de personnaliser au maximum nos graphiques. De ce fait, cette interface n'est pas la plus recommand\u00e9e . Interface sans \u00e9tat ou approche orient\u00e9e objet \u2693\ufe0e C'est l'approche recommand\u00e9e par la documentation officielle et notamment lorsqu'on doit g\u00e9rer plusieurs graphiques ou modifier des attributs tr\u00e8s particuliers de certains objets (graduation des axes par exemple). 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 fig , ax1 = plt . subplots ( figsize = ( 8 , 5 )) ax1 . set_ylabel ( \"y (m)\" , color = \"blue\" ) ax1 . set_xlabel ( \"t (s)\" ) ax1 . plot ( t , y , \"blue\" ) ax1 . tick_params ( axis = \"y\" , labelcolor = \"blue\" ) ax1 . grid () ax2 = ax1 . twinx () # cr\u00e9\u00e9 un 2\u00e8me axe sur la droite partageant le m\u00eame axe Ox ax2 . set_ylabel ( \"vy (m/s)\" , color = \"green\" ) ax2 . tick_params ( axis = \"y\" , labelcolor = \"green\" ) ax2 . plot ( t , vy , \"green\" ) fig . suptitle ( \"Chute libre\" ) fig . legend ([ \"Ordonn\u00e9e\" , \"Vitesse\" ]) 1 <matplotlib.legend.Legend at 0x7fc852da63a0> Conclusion \u2693\ufe0e Dans la documentation officielle, on peut relever les passages suivants: pyplot is mainly intended for interactive plots and simple cases of programmatic plot generation. et At its core, Matplotlib is object-oriented. We recommend directly working with the objects, if you need more control and customization of your plots. Apr\u00e8s lecture de cette page, on peut conclure qu'il faudrait adopter l'approche orient\u00e9e objet afin de pouvoir mieux personnaliser ses graphiques. Dans tous les cas, on n'utilisera plus l'interface pylab .","title":"Annexe: graphiques avec matplotlib"},{"location":"PC/matplotlib.html#tracer-une-courbe-avec-matplotlib","text":"","title":"Tracer une courbe avec Matplotlib"},{"location":"PC/matplotlib.html#breve-introduction","text":"Matplotlib a \u00e9t\u00e9 cr\u00e9\u00e9 en 2003 par un neurobiologiste ( John Hunter ) pour s'affranchir du logiciel MATLAB et notamment son caract\u00e8re propri\u00e9taire. Une des caract\u00e9ristiques de MATLAB est son style global totalement \u00e0 l'oppos\u00e9 des processus d' importation de python. Un graphique matplotlib est constitu\u00e9 de nombreux objets hi\u00e9rarchis\u00e9s de la mani\u00e8re suivante: Les objets les plus importants \u00e0 notre niveau sont: Figure , Axes et dans une moindre mesure Axis . Matplotlib est assez difficile d'approche pour les raisons suivantes: la librairie est \u00e9norme (entre 70000 et 200000 lignes de code suivant les sources) il fournit plusieurs interfaces (fa\u00e7on de tracer une figure); certains points de la documentation ne sont pas \u00e0 jour. Enfin, d'un point de vue architecturale, matplotlib peut \u00eatre d\u00e9compos\u00e9 en trois couches: Remarque La tr\u00e8s grande majorit\u00e9 des scripts pr\u00e9sents dans les manuels du secondaire, mais aussi dans la formation Python en sciences physiques dispens\u00e9e sur Magist\u00e8re, utilisent la couche de script avec Pyplot . Ce n'est pas forc\u00e9ment le meilleur choix ... ( voir ci-apr\u00e8s )","title":"Br\u00e8ve introduction"},{"location":"PC/matplotlib.html#quelle-interface-choisir","text":"","title":"Quelle interface choisir ?"},{"location":"PC/matplotlib.html#conclusion","text":"Dans la documentation officielle, on peut relever les passages suivants: pyplot is mainly intended for interactive plots and simple cases of programmatic plot generation. et At its core, Matplotlib is object-oriented. We recommend directly working with the objects, if you need more control and customization of your plots. Apr\u00e8s lecture de cette page, on peut conclure qu'il faudrait adopter l'approche orient\u00e9e objet afin de pouvoir mieux personnaliser ses graphiques. Dans tous les cas, on n'utilisera plus l'interface pylab .","title":"Conclusion"},{"location":"PC/mode_fonctionnement.html","text":"Les modes fonctionnements du Plug'Py \u2693\ufe0e Lien vers les scripts de cette pr\u00e9sentation Le mode interface \u2693\ufe0e La carte dispose d'un premier mode de fonctionnement appel\u00e9 Interface dans lequel l'essentiel des op\u00e9rations se d\u00e9roule c\u00f4t\u00e9 ordinateur. On peut tester ce mode avec un des programmes livr\u00e9s avec le boitier (exemple Temperature simple-PlugUnio-Py.py ). Avis personnel Ce mode de fonctionnement bien que s\u00e9duisant souffre de gros d\u00e9fauts: obligation d'avoir python install\u00e9 sur l'ordinateur h\u00f4te; obligation d'avoir la librairie libPlugPy dans le m\u00eame dossier que le programme \u00e0 ex\u00e9cuter; syntaxe du code python utilis\u00e9 tr\u00e8s lourde lorsqu'on ex\u00e9cute une instruction destin\u00e9e au microcontr\u00f4leur; utilisation de structures avanc\u00e9es du langage Python ( Exception , contexte try / except , etc.) inutiles \u00e0 ce stade d'apprentissage. Le mode REPL \u2693\ufe0e C'est le mode privil\u00e9gi\u00e9 durant cette initiation. Il s'agit: d'utiliser la liaison s\u00e9rie; de dialoguer directement (sans librairie) avec le microcontr\u00f4leur, en python; finalement d'\u00e9crire ses scripts sur son ordinateur avec son \u00e9diteur de code pr\u00e9f\u00e9r\u00e9 ( par exemple Thonny ). Pour entrer dans ce mode, proc\u00e9der selon la description ci-dessous. Sur la carte Plug'Uino Py: appuyer et maintenir le bouton USR puis appuyer bri\u00e8vement sur le bouton RST ( en haut \u00e0 gauche ); dans le menu de l'\u00e9cran du Plug' Py, choisir Safe Mode avec le bouton USR (appui court) puis valider par un appui long sur USR . Utiliser la liaison s\u00e9rie \u2693\ufe0e Plusieurs applications permettent d'atteindre cet objectif. PuTTY \u2693\ufe0e Il s'agit d'une application l\u00e9g\u00e8re, libre de droits, distribu\u00e9 sous licence MIT . Un raccourci Putty Reseau est disponible sur les ordinateurs de la salle A104. Il est n\u00e9cessaire de proc\u00e9der \u00e0 quelques r\u00e9glages, certains optionnels, d'autres obligatoires. On DOIT : indiquer la COM utilis\u00e9e; cocher serial . On PEUT adapter la police utilis\u00e9e, notamment sa taille ;) car la police par d\u00e9faut Courier 10 pt n'est gu\u00e8re lisible. On valide en cliquant sur Open EDI Thonny \u2693\ufe0e Thonny est un environnement de d\u00e9veloppement int\u00e9gr\u00e9, tr\u00e8s pris\u00e9 par les d\u00e9butants. C'est un logiciel libre, multiplateforme et qui peut \u00eatre t\u00e9l\u00e9charg\u00e9 \u00e0 cette adresse . Apr\u00e8s avoir d\u00e9marr\u00e9 la carte en mode Safe Mode , il peut \u00eatre utile, la premi\u00e8re fois , de param\u00e9trer Thonny pour l'utilisation avec le Plug'Uino Py. Il s'agira d'indiquer au syst\u00e8me le bon interpr\u00e9teur python \u00e0 utiliser. Sur la capture, on remarque que Thonny utilise l'interpr\u00e9teur Python par d\u00e9faut du syst\u00e8me (Python 3.8), il faut changer cet \u00e9tat. 1. Aller dans Executer puis choisir \"S\u00e9lectionner l'interpr\u00e9teur...\" Une nouvelle fen\u00eatre s'ouvre; choisir l'onglet Interpr\u00e9teur Dans le menu d\u00e9roulant, choisir Micropython (g\u00e9n\u00e9rique) puis dans le menu Port choisir la carte Plug'Uino Py (sur les syst\u00e8mes Windows 10, c'est la ligne o\u00f9 apparait COM...) Valider par OK , le syst\u00e8me est configur\u00e9. On constate, via la console, que l'on travaille avec un interpr\u00e9teur micropython (celui de la carte). On peut ne pas tenir compte de la pr\u00e9sence d'\u00e9ventuels Warnings . Le dialogue avec le microcontr\u00f4leur - Interpr\u00e9teur micropython \u2693\ufe0e En cas de succ\u00e8s de l'ouverture d'une session, on se retrouve avec un interpr\u00e9teur Python parfaitement fonctionnel. Exemple avec Putty Exemple avec Thonny En cas d'\u00e9chec de la connexion \u2693\ufe0e Lorsque la connexion \u00e9choue, on pourra en premi\u00e8re intention, effectuer certaines v\u00e9rifications: le microcontr\u00f4leur est-il bien connect\u00e9 \u00e0 un port USB ? une led bleue sur le boitier permet de le confirmer; un programme en ex\u00e9cution sur le microcontr\u00f4leur n'est-il pas pas dans une boucle infinie ou en attente d'entr\u00e9e ? une s\u00e9rie de Ctrl \uff0b C peut \u00eatre la solution ... peut-on r\u00e9cup\u00e9rer un interpr\u00e9teur en effectuant un RESET avec la s\u00e9quence de touches Ctrl \uff0b D ou le bouton STOP de Thonny? Proposition de proc\u00e9dure de d\u00e9veloppement \u2693\ufe0e Une fois la connexion \u00e9tablie avec le microcontr\u00f4leur, on peut commencer des tests dans l'interpr\u00e9teur micropython. Si les tests sont concluants, on peut \u00e9crire un script dans la fen\u00eatre d'\u00e9dition de Thonny et l'enregistrer dans un dossier sur la carte. L'espace est tr\u00e8s limit\u00e9 sur la carte (128 Mo), on y d\u00e9posera que des scripts. De plus, on \u00e9vitera \u00e0 tout prix de d\u00e9poser ses fichiers n'importe o\u00f9 ! On pourra cr\u00e9er, par exemple, un dossier Perso dans le dossier Samples pour le stockage de ses fichiers personnels.","title":"Mode de fonctionnement"},{"location":"PC/mode_fonctionnement.html#les-modes-fonctionnements-du-plugpy","text":"Lien vers les scripts de cette pr\u00e9sentation","title":"Les modes fonctionnements du Plug'Py"},{"location":"PC/mode_fonctionnement.html#le-mode-interface","text":"La carte dispose d'un premier mode de fonctionnement appel\u00e9 Interface dans lequel l'essentiel des op\u00e9rations se d\u00e9roule c\u00f4t\u00e9 ordinateur. On peut tester ce mode avec un des programmes livr\u00e9s avec le boitier (exemple Temperature simple-PlugUnio-Py.py ). Avis personnel Ce mode de fonctionnement bien que s\u00e9duisant souffre de gros d\u00e9fauts: obligation d'avoir python install\u00e9 sur l'ordinateur h\u00f4te; obligation d'avoir la librairie libPlugPy dans le m\u00eame dossier que le programme \u00e0 ex\u00e9cuter; syntaxe du code python utilis\u00e9 tr\u00e8s lourde lorsqu'on ex\u00e9cute une instruction destin\u00e9e au microcontr\u00f4leur; utilisation de structures avanc\u00e9es du langage Python ( Exception , contexte try / except , etc.) inutiles \u00e0 ce stade d'apprentissage.","title":"Le mode interface"},{"location":"PC/mode_fonctionnement.html#le-mode-repl","text":"C'est le mode privil\u00e9gi\u00e9 durant cette initiation. Il s'agit: d'utiliser la liaison s\u00e9rie; de dialoguer directement (sans librairie) avec le microcontr\u00f4leur, en python; finalement d'\u00e9crire ses scripts sur son ordinateur avec son \u00e9diteur de code pr\u00e9f\u00e9r\u00e9 ( par exemple Thonny ). Pour entrer dans ce mode, proc\u00e9der selon la description ci-dessous. Sur la carte Plug'Uino Py: appuyer et maintenir le bouton USR puis appuyer bri\u00e8vement sur le bouton RST ( en haut \u00e0 gauche ); dans le menu de l'\u00e9cran du Plug' Py, choisir Safe Mode avec le bouton USR (appui court) puis valider par un appui long sur USR .","title":"Le mode REPL"},{"location":"PC/mode_fonctionnement.html#proposition-de-procedure-de-developpement","text":"Une fois la connexion \u00e9tablie avec le microcontr\u00f4leur, on peut commencer des tests dans l'interpr\u00e9teur micropython. Si les tests sont concluants, on peut \u00e9crire un script dans la fen\u00eatre d'\u00e9dition de Thonny et l'enregistrer dans un dossier sur la carte. L'espace est tr\u00e8s limit\u00e9 sur la carte (128 Mo), on y d\u00e9posera que des scripts. De plus, on \u00e9vitera \u00e0 tout prix de d\u00e9poser ses fichiers n'importe o\u00f9 ! On pourra cr\u00e9er, par exemple, un dossier Perso dans le dossier Samples pour le stockage de ses fichiers personnels.","title":"Proposition de proc\u00e9dure de d\u00e9veloppement"},{"location":"PC/ucontroleur.html","text":"Plan : D\u00e9couvrir le Plug'Uino Py \u2693\ufe0e Qu'est qu'un microcontroleur ? Pr\u00e9sentation du boitier Plug'Uino Py Les modes de fonctionnements Mode interface Mode REPL Le \"Hello world\" du Plug Py Montage Utilisation d'un terminal REPL \u00c9criture d'un script Mise en oeuvre de capteurs Capteur de temp\u00e9rature Capteur US Capteur de pression Conclusion Annexe: tracer un graphique avec matplotlib Qu'est-ce qu'un microcontr\u00f4leur? \u2693\ufe0e Un microcontr\u00f4leur (en notation abr\u00e9g\u00e9e \u00b5c, ou uc ou encore MCU en anglais) est un circuit int\u00e9gr\u00e9 qui rassemble les \u00e9l\u00e9ments essentiels d'un ordinateur : processeur, m\u00e9moires (m\u00e9moire morte et m\u00e9moire vive), unit\u00e9s p\u00e9riph\u00e9riques et interfaces d'entr\u00e9es-sorties. Source wikipedia En dehors de l'architecture, les microcontr\u00f4leurs diff\u00e8rent des microprocesseurs sur les points suivants: leur domaine d'utilisation (syst\u00e8me embarqu\u00e9 ou informatique g\u00e9n\u00e9rale); leur prix (quelques euros ou quelques centaines voire milliers d'euros); leur consommation (moins d'un milliwatt \u00e0 plusieurs dizaines de watt). Quelques microcontr\u00f4leurs usuels ... ... mont\u00e9s sur une carte de d\u00e9veloppement Le boitier Plug'Uino Py \u2693\ufe0e Le boitier Plug'Uino Py est commercialis\u00e9 par la soci\u00e9t\u00e9 Scienc\u00e9thic . Le mod\u00e8le pr\u00e9sent au lyc\u00e9e de Bois d'Olive contient une version simplifi\u00e9e de la carte Pyboard . L'acc\u00e8s aux bornes d'entr\u00e9e/sortie se fait par le biais de connecteurs SATA en respectant le code des couleurs: ROUGE : donn\u00e9es num\u00e9riques; BLEU : donn\u00e9es analogiques; JAUNE : utilisation du bus \\(I^2C\\) . La connexion peut se faire \u00e9galement gr\u00e2ce aux connecteurs SIL. Remarque Les connecteurs SATA et SIL de m\u00eame nom sont connect\u00e9s entre eux. L'alimentation et la connexion avec l'ordinateur se font via l'USB (connecteur en haut \u00e0 gauche). La carte est automatiquement d\u00e9tect\u00e9e par les syst\u00e8mes r\u00e9cents (Linux Ubuntu ou W10) sans installation de pilotes annexes. Ce n'est pas le cas avec W7.","title":"Micro contr\u00f4leur"},{"location":"PC/ucontroleur.html#plan-decouvrir-le-pluguino-py","text":"Qu'est qu'un microcontroleur ? Pr\u00e9sentation du boitier Plug'Uino Py Les modes de fonctionnements Mode interface Mode REPL Le \"Hello world\" du Plug Py Montage Utilisation d'un terminal REPL \u00c9criture d'un script Mise en oeuvre de capteurs Capteur de temp\u00e9rature Capteur US Capteur de pression Conclusion Annexe: tracer un graphique avec matplotlib","title":"Plan : D\u00e9couvrir le Plug'Uino Py"},{"location":"PC/ucontroleur.html#quest-ce-quun-microcontroleur","text":"Un microcontr\u00f4leur (en notation abr\u00e9g\u00e9e \u00b5c, ou uc ou encore MCU en anglais) est un circuit int\u00e9gr\u00e9 qui rassemble les \u00e9l\u00e9ments essentiels d'un ordinateur : processeur, m\u00e9moires (m\u00e9moire morte et m\u00e9moire vive), unit\u00e9s p\u00e9riph\u00e9riques et interfaces d'entr\u00e9es-sorties. Source wikipedia En dehors de l'architecture, les microcontr\u00f4leurs diff\u00e8rent des microprocesseurs sur les points suivants: leur domaine d'utilisation (syst\u00e8me embarqu\u00e9 ou informatique g\u00e9n\u00e9rale); leur prix (quelques euros ou quelques centaines voire milliers d'euros); leur consommation (moins d'un milliwatt \u00e0 plusieurs dizaines de watt). Quelques microcontr\u00f4leurs usuels ... ... mont\u00e9s sur une carte de d\u00e9veloppement","title":"Qu'est-ce qu'un microcontr\u00f4leur?"},{"location":"PC/ucontroleur.html#le-boitier-pluguino-py","text":"Le boitier Plug'Uino Py est commercialis\u00e9 par la soci\u00e9t\u00e9 Scienc\u00e9thic . Le mod\u00e8le pr\u00e9sent au lyc\u00e9e de Bois d'Olive contient une version simplifi\u00e9e de la carte Pyboard . L'acc\u00e8s aux bornes d'entr\u00e9e/sortie se fait par le biais de connecteurs SATA en respectant le code des couleurs: ROUGE : donn\u00e9es num\u00e9riques; BLEU : donn\u00e9es analogiques; JAUNE : utilisation du bus \\(I^2C\\) . La connexion peut se faire \u00e9galement gr\u00e2ce aux connecteurs SIL. Remarque Les connecteurs SATA et SIL de m\u00eame nom sont connect\u00e9s entre eux. L'alimentation et la connexion avec l'ordinateur se font via l'USB (connecteur en haut \u00e0 gauche). La carte est automatiquement d\u00e9tect\u00e9e par les syst\u00e8mes r\u00e9cents (Linux Ubuntu ou W10) sans installation de pilotes annexes. Ce n'est pas le cas avec W7.","title":"Le boitier Plug'Uino Py"},{"location":"Projets/jeu_carte.html","text":"Description du projet \u2693\ufe0e Il s'agit de mod\u00e9liser une partie de bataille aux cartes. Les r\u00e8gles du jeu de bataille sont les suivantes (voir wikipedia ): il s'agit d'un jeu \u00e0 deux joueurs o\u00f9 l'on commence par distribuer l'ensemble d'un jeu de cartes ( 52 cartes ) aux joueurs de mani\u00e8re \u00e0 ce que chaque joueur poss\u00e8de le m\u00eame nombre de cartes, c'est-\u00e0-dire 26. Les joueurs ne regardent pas les cartes et \u00e0 chaque tour, ils retournent la carte se trouvant sur le dessus du paquet. Le joueur poss\u00e9dant la carte la plus forte r\u00e9cup\u00e8re les deux cartes et les place sous son tas ( cela doit rappeler une structure de donn\u00e9e d\u00e9j\u00e0 \u00e9tudi\u00e9e ). Si les deux cartes sont de valeur \u00e9gale, on dit qu'il y a bataille : chaque joueur place la carte du dessus de son tas \u00e0 l'envers sur sa premi\u00e8re carte, puis place une nouvelle carte par dessus . Le joueur ayant la carte la plus forte r\u00e9cup\u00e8re l'ensemble des cartes ( en cas de nouvelle \u00e9galit\u00e9, on recommence ). La partie se termine lorsque l'un des deux joueurs n'a plus de carte (et ce dernier a perdu). Mod\u00e9lisation \u2693\ufe0e Plusieurs mod\u00e9lisations sont possibles. En voici une: Autre (UML) Remarques concernant les classes \u2693\ufe0e La classe Cartes ne pr\u00e9sente pas de difficult\u00e9s particuli\u00e8res avec ses deux attributs couleur et valeur . L'As est particulier, c'est la plus forte carte, on peut lui attribuer la valeur 14. La classe JeuCartes doit permettre de constituer les 52 cartes d'un jeu. Son attribut cartes \u00e9tant une instance de Cartes . Pour pouvoir jouer, deux joueurs ont besoin d'un paquet de cartes issus d'un jeu de cartes. D'o\u00f9 la pr\u00e9sence d'une classe Paquet . Roadmap \u2693\ufe0e Modalit\u00e9s d'\u00e9valuation \u2693\ufe0e Pr\u00e9sentation oral du travail effectu\u00e9 Qualit\u00e9 du travail collaboratif et recherche Le rapport de projet \u2693\ufe0e Le contenu du rapport doit faire appara\u00eetre les acquis d\u2019apprentissage associ\u00e9s au Projet. On insiste notamment sur l'aspect collaboratif, la d\u00e9couverte et l'utilisation de nouveaux outils, etc. Le rapport doit \u00eatre structur\u00e9 et doit pr\u00e9senter clairement ce que l\u2019on a cherch\u00e9 \u00e0 faire, pourquoi, et enfin comment. Il ne s\u2019agit pas forc\u00e9ment d\u2019un descriptif chronologique du travail effectu\u00e9. Sur la forme, on doit y trouver : une introduction, une analyse du probl\u00e8me pos\u00e9, les solutions propos\u00e9es avec justification; une conclusion; les sources utilis\u00e9es ( bibliographie, sitographie, forum ou autre ); un lien vers le code. Pistes pour les plus rapides \u2693\ufe0e Envisager une partie Joueur humain vs Programme .","title":"Projet 1: Autour de la POO - Jeu de cartes"},{"location":"Projets/jeu_carte.html#description-du-projet","text":"Il s'agit de mod\u00e9liser une partie de bataille aux cartes. Les r\u00e8gles du jeu de bataille sont les suivantes (voir wikipedia ): il s'agit d'un jeu \u00e0 deux joueurs o\u00f9 l'on commence par distribuer l'ensemble d'un jeu de cartes ( 52 cartes ) aux joueurs de mani\u00e8re \u00e0 ce que chaque joueur poss\u00e8de le m\u00eame nombre de cartes, c'est-\u00e0-dire 26. Les joueurs ne regardent pas les cartes et \u00e0 chaque tour, ils retournent la carte se trouvant sur le dessus du paquet. Le joueur poss\u00e9dant la carte la plus forte r\u00e9cup\u00e8re les deux cartes et les place sous son tas ( cela doit rappeler une structure de donn\u00e9e d\u00e9j\u00e0 \u00e9tudi\u00e9e ). Si les deux cartes sont de valeur \u00e9gale, on dit qu'il y a bataille : chaque joueur place la carte du dessus de son tas \u00e0 l'envers sur sa premi\u00e8re carte, puis place une nouvelle carte par dessus . Le joueur ayant la carte la plus forte r\u00e9cup\u00e8re l'ensemble des cartes ( en cas de nouvelle \u00e9galit\u00e9, on recommence ). La partie se termine lorsque l'un des deux joueurs n'a plus de carte (et ce dernier a perdu).","title":"Description du projet"},{"location":"Projets/jeu_carte.html#modelisation","text":"Plusieurs mod\u00e9lisations sont possibles. En voici une: Autre (UML)","title":"Mod\u00e9lisation"},{"location":"Projets/jeu_carte.html#remarques-concernant-les-classes","text":"La classe Cartes ne pr\u00e9sente pas de difficult\u00e9s particuli\u00e8res avec ses deux attributs couleur et valeur . L'As est particulier, c'est la plus forte carte, on peut lui attribuer la valeur 14. La classe JeuCartes doit permettre de constituer les 52 cartes d'un jeu. Son attribut cartes \u00e9tant une instance de Cartes . Pour pouvoir jouer, deux joueurs ont besoin d'un paquet de cartes issus d'un jeu de cartes. D'o\u00f9 la pr\u00e9sence d'une classe Paquet .","title":"Remarques concernant les classes"},{"location":"Projets/jeu_carte.html#roadmap","text":"","title":"Roadmap"},{"location":"Projets/jeu_carte.html#modalites-devaluation","text":"Pr\u00e9sentation oral du travail effectu\u00e9 Qualit\u00e9 du travail collaboratif et recherche","title":"Modalit\u00e9s d'\u00e9valuation"},{"location":"Projets/jeu_carte.html#le-rapport-de-projet","text":"Le contenu du rapport doit faire appara\u00eetre les acquis d\u2019apprentissage associ\u00e9s au Projet. On insiste notamment sur l'aspect collaboratif, la d\u00e9couverte et l'utilisation de nouveaux outils, etc. Le rapport doit \u00eatre structur\u00e9 et doit pr\u00e9senter clairement ce que l\u2019on a cherch\u00e9 \u00e0 faire, pourquoi, et enfin comment. Il ne s\u2019agit pas forc\u00e9ment d\u2019un descriptif chronologique du travail effectu\u00e9. Sur la forme, on doit y trouver : une introduction, une analyse du probl\u00e8me pos\u00e9, les solutions propos\u00e9es avec justification; une conclusion; les sources utilis\u00e9es ( bibliographie, sitographie, forum ou autre ); un lien vers le code.","title":"Le rapport de projet"},{"location":"Projets/jeu_carte.html#pistes-pour-les-plus-rapides","text":"Envisager une partie Joueur humain vs Programme .","title":"Pistes pour les plus rapides"},{"location":"Projets/web.html","text":"\u00c0 venir \u2693\ufe0e","title":"Projet 1: en p\u00e9riode 2"},{"location":"Projets/web.html#a-venir","text":"","title":"\u00c0 venir"},{"location":"my_theme_customizations/pyodide-mkdocs/end_REM.html","text":"Z","title":"end REM"},{"location":"my_theme_customizations/pyodide-mkdocs/start_REM.html","text":"A","title":"start REM"},{"location":"perso/textes.html","text":"A lire \u2693\ufe0e Le tas binaire Python list implementation Representation des objets en m\u00e9moire - Python","title":"Textes"},{"location":"perso/textes.html#a-lire","text":"Le tas binaire Python list implementation Representation des objets en m\u00e9moire - Python","title":"A lire"},{"location":"perso/videos.html","text":"Liens consult\u00e9s et appr\u00e9ci\u00e9s \u2693\ufe0e Mod\u00e8le m\u00e9moire en python - PyCon 2016 The history of programming - Devcon 2016 Heaps and heap sort All your ducks in a row - Brandon Rhodes, PyCon 2014 Chaine de l'EPFL Chaine LearnLinuxtv Chaine de Derek Molloy PyCon 2014 ... le cr\u00e9ateur himself ; \u00e0 44:29 la programmation fonctionnelle est \u00e9voqu\u00e9e","title":"Videos"},{"location":"perso/videos.html#liens-consultes-et-apprecies","text":"Mod\u00e8le m\u00e9moire en python - PyCon 2016 The history of programming - Devcon 2016 Heaps and heap sort All your ducks in a row - Brandon Rhodes, PyCon 2014 Chaine de l'EPFL Chaine LearnLinuxtv Chaine de Derek Molloy PyCon 2014 ... le cr\u00e9ateur himself ; \u00e0 44:29 la programmation fonctionnelle est \u00e9voqu\u00e9e","title":"Liens consult\u00e9s et appr\u00e9ci\u00e9s"},{"location":"pyodide-mkdocs/end_REM.html","text":"Z","title":"end REM"},{"location":"pyodide-mkdocs/start_REM.html","text":"A","title":"start REM"},{"location":"scripts/C6/C6E1_REM.html","text":"Commentaires Le cas d'une insertion en t\u00eate est trivial ! Dans le cas d'une insertion \u00e0 un index quelconque \\(k\\gt 0\\) , on doit d'abord cr\u00e9er deux pointeurs vers les cellules concern\u00e9es par l'insertion. Ensuite, dans une boucle, on d\u00e9cale ces pointeurs jusqu'\u00e0 ce l'on trouve la position o\u00f9 sera ins\u00e9r\u00e9 la nouvelle cellule.","title":"C6E1 REM"},{"location":"scripts/C6/C6PB1_1_REM.html","text":"Commentaires Pour l'\u00e9criture de la fonction concat , une simple traduction de l'\u00e9nonc\u00e9 am\u00e8ne \u00e0 la solution. Un point important: dans la m\u00e9thode queue pr\u00e9sente dans la classe ListeChainee , il est IMPORTANT de renvoyer une liste cha\u00een\u00e9e. D'o\u00f9 le passage par la variable intem\u00e9diaire reste .","title":"C6PB1 1 REM"}]}