{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"NSI","text":"<p>Les cours de  sp\u00e9cialit\u00e9 NSI au lyc\u00e9e de Bois d'Olive, propos\u00e9s par  Bruno DARID.</p>"},{"location":"index.html#_1","title":"Home","text":"<p>Ann\u00e9e scolaire 2021-2022 </p> <p>\ud83d\udc40 MAJ octobre 2023</p> <p>Ajout d'un interpr\u00e9teur python dans certaines pages d'exercices (pour l'instant  uniquement le niveau terminale et \u00e0 partir du chapitre 6).  Cela a \u00e9t\u00e9 rendu possible gr\u00e2ce la distribution Python pour le Web Pyodide. </p> <p>Pyodide est un projet assez r\u00e9cent (2018), en d\u00e9veloppement reposant sur WebAssembly. </p>"},{"location":"bo.html","title":"Le programme officiel de la sp\u00e9cialit\u00e9 NSI","text":""},{"location":"bo.html#le-programme-de-1re","title":"Le programme de 1re","text":"<p>Le Bulletin Officiel</p>"},{"location":"bo.html#le-programme-de-terminale","title":"Le programme de terminale","text":"<p>Le Bulletin Officiel</p>"},{"location":"NSI1/Reseau/c16a.html","title":"ACTIVIT\u00c9 1","text":""},{"location":"NSI1/Reseau/c16a.html#activite-161","title":"activit\u00e9 16.1","text":"<p>Compl\u00e9tez le sch\u00e9ma ci-dessous avec les termes suivants : </p> <p>ordinateur 1, ordinateur 2, switch, ordinateur 3</p> <p></p>"},{"location":"NSI1/Reseau/c16a.html#activite-162","title":"activit\u00e9 16.2","text":"<p>D\u00e9terminez les adresses r\u00e9seaux \u00e0 partir des adresses IP suivantes :</p> <p>147.12.1.24/16 192.168.2.45/24 5.23.65.87/8</p>"},{"location":"NSI1/Reseau/c16a.html#activite-163","title":"activit\u00e9 16.3","text":"<p>Soit 2 machines A et B connect\u00e9es \u00e0 un switch, dites dans quels cas ces 2 machines pourront communiquer ensemble :</p> <ul> <li> <p>adresse IP de A : 172.23.4.7/16 ; adresse IP de B : 172.23.5.8/16</p> </li> <li> <p>adresse IP de A : 24.2.8.127/8 ; adresse IP de B : 24.23.5.52/8</p> </li> <li> <p>adresse IP de A : 193.28.7.2/24 ; adresse IP de B : 193.28.8.3/24</p> </li> </ul>"},{"location":"NSI1/Reseau/c16a.html#activite-164","title":"activit\u00e9 16.4","text":"<p>Combien de machines peut-on trouver au maximum :</p> <ul> <li> <p>dans un r\u00e9seau d'adresse r\u00e9seau 192.168.2.0/24 ?</p> </li> <li> <p>dans un r\u00e9seau d'adresse r\u00e9seau 176.24.0.0/16 ?</p> </li> <li> <p>dans un r\u00e9seau d'adresse r\u00e9seau 10.0.0.0/8 ?</p> </li> </ul>"},{"location":"NSI1/Reseau/c16c.html","title":"COURS 1","text":"<p>Licence</p> <p>La version originale de ce cours est tir\u00e9e du site pixees.fr.  La licence CC BY SA en permet une reproduction ici.</p>"},{"location":"NSI1/Reseau/c16c.html#1-introduction","title":"1) introduction","text":"<p>Il est possible de faire communiquer deux ordinateurs en les reliant par un simple c\u00e2ble. On dit alors que ces deux ordinateurs sont en r\u00e9seau.</p> <p>2 ordinateurs en r\u00e9seau :</p> <p></p> <p>Dans la plupart des cas, le c\u00e2ble reliant les 2 ordinateurs est un c\u00e2ble Ethernet. Ce type de c\u00e2ble poss\u00e8de \u00e0 ses 2 extr\u00e9mit\u00e9s des prises RJ45 (il existe d'autres types de c\u00e2bles qui permettent de mettre 2 ordinateurs en r\u00e9seau, mais l'utilisation de c\u00e2bles Ethernet est tellement majoritaire que nous ne nous int\u00e9resserons pas aux autres types de c\u00e2bles).</p> <p>c\u00e2ble Ethernet avec prises RJ45 :</p> <p></p> <p>Un ordinateur reli\u00e9 \u00e0 un r\u00e9seau doit poss\u00e9der une carte r\u00e9seau, on identifie cette carte r\u00e9seau de type Ethernet gr\u00e2ce \u00e0 la prise RJ45 femelle situ\u00e9e souvent \u00e0 l'arri\u00e8re de l'ordinateur.</p> <p>carte r\u00e9seau de type Ethernet :</p> <p></p> <p>Relier 2 ordinateurs peut avoir un int\u00e9r\u00eat, mais dans la plupart des cas, un r\u00e9seau sera constitu\u00e9 d'un plus grand nombre d'ordinateurs. Dans ce cas, il est n\u00e9cessaire d'utiliser un commutateur r\u00e9seau, souvent appel\u00e9 switch (m\u00eame en fran\u00e7ais). Un switch est constitu\u00e9 de plusieurs prises RJ45.</p> <p>plusieurs switchs :</p> <p></p> <p>Comme nous le montre la photo ci-dessus, il existe des switchs de diff\u00e9rentes tailles, certains switchs poss\u00e8dent 8 prises RJ45 alors que d'autres peuvent en poss\u00e9der 24.</p> <p>Chaque ordinateur doit \u00eatre reli\u00e9 au switch par l'interm\u00e9diaire d'un c\u00e2ble Ethernet.</p> <p>r\u00e9seau de 4 ordinateurs :</p> <p></p> <p>Dans l'exemple du sch\u00e9ma ci-dessus, les ordinateurs A, B, C et D sont en r\u00e9seau, chaque ordinateur peut communiquer avec les 3 autres.</p> <p>Les switchs ayant un nombre de prises RJ45 limit\u00e9, il peut \u00eatre n\u00e9cessaire d'utiliser plusieurs switchs dans un m\u00eame r\u00e9seau.</p> <p>r\u00e9seau de 5 ordinateurs :</p> <p></p> <p>Dans l'exemple du sch\u00e9ma ci-dessus, les ordinateurs A, B, C, D et E sont en r\u00e9seau. A, B et C sont reli\u00e9s \u00e0 un switch, D et E sont reli\u00e9s \u00e0 un autre switch. Les 2 switchs \u00e9tant \u00e9galement reli\u00e9s.</p> <p>Depuis le d\u00e9but nous avons uniquement parl\u00e9 de r\u00e9seaux filaires (les diff\u00e9rents composants du r\u00e9seau sont reli\u00e9s par des c\u00e2bles), il est aussi possible de mettre plusieurs machines en r\u00e9seau gr\u00e2ce \u00e0 des technologies sans fil (utilisation des ondes radio pour transmettre l'information entre les diff\u00e9rents composants du r\u00e9seau), par exemple, le wifi (il existe d'autres technologies sans fil que le wifi, mais elles ne seront abord\u00e9es ici). Chaque ordinateur appartenant au r\u00e9seau sans fil devra poss\u00e9der une carte r\u00e9seau wifi (aujourd'hui tous les ordinateurs portables vendus sont par d\u00e9faut \u00e9quip\u00e9s d'une telle carte). Il sera n\u00e9cessaire d'utiliser un concentrateur wifi (\u00e9quivalent du switch en filaire) si l'on d\u00e9sire mettre en r\u00e9seau plus de deux ordinateurs.</p>"},{"location":"NSI1/Reseau/c16c.html#2-les-adresses-ip","title":"2) les adresses IP","text":"<p>Maintenant que nos ordinateurs sont reli\u00e9s par l'interm\u00e9diaire d'un switch (ou d'un concentrateur wifi), imaginons que l'ordinateur A \"souhaite\" entrer en communication avec l'ordinateur C. Quand vous d\u00e9sirez communiquer avec quelqu'un par voie postale, il est n\u00e9cessaire d'\u00e9crire l'adresse de cette personne sur une enveloppe. \u00c0 chaque habitation correspond donc une adresse postale. Et bien c'est un peu la m\u00eame chose pour les ordinateurs en r\u00e9seau, chaque machine poss\u00e8de une adresse. Pendant tr\u00e8s longtemps il a exist\u00e9 diff\u00e9rentes technologies de r\u00e9seau et donc diff\u00e9rents types d'adresse. Aujourd'hui, on trouve presque exclusivement qu'un seul type d'adresse : les adresses IP (nous \u00e9tudierons donc uniquement ce type d'adresse).</p> <p>Les adresses IP sont de la forme : \"a.b.c.d\", avec a, b, c et d entier naturel compris entre 0 et 255 (a, b, c et d sont cod\u00e9s sur 1 octet). Voici un exemple d'adresse IP : <code>192.168.0.1</code></p> <p>Une partie de l\u2019adresse IP permet d\u2019identifier le r\u00e9seau auquel appartient la machine et l\u2019autre partie de l\u2019adresse IP permet d\u2019identifier la machine sur ce r\u00e9seau.</p> <p>Un exemple</p> <p>Soit un ordinateur A ayant pour adresse IP <code>192.168.2.1</code>. Dans cette adresse IP, <code>192.168.2</code> permet d\u2019identifier le r\u00e9seau (on dit que la machine A appartient au r\u00e9seau ayant pour adresse <code>192.168.2.0</code>). Pour trouver l'adresse r\u00e9seau il suffit de remplacer la partie machine de cette adresse IP par un ou des 0. L'indication <code>.1</code> permet d\u2019identifier la machine sur le r\u00e9seau.</p> <p>Toutes les machines appartenant au m\u00eame r\u00e9seau devront poss\u00e9der la m\u00eame adresse r\u00e9seau (sinon elles ne pourront pas communiquer, m\u00eame si elles sont bien physiquement reli\u00e9es).</p> <p>Prenons 2 exemples, soit 2 machines A et B en r\u00e9seau :</p> <ul> <li>la machine A a pour adresse IP <code>192.168.2.5</code> et la machine B a pour adresse IP <code>192.168.2.8</code>. Les 3 premiers octets sont bien identiques (<code>192.168.2</code>), A et B ont donc la m\u00eame adresse r\u00e9seau <code>192.168.2.0</code>. Ces 2 machines pourront donc communiquer;</li> <li>la machine A a pour adresse IP 192.168.2.5 et la machine B a pour adresse IP <code>192.168.3.8</code>. Les 3 premiers octets ne sont pas identiques (<code>192.168.2</code> pour A et <code>192.168.3</code> pour B), A et B n'ont pas la m\u00eame adresse r\u00e9seau (<code>192.168.2.0</code> pour A et <code>192.168.3.0</code> pour B). Ces 2 machines ne pourront donc pas communiquer.  </li> </ul> <p>Attention</p> <p>Les adresses IP (a.b.c.d) n\u2019ont forc\u00e9ment pas les parties a, b et c consacr\u00e9es \u00e0 l\u2019identification du r\u00e9seau et la partie d consacr\u00e9es \u00e0 l\u2019identification des machines sur le r\u00e9seau. On rajoute souvent \u00e0 l'adresse IP un <code>/</code> suivie du nombre 8, 16 ou 24.</p> <ul> <li>si ce nombre est 8 (exemple : <code>192.168.2.1/8</code>), cela signifie que pour une adresse a.b.c.d/8, la partie a est consacr\u00e9e \u00e0 l'adresse r\u00e9seau, le reste (b, c, d) est consacr\u00e9 \u00e0 la partie machine de l'adresse IP. On aura donc une adresse r\u00e9seau de la forme a.0.0.0</li> <li>si ce nombre est 16 (exemple : <code>192.168.2.1/16</code>), cela signifie que pour une adresse a.b.c.d/16, les parties a et b sont consacr\u00e9es \u00e0 l'adresse r\u00e9seau, le reste (c, d) est consacr\u00e9 \u00e0 la partie machine de l'adresse IP. On aura donc une adresse r\u00e9seau de la forme a.b.0.0</li> <li>si ce nombre est 24 (exemple : <code>192.168.2.1/24</code>), cela signifie que pour une adresse a.b.c.d/24, les parties a, b et c sont consacr\u00e9es \u00e0 l'adresse r\u00e9seau, le reste (d) est consacr\u00e9 \u00e0 la partie machine de l'adresse IP. On aura donc une adresse r\u00e9seau de la forme a.b.c.0</li> </ul> <p>Vous avez sans doute d\u00e9j\u00e0 compris que:  </p> <ul> <li>le 8 signifie que les 8 premiers bits (le premier octet) sont consacr\u00e9s \u00e0 la partie r\u00e9seau =&gt; a;</li> <li>que le 16 signifie que les 16 premiers bits (les deux premiers octets) sont consacr\u00e9s \u00e0 la partie r\u00e9seau =&gt; a.b;</li> <li>que le 24 signifie que les 24 premiers bits (les 3 premiers octets) sont consacr\u00e9s \u00e0 la partie r\u00e9seau =&gt; a.b.c  </li> </ul> <p>En fait, il est possible d'avoir autre chose que /8, /16 ou /24 (on peut par exemple trouver /10 ou /17...), mais ces cas font intervenir la notion de masque de sous-r\u00e9seau qui n'est pas au programme de NSI.</p> <p>Il est \u00e0 noter que certaines adresses IP ne sont pas disponibles :</p> <ul> <li>une adresse r\u00e9seau ne peut pas \u00eatre attribu\u00e9e \u00e0 une machine, par exemple aucune machine ne pourra avoir l'adresse IP 192.168.1.0/24 ou encore l'adresse IP 25.0.0.0/8;</li> <li>les adresses IP qui ont tous les octets de la partie machine de l'adresse IP \u00e0 255 ne sont pas utilisables (ce sont des adresses de broadcast qui permettent d'envoyer des donn\u00e9es vers toutes les machines d'un r\u00e9seau), exemples : <code>192.167.24.255/24</code>, <code>172.28.255.255/16</code> ou encore <code>4.255.255.255/8</code> sont des adresses de broadcast</li> </ul> <p>IPv6</p> <p>Les adresses IP que nous avons \u00e9tudi\u00e9es ci-dessus sont appel\u00e9es adresse IPv4 (adresse IP version  4). Une nouvelle norme est en train de remplacer progressivement les adresses IPv4 : les adresses IPv6 (adresse IP  version 6). Nous n'\u00e9tudierons pas cette nouvelle norme ici, mais voici tout de m\u00eame un exemple d'adresse IPv6 : 2001:0db8:0000:85a3:0000:0000:ac1f:8001</p>"},{"location":"NSI1/Reseau/c17a.html","title":"ACTIVIT\u00c9 2","text":""},{"location":"NSI1/Reseau/c17a.html#activite-171","title":"activit\u00e9 17.1","text":"<p>1) Expliquez en quelques lignes  ce  qu'est un protocole.</p> <p>2) Expliquez en quelques lignes le principe d'encapsulation des donn\u00e9es</p> <p>3) Expliquez en quelques lignes le principe des accus\u00e9s de r\u00e9ception au  niveau du protocole TCP  </p> <p>4) Expliquez en quelques lignes la notion de paquets de donn\u00e9es</p>"},{"location":"NSI1/Reseau/c17c.html","title":"COURS 2","text":""},{"location":"NSI1/Reseau/c17c.html#1-notion-de-protocole","title":"1) Notion de protocole","text":"<p>Pour communiquer, 2 ordinateurs en r\u00e9seau doivent utiliser des r\u00e8gles communes. L'ensemble de ces r\u00e8gles qui permettent \u00e0 2 ordinateurs de communiquer s'appelle un protocole.</p> <p>Il existe de nombreux protocoles r\u00e9seau, nous allons en \u00e9tudier 2 : le protocole TCP et le protocole IP. Ces 2 protocoles sont tellement li\u00e9s l'un \u00e0 l'autre que l'on parle souvent du protocole TCP/IP.</p>"},{"location":"NSI1/Reseau/c17c.html#2-un-peu-dhistoire","title":"2) Un peu d'histoire","text":"<p>Avant d'entrer dans le vif du sujet, un peu d'histoire :</p> <p>La DARPA (Defense Advanced Research Projects Agency) voit le jour en 1958, cette agence gouvernementale am\u00e9ricaine a pour but de veiller \u00e0 la constante supr\u00e9matie des \u00c9tats unis en mati\u00e8re technologique et scientifique. En 1962 la DARPA soutient le projet du professeur Licklider qui a pour but de mettre en r\u00e9seau les ordinateurs des universit\u00e9s am\u00e9ricaines afin que ces derni\u00e8res puissent \u00e9changer des informations plus rapidement (m\u00eame \u00e0 des milliers de kilom\u00e8tres de distance). En 1968, ARPAnet, 1er r\u00e9seau informatique \u00e0 grande \u00e9chelle de l'histoire voit le jour. Le 29 octobre 1969, le 1er message (le mot \"login\") est envoy\u00e9 depuis l'universit\u00e9 de Californie \u00e0 Los Angeles vers l'universit\u00e9 de Stanford via le r\u00e9seau ARPAnet (les 2 universit\u00e9s sont environ distantes de 500 Km). C'est un demi-succ\u00e8s, puisque seules les lettres \"l\" et \"o\" arriveront \u00e0 bon port. En 1972, 23 ordinateurs sont connect\u00e9s \u00e0 ARPAnet (on trouve m\u00eame des ordinateurs en dehors des \u00c9tats unis). En parall\u00e8le au projet ARPAnet, d'autres r\u00e9seaux voient le jour, probl\u00e8me, ils utilisent des protocoles de communication h\u00e9t\u00e9roclite (UUCP, NCP ou encore X.25) et 2 ordinateurs appartenant \u00e0 2 r\u00e9seaux diff\u00e9rents sont incapables de communiquer entre eux puisqu'ils n'utilisent les m\u00eames protocoles. En 1974 Vint Cerf et Bob Khan vont mettre au point le protocole TCP qui sera tr\u00e8s rapidement coupl\u00e9 au protocole IP pour donner TCP/IP. TCP/IP, gr\u00e2ce \u00e0 sa simplicit\u00e9, va tr\u00e8s rapidement s'imposer comme un standard : les diff\u00e9rents r\u00e9seaux (ARPAnet et les autres) vont adopter TCP/IP. Cette adoption va permettre d'interconnecter tous ces r\u00e9seaux (2 machines appartenant \u00e0 2 r\u00e9seaux diff\u00e9rents vont pouvoir communiquer gr\u00e2ce \u00e0 cette interconnexion). Internet \u00e9tait n\u00e9 (le terme Internet vient de \"internetting\" qui signifie \"Connexion entre plusieurs r\u00e9seaux\"). TCP/IP est donc au coeur d'Internet, voil\u00e0 pourquoi aujourd'hui, la plupart des machines utilisent TCP/IP.</p>"},{"location":"NSI1/Reseau/c17c.html#3-les-protocoles-tcp-et-ip","title":"3) Les protocoles TCP et IP","text":""},{"location":"NSI1/Reseau/c17c.html#a-notion-dencapsulation","title":"a) notion d'encapsulation","text":"<p>Apr\u00e8s ce petit rappel historique, essayons de comprendre le principe de base des protocoles TCP (Transmission Control Protocol) et IP (Internet Protocol)</p> <p>Quand un ordinateur A \"d\u00e9sire\" envoyer des donn\u00e9es \u00e0 un ordinateur B, l'ordinateur A \"utilise\" le protocole TCP pour mettre en forme les donn\u00e9es \u00e0 envoyer.</p> <p>Ensuite le protocole IP prend le relai et utilise les donn\u00e9es mises en forme par le protocole TCP afin de cr\u00e9er des paquets des donn\u00e9es. Apr\u00e8s quelques autres op\u00e9rations qui ne seront pas \u00e9voqu\u00e9es ici, les paquets de donn\u00e9es pourront commencer leur voyage sur le r\u00e9seau jusqu'\u00e0 l'ordinateur B. Il est important de bien comprendre que le protocole IP \"encapsule\" les donn\u00e9es issues du protocole TCP afin de constituer des paquets de donn\u00e9es.</p> <p></p> <p>Une fois arriv\u00e9es \u00e0 destination (ordinateur B), les donn\u00e9es sont \"d\u00e9sencapsul\u00e9es\" : on r\u00e9cup\u00e8re les donn\u00e9es TCP contenues dans les paquets afin de pouvoir les utiliser.</p> <p></p> <p>Le protocole IP s'occupe uniquement de faire arriver \u00e0 destination les paquets en utilisant l'adresse IP de l'ordinateur de destination. Les adresses IP de l'ordinateur de d\u00e9part (ordinateur A) et de l'ordinateur destination (ordinateur B) sont ajout\u00e9es aux paquets de donn\u00e9es.</p> <p></p>"},{"location":"NSI1/Reseau/c17c.html#b-accuse-de-reception","title":"b) accus\u00e9 de r\u00e9ception","text":"<p>Le protocole TCP permet de s'assurer qu'un paquet est bien arriv\u00e9 \u00e0 destination. En effet quand l'ordinateur B re\u00e7oit un paquet de donn\u00e9es en provenance de l'ordinateur A, l'ordinateur B envoie un accus\u00e9 de r\u00e9ception \u00e0 l'ordinateur A (un peu dans le genre \"OK, j'ai bien re\u00e7u le paquet\"). Si l'ordinateur A ne re\u00e7oit pas cet accus\u00e9 de r\u00e9ception en provenance de B, apr\u00e8s un temps pr\u00e9d\u00e9fini, l'ordinateur A renverra le paquet de donn\u00e9es vers l'ordinateur B.</p> <p>Nous pouvons donc r\u00e9sumer le processus d'envoi d'un paquet de donn\u00e9es comme suit :</p> <p></p> <p>\u00c0 noter qu'il existe aussi le protocole UDP qui ressemble beaucoup au protocole TCP. La grande diff\u00e9rence entre UDP et TCP est que le protocole UDP ne g\u00e8re pas les accus\u00e9s de r\u00e9ception. Les \u00e9changes de donn\u00e9es avec UDP sont donc moins fiables qu'avec TCP (un paquet \"perdu\" est d\u00e9finitivement \"perdu\" et ne sera pas renvoy\u00e9) mais beaucoup plus rapides (puisqu' il n'y a pas d'accus\u00e9 de r\u00e9ception \u00e0 transmettre). UDP est donc tr\u00e8s souvent utilis\u00e9 pour les \u00e9changes de donn\u00e9es qui doivent \u00eatre rapides, mais o\u00f9 la perte d'un paquet de donn\u00e9es de temps en temps n'est pas un gros probl\u00e8me (par exemple le streaming vid\u00e9o).</p>"},{"location":"NSI1/Reseau/c17c.html#c-notion-de-paquet","title":"c) notion de paquet","text":"<p>Il est tr\u00e8s important de bien comprendre que TCP/IP repose sur la notion de paquets de donn\u00e9es. Si par exemple on d\u00e9sire envoyer un fichier (son, photo, vid\u00e9o ou texte, peu importe, dans tous les cas on envoie une succession de bits) en utilisant TCP/IP. Les donn\u00e9es qui constituent ce fichier ne seront pas envoy\u00e9es d'un seul tenant, ces donn\u00e9es vont \u00eatre \"d\u00e9coup\u00e9es\" en plusieurs morceaux et chaque morceau sera envoy\u00e9 dans un paquet diff\u00e9rent. Une fois tous les paquets arriv\u00e9s \u00e0 destination, le fichier d'origine pourra \u00eatre reconstitu\u00e9. Pour aller d'un ordinateur A \u00e0 un ordinateur B, les diff\u00e9rents paquets contenant les donn\u00e9es qui constituent notre fichier, ne passeront pas forcement par la m\u00eame route (cette notion de route sera abord\u00e9e plus tard), ils pourront emprunter des chemins tr\u00e8s diff\u00e9rents : en exag\u00e9rant \u00e0 peine, pour faire le trajet Paris-Los Angeles, certains paquets pourront passer par l'atlantique alors que d'autres passeront par le pacifique. Si un des paquets n'arrive pas \u00e0 destination, le fichier ne pourra pas \u00eatre reconstitu\u00e9, le paquet \"perdu\" devra \u00eatre renvoy\u00e9 par l'\u00e9metteur (voir le syst\u00e8me d'accus\u00e9 de r\u00e9ception d\u00e9crit ci-dessus).</p> <p></p>"},{"location":"NSI1/Reseau/c18a.html","title":"ACTIVIT\u00c9 3","text":""},{"location":"NSI1/Reseau/c18a.html#activite-181","title":"activit\u00e9 18.1","text":"<p>compl\u00e9tez le sch\u00e9ma  ci-dessous avec les termes  suivants :</p> <p>HTTP, APPLICATION, INTERNET, FTP, TCP, ACC\u00c8S R\u00c9SEAU, UDP, WIFI, TRANSPORT, IP, ETHERNET</p> <p></p>"},{"location":"NSI1/Reseau/c18c.html","title":"COURS 3","text":""},{"location":"NSI1/Reseau/c18c.html#1-trame-ethernet","title":"1) Trame Ethernet","text":"<p>Nous avons eu l'occasion de voir avec les protocoles TCP et IP le processus d'encapsulation des donn\u00e9es : \"IP encapsule TCP\". Les paquets IP ne peuvent pas transiter sur un r\u00e9seau tel quel, ils vont eux aussi \u00eatre encapsul\u00e9s avant de pouvoir \"voyager\" sur le r\u00e9seau. L'encapsulation des paquets IP produit ce que l'on appelle une trame. Il n'est pas question d'\u00e9tudier en d\u00e9tail ce qu'est une trame, vous devez juste savoir qu'il existe de nombreux types de trames : ATM, token ring, PPP, Ethernet, Wifi... Nous allons uniquement \u00e9voquer les 2 derni\u00e8res : la trame Ethernet et la trame Wifi.</p> <p>Si vous utilisez un r\u00e9seau filaire avec des c\u00e2bles Ethernet (avec des prises RJ45), la trame sera de type Ethernet (ce qui est le cas pour le r\u00e9seau du lyc\u00e9e). Si vous utilisez un r\u00e9seau sans fil Wifi, la trame sera de type Wifi. En faite, la trame Wifi ressemble beaucoup \u00e0 la trame Ethernet, on peut m\u00eame dire que la trame Wifi est la variante sans-fil de la trame Ethernet, afin de simplifier les choses, dans la suite, nous \u00e9voquerons uniquement la trame Ethernet en ayant \u00e0 l'esprit que ce qui est dit sur la trame Ethernet et aussi valable pour la trame Wifi.</p> <p>Nous avons vu que le paquet IP contient les adresses IP de l'\u00e9metteur et du r\u00e9cepteur :</p> <p></p> <p>Le paquet IP \u00e9tant encapsul\u00e9 par la trame Ethernet, les adresses IP ne sont plus directement disponibles (il faut d\u00e9sencapsuler le paquet IP pour pouvoir lire ces adresses IP), nous allons donc trouver un autre type d'adresse qui permet d'identifier l'\u00e9metteur et le r\u00e9cepteur : l'adresse MAC (Media Access Control) aussi appel\u00e9e adresse physique.</p> <p></p> <p>Une adresse MAC est cod\u00e9e sur 6 octets. on \u00e9crit traditionnellement les adresses MAC en hexad\u00e9cimal, chaque octet \u00e9tant s\u00e9par\u00e9s par 2 points (exemple d'adresse MAC : 00:E0:4C:68:02:11)</p> <p>L'adresse MAC est li\u00e9e au mat\u00e9riel, chaque carte r\u00e9seau (Ethernet ou Wifi) poss\u00e8de sa propre adresse MAC, il n'existe pas dans le monde, 2 cartes r\u00e9seau (Ethernet ou Wifi) qui poss\u00e8dent la m\u00eame adresse MAC. Les 3 premiers octets d'une adresse MAC (\"00:E0:4C\" dans l'exemple ci-dessus) d\u00e9signent le constructeur du mat\u00e9riel, par exemple, \"00:E0:4C\" d\u00e9signe le constructeur \"realtek semiconductor corp\".</p> <p>Au moment de l'encapsulation d'un paquet IP, l'ordinateur \"\u00e9metteur\" va utiliser un protocole nomm\u00e9 ARP (Address Resolution Protocol) qui va permettre de d\u00e9terminer l'adresse MAC de l'ordinateur \"destination\", en effectuant une requ\u00eate \"broadcast\" (requ\u00eate destin\u00e9e \u00e0 tous les ordinateurs du r\u00e9seau) du type : \"j'aimerais connaitre l'adresse MAC de l'ordinateur ayant pour IP XXX.XXX.XXX.XXX\". Une fois qu'il a obtenu une r\u00e9ponse \u00e0 cette requ\u00eate ARP, l'ordinateur \"\u00e9metteur\" encapsule le paquet IP dans une trame Ethernet et envoie cette trame sur le r\u00e9seau.</p>"},{"location":"NSI1/Reseau/c18c.html#2-la-couche-application","title":"2) La couche application","text":"<p>Nous avons vu que le protocole TCP permet de mettre en forme les donn\u00e9es \u00e0 envoyer :</p> <p></p> <p>Quelle est la nature de ces donn\u00e9es mises en forme par TCP ?</p> <p>En faite, TCP effectue lui aussi une encapsulation, les donn\u00e9es encapsul\u00e9es par TCP peuvent \u00eatre de plusieurs natures :</p> <p>Nous allons tr\u00e8s prochainement \u00e9tudier le protocole HTTP. Les requ\u00eates et les r\u00e9ponses HTTP sont encapsul\u00e9s par TCP, au bout du compte et en r\u00e9sum\u00e9, nous avons donc :</p> <p></p> <p>TCP encapsule aussi d'autres types de requ\u00eates (et r\u00e9ponses), par exemple FTP (File Transfer Protocol) qui permet d'envoyer sur un r\u00e9seau des fichiers (texte, son, image...), SMTP (Simple Mail Transfer Protocol) qui permet d'envoyer des emails, DNS (Domain Name Server) qui permet d'avoir la correspondance entre une adresse IP et une URL,...</p> <p>Il est donc aussi possible d'avoir :</p> <p></p> <p>On dit que tous ces protocoles (HTTP, FTP, SMTP, DNS,...) appartiennent \u00e0 la couche \"Application\" du mod\u00e8le TCP/IP.</p>"},{"location":"NSI1/Reseau/c18c.html#3-le-modele-des-couches-tcpip","title":"3) Le mod\u00e8le des couches TCP/IP","text":"<p>En effet, \u00e0 chaque phase d'encapsulation on associe ce que l'on appelle une couche :</p> <ul> <li> <p>comme nous l'avons vu les protocoles HTTP, FTP, SMTP, DNS,... sont associ\u00e9s \u00e0 la couche \"Application\"</p> </li> <li> <p>les protocoles TCP et UDP sont associ\u00e9s \u00e0 la couche \"Transport\"</p> </li> <li> <p>le protocole IP est associ\u00e9 \u00e0 la couche \"Internet\"</p> </li> <li> <p>les trames Ethernet (ou Wifi) sont associ\u00e9es \u00e0 la couche \"Acc\u00e8s r\u00e9seau\"</p> </li> </ul> <p>On pr\u00e9sente souvent ces diff\u00e9rentes couchent sur ce type de sch\u00e9ma :</p> <p></p> <p>La couche du \"dessous\" encapsule la couche situ\u00e9e \"au dessus\"</p> <p>On nomme ce syst\u00e8me de couche \"mod\u00e8le de couches TCP/IP\" (car ce mod\u00e8le repose principalement sur TCP et IP)</p>"},{"location":"NSI1/Reseau/c18c.html#4-le-modele-des-couches-osi","title":"4) Le mod\u00e8le des couches OSI","text":"<p>Il existe un autre mod\u00e8le de couche, le mod\u00e8le OSI (Open Systems Interconnection), ce syst\u00e8me est ant\u00e9rieur au mod\u00e8le TCP/IP puisqu'il date des ann\u00e9es 1970. Ce mod\u00e8le est principalement th\u00e9orique et \u00e0 permis de poser les bases des communications r\u00e9seau. Ce mod\u00e8le est compos\u00e9 de 7 couches (alors que le mod\u00e8le TCP/IP est compos\u00e9 de 4 couches).</p> <p></p> <p>Il existe des liens entre le mod\u00e8le OSI et le mod\u00e8le TCP/IP (par exemple on retrouve le protocole IP dans la couche 3 du mod\u00e8le OSI et TCP dans la couche 4), mais parfois comparer les 2 mod\u00e8les peut \u00eatre d\u00e9licat.</p> <p>Ce mod\u00e8le est donn\u00e9 ici \u00e0 titre d'information (pour le cas o\u00f9 vous le rencontriez pendant vos recherches sur Internet), mais le principal est de retenir ce qui a \u00e9t\u00e9 vu sur le mod\u00e8le TCP/IP.</p>"},{"location":"NSI1/Reseau/c19a.html","title":"ACTIVIT\u00c9 4","text":"<p>Apr\u00e8s la th\u00e9orie, passons maintenant \u00e0 la pratique. Il est un peu difficile de mettre en place un r\u00e9seau pour effectuer quelques tests. \u00c0 la place, nous allons utiliser un simulateur de r\u00e9seau. Il existe diff\u00e9rents types de simulateurs : du plus simple au plus \"professionnel\". Nous allons utiliser un simulateur relativement simple \u00e0 prendre en main, mais suffisamment performant : Filius</p> <p>Avant de visionner une petite vid\u00e9o qui devrait vous aider \u00e0 prendre en main Filius, quelques petites indications</p> <p>Nous allons utiliser deux commandes dans la vid\u00e9o :</p> <ul> <li> <p>ipconfig qui permet de connaitre la configuration r\u00e9seau de la machine (adresse IP, adresse MAC...) sur laquelle est ex\u00e9cut\u00e9e cette commande (\"ipconfig\" est une v\u00e9ritable commande sous Windows de Microsoft, sous les syst\u00e8mes de type Unix (Linux ou macOS par exemple), la commande \u00e9quivalente est \"ifconfig\")</p> </li> <li> <p>ping qui permet d'envoyer des paquets de donn\u00e9es d'une machine A vers une machine B. Si la commande est ex\u00e9cut\u00e9e sur la machine A, le ping devra \u00eatre suivi par l'adresse IP de la machine B (par exemple, si l'adresse IP de B est \"192.168.0.2\", on aura ping 192.168.0.2)</p> </li> </ul> <p>Autre chose \u00e0 retenir, vous allez peut-\u00eatre apercevoir dans cette vid\u00e9o un \"netmask\" (masque de r\u00e9seau en fran\u00e7ais), vous devez juste savoir que :</p> <ul> <li> <p>pour une adresse du type a.b.c.d/8, on a un netmask qui est \"255.0.0.0\"</p> </li> <li> <p>pour une adresse du type a.b.c.d/16, on a un netmask qui est \"255.255.0.0\"</p> </li> <li> <p>pour une adresse du type a.b.c.d/24, on a un netmask qui est \"255.255.255.0\"</p> </li> </ul>"},{"location":"NSI1/Reseau/c19a.html#activite-191","title":"activit\u00e9 19.1","text":"<p>Vous pouvez maintenant visionner la vid\u00e9o :</p> <p>https://www.youtube.com/watch?v=nzuRSOwdF5I</p>"},{"location":"NSI1/Reseau/c19a.html#activite-192","title":"activit\u00e9 19.2","text":"<p>En utilisant Filius, cr\u00e9ez un r\u00e9seau de 4 machines (M1, M2, M3 et M4). L'adresse IP de la machine M1 est 192.168.1.1/24, choisissez les adresses IP des machines M2, M3 et M4.</p> <p>Effectuez un ipconfig sur la machine M1 afin de v\u00e9rifier son adresse IP et de d\u00e9terminer son adresse MAC (adresse physique)</p> <p>Effectuez un ping de la machine M2 vers la machine M4.</p>"},{"location":"NSI1/S1/S1A1.html","title":"SEQUENCE 1","text":"<p>Les deux premi\u00e8res activit\u00e9s ont \u00e9t\u00e9 extraites et adapt\u00e9es du livre NSI 1re - Ed. Bordas</p>"},{"location":"NSI1/S1/S1A1.html#activite-1-constructions-elementaires-langages","title":"ACTIVITE 1 - Constructions \u00e9l\u00e9mentaires &amp; langages","text":"<p>Adam a lu que dans la grande majorit\u00e9 des langages de programmation on retrouve les m\u00eames constructions \u00e9l\u00e9mentaires.  Les deux premi\u00e8res constructions \u00e9l\u00e9mentaires auxquelles il s'int\u00e9resse  sont les affectations et les s\u00e9quences d'instructions qui sont pr\u00e9sentes dans la fonction \u00e9crite en Python, suivante: </p> <pre><code>def conversion(duree_en_minute):\n    heure = duree_en_minute // 60\n    minutes = duree_en_minute % 60\n    return heures, minutes\n</code></pre> <p>Analyser</p> <p>A quelles lignes peut-on trouver:  </p> <ul> <li>une affectation?</li> <li>une s\u00e9quence d'instructions?</li> </ul> <p>Parmi les deux fonctions suivantes, laquelle contient une boucle born\u00e9e ? une boucle non born\u00e9e ? Pr\u00e9ciser les mots cl\u00e9s utilis\u00e9s.</p> <pre><code>def estimer_quantite(quantite_initiale, annee):\n    resultat = quantite_initiale\n    while resultat &lt;= quantite_initiale * 3:\n        resultat = resultat * 1.33\n        annee = annee + 1\n    return annee\n\ndef augmentation(quantite_initiale):\n    resultat = quantite_initiale\n    for i in range(5):\n        resultat = resultat * 1.33\n    return resultat\n</code></pre> <p>On consid\u00e8re maintenant les 6 fonctions suivantes. </p> <pre><code>def maximum(a, b):\n    if a &gt; b:\n        return a\n    else:\n        return b\n\ndef maximum2(a, b, c, d):\n    return maximum(maximum(a, b), maximum(c, d))\n\ndef positive(valeur):\n    if valeur &lt; 0:\n        valeur = -valeur\n    return valeur\n\ndef conversion(en_bit):\n    en_octet = en_bit / 8\n    return en_octet\n\ndef racine(a):\n    x = 1\n    for i in range(10):\n        x = (x + a / x) / 2\n    return x\n\ndef compte_bits(valeur):\n    nb_bits = 1\n    while valeur &gt; 2**nb_bits:\n        nb_bits = nb_bits + 1\n    return nb_bits    \n</code></pre> <p>Analyser</p> <p>Dans quelle(s) fonction(s) retrouve-t-on:  </p> <ol> <li>une s\u00e9quence d'instructions ?</li> <li>une ou des affectations ?</li> <li>un test ?</li> <li>une boucle born\u00e9e ?</li> <li>une boucle non born\u00e9e ?</li> <li>un appel de fonction ?</li> </ol> <p>Adam s'attache maintenant \u00e0 \u00e9crire certaines fonctions pr\u00e9c\u00e9dentes avec le langage JavaScript afin de les comparer \u00e0 celle \u00e9crite en Python. Il commence par d\u00e9clarer une fonction nomm\u00e9e <code>maximum()</code>. </p> <pre><code>function maximum(a, b){\nif (a &gt; b) {\nreturn a\n} else {\nreturn b\n}\n}\n</code></pre> <p>Analyser</p> <p>Citer les points communs avec le langage Python et rep\u00e9rer dans cet exemple 3 points particuliers du langage JavaScript. </p> <p>Adam \u00e9crit \u00e0 pr\u00e9sent cette fonction sans les indentations (version 1) et sur une seule ligne (version 2). </p> Version 1Version 2 <pre><code>function maximum(a, b) {\nif (a &gt; b) {\nreturn a\n} else {\nreturn b\n}\n}\n</code></pre> <pre><code>function maximum(a,b){ if(a&gt;b) { return a } else { return b } }\n</code></pre> <p>Analyser</p> <ul> <li>Sachant que les deux \u00e9critures de la fonction <code>maximum()</code> sont correctes,  quelles hypoth\u00e8ses peut-on formuler quant aux indentations et aux retours \u00e0 la ligne en javascript ?</li> <li>Quel caract\u00e8re est utilis\u00e9 en Javascript pour remplacer les indentations en python ?</li> </ul> <p>En gardant les indentations qui am\u00e9liore la lisibilit\u00e9 du code, Adam s'int\u00e9resse \u00e0 pr\u00e9sent \u00e0 la fonction <code>augmentation()</code>.  </p> <pre><code>function augmentation(quantite_initiale) {\nlet resultat = quantite_initiale\nfor(let i=0; i&lt;5; i++) {\nresultat = resultat * 1.33\n}\nreturn resultat\n}\n</code></pre> <p>Analyser</p> <ul> <li>En consid\u00e9rant le programme JavaScript <code>augmentation()</code> ci-dessus, citer deux nouveaux points communs et rep\u00e9rer deux diff\u00e9rences entre les langages Python et JavaScript.</li> <li>Formuler une hypoth\u00e8se sur l'utilit\u00e9 d'\u00e9crire le mot cl\u00e9 <code>let</code> aux lignes 2 et 3. </li> </ul> <p>Adam r\u00e9\u00e9crit \u00e9galement la premi\u00e8re fonction de cette activit\u00e9, <code>conversion()</code>, en Javascript.  </p> <pre><code>function conversion(duree_en_minute) {\nlet heures = Math.floor(duree_en_minute / 60)\nlet minutes = duree_en_minute % 60\nreturn [heures, minutes]\n}\n</code></pre> <p>Analyser</p> <ul> <li>En Javascript une fonction ne peut pas renvoyer un couple de valeur (en fait un n-uplet). Comment Adam a-t-il choisi de renvoyer le r\u00e9sultat ?</li> <li>L'op\u00e9rateur qui calcule le reste de la division euclidienne est identique en python et en javascript: <code>%</code>.  En revanche, il n'existe pas d'op\u00e9rateur en javascript pour calculer le quotient de la division euclidienne.  Il faut calculer le quotient de la division et r\u00e9cup\u00e9rer sa partie enti\u00e8re en faisant appel \u00e0 une fonction native du langage JavaScript qui s'appelle <code>floor()</code>.  Adam se rappelle avoir d\u00e9j\u00e0 utilis\u00e9 une fonction Python qui avait le m\u00eame nom.  D'une mani\u00e8re g\u00e9n\u00e9rale, quelles difficult\u00e9s peut-on rencontrer quand on utilise un nouveau langage de programmation ?</li> </ul>"},{"location":"NSI1/S1/S1A2.html","title":"S\u00e9quence 1","text":""},{"location":"NSI1/S1/S1A2.html#activite-2-mise-au-point-de-programmes","title":"ACTIVITE 2 - Mise au point de programmes","text":""},{"location":"NSI1/S1/S1A2.html#specification-dune-fonction","title":"Sp\u00e9cification d'une fonction","text":"<p>En tant que d\u00e9veloppeur python, on vous demande d'\u00e9crire une fonction de calcul de la racine carr\u00e9e d'un nombre. L'entreprise dans laquelle vous travaillez demande que chaque fonction soit document\u00e9e selon le plan suivant: </p> <ol> <li>Quel est le nom de la fonction ?</li> <li>Combien de param\u00e8tres sont accept\u00e9s en entr\u00e9e ? Pr\u00e9ciser leur type.</li> <li>Quel est le domaine valide des valeurs des param\u00e8tres?</li> <li>Combien de valeurs sont renvoy\u00e9es en sortie ? Pr\u00e9ciser leur type.</li> <li>Quel est le domaine valide de la valeur renvoy\u00e9e en sortie ?</li> </ol> <p>Si vos souvenirs sont bons en math\u00e9matiques, la racine carr\u00e9e d'un nombre est toujours positive ou nulle et ne peut-\u00eatre calcul\u00e9e que pour des valeurs positives ou nulles.</p> <p>Mobiliser des concepts</p> <ul> <li>R\u00e9pondre aux questions du plan en tenant compte des informations fournies.</li> <li>Les points 1, 2 et 4 du plan forment le prototype de la fonction  car ils d\u00e9finissent le minimum d'informations \u00e0 conna\u00eetre pour pouvoir l'utiliser.  A quoi servent les points 3 et 5 ? Comment ces informations pourraient-elles \u00eatre utilis\u00e9es ? </li> </ul> <p>Vous fournissez le programme suivant:</p> <pre><code>def racine(a):\n    # m\u00e9thode de H\u00e9ron\n    assert a &gt;= 0\n    x = 1\n    for i in range(10):\n        x = (x + a / x) / 2\n    assert x &gt;= 0\n    return x\n</code></pre> <p>Analyser &amp; D\u00e9crire</p> <ul> <li>Pour chaque question du plan, indiquer la ligne du programme qui apporte la r\u00e9ponse.</li> <li>Tester la fonction <code>racine()</code> avec un argument invalide en entr\u00e9e, comme par exemple la valeur -2. Que se passe-t-il ?</li> <li>On souhaite ignorer la ligne 3 de la fonction <code>racine()</code>. Il suffit  de la commenter comme suit <code># assert a &gt;= 0</code>. Tester \u00e0 nouveau la fonction avec la valeur -2. Que se passe-t-il ?</li> <li>Pr\u00e9ciser alors le r\u00f4le de l'assertion utilis\u00e9e \u00e0 la ligne 3.</li> </ul>"},{"location":"NSI1/S1/S1A2.html#utiliser-des-jeux-de-test","title":"Utiliser des jeux de test","text":"<p>En tant que d\u00e9veloppeur python, on vous demande de v\u00e9rifier le bon comportement de chaque fonction \u00e9crite. Pour cela, il est conseill\u00e9 d'\u00e9crire une deuxi\u00e8me fonction, dit de v\u00e9rification ou de test.</p> <p>La fonction \u00e0 \u00e9crire, qui sera ensuite v\u00e9rifi\u00e9e, doit calculer un prix apr\u00e8s remise: si le prix est de 100 \u20ac ou moins, il n'y a pas de r\u00e9duction. Sinon, la r\u00e9duction sur le prix total est de 10 \u20ac.  </p> <p>Vous \u00e9crivez donc les deux fonctions suivantes:</p> <pre><code>def reduction(prix):\n    if prix &lt; 100:\n        return prix\n    else:\n        return prix -10\n\n\ndef test_reduction():\n    if not reduction(50) == 50:\n        return False\n    elif not reduction(150) == 140:\n        return False\n    else:\n        return True\n</code></pre> <p>Analyser &amp; D\u00e9crire</p> <ol> <li>Si la fonction de test renvoie <code>False</code>, que peut-on en d\u00e9duire sur le fonctionnement de la fonction <code>reduction</code>?</li> <li>Que renvoie l'appel de la fonction <code>test_reduction</code>? Est-il n\u00e9cessaire que le test renvoie <code>True</code> pour que la fonction soit correcte ?</li> <li>Dans le jeu de test, quelles sont finalement les seules valeurs test\u00e9es?</li> <li>Confiant dans l'exactitude de votre fonction, vous l'int\u00e9grez dans le logiciel qui doit l'utiliser. On s'aper\u00e7oit par la suite que la r\u00e9duction est appliqu\u00e9e pour un prix \u00e9gal \u00e0 100 \u20ac. Selon vous, d'o\u00f9 vient le probl\u00e8me ?</li> <li>La fonction de test est-elle suffisante ? Expliquer pourquoi.</li> <li>Est-il r\u00e9aliste de vouloir tester tous les cas possibles ?</li> <li>Commenter la citation de l'algorithmicien tr\u00e8s connu E. Dijkstra: le test de programmes peut-\u00eatre une fa\u00e7on tr\u00e8s efficace de montrer la pr\u00e9sence de bugs mais est d\u00e9sesp\u00e9r\u00e9ment inad\u00e9quate pour prouver leur absence.</li> <li>Plus tard, un autre d\u00e9veloppeur modifie votre fonction pour ajouter une r\u00e9duction suppl\u00e9mentaire si le prix d\u00e9passe 200 \u20ac. L'appel <code>test_reduction()</code> renvoie d\u00e9sormais <code>False</code>. Que faut-il en d\u00e9duire? Quel est l'int\u00e9r\u00eat d'avoir \u00e9crit cette fonction de test ? </li> </ol>"},{"location":"NSI1/S1/S1C1.html","title":"S\u00e9quence 1","text":""},{"location":"NSI1/S1/S1C1.html#cours-langage-constructions-elementaires","title":"COURS - Langage - Constructions \u00e9l\u00e9mentaires","text":""},{"location":"NSI1/S1/S1C1.html#repere-historique","title":"Rep\u00e8re historique","text":"<p>En 1954, John Backus(1924-2007) pr\u00e9sente le premier vrai langage de programmation tel qu'on l'entend aujourd'hui: le Fortran. Il mit au point vers la fin des ann\u00e9es 50 le langage Algol. Il a, par la suite, propos\u00e9 la forme Backus-Naur notation qui permet de d\u00e9crire la grammaire des langages de programmation.</p>"},{"location":"NSI1/S1/S1C1.html#programme-et-langage-de-programmation","title":"Programme et langage de programmation","text":"<p>Un programme est un texte qui d\u00e9crit un algorithme que l\u2019on souhaite faire ex\u00e9cuter par une machine. Ce texte est \u00e9crit dans un langage particulier, appel\u00e9 langage de programmation.  On le sauvegarde dans un fichier dont l'extension donne une indication sur le langage utilis\u00e9 (<code>.py</code>, <code>.js</code>, <code>.c</code>, etc.)   </p> <p>Le principal langage utilis\u00e9 en sp\u00e9cialit\u00e9 NSI est le langage Python (cr\u00e9\u00e9 en 1991 par Guido Van Rossum) en version 3. C'est un langage de haut niveau (d'abstraction) et interpr\u00e9t\u00e9, c'est-\u00e0-dire qu'il n\u00e9cessite un autre programme appel\u00e9 interpr\u00e9teur qui va se charger d'ex\u00e9cuter ligne par ligne le programme de l'utilisateur.  </p> <p>Il existe bien \u00e9videmment d'autres langages de programmation. Il s'agit ici de pr\u00e9senter les constructions \u00e9l\u00e9mentaires que l'on retrouve dans la quasi totalit\u00e9 d'entre eux.</p>"},{"location":"NSI1/S1/S1C1.html#les-entreessorties","title":"Les entr\u00e9es/sorties","text":"<p>Dans un langage de programmation on appelle entr\u00e9es/sorties des constructions permettant une communication avec l'utilisateur, donnant ainsi un aspect interactif au programme. En python, les fonctions <code>print</code> et <code>input</code> remplissent ces taches.</p> <pre><code># Exemples\nprint(\"Hello World!\")\nprint(\"Python version 3.\", \"Environnement\", \"Jupyter Notebook 5.7\")\nprint(\"Python version 3.\", \"Environnement\", \"Jupyter Notebook 5.7\", sep=\" :: \", end=\" \")\nprint(\" !!! Pas de retour \u00e0 la ligne.\")\n</code></pre> <pre><code>Hello World!\nPython version 3. Environnement Jupyter Notebook 5.7\nPython version 3. :: Environnement :: Jupyter Notebook 5.7  !!! Pas de retour \u00e0 la ligne.\n</code></pre> <p>Remarque</p> <p>Les arguments optionnels comme <code>sep</code> ou <code>end</code> par exemple, permettent d'adapter l'affichage aux besoins.  </p> <p>Un effet (on dit aussi effet de bord) de la fonction <code>input</code> est d'interrompre le d\u00e9roulement du programme et d'attendre que l'utilisateur tape quelque chose au clavier. Les caract\u00e8res entr\u00e9s sont g\u00e9n\u00e9ralement r\u00e9cup\u00e9r\u00e9s dans une variable.</p> <pre><code>niveau = input(\"Quel est votre niveau en programmation (novice/interm\u00e9diaire/avanc\u00e9)? \")\nmoyenne = input(\"Quelle \u00e9tait votre moyenne annuelle en math ? \")\nprint(\"Vous avez r\u00e9pondu niveau: \", niveau,\"avec \", moyenne, \"en math!\")\n</code></pre> <pre><code>Quel est votre niveau en programmation (novice/interm\u00e9diaire/avanc\u00e9)? avanc\u00e9\nQuelle \u00e9tait votre moyenne annuelle en math ? 20\nVous avez r\u00e9pondu niveau:  avanc\u00e9 avec  20 en math!\n</code></pre> <p>Remarques</p> <ul> <li><code>input</code> renvoie toujours une chaine de caract\u00e8res (m\u00eame si l'utilisateur entre un nombre!);</li> <li>la syntaxe employ\u00e9e \u00e0 l'int\u00e9rieur de la fonction <code>print</code> bien que correcte, pourra \u00eatre adapt\u00e9e ult\u00e9rieurement pour tenir compte des derni\u00e8res \u00e9volutions du langage.</li> </ul>"},{"location":"NSI1/S1/S1C1.html#la-declaration-affectation","title":"La d\u00e9claration-affectation","text":"<p>Pour pouvoir acc\u00e9der aux donn\u00e9es, un programme d\u2019ordinateur fait abondamment usage de variables. En python, une variable est un nom associ\u00e9 \u00e0 un objet m\u00e9moire (voir video pour les plus curieux).  </p> <p>Contrairement \u00e0 certains langages, les variables n'ont pas besoin d'\u00eatre d\u00e9clar\u00e9es au pr\u00e9alable, en python. La d\u00e9claration et l'affectation de variables peuvent se faire en une seule instruction. En python cette op\u00e9ration est r\u00e9alis\u00e9e selon le sch\u00e9ma <code>nom_variable = valeur</code>.  </p> <p>Exemples</p> <pre><code>n = 7\nmsg = \"Affectation\"\npi = 3.14\n</code></pre> <p>Remarques</p> <ul> <li>le nom de variable doit commencer par une lettre et ne pas \u00eatre un mot r\u00e9serv\u00e9 (voir liste).</li> <li>Le type de l'objet r\u00e9f\u00e9renc\u00e9 par une variable est d\u00e9termin\u00e9 lors de l'affectation, de mani\u00e8re tout \u00e0 fait transparente. Dans l'exemple pr\u00e9c\u00e9dent, <code>n</code> d\u00e9signe un entier (<code>int</code>), <code>msg</code> d\u00e9signe une cha\u00eene de caract\u00e8res (<code>str</code>), <code>pi</code> d\u00e9signe un nombre d\u00e9cimal (<code>float</code>).  </li> </ul>"},{"location":"NSI1/S1/S1C1.html#sequence-et-bloc-dinstructions","title":"S\u00e9quence  et bloc d'instructions","text":"<p>On peut d\u00e9finir une s\u00e9quence d'instructions comme un ensemble de deux instructions ex\u00e9cut\u00e9es l'une \u00e0 la suite de l'autre (l'ordre est important!). Par exemple, les lignes</p> <pre><code>x = x + 1\nx = x * 2\n</code></pre> <p>constituent une s\u00e9quence d'instructions (valide \u00e0 condition que la variable x ait \u00e9t\u00e9 affect\u00e9e au pr\u00e9alable). Nos programmes comporteront g\u00e9n\u00e9ralement des s\u00e9quences de plus de deux instructions, on parlera alors de bloc d'instructions. En python, un bloc d'instructions est rep\u00e9r\u00e9 par son indentation, c'est-\u00e0-dire le d\u00e9calage par rapport au bloc pr\u00e9c\u00e9dent (typiquement un multiple de 4 espaces).</p> <p>Exemple </p> <p>La s\u00e9quence d'instructions ci-dessous permet de calculer et d'afficher l'aire \\(S\\) d'un disque de rayon \\(r\\) (rappel: \\(S=\\pi\\times r^{2}\\)).</p> <pre><code>PI = 3.14\nr = 5\ns = PI * r**2\nprint(s)\n</code></pre> <pre><code>78.5\n</code></pre> <p>Remarque</p> <p>Les instructions pr\u00e9c\u00e9dentes forment un seul bloc d'instructions (elles sont toutes align\u00e9es sur la m\u00eame colonne).</p>"},{"location":"NSI1/S1/S1C1.html#le-test-simple","title":"Le test simple","text":"<p>Cette construction permet d'ex\u00e9cuter une instruction ou un bloc d'instructions uniquement si une condition est v\u00e9rifi\u00e9e. En python, la syntaxe est la suivante:</p> <pre><code>if condition:\n    bloc_instructions\n</code></pre> <p>Exemple La construction <code>x % 2 == 0</code> (comparaison du reste de la division euclidienne de \\(x\\) par 2 avec z\u00e9ro) permet de tester si \\(x\\) est pair.</p> <pre><code>n = 50\nif n % 2 == 0:\n    print(n, \"est pair!\")\n    print(\"Sa moiti\u00e9 vaut \", n // 2)\n</code></pre> <pre><code>50 est pair!\nSa moiti\u00e9 vaut  25\n</code></pre> <p>Pour identifier sans ambiguit\u00e9s les instructions appartenant au bloc v\u00e9rifiant la condition, on DOIT LES INDENTER en python. La condition est souvent exprim\u00e9e avec des op\u00e9rateurs de comparaisons. Voici quelques exemples:  </p> <pre><code>x == y # x est \u00e9gal \u00e0 y\nx != y # x est diff\u00e9rent de y\nx &gt; y # x est plus grand que y\nx &lt; y # x est plus petit que y\nx &gt;= y # x est plus grand que, ou \u00e9gal \u00e0 y\nx &lt;= y # x est plus petit que, ou \u00e9gal \u00e0 y\n</code></pre>"},{"location":"NSI1/S1/S1C1.html#le-test-avec-alternative","title":"Le test avec alternative","text":"<p>Dans un test avec alternative, on ajoute un bloc \u00e0 traiter lorsque la condition n'est pas v\u00e9rifi\u00e9e. La syntaxe est la suivante:</p> <pre><code>if condition:\n    bloc_instructions_SI\nelse:\n    bloc_instructions_SINON\n</code></pre> <p>Exemple</p> <pre><code># Les test alternatif en python\nn = 501\nif n % 2 == 0:\n    print(n, \"est pair!\")\n    print(\"Sa moiti\u00e9 vaut \", n // 2)\nelse:\n    print(n, \" est impair\")\n</code></pre> <pre><code>501  est impair\n</code></pre>"},{"location":"NSI1/S1/S1C1.html#la-boucle-conditionnelle-non-bornee","title":"La boucle conditionnelle, non born\u00e9e","text":"<p>Une boucle conditionnelle, appel\u00e9 encore boucle while (en anglais) ou boucle tant que (en fran\u00e7ais) ex\u00e9cute un bloc d'instructions tant qu'une condition est v\u00e9rifi\u00e9e.  </p> <p>En python, la boucle conditionnelle a la forme suivante:  </p> <pre><code>while condition:\n    bloc_instructions\n</code></pre> <p>Remarques</p> <ul> <li>la condition s'exprime g\u00e9n\u00e9ralement avec les op\u00e9rateurs de comparaisons vus plus haut;</li> <li>le bloc d'instructions est indent\u00e9.</li> </ul> <p>Exemple</p> <pre><code>tab = 8\ni = 1\nwhile i &lt; 10: # la condition\n    print(i, \" x \", tab, \" = \", i*tab)\n    i = i + 1\n</code></pre> <pre><code>1  x  8  =  8\n2  x  8  =  16\n3  x  8  =  24\n4  x  8  =  32\n5  x  8  =  40\n6  x  8  =  48\n7  x  8  =  56\n8  x  8  =  64\n9  x  8  =  72\n</code></pre> <p>ATTENTION</p> <p>Il faut que la condition ne soit plus v\u00e9rifi\u00e9e \u00e0 un moment donn\u00e9 pour assurer la terminaison de la boucle et \u00e9viter le bouclage infini. Ce point sera d\u00e9taill\u00e9 dans le cours d'algorithmique.     Dans le cas pr\u00e9c\u00e9dent, la condition est: \\(i&lt;10\\). Or, \\(i\\) est un entier qui augmente de 1 \u00e0 chaque tour de boucle. Lorsqu'on aura atteint \\(i=10\\), la condition ne sera plus v\u00e9rifi\u00e9e et on sortira de la boucle.  </p>"},{"location":"NSI1/S1/S1C1.html#la-boucle-inconditionnelle-ou-bornee","title":"La boucle inconditionnelle ou born\u00e9e","text":"<p>Lorsque le nombre d'it\u00e9rations est connu d'avance la boucle devient inconditionnelle. On l'appelle encore boucle born\u00e9e ou boucle pour en fran\u00e7ais (for loop en anglais). En python, la syntaxe de la boucle <code>for</code>est la suivante:</p> <pre><code>for variable_compteur in sequence:\n    bloc_instructions\n</code></pre> <p>Remarques</p> <ul> <li><code>sequence</code> est une suite d'objets, comme des entiers, des caract\u00e8res d'une chaine, etc, (d'autres s\u00e9quences seront vus dans les prochains cours); typiquement une s\u00e9quence d'entiers est obtenue avec l'objet <code>range(a, b)</code> qui fourni les entiers allant de \\(a\\) \u00e0 \\(b-1\\).</li> <li>Le bloc d'instructions doit \u00eatre indent\u00e9.  </li> </ul> <p>Exemple</p> <pre><code>tab = 10\n\nfor i in range(1, tab): # i est la variable compteur, range(1, tab) fourni la sequence d'entiers\n    print(i, \" x \", tab, \" = \", i*tab)\n</code></pre> <pre><code>1  x  10  =  10\n2  x  10  =  20\n3  x  10  =  30\n4  x  10  =  40\n5  x  10  =  50\n6  x  10  =  60\n7  x  10  =  70\n8  x  10  =  80\n9  x  10  =  90\n</code></pre>"},{"location":"NSI1/S1/S1C1.html#diversite-et-unite-des-langages","title":"Diversit\u00e9 et unit\u00e9 des langages","text":"<p>Les langages de programmations sont tr\u00e8s nombreux. Ils peuvent \u00eatre class\u00e9s suivant leur style ou paradigme (fa\u00e7on de mod\u00e9liser les probl\u00e8mes et les r\u00e9soudre).  </p> <p>Plusieurs paradigmes (orient\u00e9 objet ou fonctionnel) seront abord\u00e9s en terminale. En 1re, on peut se limiter au style imp\u00e9ratif, dans lequel les probl\u00e8mes sont r\u00e9solus de mani\u00e8re s\u00e9quentielle, en proc\u00e9dant \u00e0 des modifications de la m\u00e9moire. Il est fait usage de variables, de boucles, etc.  </p> <p>Passer d'un langage \u00e0 un autre peut \u00eatre facile \u00e0 l'int\u00e9rieur d'un m\u00eame paradigme car les constructions sont souvent assez proches.  </p> <p>On peut aussi distinguer les langages suivant le fait qu'ils soient:  </p> <ul> <li>interpr\u00e9t\u00e91 ou  compil\u00e92;</li> <li>\u00e0 typage dynamique3 ou statique4;</li> </ul> <p>Exemples</p> Le test alternatif en JavascriptLe test alternatif en C <pre><code>const N = 50;\n\nif (N % 2 === 0) {\nconsole.log(N + \" est pair\");\nconsole.log(\"Sa moiti\u00e9 vaut \" + N/2);\n} else {\nconsole.log(N + \" est impair\");\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\nint N = 50;\n\nif ((N % 2) == 0){\nprintf(\"%d est pair\\n\", N);\nprintf(\"Sa moiti\u00e9 vaut %d\\n\", N/2);\n}\nelse {\nprintf(\"%d est impair\\n\", N);\n}\nreturn 0;\n}\n</code></pre> <ol> <li> <p>un programme annexe lit le code source et ex\u00e9cute les instructions; c'est le cas du langage Python (l'interpr\u00e9teur le plus courant s'appelle CPython).\u00a0\u21a9</p> </li> <li> <p>un programme annexe transforme le code source en langage machine (une fois) avant son ex\u00e9cution.\u00a0\u21a9</p> </li> <li> <p>une variable n'a pas besoin d'\u00eatre d\u00e9clar\u00e9e et peut changer de type au cours du programme (exemple en python).\u00a0\u21a9</p> </li> <li> <p>les variables doivent \u00eatre d\u00e9clar\u00e9es et ne peuvent changer de type.\u00a0\u21a9</p> </li> </ol>"},{"location":"NSI1/S1/S1C2.html","title":"S\u00e9quence 1","text":""},{"location":"NSI1/S1/S1C2.html#cours-conception-mise-au-point-de-programmes","title":"COURS - Conception &amp; Mise au point de programmes","text":""},{"location":"NSI1/S1/S1C2.html#repere-historique","title":"Rep\u00e8re historique","text":"<p>John McCarthy (1927-2011) auteur du langage Lisp en 1958 qui est le deuxi\u00e8me langage ancien encore largement diffus\u00e9 aujourd'hui. Il joua un r\u00f4le majeur dans la programmation en intelligence artificielle, \u00e9crivant un des premiers programmes jouant aux \u00e9checs.</p>"},{"location":"NSI1/S1/S1C2.html#quest-ce-quune-fonction","title":"Qu'est-ce qu'une fonction ?","text":"<p>Les programmeurs d\u00e9composent souvent leur programmes en blocs courts. Chaque bloc de code, associ\u00e9 \u00e0 un nom, est appel\u00e9 fonction. Proc\u00e9der ainsi, permet:  </p> <ul> <li>d'\u00e9viter les r\u00e9p\u00e9titions et donc de factoriser le code;</li> <li>de faciliter la maintenance;</li> <li>de faciliter dans une certaine mesure le travail en \u00e9quipe.</li> </ul> <p>Note</p> <p>D'autres termes comme sous-programme, proc\u00e9dure, etc. sont parfois employ\u00e9s, \u00e0 quelques nuances pr\u00e8s. On ne les utilisera pas en sp\u00e9cialit\u00e9 NSI.</p>"},{"location":"NSI1/S1/S1C2.html#comment-definir-et-appeler-une-fonction","title":"Comment d\u00e9finir et appeler une fonction ?","text":"<p>La syntaxe pr\u00e9sent\u00e9e ici est celle du langage Python. On d\u00e9finit une fonction avec:  </p> <ul> <li>le mot cl\u00e9 <code>def</code> suivi d'un nom;</li> <li>une paire de parenth\u00e8ses \u00e0 l'int\u00e9rieur desquelles figurent \u00e9ventuellement des param\u00e8tres;</li> <li>le caract\u00e8re deux-points <code>:</code> qui termine la ligne de d\u00e9claration;</li> <li>un bloc de code indent\u00e9 qui forme le corps de la fonction;</li> <li>le mot cl\u00e9 <code>return</code> (optionnel)</li> </ul> <pre><code>def nom_fonction(param\u00e8tre(s)):\n    bloc_instructions\n</code></pre> <p>Le nom de la fonction doit commencer par une lettre et ne doit pas \u00eatre un mot reserv\u00e9. Ce nom sera le plus explicite possible. La fonction peut avoir 0, 1 ou plus de param\u00e8tres.  </p> <p>Exemple</p> <pre><code>def deux_puissance(n):\n    p = 1\n    for c in range(n):\n        p = p * 2\n    return p\n</code></pre> <p>Lorsqu'on ex\u00e9cute ce code, il ne se passe rien. A ce stade on a d\u00e9finit la fonction, il faut maintenant l'appeler pour que tout son code soit ex\u00e9cut\u00e9. L'appel d'une fonction consiste \u00e0 \u00e9crire son nom suivi de parenth\u00e8ses ouvrantes-fermantes \u00e0 l'int\u00e9rieur desquelles on place d'\u00e9ventuels arguments.</p> <pre><code># Calcul et affichage de 2^8 et 2^16\nprint(deux_puissance(8))\nprint(deux_puissance(16))\n</code></pre> <pre><code>256\n65536\n</code></pre> <p>Note</p> <ul> <li>En l'absence d'instruction <code>return</code>, python renvoie implicitement une valeur particuli\u00e8re <code>None</code> qui signifie 'rien';</li> <li>une fonction peut appeler une autre fonction (concept d\u00e9velopp\u00e9 en classe de terminale).</li> </ul>"},{"location":"NSI1/S1/S1C2.html#specifier-une-fonction","title":"Sp\u00e9cifier une fonction","text":""},{"location":"NSI1/S1/S1C2.html#quest-ce-quune-specification","title":"Qu'est-ce qu'une sp\u00e9cification ?","text":"<p>En plus d'un nom explicite, une fonction devrait \u00eatre convenablement document\u00e9e. Cette documentation devra comporter les sp\u00e9cifications de la fonction.  </p> <p>Sp\u00e9cifier une fonction consiste \u00e0 donner:</p> <ul> <li>la liste ordonn\u00e9e et le type de ses param\u00e8tres;</li> <li>une description du r\u00e9sultat renvoy\u00e9 ou post-conditions;</li> <li>les conditions ou propri\u00e9t\u00e9s portant sur les param\u00e8tres d'entr\u00e9e ou pr\u00e9-conditions.  </li> </ul> <p>En python, la documentation suit imm\u00e9diatement la d\u00e9finition de la fonction et est encadr\u00e9e par des triples double quotes <code>\"\"\"</code>.  </p> <p>Pour garantir les post-conditions ou les pr\u00e9-conditions, on peut utiliser des assertions.  </p> <p>Definition</p> <p>Une assertion est une proposition logique qui doit \u00eatre vraie (<code>True</code> en python) sinon le programme est arr\u00eat\u00e9. </p> <p>La syntaxe d'une assertion en python est:  </p> <p><pre><code>assert expression, \"Message d'erreur explicite\"\n</code></pre> Par ailleurs, la documentation d'une fonction est en outre accessible avec la fonction native <code>help()</code></p>"},{"location":"NSI1/S1/S1C2.html#exemple-complet","title":"Exemple complet","text":"<p>Sp\u00e9cifions la fonction <code>deux_puissance</code> pr\u00e9c\u00e9dente. On utilisera la fonction native de python <code>isinstance</code> pour v\u00e9rifier que le type d'un objet est bien celui attendu.</p> <pre><code>def deux_puissance(n):\n\"\"\"\n    renvoie la puissance n-i\u00e8me de 2;\n    n: entier naturel.\n    \"\"\"\n    # Pr\u00e9conditions\n    assert isinstance(n, int), \"Erreur: n entier\"\n    assert n &gt;= 0, \"Erreur: n &gt;= 0\"\n\n    p = 1\n    for c in range(n):\n        p = p * 2    \n    return p\n</code></pre> <pre><code>deux_puissance(20)\n</code></pre> <pre><code>1048576\n</code></pre> <p>En cas de non respect des pr\u00e9conditions, le contrat entre le programmeur et l'utilisateur est rompu et le programme s'arr\u00eate. Par exemple, un appel <code>deux_puissance(2.5)</code> conduit \u00e0:  </p> <pre><code>    ---------------------------------------------------------------------------\n\n    AssertionError                            Traceback (most recent call last)\n\n    &lt;ipython-input-11-34ff1cbea852&gt; in &lt;module&gt;\n          1 # Non respect de: \"n, entier naturel\".\n          2 \n    ----&gt; 3 deux_puissance(2.5)\n\n\n    &lt;ipython-input-9-5988c4a4a8b7&gt; in deux_puissance(n)\n          5     \"\"\"\n          6     # Pr\u00e9conditions\n    ----&gt; 7     assert isinstance(n, int), \"Erreur: n entier\"\n          8     assert n &gt;= 0, \"Erreur: n &gt;= 0\"\n          9 \n\n\n    AssertionError: Erreur: n entier\n</code></pre> <p>L'acc\u00e8s \u00e0 la documentation se fait avec <code>help(deux_puissance)</code>.</p> <pre><code>    Help on function deux_puissance in module __main__:\n\n    deux_puissance(n)\n        renvoie la puissance n-i\u00e8me de 2;\n        n: entier naturel.\n</code></pre>"},{"location":"NSI1/S1/S1C2.html#utiliser-des-bibliotheques","title":"Utiliser des biblioth\u00e8ques","text":"<p>La plupart des langages de programmation proposent des fonctions toutes pr\u00eates. Ces fonctions fournies avec le langage sont regroup\u00e9es au sein d'une biblioth\u00e8que standard. Les fonctions sont regroup\u00e9es par modules sp\u00e9cialis\u00e9s (par exemple math ou random).  </p> <p>Pour pouvoir utiliser les objets (des fonctions par exemple) d'un module, il faut les importer avec l'instruction <code>import</code>.  On privil\u00e9giera la notation <code>from module import objet</code> au lieu de <code>from module import *</code>.  </p> <p>Exemple</p> <pre><code># Utilisation de la fonction racine carr\u00e9e (sqrt) du module math\nfrom math import sqrt\n\nprint(sqrt(2))\n</code></pre> <pre><code>1.4142135623730951\n</code></pre> <p>Une autre construction possible et aussi valable que la pr\u00e9c\u00e9dente, consiste \u00e0 importer le module avec <code>import module</code> puis \u00e0 utiliser l'objet avec la notation point\u00e9e <code>module.objet</code>.  </p> <p>Exemple</p> <pre><code>import math\n\nprint(math.sqrt(2))\n</code></pre> <pre><code>1.4142135623730951\n</code></pre>"},{"location":"NSI1/S1/S1C2.html#tester-son-code","title":"Tester son code","text":"<p>Pour s'assurer que le programme fonctionne comme pr\u00e9vu, il est n\u00e9cessaire de le tester. Un jeu de tests devrait couvrir les cas d'utilisation:  </p> <ul> <li>typiques;</li> <li>limites.</li> </ul> <p>On peut utiliser des assertions dans un premier temps (l'utilisation d'un module de test sp\u00e9cialis\u00e9 peut \u00eatre envisag\u00e9 en python).  </p> <p>Enfin, une approche moderne consiste \u00e0 \u00e9crire ses tests avant les fonctions.  </p> <p>Exemple</p> <pre><code># Jeu de tests\n\ndef test_puissance():\n    # Cas limite\n    assert deux_puissance(0) == 1\n    # Cas typique \n    assert deux_puissance(10) == 1024\n    return 'Tests OK'\n\ntest_puissance()\n</code></pre> <pre><code>'Tests OK'\n</code></pre> <p>IMPORTANT</p> <p>Le succ\u00e8s d'un jeu de test ne garantit pas que le programme ne contient pas de bugs. Ce succ\u00e8s est une condition n\u00e9cessaire mais non suffisante.</p>"},{"location":"NSI1/S1/S1E1.html","title":"S\u00e9quence 1","text":""},{"location":"NSI1/S1/S1E1.html#exercices","title":"EXERCICES","text":""},{"location":"NSI1/S1/S1E1.html#exercice-1-quelques-pieges-de-laffectation","title":"Exercice 1: quelques pi\u00e8ges de l'affectation","text":"<p>On d\u00e9finit la fonction <code>calcul_v1</code> suivante: </p> <pre><code>def calcul_v1(n):\n    resultat = 0\n    for i in range(n):\n        resultat = resultat + 1\n    return resultat\n</code></pre> <ol> <li> <p>Donner deux constructions \u00e9l\u00e9mentaires diff\u00e9rentes ainsi que le num\u00e9ro de la ligne o\u00f9 elles apparaissent.</p> </li> <li> <p>On modifie l\u00e9g\u00e8rement la fonction pr\u00e9c\u00e9dente, pour obtenir une autre version:  </p> </li> </ol> <pre><code>def calcul_v2(n):\n    for i in range(n):\n        resultat = resultat + 1\n    return resultat\n</code></pre> <p>L'ex\u00e9cution de <code>calcul_v2(0)</code> provoque cette fois-ci l'erreur suivante:  </p> <pre><code>---------------------------------------------------------------------------\nUnboundLocalError                         Traceback (most recent call last)\n&lt;ipython-input-5-e000315c4ef2&gt; in &lt;module&gt;\n----&gt; 1 calcul_v2(0)\n\n&lt;ipython-input-4-012f1c01c96b&gt; in calcul_v2(n)\n      2     for i in range(n):\n      3         resultat = resultat + 1\n----&gt; 4     return resultat\n\nUnboundLocalError: local variable 'resultat' referenced before assignment\n</code></pre> <p>En comparant avec la premi\u00e8re version, donner l'origine cette erreur. Proposer une explication de la situation.</p> <p>3. Un \u00e9l\u00e8ve ex\u00e9cute la s\u00e9quence d'instructions suivante:  </p> <pre><code>calcul_v1(100)\nsomme_100 = resultat\n</code></pre> <p>Malheureusement cette s\u00e9quence \u00e9choue. L'interpr\u00e9teur python affiche l'erreur</p> <pre><code>NameError: name 'resultat' is not defined\n</code></pre> <p>Cette erreur semble curieuse \u00e0 priori car la variable <code>resultat</code> a \u00e9t\u00e9 d\u00e9clar\u00e9e et affect\u00e9e dans la fonction <code>calcul_v1</code>.  </p> <p>Faire une hypoth\u00e8se sur la visibilit\u00e9 d'une variable d\u00e9clar\u00e9e \u00e0 l'int\u00e9rieur d'une fonction.</p>"},{"location":"NSI1/S1/S1E1.html#exercice-2-des-etoiles-en-boucle","title":"Exercice 2: des \u00e9toiles en boucle","text":""},{"location":"NSI1/S1/S1E1.html#preambule-complements-sur-les-chaines-de-caractere","title":"Pr\u00e9ambule: compl\u00e9ments sur les cha\u00eenes de caract\u00e8re","text":"<p>Utilisation des op\u00e9rateurs <code>+</code> et <code>*</code></p> <pre><code>ch = '_/\\_'\nprint(ch)\n</code></pre> <pre><code>_/\\_\n</code></pre> <p>L'op\u00e9rateur <code>+</code> permet de concat\u00e9ner deux cha\u00eenes.</p> <pre><code>print(ch + ch + ch)\n</code></pre> <pre><code>_/\\__/\\__/\\_\n</code></pre> <p>On peut aussi utiliser l'op\u00e9rateur <code>*</code> entre une cha\u00eene et un entier.</p> <pre><code>ch = ch * 3\nprint(ch)\n</code></pre> <pre><code>_/\\__/\\__/\\_\n</code></pre> <p>Dans ce dernier exemple <code>ch</code> r\u00e9f\u00e9rence un nouvel objet r\u00e9sultant de la concat\u00e9nation <code>_/\\_</code>+<code>_/\\_</code>+<code>_/\\_</code>.</p> <p>Le caract\u00e8re d'\u00e9chappement <code>\\</code></p> <p>Sa pr\u00e9sence dans une cha\u00eene modifie le caract\u00e8re qui le suit. Ainsi <code>\\n</code> ne d\u00e9signe pas <code>n</code> mais un saut de ligne.</p> <pre><code>print('100\\n200\\n300')\n</code></pre> <pre><code>100\n200\n300\n</code></pre>"},{"location":"NSI1/S1/S1E1.html#enonce","title":"Enonc\u00e9","text":"<p>On consid\u00e8re la fonction <code>etoilef</code> suivante, dont la documentation est incompl\u00e8te.</p> <pre><code>def etoilef(n):\n\"\"\"\n    A compl\u00e9ter\n    \"\"\"\n    a = ''\n    for i in range(1, n+1):\n        a = a + '*' * i + '\\n'\n    return a\n</code></pre> <ol> <li>Que r\u00e9alise cette fonction? En cas de difficult\u00e9, on peut r\u00e9aliser quelques appels <code>print(etoilef(n))</code>, <code>n</code> \u00e9tant un entier naturel sup\u00e9rieur ou \u00e9gal \u00e0 1.</li> <li>Compl\u00e9ter la documentation de la fonction.</li> <li>Sur la \\(i\\)-\u00e8me ligne, \\(i\\) \u00e9tant un entier sup\u00e9rieur \u00e0 1, combien a-t-on d'\u00e9toiles ?</li> <li>Transformer la fonction <code>etoilef</code> en une fonction <code>etoilew</code> qui utilise une boucle conditionnelle (<code>while</code>) et qui r\u00e9pond aux m\u00eames sp\u00e9cifications.</li> </ol>"},{"location":"NSI1/S1/S1E1.html#exercice-3-diversite-des-langages","title":"Exercice 3: diversit\u00e9 des langages","text":"<p>Aucune connaissance des langages cit\u00e9s ci-dessous n'est n\u00e9cessaire pour r\u00e9soudre l'exercice. Il s'agit d'un travail sur les similitudes et les diff\u00e9rences existant entre ces langages.</p> <p>Le m\u00e9lange de Fisher-Yates est un algorithme qui permet de m\u00e9langer des  objets (voir sa description sur Wikipedia).  On se propose de comparer la traduction cet algorithme dans divers langages de programmation.</p> <p><code>Pascal (1970)</code></p> <pre><code>procedure shuffleList(var tab: tableau);\nvar\ni, j, tmp : integer;\nbegin\nfor i := 1 to High(tab) - Low(tab) do begin\nj := random(i + 1);\nif j &lt; i then\ntmp := tab[i + Low(tab)];\ntab[i + Low(tab)] := tab[j + Low(tab)];\ntab[j + Low(tab)] := tmp\nend;\nend;\nend;\n</code></pre> <p><code>C (1972)</code></p> <pre><code>void shuffle(int tab[], int n) {\nint i;\nfor (i = 1; i &lt; n; ++i) {\nint j = random(i + 1);\nif (j &lt; i) {\nint tmp = tab[i];\ntab[i] = tab[j];\ntab[j] = tmp;\n}\n}\n}\n</code></pre> <p><code>Go (2009)</code> </p> <pre><code>func shuffle(tab []int) {\nfor i := 1; i &lt; len(tab); i++ {\nj := rand.Intn(i + 1)\nif j &lt; i {\ntmp := tab[i]\ntab[i] := tab[j]\ntab[j] := tmp\n}\n}\n}\n</code></pre> <p><code>ECMAScript (Javascript) ES 6 (2015)</code></p> <pre><code>const shuffle = (tab) =&gt; {\nfor (let i = 1; i &lt; tab.length; i++) {\nlet j = Math.floor((i + 1) * Math.random())\nif (j &lt; i) {\nlet temp = tab[j]\ntab[j] = tab[i]\ntab[i] = temp\n}\n}\n}\n</code></pre> <p><code>Python (1991)</code></p> <pre><code>def shuffle(tab):\n    for i in range(1, len(tab)):\n        j = random.randint(0, i)\n        if j &lt; i:\n            tab[i], tab[j] = tab[j], tab[i]\n</code></pre> <ol> <li>Comment sont d\u00e9limit\u00e9s les blocs d'instructions ?</li> <li>Est-il n\u00e9cessaire de d\u00e9clarer les variables locales dans une fonction ?</li> <li>Comment est construite une boucle <code>for</code> ?</li> <li>A partir des informations propos\u00e9es, de quel(s) langage(s), le <code>Go</code> est-il proche ?</li> </ol> <p>R\u00e9ponses  </p> Pascal C Go Python Javascript (ES 6) D\u00e9limiteurs Variables locales Structure boucle for"},{"location":"NSI1/S1/S1E1.html#exercice-4-specifier-une-fonction-et-tests","title":"Exercice 4: sp\u00e9cifier une fonction et tests","text":"<p>Lucas a d\u00e9j\u00e0 eu 3 notes sur 20 en NSI:  </p> <ul> <li>14 coef. 1</li> <li>15 coef. 2</li> <li>16 coef. 2</li> </ul> <p>La derni\u00e8re \u00e9valuation pr\u00e9vue sera affect\u00e9e d'un coefficient 5. Lucas veut pr\u00e9voir sa moyenne trimestrielle en \u00e9crivant une fonction <code>moyenne</code> qui prendra en param\u00e8tre sa derni\u00e8re note et qui renvoie sa moyenne trimestrielle.</p> <ol> <li>Ecrire les sp\u00e9cifications de la fonction <code>moyenne</code>.</li> <li>Donner une assertion qui permet de garantir la pr\u00e9condition.</li> <li> <p>Lucas a bien pris note des bonnes pratiques de programmation. Il commence par \u00e9crire une fonction de tests de sa fonction <code>moyenne</code>:  </p> <p><pre><code>def test_moyenne():\n    # Cas limites\n    assert isclose(moyenne(0), 7.6)\n    assert isclose(moyenne(20), 17.6)\n    # Cas typique\n    assert isclose(moyenne(10), 12.6)\n    return 'Tests OK'\n</code></pre> Compl\u00e9ter cette fonction de test.</p> </li> <li> <p>Ecrire la fonction <code>moyenne</code> et tester la.</p> </li> </ol>"},{"location":"NSI1/S1/S1E1.html#exercice-5-divisibilite","title":"Exercice 5: divisibilit\u00e9","text":"<p>Un moyen simple pour savoir si un entier naturel \\(a\\) est divisible par un entier naturel \\(k\\) non nul, est de tester le reste de la division de \\(a\\) par \\(k\\). S'il est nul alors \\(a\\) est divisible par \\(k\\). La fonction <code>est_divisible</code> ci-dessous code cette propri\u00e9t\u00e9.</p> <pre><code>def est_divisible(a, k):\n\"\"\" \n    Renvoie vrai (True) si a est divisible par k, faux (False) sinon.\n    a: entier naturel\n    k: entier naturel strictement positif\n    \"\"\"\n    assert isinstance(a, int), \"Erreur, a entier\"\n    assert a &gt;= 0, \"Erreur, a entier naturel\"\n    assert isinstance(k, int), \"Erreur, k entier\"\n    assert k &gt; 0, \"Erreur, k strictement positif\"\n\n    return a % k == 0\n\ndef test_divisible():\n    assert est_divisible(0, 1) is True\n    assert est_divisible(2, 1) is True\n    assert est_divisible(10, 3) is False\n    return 'Tests OK'\n</code></pre> <ol> <li>Combien de param\u00e8tres requiert la fonction <code>est_divisible</code> ?</li> <li>Quel est l'int\u00e9r\u00eat des lignes 7 \u00e0 10 ?</li> <li>Tester la fonction <code>est_divisible</code>.</li> <li> <p>Pr\u00e9voir le r\u00e9sultat renvoy\u00e9 par l'appel <code>test_divisible()</code> si on rajoute  avant la ligne <code>return ...</code> l'instruction </p> <p><code>assert est_divisible(10, 0) is False</code>.</p> </li> </ol>"},{"location":"NSI1/S1/S1E1.html#exercice-6-annee-bissextile","title":"Exercice 6: ann\u00e9e bissextile","text":"<p>Dans le calendrier gr\u00e9gorien, une ann\u00e9e est bissextile si (voir article wikipedia) on se trouve dans un des cas suivants:  </p> <ul> <li>l'ann\u00e9e est divisible par 4 et non divisible par 100 ;</li> <li>l'ann\u00e9e est divisible par 400</li> </ul> <p>On souhaite coder une fonction <code>est_bissextile</code> qui prend en param\u00e8tre  une ann\u00e9e et qui renvoie le r\u00e9sultat logique vrai ou faux (<code>True</code> ou <code>False</code>  en python) selon que l'ann\u00e9e est bissextile ou non. Pour simplifier, on  consid\u00e8re que le passage au calendrier gr\u00e9gorien a eu lieu en 1583.  </p> <ol> <li> <p>Compl\u00e9ter les sp\u00e9cifications de la fonction <code>est_bissextile</code> ci-dessous.  Seuls les <code>...</code> sont \u00e0 compl\u00e9ter. Ne pas supprimer l'instruction <code>pass</code>  qui sera remplac\u00e9e par votre code plus tard.</p> <pre><code># A compl\u00e9ter\n\ndef est_bissextile(...):\n\"\"\"\n    ...\n    \"\"\"\n    pass\n</code></pre> </li> <li> <p>Ecrire une fonction de tests <code>test_bissextile</code> en utilisant les r\u00e9sultats disponibles sur la page wikipedia.  </p> <pre><code># A compl\u00e9ter apr\u00e8s avoir supprimer l'instruction pass\n\ndef test_bissextile():\n    pass\n</code></pre> </li> <li> <p>Compl\u00e9ter la fonction <code>est_bissextile</code> en rempla\u00e7ant l'instruction <code>pass</code>  par votre code et en r\u00e9-utilisant la fonction <code>est_divisble</code> de l'exercice pr\u00e9c\u00e9dent.</p> </li> <li> <p>Tester votre fonction.</p> </li> </ol>"},{"location":"NSI1/S1/sequence1.html","title":"SEQUENCE 1","text":"<p>Les deux premi\u00e8res activit\u00e9s ont \u00e9t\u00e9 extraites et adapt\u00e9es du livre NSI 1re - Ed. Bordas</p>"},{"location":"NSI1/S1/sequence1.html#activite-1-constructions-elementaires-langages","title":"ACTIVITE 1 - Constructions \u00e9l\u00e9mentaires &amp; langages","text":"<p>Adam a lu que dans la grande majorit\u00e9 des langages de programmation on retrouve les m\u00eames constructions \u00e9l\u00e9mentaires.  Les deux premi\u00e8res constructions \u00e9l\u00e9mentaires auxquelles il s'int\u00e9resse  sont les affectations et les s\u00e9quences d'instructions qui sont pr\u00e9sentes dans la fonction Python suivante: </p> <pre><code>def conversion(duree_en_minute):\n    heure = duree_en_minute // 60\n    minutes = duree_en_minute % 60\n    return heures, minutes\n</code></pre> <p>R\u00e9pondre aux questions</p> <p>A quelles lignes peut-on trouver:  </p> <ul> <li>une affectation?</li> <li>une s\u00e9quence d'instructions?</li> </ul> <p>Parmi les deux fonctions suivantes, laquelle contient une boucle born\u00e9e ? une boucle non born\u00e9e ? Pr\u00e9ciser les mots cl\u00e9s utilis\u00e9s.</p> <pre><code>def estimer_quantite(quantite_initiale, annee):\n    resultat = quantite_initiale\n    while resultat &lt;= quantite_initiale * 3:\n        resultat = resultat * 1.33\n        annee = annee + 1\n    return annee\n\ndef augmentation(quantite_initiale):\n    resultat = quantite_initiale\n    for i in range(5):\n        resultat = resultat * 1.33\n    return resultat\n</code></pre> <p>On consid\u00e8re maintenant les 6 fonctions suivantes. </p> <pre><code>def maximum(a, b):\n    if a &gt; b:\n        return a\n    else:\n        return b\n\ndef maximum2(a, b, c, d):\n    return maximum(maximum(a, b), maximum(c, d))\n\ndef positive(valeur):\n    if valeur &lt; 0:\n        valeur = -valeur\n    return valeur\n\ndef conversion(en_bit):\n    en_octet = en_bit / 8\n    return en_octet\n\ndef racine(a):\n    x = 1\n    for i in range(10):\n        x = (x + a / x) / 2\n    return x\n\ndef compte_bits(valeur):\n    nb_bits = 1\n    while valeur &gt; 2**nb_bits:\n        nb_bits = nb_bits + 1\n    return nb_bits    \n</code></pre> <p>R\u00e9pondre aux questions</p> <p>Dans quelle(s) fonction(s) retrouve-t-on:  </p> <ol> <li>une s\u00e9quence d'instructions ?</li> <li>une ou des affectations ?</li> <li>un test ?</li> <li>une boucle born\u00e9e ?</li> <li>une boucle non born\u00e9e ?</li> <li>un appel de fonction ?</li> </ol> <p>Adam s'attache maintenant \u00e0 \u00e9crire certaines fonctions pr\u00e9c\u00e9dentes avec le langage JavaScript afin de les comparer \u00e0 celle \u00e9crite en Python. Il commence par \u00e9crire la fonction nomm\u00e9e <code>maximum()</code>. </p> <pre><code>function maximum(a, b){\nif (a &gt; b) {\nreturn a\n} else {\nreturn b\n}\n}\n</code></pre> <p>Analyser</p> <p>Citer les points communs avec le langage Python et rep\u00e9rer dans cet exemple 3 points particuliers du langage JavaScript. </p> <p>Adam \u00e9crit \u00e0 pr\u00e9sent cette fonction sans les indentations (version 1) et sur une seule ligne (version 2). </p> Version 1Version 2 <pre><code>function maximum(a, b) {\nif (a &gt; b) {\nreturn a\n} else {\nreturn b\n}\n}\n</code></pre> <pre><code>function maximum(a,b){ if(a&gt;b) { return a } else { return b } }\n</code></pre> <p>R\u00e9pondre aux questions</p> <ul> <li>Sachant que les deux \u00e9critures de la fonction <code>maximum()</code> sont correctes,  quelles hypoth\u00e8ses peut-on formuler quant aux indentations et aux retours \u00e0 la ligne en javascript ?</li> <li>Quel signe de ponctuation est utilis\u00e9 en Javascript pour remplacer les indentations en python ?</li> </ul> <p>En gardant les indentations qui am\u00e9liore la lisibilit\u00e9 du code, Adam s'int\u00e9resse \u00e0 pr\u00e9sent \u00e0 la fonction <code>augmentation()</code>.  </p> <pre><code>function augmentation(quantite_initiale) {\nlet resultat = quantite_initiale\nfor(let i=0; i&lt;5; i++) {\nresultat = resultat * 1.33\n}\nreturn resultat\n}\n</code></pre> <p>Analyser</p> <ul> <li>En consid\u00e9rant le programme JavaScript <code>augmentation()</code> ci-dessus, citer deux nouveaux points communs et rep\u00e9rer deux diff\u00e9rences entre les langages Python et JavaScript.</li> <li>Formuler une hypoth\u00e8se sur l'utilit\u00e9 d'\u00e9crire le mot cl\u00e9 <code>let</code> aux lignes 2 et 3. </li> </ul> <p>Adam r\u00e9\u00e9crit \u00e9galement la premi\u00e8re fonction de cette activit\u00e9, <code>conversion()</code>, en Javascript.  </p> <pre><code>function conversion(duree_en_minute) {\nlet heures = Math.floor(duree_en_minute / 60)\nlet minutes = duree_en_minute % 60\nreturn [heures, minutes]\n}\n</code></pre> <p>R\u00e9pondre aux questions</p> <ul> <li>En Javascript une fonction ne peut pas renvoyer un couple de valeur (en fait un n-uplet). Comment Adam a-t-il choisi de renvoyer le r\u00e9sultat ?</li> <li>L'op\u00e9rateur qui calcule le reste de la division euclidienne est identique en python et en javascript: <code>%</code>.  En revanche, il n'existe pas d'op\u00e9rateur en javascript pour calculer le quotient de la division euclidienne.  Il faut calculer le quotient de la division et r\u00e9cup\u00e9rer sa partie enti\u00e8re en faisant appel \u00e0 une fonction native du langage JavaScript qui s'appelle <code>floor()</code>.  Adam se rappelle avoir d\u00e9j\u00e0 utilis\u00e9 une fonction Python qui avait le m\u00eame nom.  D'une mani\u00e8re g\u00e9n\u00e9rale, quelles difficult\u00e9s peut-on rencontrer quand on utilise un nouveau langage de programmation ?</li> </ul>"},{"location":"NSI1/S1/sequence1.html#activite-2-mise-au-point-de-programmes","title":"ACTIVITE 2 - Mise au point de programmes","text":""},{"location":"NSI1/S1/sequence1.html#specification-dune-fonction","title":"Sp\u00e9cification d'une fonction","text":"<p>En tant que d\u00e9veloppeur python, on vous demande d'\u00e9crire une fonction de calcul de la racine carr\u00e9e d'un nombre. L'entreprise dans laquelle vous travaillez demande que chaque fonction soit document\u00e9e selon le plan suivant: </p> <ol> <li>Quel est le nom de la fonction ?</li> <li>Combien de param\u00e8tres sont accept\u00e9s en entr\u00e9e ? Pr\u00e9ciser leur type.</li> <li>Quel est le domaine valide des valeurs des param\u00e8tres?</li> <li>Combien de valeurs sont renvoy\u00e9es en sortie ? Pr\u00e9ciser leur type.</li> <li>Quel est le domaine valide de la valeur renvoy\u00e9e en sortie ?</li> </ol> <p>Si vos souvenirs sont bons en math\u00e9matiques, la racine carr\u00e9e d'un nombre est toujours positive ou nulle et ne peut-\u00eatre calcul\u00e9e que pour des valeurs positives ou nulles.</p> <p>Questions</p> <ul> <li>R\u00e9pondre aux questions du plan en tenant compte des informations fournies.</li> <li>Les points 1, 2 et 4 du plan forment le prototype de la fonction  car ils d\u00e9finissent le minimum d'informations \u00e0 conna\u00eetre pour pouvoir l'utiliser.  A quoi servent les points 3 et 5 ? Comment ces informations pourraient-elles \u00eatre utilis\u00e9es ? </li> </ul> <p>Vous fournissez le programme suivant:</p> <pre><code>def racine(a):\n    # m\u00e9thode de H\u00e9ron\n    assert a &gt;= 0\n    x = 1\n    for i in range(10):\n        x = (x + a / x) / 2\n    assert x &gt;= 0\n    return x\n</code></pre> <p>Questions</p> <ul> <li>Pour chaque question du plan, indiquer la ligne du programme qui apporte la r\u00e9ponse.</li> <li>Tester la fonction <code>racine()</code> avec un argument invalide en entr\u00e9e, comme par exemple la valeur \\(-2\\). Que se passe-t-il ?</li> <li>On souhaite ignorer la ligne 3 de la fonction <code>racine()</code>. Il suffit  de la commenter comme suit <code># assert a &gt;= 0</code>. Tester \u00e0 nouveau la fonction avec la valeur \\(-2\\). Que se passe-t-il ?</li> <li>Pr\u00e9ciser alors le r\u00f4le de l'assertion utilis\u00e9e \u00e0 la ligne 3.</li> </ul>"},{"location":"NSI1/S1/sequence1.html#utiliser-des-jeux-de-test","title":"Utiliser des jeux de test","text":"<p>En tant que d\u00e9veloppeur python, on vous demande de v\u00e9rifier le bon comportement de chaque fonction \u00e9crite. Pour cela, il faut \u00e9crire une deuxi\u00e8me fonction, dit de v\u00e9rification ou de test.</p> <p>La fonction \u00e0 \u00e9crire, qui sera ensuite v\u00e9rifi\u00e9e, doit calculer un prix apr\u00e8s remise: si le prix est de 100 \u20ac ou moins, il n'y a pas de r\u00e9duction. Sinon, la r\u00e9duction sur le prix total est de 10 \u20ac.  </p> <p>Vous \u00e9crivez donc les deux fonctions suivantes:</p> <pre><code>def reduction(prix):\n    if prix &lt; 100:\n        return prix\n    else:\n        return prix -10\n\n\ndef test_reduction():\n    if not reduction(50) == 50:\n        return False\n    elif not reduction(150) == 140:\n        return False\n    else:\n        return True\n</code></pre> <p>Questions</p> <ol> <li>Si la fonction de test renvoie <code>False</code>, que peut-on en d\u00e9duire sur le fonctionnement de <code>reduction(prix)</code>?</li> <li>Que renvoie l'appel <code>test_reduction</code> ? Est-il n\u00e9cessaire que le test renvoie <code>True</code> pour que la fonction soit correcte ?</li> <li>Dans le jeu de test, quelles sont finalement les seules valeurs test\u00e9es?</li> <li>Confiant dans l'exactitude de votre fonction, vous l'int\u00e9grez dans le logiciel qui doit l'utiliser. On s'aper\u00e7oit par la suite que la r\u00e9duction est appliqu\u00e9e pour un prix \u00e9gal \u00e0 100 \u20ac. Selon vous, d'o\u00f9 vient le probl\u00e8me ?</li> <li>La fonction de test est-elle suffisante ? Expliquer pourquoi.</li> <li>Est-il r\u00e9aliste de vouloir tester tous les cas possibles ?</li> <li>Commenter la citation de l'algorithmicien tr\u00e8s connu E. Dijkstra: le test de programmes peut-\u00eatre une fa\u00e7on tr\u00e8s efficace de montrer la pr\u00e9sence de bugs mais est d\u00e9sesp\u00e9r\u00e9ment inad\u00e9quate pour prouver leur absence.</li> <li>Plus tard, un autre d\u00e9veloppeur modifie votre fonction pour ajouter une r\u00e9duction suppl\u00e9mentaire si le prix d\u00e9passe 200 \u20ac. L'appel <code>test_reduction()</code> renvoie d\u00e9sormais <code>False</code>. Que faut-il en d\u00e9duire? Quel est l'int\u00e9r\u00eat d'avoir \u00e9crit cette fonction de test ? </li> </ol>"},{"location":"NSI1/S1/sequence1.html#cours-langage-constructions-elementaires","title":"COURS - Langage - Constructions \u00e9l\u00e9mentaires","text":""},{"location":"NSI1/S1/sequence1.html#repere-historique","title":"Rep\u00e8re historique","text":"<p>En 1954, John Backus(1924-2007) pr\u00e9sente le premier vrai langage de programmation tel qu'on l'entend aujourd'hui: le Fortran. Il mit au point vers la fin des ann\u00e9es 50 le langage Algol. Il a, par la suite, propos\u00e9 la forme Backus-Naur notation qui permet de d\u00e9crire la grammaire des langages de programmation.</p>"},{"location":"NSI1/S1/sequence1.html#programme-et-langage-de-programmation","title":"Programme et langage de programmation","text":"<p>Un programme est un texte qui d\u00e9crit un algorithme que l\u2019on souhaite faire ex\u00e9cuter par une machine. Ce texte est \u00e9crit dans un langage particulier, appel\u00e9 langage de programmation.  On le sauvegarde dans un fichier dont l'extension donne une indication sur le langage utilis\u00e9 (<code>.py</code>, <code>.js</code>, <code>.c</code>, etc.)   </p> <p>Le principal langage utilis\u00e9 en sp\u00e9cialit\u00e9 NSI est le langage Python (cr\u00e9\u00e9 en 1991 par Guido Van Rossum) en version 3. C'est un langage de haut niveau (d'abstraction) et interpr\u00e9t\u00e9, c'est-\u00e0-dire qu'il n\u00e9cessite un autre programme appel\u00e9 interpr\u00e9teur qui va se charger d'ex\u00e9cuter ligne par ligne le code source du programme de l'utilisateur.  </p> <p>Il existe bien \u00e9videmment d'autres langages de programmation. Il s'agit ici de pr\u00e9senter les constructions \u00e9l\u00e9mentaires que l'on retrouve dans la quasi totalit\u00e9 d'entre eux.</p>"},{"location":"NSI1/S1/sequence1.html#les-entreessorties","title":"Les entr\u00e9es/sorties","text":"<p>Dans un langage de programmation on appelle entr\u00e9es/sorties des constructions permettant une communication avec l'utilisateur, donnant ainsi un aspect interactif au programme. En python, les fonctions <code>print()</code> et <code>input()</code> remplissent ces taches.</p> <pre><code># Exemples\nprint(\"Hello World!\")\nprint(\"Python version 3.\", \"Environnement\", \"Jupyter Notebook 5.7\")\nprint(\"Python version 3.\", \"Environnement\", \"Jupyter Notebook 5.7\", sep=\" :: \", end=\" \")\nprint(\" !!! Pas de retour \u00e0 la ligne.\")\n</code></pre> <pre><code>Hello World!\nPython version 3. Environnement Jupyter Notebook 5.7\nPython version 3. :: Environnement :: Jupyter Notebook 5.7  !!! Pas de retour \u00e0 la ligne.\n</code></pre> <p>Remarque</p> <p>Les arguments optionnels comme <code>sep</code> ou <code>end</code> par exemple, permettent d'adapter l'affichage aux besoins.  </p> <p>Un effet de la fonction <code>input()</code> est d'interrompre le d\u00e9roulement du programme et d'attendre que l'utilisateur tape quelque chose au clavier. Les caract\u00e8res entr\u00e9s sont g\u00e9n\u00e9ralement r\u00e9cup\u00e9r\u00e9s dans une variable.</p> <pre><code>niveau = input(\"Quel est votre niveau en programmation (novice/interm\u00e9diaire/avanc\u00e9)? \")\nmoyenne = input(\"Quelle \u00e9tait votre moyenne annuelle en math ? \")\nprint(\"Vous avez r\u00e9pondu niveau: \", niveau,\"avec \", moyenne, \"en math!\")\n</code></pre> <pre><code>Quel est votre niveau en programmation (novice/interm\u00e9diaire/avanc\u00e9)? avanc\u00e9\nQuelle \u00e9tait votre moyenne annuelle en math ? 20\nVous avez r\u00e9pondu niveau:  avanc\u00e9 avec  20 en math!\n</code></pre> <p>Remarques</p> <ul> <li><code>input()</code> renvoie toujours une chaine de caract\u00e8res (m\u00eame si l'utilisateur entre un nombre!);</li> <li>la syntaxe employ\u00e9e \u00e0 l'int\u00e9rieur de la fonction <code>print()</code> bien que correcte, sera adapt\u00e9e dans les cours ult\u00e9rieurs tenant compte des derni\u00e8res \u00e9volutions du langage.</li> </ul>"},{"location":"NSI1/S1/sequence1.html#la-declaration-affectation","title":"La d\u00e9claration-affectation","text":"<p>Pour pouvoir acc\u00e9der aux donn\u00e9es, un programme d\u2019ordinateur fait abondamment usage de variables. En python, une variable est une r\u00e9f\u00e9rence vers un objet m\u00e9moire (voir video).  </p> <p>Contrairement \u00e0 certains langages, les variables n'ont pas besoin d'\u00eatre d\u00e9clar\u00e9es au pr\u00e9alable, en python. La d\u00e9claration et l'affectation de variables peuvent se faire en une seule instruction. En python cette op\u00e9ration est r\u00e9alis\u00e9e selon le sch\u00e9ma <code>nom_variable = valeur</code>.  </p> <p>Exemples</p> <pre><code>n = 7\nmsg = \"Affectation\"\npi = 3.14\n</code></pre> <p>Remarques</p> <ul> <li>le nom de variable doit commencer par une lettre et ne pas \u00eatre un mot r\u00e9serv\u00e9 (voir liste).</li> <li>Le type de l'objet r\u00e9f\u00e9renc\u00e9 par une variable est d\u00e9termin\u00e9 lors de l'affectation, de mani\u00e8re tout \u00e0 fait transparente. Dans l'exemple pr\u00e9c\u00e9dent, <code>n</code> r\u00e9f\u00e9rence un entier (<code>int</code>), <code>msg</code> r\u00e9f\u00e9rence une cha\u00eene de caract\u00e8res (<code>str</code>), <code>pi</code> r\u00e9f\u00e9rence un nombre d\u00e9cimal (<code>float</code>).  </li> </ul>"},{"location":"NSI1/S1/sequence1.html#sequence-et-bloc-dinstructions","title":"S\u00e9quence  et bloc d'instructions","text":"<p>On peut d\u00e9finir une s\u00e9quence d'instructions comme un ensemble de deux instructions ex\u00e9cut\u00e9es l'une \u00e0 la suite de l'autre (l'ordre est important!). Par exemple, les lignes</p> <pre><code>x = x + 1\nx = x * 2\n</code></pre> <p>constituent une s\u00e9quence d'instructions (valide \u00e0 condition que la variable x ait \u00e9t\u00e9 affect\u00e9e au pr\u00e9alable). Nos programmes comporteront g\u00e9n\u00e9ralement des s\u00e9quences de plus de deux instructions, on parlera alors de bloc d'instructions. En python, un bloc d'instructions est rep\u00e9r\u00e9 par son indentation, c'est-\u00e0-dire le d\u00e9calage par rapport au bloc pr\u00e9c\u00e9dent (typiquement un multiple de 4 espaces).</p> <p>Exemple </p> <p>La s\u00e9quence d'instructions ci-dessous permet de calculer et d'afficher l'aire \\(S\\) d'un disque de rayon \\(r\\) (rappel: \\(S=\\pi\\times r^{2}\\)).</p> <pre><code>PI = 3.14\nr = 5\ns = PI * r**2\nprint(s)\n</code></pre> <pre><code>78.5\n</code></pre> <p>Remarque</p> <p>Les instructions pr\u00e9c\u00e9dentes forment un seul bloc d'instructions (elles sont toutes align\u00e9es sur la m\u00eame colonne).</p>"},{"location":"NSI1/S1/sequence1.html#le-test-simple","title":"Le test simple","text":"<p>Cette construction permet d'ex\u00e9cuter une instruction ou un bloc d'instructions uniquement si une condition est v\u00e9rifi\u00e9e. En python, la syntaxe est la suivante:</p> <pre><code>if condition:\n    bloc_instructions\n</code></pre> <p>Exemple La construction <code>x % 2 == 0</code> (comparaison du reste de la division euclidienne de \\(x\\) par 2 avec z\u00e9ro) permet de tester si \\(x\\) est pair.</p> <pre><code>n = 50\nif n % 2 == 0:\n    print(n, \"est pair!\")\n    print(\"Sa moiti\u00e9 vaut \", n / 2)\n</code></pre> <pre><code>50 est pair!\nSa moiti\u00e9 vaut  25.0\n</code></pre> <p>Pour identifier sans ambiguit\u00e9s les instructions appartenant au bloc v\u00e9rifiant la condition, on DOIT LES INDENTER en python. La condition est souvent exprim\u00e9e avec des op\u00e9rateurs de comparaisons. Voici quelques exemples:  </p> <pre><code>x == y # x est \u00e9gal \u00e0 y\nx != y # x est diff\u00e9rent de y\nx &gt; y # x est plus grand que y\nx &lt; y # x est plus petit que y\nx &gt;= y # x est plus grand que, ou \u00e9gal \u00e0 y\nx &lt;= y # x est plus petit que, ou \u00e9gal \u00e0 y\n</code></pre>"},{"location":"NSI1/S1/sequence1.html#le-test-avec-alternative","title":"Le test avec alternative","text":"<p>Dans un test avec alternative, on ajoute un bloc \u00e0 traiter lorsque la condition n'est pas v\u00e9rifi\u00e9e. La syntaxe est la suivante:</p> <pre><code>if condition:\n    bloc_instructions_SI\nelse:\n    bloc_instructions_SINON\n</code></pre> <p>Exemple</p> <pre><code># Les test alternatif en python\nn = 501\nif n % 2 == 0:\n    print(n, \"est pair!\")\n    print(\"Sa moiti\u00e9 vaut \", n / 2)\nelse:\n    print(n, \" est impair\")\n</code></pre> <pre><code>501  est impair\n</code></pre>"},{"location":"NSI1/S1/sequence1.html#la-boucle-conditionnelle-non-bornee","title":"La boucle conditionnelle, non born\u00e9e","text":"<p>Une boucle conditionnelle, appel\u00e9 encore boucle while (en anglais) ou boucle tant que (en fran\u00e7ais) ex\u00e9cute un bloc d'instructions tant qu'une condition est v\u00e9rifi\u00e9e.  </p> <p>En python, la boucle conditionnelle a la forme suivante:  </p> <pre><code>while condition:\n    bloc_instructions\n</code></pre> <p>Remarques</p> <ul> <li>la condition s'exprime g\u00e9n\u00e9ralement avec les op\u00e9rateurs de comparaisons vus plus haut;</li> <li>le bloc d'instructions est indent\u00e9.</li> </ul> <p>Exemple</p> <pre><code>tab = 8\ni = 1\nwhile i &lt; 10: # la condition\n    print(i, \" x \", tab, \" = \", i*tab)\n    i = i + 1\n</code></pre> <pre><code>1  x  8  =  8\n2  x  8  =  16\n3  x  8  =  24\n4  x  8  =  32\n5  x  8  =  40\n6  x  8  =  48\n7  x  8  =  56\n8  x  8  =  64\n9  x  8  =  72\n</code></pre> <p>ATTENTION</p> <p>Il faut que la condition ne soit plus v\u00e9rifi\u00e9e \u00e0 un moment donn\u00e9 pour assurer la terminaison de la boucle et \u00e9viter le bouclage infini. Ce point sera d\u00e9taill\u00e9 dans le cours d'algorithmique.     Dans le cas pr\u00e9c\u00e9dent, la condition est: \\(i&lt;10\\). Or, \\(i\\) est un entier qui augmente de 1 \u00e0 chaque tour de boucle. Lorsqu'on aura atteint \\(i=10\\), la condition ne sera plus v\u00e9rifi\u00e9e et on sortira de la boucle.  </p>"},{"location":"NSI1/S1/sequence1.html#la-boucle-inconditionnelle-ou-bornee","title":"La boucle inconditionnelle ou born\u00e9e","text":"<p>Lorsque le nombre d'it\u00e9rations est connu d'avance la boucle devient inconditionnelle. On l'appelle encore boucle born\u00e9e ou boucle pour en fran\u00e7ais (for loop en anglais). En python, la syntaxe de la boucle <code>for</code>est la suivante:</p> <pre><code>for variable_compteur in sequence:\n    bloc_instructions\n</code></pre> <p>Remarques</p> <ul> <li><code>sequence</code> est une suite d'objets, comme des entiers, des caract\u00e8res d'une chaine, etc, (d'autres s\u00e9quences seront vus dans les prochains cours); typiquement une s\u00e9quence d'entiers est obtenue avec l'objet <code>range(a, b)</code> qui fourni les entiers allant de \\(a\\) \u00e0 \\(b-1\\).</li> <li>Le bloc d'instructions doit \u00eatre indent\u00e9.  </li> </ul> <p>Exemple</p> <pre><code>tab = 10\n\nfor i in range(1, tab): # i est la variable compteur, range(1, tab) fourni la sequence d'entiers\n    print(i, \" x \", tab, \" = \", i*tab)\n</code></pre> <pre><code>1  x  10  =  10\n2  x  10  =  20\n3  x  10  =  30\n4  x  10  =  40\n5  x  10  =  50\n6  x  10  =  60\n7  x  10  =  70\n8  x  10  =  80\n9  x  10  =  90\n</code></pre>"},{"location":"NSI1/S1/sequence1.html#diversite-et-unite-des-langages","title":"Diversit\u00e9 et unit\u00e9 des langages","text":"<p>Les langages de programmations sont tr\u00e8s nombreux. Ils peuvent \u00eatre class\u00e9s suivant leur style ou paradigme (fa\u00e7on de mod\u00e9liser les probl\u00e8mes et les r\u00e9soudre).  </p> <p>Plusieurs paradigmes (orient\u00e9 objet ou fonctionnel) seront abord\u00e9s en terminale. En 1re, on peut se limiter au style imp\u00e9ratif, dans lequel les probl\u00e8mes sont r\u00e9solus de mani\u00e8re s\u00e9quentielle, en proc\u00e9dant \u00e0 des modifications de la m\u00e9moire. Il est fait usage de variables, de boucles, etc.  </p> <p>Passer d'un langage \u00e0 un autre peut \u00eatre facile \u00e0 l'int\u00e9rieur d'un m\u00eame paradigme car les constructions sont souvent assez proches.  </p> <p>On peut aussi distinguer les langages suivant le fait qu'ils soient:  </p> <ul> <li>interpr\u00e9t\u00e91 ou  compil\u00e92;</li> <li>\u00e0 typage dynamique3 ou statique4;</li> </ul> <p>Exemples</p> Le test alternatif en JavascriptLe test alternatif en C <pre><code>const N = 50\n\nif (N % 2 === 0) {\nconsole.log(N + \" est pair\")\nconsole.log(\"Sa moiti\u00e9 vaut \" + N/2)\n} else {\nconsole.log(N + \" est impair\")\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\nint N = 50;\n\nif ((N % 2) == 0){\nprintf(\"%d est pair\\n\", N);\nprintf(\"Sa moiti\u00e9 vaut %d\\n\", N/2);\n}\nelse {\nprintf(\"%d est impair\\n\", N);\n}\nreturn 0;\n}\n</code></pre>"},{"location":"NSI1/S1/sequence1.html#cours-conception-mise-au-point-de-programmes","title":"COURS - Conception &amp; Mise au point de programmes","text":""},{"location":"NSI1/S1/sequence1.html#repere-historique_1","title":"Rep\u00e8re historique","text":"<p> John McCarthy (1927-2011) auteur du langage Lisp en 1958, dont la principale construction est la d\u00e9finition de fonctions. Il joua un r\u00f4le majeur dans la programmation en intelligence artificielle, \u00e9crivant un des premiers programmes jouant aux \u00e9checs.</p>"},{"location":"NSI1/S1/sequence1.html#quest-ce-quune-fonction","title":"Qu'est-ce qu'une fonction ?","text":"<p>Les programmeurs d\u00e9composent souvent leur programmes en blocs courts. Chaque bloc de code, associ\u00e9 \u00e0 un nom, est appel\u00e9 fonction. Proc\u00e9der ainsi, permet:  </p> <ul> <li>d'\u00e9viter les r\u00e9p\u00e9titions et donc de factoriser le code;</li> <li>de faciliter la maintenance;</li> <li>de faciliter dans une certaine mesure le travail en \u00e9quipe.</li> </ul> <p>Note</p> <p>D'autres termes comme sous-programme, proc\u00e9dure, etc. sont parfois employ\u00e9s. On ne les utilisera pas en sp\u00e9cialit\u00e9 NSI</p>"},{"location":"NSI1/S1/sequence1.html#comment-definir-et-appeler-une-fonction","title":"Comment d\u00e9finir et appeler une fonction ?","text":"<p>La syntaxe pr\u00e9sent\u00e9e ici est celle du langage Python. On d\u00e9finit une fonction avec:  </p> <ul> <li>le mot cl\u00e9 <code>def</code> suivi d'un nom;</li> <li>une paire de parenth\u00e8ses \u00e0 l'int\u00e9rieur desquelles figurent \u00e9ventuellement des param\u00e8tres;</li> <li>le caract\u00e8re deux-points <code>:</code> qui termine la ligne de d\u00e9claration;</li> <li>un bloc de code indent\u00e9 qui forme le corps de la fonction;</li> <li>le mot cl\u00e9 <code>return</code> (optionnel)</li> </ul> <pre><code>def nom_fonction(param\u00e8tre(s)):\n    bloc_instructions\n</code></pre> <p>Le nom de la fonction doit commencer par une lettre et ne doit pas \u00eatre un mot reserv\u00e9. Ce nom sera le plus explicite possible. La fonction peut avoir 0, 1 ou plus de param\u00e8tres.  </p> <p>Exemple</p> <pre><code>def deux_puissance(n):\n    p = 1\n    for c in range(n):\n        p = p * 2\n    return p\n</code></pre> <p>Lorsqu'on ex\u00e9cute ce code, il ne se passe rien. A ce stade on a d\u00e9finit la fonction, il faut maintenant l'appeler pour que tout son code soit ex\u00e9cut\u00e9. L'appel d'une fonction consiste \u00e0 \u00e9crire son nom suivi de parenth\u00e8ses ouvrantes-fermantes \u00e0 l'int\u00e9rieur desquelles on place d'\u00e9ventuels arguments.</p> <pre><code># Calcul et affichage de 2^8 et 2^16\nprint(deux_puissance(8))\nprint(deux_puissance(16))\n</code></pre> <pre><code>256\n65536\n</code></pre> <p>Note</p> <ul> <li>En l'absence d'instruction <code>return</code>, python renvoie implicitement une valeur particuli\u00e8re <code>None</code> qui signifie 'rien';</li> <li>une fonction peut appeler une autre fonction.</li> </ul>"},{"location":"NSI1/S1/sequence1.html#specifier-une-fonction","title":"Sp\u00e9cifier une fonction","text":""},{"location":"NSI1/S1/sequence1.html#quest-ce-quune-specification","title":"Qu'est-ce qu'une sp\u00e9cification ?","text":"<p>En plus d'un nom explicite, une fonction devrait \u00eatre convenablement document\u00e9e. Cette documentation devra comporter les sp\u00e9cifications de la fonction.  </p> <p>Sp\u00e9cifier une fonction consiste \u00e0 donner:</p> <ul> <li>la liste ordonn\u00e9e et le type de ses param\u00e8tres;</li> <li>une description du r\u00e9sultat renvoy\u00e9 ou post-conditions;</li> <li>les conditions ou propri\u00e9t\u00e9s portant sur les param\u00e8tres d'entr\u00e9e ou pr\u00e9-conditions.  </li> </ul> <p>En python, la documentation suit imm\u00e9diatement la d\u00e9finition de la fonction et est encadr\u00e9e par des triples double quotes <code>\"\"\"</code>.  </p> <p>Pour garantir les post-conditions ou les pr\u00e9-conditions, on peut utiliser des assertions.  </p> <p>Definition</p> <p>Une assertion est une proposition logique qui doit \u00eatre vraie (<code>True</code> en python) sinon le programme est arr\u00eat\u00e9. </p> <p>La syntaxe d'une assertion en python est:  </p> <p><pre><code>assert expression, \"Message d'erreur explicite\"\n</code></pre> Par ailleurs, la documentation d'une fonction est en outre accessible avec la fonction native <code>help()</code></p>"},{"location":"NSI1/S1/sequence1.html#exemple-complet","title":"Exemple complet","text":"<p>On sp\u00e9cifie la fonction <code>deux_puissance()</code> pr\u00e9c\u00e9dente.</p> <pre><code>def deux_puissance(n):\n\"\"\"\n    renvoie la puissance n-i\u00e8me de 2;\n    n: entier naturel.\n    \"\"\"\n    # Pr\u00e9conditions\n    assert isinstance(n, int), \"Erreur: n entier\"\n    assert n &gt;= 0, \"Erreur: n &gt;= 0\"\n\n    p = 1\n    for c in range(n):\n        p = p * 2    \n    return p\n</code></pre> <pre><code>deux_puissance(20)\n</code></pre> <pre><code>1048576\n</code></pre> <p>En cas de non respect des pr\u00e9conditions, le contrat entre le programmeur et l'utilisateur est rompu et le programme s'arr\u00eate. Par exemple, un appel <code>deux_puissance(2.5)</code> conduit \u00e0:  </p> <pre><code>    ---------------------------------------------------------------------------\n\n    AssertionError                            Traceback (most recent call last)\n\n    &lt;ipython-input-11-34ff1cbea852&gt; in &lt;module&gt;\n          1 # Non respect de: \"n, entier naturel\".\n          2 \n    ----&gt; 3 deux_puissance(2.5)\n\n\n    &lt;ipython-input-9-5988c4a4a8b7&gt; in deux_puissance(n)\n          5     \"\"\"\n          6     # Pr\u00e9conditions\n    ----&gt; 7     assert isinstance(n, int), \"Erreur: n entier\"\n          8     assert n &gt;= 0, \"Erreur: n &gt;= 0\"\n          9 \n\n\n    AssertionError: Erreur: n entier\n</code></pre> <p>L'acc\u00e8s \u00e0 la documentation se fait avec <code>help(deux_puissance)</code>.</p> <pre><code>    Help on function deux_puissance in module __main__:\n\n    deux_puissance(n)\n        renvoie la puissance n-i\u00e8me de 2;\n        n: entier naturel.\n</code></pre>"},{"location":"NSI1/S1/sequence1.html#utiliser-des-bibliotheques","title":"Utiliser des biblioth\u00e8ques","text":"<p>La plupart des langages de programmation proposent des fonctions toutes pr\u00eates. Ces fonctions fournies avec le langage sont regroup\u00e9es au sein d'une biblioth\u00e8que standard. Il s'agit d'un ensemble de modules sp\u00e9cialis\u00e9s (par exemple math ou random).  </p> <p>Pour pouvoir utiliser les objets (des fonctions par exemple) d'un module, il faut les importer avec l'instruction <code>import</code>.  On privil\u00e9giera la notation <code>from module import objet</code> au lieu de <code>from module import *</code>.  </p> <p>Exemple</p> <pre><code># Utilisation de la fonction racine carr\u00e9e (sqrt) du module math\nfrom math import sqrt\n\nprint(sqrt(2))\n</code></pre> <pre><code>1.4142135623730951\n</code></pre> <p>Une autre construction possible et aussi valable que la pr\u00e9c\u00e9dente, consiste \u00e0 importer le module avec <code>import module</code> puis \u00e0 utiliser l'objet avec la notation point\u00e9e <code>module.objet</code>.  </p> <p>Exemple</p> <pre><code>import math\n\nprint(math.sqrt(2))\n</code></pre> <pre><code>1.4142135623730951\n</code></pre>"},{"location":"NSI1/S1/sequence1.html#tester-son-code","title":"Tester son code","text":"<p>Pour s'assurer que le programme fonctionne comme pr\u00e9vu, il est n\u00e9cessaire de le tester. Un jeu de tests devrait couvrir les cas d'utilisation:  </p> <ul> <li>typiques;</li> <li>limites.</li> </ul> <p>On peut utiliser des assertions dans un premier temps (l'utilisation d'un module sp\u00e9cialis\u00e9 peut \u00eatre envisag\u00e9 en python).  </p> <p>Enfin, une approche moderne consiste \u00e0 \u00e9crire ses tests avant les fonctions.  </p> <p>Exemple</p> <pre><code># Jeu de tests\n\ndef test_puissance():\n    # Cas limite\n    assert deux_puissance(0) == 1\n    # Cas typique \n    assert deux_puissance(10) == 1024\n    return 'Tests OK'\n\ntest_puissance()\n</code></pre> <pre><code>'Tests OK'\n</code></pre> <p>IMPORTANT</p> <p>Le succ\u00e8s d'un jeu de test ne garantit pas que le programme ne contient pas de bugs. Il s'agit d'une condition n\u00e9cessaire mais non suffisante.</p>"},{"location":"NSI1/S1/sequence1.html#exercices-sequence-1","title":"EXERCICES S\u00e9quence 1","text":""},{"location":"NSI1/S1/sequence1.html#exercice-1-quelques-pieges-de-laffectation","title":"Exercice 1: quelques pi\u00e8ges de l'affectation","text":"<p>On d\u00e9finit la fonction <code>calcul_v1()</code> suivante: </p> <pre><code>def calcul_v1(n):\n    resultat = 0\n    for i in range(n):\n        resultat = resultat + 1\n    return resultat\n</code></pre> <ol> <li> <p>Donner deux constructions \u00e9l\u00e9mentaires diff\u00e9rentes ainsi que le num\u00e9ro de la ligne o\u00f9 elles apparaissent.</p> </li> <li> <p>On modifie l\u00e9g\u00e8rement la fonction pr\u00e9c\u00e9dente, pour obtenir une autre version:  </p> </li> </ol> <pre><code>def calcul_v2(n):\n    for i in range(n):\n        resultat = resultat + 1\n    return resultat\n</code></pre> <p>L'ex\u00e9cution de <code>calcul_v2(0)</code> provoque cette fois-ci l'erreur suivante:  </p> <pre><code>---------------------------------------------------------------------------\nUnboundLocalError                         Traceback (most recent call last)\n&lt;ipython-input-5-e000315c4ef2&gt; in &lt;module&gt;\n----&gt; 1 calcul_v2(0)\n\n&lt;ipython-input-4-012f1c01c96b&gt; in calcul_v2(n)\n      2     for i in range(n):\n      3         resultat = resultat + 1\n----&gt; 4     return resultat\n\nUnboundLocalError: local variable 'resultat' referenced before assignment\n</code></pre> <p>En comparant avec la premi\u00e8re version, donner l'origine cette erreur. Proposer une explication de la situation.</p> <ol> <li>Un \u00e9l\u00e8ve ex\u00e9cute la s\u00e9quence d'instructions suivante:  </li> </ol> <pre><code>calcul_v1(100)\nsomme_100 = resultat\n</code></pre> <p>Malheureusement cette s\u00e9quence \u00e9choue. L'interpr\u00e9teur python affiche l'erreur</p> <pre><code>NameError: name 'resultat' is not defined\n</code></pre> <p>Cette erreur semble curieuse \u00e0 priori car la variable <code>resultat</code> a \u00e9t\u00e9 d\u00e9clar\u00e9e et affect\u00e9e dans la fonction <code>calcul_v1</code>.  </p> <p>Faire une hypoth\u00e8se sur la visibilit\u00e9 d'une variable d\u00e9clar\u00e9e \u00e0 l'int\u00e9rieur d'une fonction.</p>"},{"location":"NSI1/S1/sequence1.html#exercice-2-des-etoiles-en-boucle","title":"Exercice 2: des \u00e9toiles en boucle","text":""},{"location":"NSI1/S1/sequence1.html#preambule-complements-sur-les-chaines-de-caractere","title":"Pr\u00e9ambule: compl\u00e9ments sur les cha\u00eenes de caract\u00e8re","text":"<p>Utilisation des op\u00e9rateurs <code>+</code> et <code>*</code></p> <pre><code>ch = '_/\\_'\nprint(ch)\n</code></pre> <pre><code>_/\\_\n</code></pre> <p>L'op\u00e9rateur <code>+</code> permet de concat\u00e9ner deux cha\u00eenes.</p> <pre><code>print(ch + ch + ch)\n</code></pre> <pre><code>_/\\__/\\__/\\_\n</code></pre> <p>On peut aussi utiliser l'op\u00e9rateur <code>*</code> entre une cha\u00eene et un entier.</p> <pre><code>ch = ch * 3\nprint(ch)\n</code></pre> <pre><code>_/\\__/\\__/\\_\n</code></pre> <p>Dans ce dernier exemple <code>ch</code> r\u00e9f\u00e9rence un nouvel objet r\u00e9sultant de la concat\u00e9nation <code>_/\\_</code>+<code>_/\\_</code>+<code>_/\\_</code>.</p> <p>Le caract\u00e8re d'\u00e9chappement <code>\\</code></p> <p>Sa pr\u00e9sence dans une cha\u00eene modifie le caract\u00e8re qui le suit. Ainsi <code>\\n</code> ne d\u00e9signe pas <code>n</code> mais un saut de ligne.</p> <pre><code>print('100\\n200\\n300')\n</code></pre> <pre><code>100\n200\n300\n</code></pre>"},{"location":"NSI1/S1/sequence1.html#enonce","title":"Enonc\u00e9","text":"<p>On consid\u00e8re la fonction <code>etoilef</code> suivante, dont la documentation est incompl\u00e8te.</p> <pre><code>def etoilef(n):\n\"\"\"\n    A compl\u00e9ter\n    \"\"\"\n    a = ''\n    for i in range(1, n+1):\n        a = a + '*' * i + '\\n'\n    return a\n</code></pre> <ol> <li>Que r\u00e9alise cette fonction? En cas de difficult\u00e9, on peut r\u00e9aliser quelques appels <code>print(etoilef(n))</code>, <code>n</code> \u00e9tant un entier naturel sup\u00e9rieur ou \u00e9gal \u00e0 1.</li> <li>Compl\u00e9ter la documentation de la fonction.</li> <li>Sur la \\(i\\)-\u00e8me ligne, \\(i\\) \u00e9tant un entier sup\u00e9rieur \u00e0 1, combien a-t-on d'\u00e9toiles ?</li> <li>Transformer la fonction <code>etoilef</code> en une fonction <code>etoilew</code> qui utilise une boucle conditionnelle (<code>while</code>) et qui r\u00e9pond aux m\u00eames sp\u00e9cifications.</li> </ol>"},{"location":"NSI1/S1/sequence1.html#exercice-3-diversite-des-langages","title":"Exercice 3: diversit\u00e9 des langages","text":"<p>Aucune connaissance des langages cit\u00e9s ci-dessous n'est n\u00e9cessaire pour r\u00e9soudre l'exercice. Il s'agit d'un travail sur les similitudes et les diff\u00e9rences existant entre ces langages.</p> <p>Le m\u00e9lange de Fisher-Yates est un algorithme qui permet de m\u00e9langer des  objets (voir sa description sur Wikipedia).  On se propose de comparer la traduction cet algorithme dans divers langages de programmation.</p> <p><code>Pascal (1970)</code></p> <pre><code>procedure shuffleList(var tab: tableau);\nvar\ni, j, tmp : integer;\nbegin\nfor i := 1 to High(tab) - Low(tab) do begin\nj := random(i + 1);\nif j &lt; i then\ntmp := tab[i + Low(tab)];\ntab[i + Low(tab)] := tab[j + Low(tab)];\ntab[j + Low(tab)] := tmp\nend;\nend;\nend;\n</code></pre> <p><code>C (1972)</code></p> <pre><code>void shuffle(int tab[], int n) {\nint i;\nfor (i = 1; i &lt; n; ++i) {\nint j = random(i + 1);\nif (j &lt; i) {\nint tmp = tab[i];\ntab[i] = tab[j];\ntab[j] = tmp;\n}\n}\n}\n</code></pre> <p><code>Go (2009)</code> </p> <pre><code>func shuffle(tab []int) {\nfor i := 1; i &lt; len(tab); i++ {\nj := rand.Intn(i + 1)\nif j &lt; i {\ntmp := tab[i]\ntab[i] := tab[j]\ntab[j] := tmp\n}\n}\n}\n</code></pre> <p><code>ECMAScript (Javascript) ES 6 (2015)</code></p> <pre><code>const shuffle = (tab) =&gt; {\nfor (let i = 1; i &lt; tab.length; i++) {\nlet j = Math.floor((i + 1) * Math.random())\nif (j &lt; i) {\nlet temp = tab[j]\ntab[j] = tab[i]\ntab[i] = temp\n}\n}\n}\n</code></pre> <p><code>Python (1991)</code></p> <pre><code>def shuffle(tab):\n    for i in range(1, len(tab)):\n        j = random.randint(0, i)\n        if j &lt; i:\n            tab[i], tab[j] = tab[j], tab[i]\n</code></pre> <ol> <li>Comment sont d\u00e9limit\u00e9s les blocs d'instructions ?</li> <li>Est-il n\u00e9cessaire de d\u00e9clarer les variables locales dans une fonction ?</li> <li>Comment est structur\u00e9e une boucle <code>for</code> ?</li> <li>A partir des informations propos\u00e9es, de quel(s) langage(s), le <code>Go</code> est-il proche ?</li> </ol> <p>R\u00e9ponses  </p> Pascal C Go Python Javascript (ES 6) D\u00e9limiteurs Variables locales Structure boucle for"},{"location":"NSI1/S1/sequence1.html#exercice-4-specifier-une-fonction-et-tests","title":"Exercice 4: sp\u00e9cifier une fonction et tests","text":"<p>Lucas a d\u00e9j\u00e0 eu 3 notes sur 20 en NSI:  </p> <ul> <li>14 coef. 1</li> <li>15 coef. 2</li> <li>16 coef. 2</li> </ul> <p>La derni\u00e8re \u00e9valuation pr\u00e9vue sera affect\u00e9e d'un coefficient 5. Lucas veut pr\u00e9voir sa moyenne trimestrielle en \u00e9crivant une fonction <code>moyenne</code> qui prendra en param\u00e8tre sa derni\u00e8re note et qui renvoie sa moyenne trimestrielle.</p> <ol> <li>Ecrire les sp\u00e9cifications de la fonction <code>moyenne</code>.</li> <li>Donner une assertion qui permet de garantir la pr\u00e9condition.</li> <li> <p>Lucas a bien pris note des bonnes pratiques de programmation. Il commence par \u00e9crire une fonction de tests de sa fonction <code>moyenne</code>:  </p> <p><pre><code>def test_moyenne():\n    # Cas limites\n    assert moyenne(0) == ...\n    assert moyenne(20) == ...\n    # Cas typique\n    assert moyenne(10) == ...\n    return 'Tests OK'\n</code></pre> Compl\u00e9ter cette fonction de test.</p> </li> <li> <p>Ecrire la fonction <code>moyenne</code> et tester la.</p> </li> </ol>"},{"location":"NSI1/S1/sequence1.html#exercice-5-divisibilite","title":"Exercice 5: divisibilit\u00e9","text":"<p>Un moyen simple pour savoir si un entier naturel \\(a\\) est divisible par un entier naturel \\(k\\) non nul, est de tester le reste de la division de \\(a\\) par \\(k\\). S'il est nul alors \\(a\\) est divisible par \\(k\\). La fonction <code>est_divisible</code> ci-dessous code cette propri\u00e9t\u00e9.</p> <pre><code>def est_divisible(a, k):\n\"\"\" \n    Renvoie vrai (True) si a est divisible par k, faux (False) sinon.\n    a: entier naturel\n    k: entier naturel strictement positif\n    \"\"\"\n    assert isinstance(a, int), \"Erreur, a entier\"\n    assert a &gt;= 0, \"Erreur, a entier naturel\"\n    assert isinstance(k, int), \"Erreur, k entier\"\n    assert k &gt; 0, \"Erreur, k strictement positif\"\n\n    return a % k == 0\n\ndef test_divisible():\n    assert est_divisible(0, 1) is True\n    assert est_divisible(2, 1) is True\n    assert est_divisible(10, 3) is False\n    return 'Tests OK'\n</code></pre> <ol> <li>Combien de param\u00e8tres requiert la fonction <code>est_divisible</code> ?</li> <li>Quel est l'int\u00e9r\u00eat des lignes 7 \u00e0 10 ?</li> <li>Tester la fonction <code>est_divisible</code>.</li> <li> <p>Pr\u00e9voir le r\u00e9sultat renvoy\u00e9 par l'appel <code>test_divisible()</code> si on rajoute  avant la ligne <code>return ...</code> l'instruction </p> <p><code>assert est_divisible(10, 0) is False</code>.</p> </li> </ol>"},{"location":"NSI1/S1/sequence1.html#exercice-6-annee-bissextile","title":"Exercice 6: ann\u00e9e bissextile","text":"<p>Dans le calendrier gr\u00e9gorien, une ann\u00e9e est bissextile si (voir article wikipedia) on se trouve dans un des cas suivants:  </p> <ul> <li>l'ann\u00e9e est divisible par 4 et non divisible par 100 ;</li> <li>l'ann\u00e9e est divisible par 400</li> </ul> <p>On souhaite coder une fonction <code>est_bissextile</code> qui prend en param\u00e8tre  une ann\u00e9e et qui renvoie le r\u00e9sultat logique vrai ou faux (<code>True</code> ou <code>False</code>  en python) selon que l'ann\u00e9e est bissextile ou non. Pour simplifier, on  consid\u00e8re que le passage au calendrier gr\u00e9gorien a eu lieu en 1583.  </p> <ol> <li> <p>Compl\u00e9ter les sp\u00e9cifications de la fonction <code>est_bissextile</code> ci-dessous.  Seuls les <code>...</code> sont \u00e0 compl\u00e9ter. Ne pas supprimer l'instruction <code>pass</code>  qui sera remplac\u00e9e par votre code plus tard.</p> <pre><code># A compl\u00e9ter\n\ndef est_bissextile(...):\n\"\"\"\n    ...\n    \"\"\"\n    pass\n</code></pre> </li> <li> <p>Ecrire une fonction de tests <code>test_bissextile</code> en utilisant les r\u00e9sultats disponibles sur la page wikipedia.  </p> <pre><code># A compl\u00e9ter apr\u00e8s avoir supprimer l'instruction pass\n\ndef test_bissextile():\n    pass\n</code></pre> </li> <li> <p>Compl\u00e9ter la fonction <code>est_bissextile</code> en rempla\u00e7ant l'instruction <code>pass</code>  par votre code et en r\u00e9-utilisant la fonction <code>est_divisble</code> de l'exercice pr\u00e9c\u00e9dent.</p> </li> <li> <p>Tester votre fonction.</p> </li> </ol>"},{"location":"NSI1/S1/sequence1.html#exercice-7-preparer-un-argumentaire","title":"Exercice 7: pr\u00e9parer un argumentaire","text":"<p>Pourquoi existe-t-il plus de 730 langages de programmation dont certains sont plus utilis\u00e9s que d'autres?</p> <ol> <li> <p>un programme annexe lit le code source et ex\u00e9cute les instructions; c'est le cas du langage Python (l'interpr\u00e9teur le plus courant s'appelle CPython).\u00a0\u21a9</p> </li> <li> <p>un programme annexe transforme le code source en langage machine (une fois) avant son ex\u00e9cution.\u00a0\u21a9</p> </li> <li> <p>une variable n'a pas besoin d'\u00eatre d\u00e9clar\u00e9e et peut changer de type au cours du programme (exemple en python).\u00a0\u21a9</p> </li> <li> <p>les variables doivent \u00eatre d\u00e9clar\u00e9es et ne peuvent changer de type.\u00a0\u21a9</p> </li> </ol>"},{"location":"NSI1/S2/S2A1.html","title":"SEQUENCE 2","text":""},{"location":"NSI1/S2/S2A1.html#activite-1-interface-en-ligne-de-commande-dun-syteme-dexploitation-libre","title":"ACTIVITE 1 - Interface en ligne de commande d'un syt\u00e8me d'exploitation libre","text":""},{"location":"NSI1/S2/S2A1.html#systemes-dexploitations","title":"Syst\u00e8mes d'exploitations","text":""},{"location":"NSI1/S2/S2A1.html#reperes-historiques","title":"Rep\u00e8res historiques","text":"<p>Prendre connaissance des vid\u00e9os suivantes:  </p> <ul> <li>Histoire des syst\u00e8mes d'exploitation</li> <li>Le(s) syst\u00e8me(s) de type UNIX</li> </ul> <p>Rechercher de l\u2019information - Situer dans le temps des \u00e9v\u00e9nements cl\u00e9s de l'informatique</p> <p>R\u00e9sumer en une phrase courte le r\u00f4le d'un syst\u00e8me d'exploitation. Vers quelle p\u00e9riode sont n\u00e9s les syst\u00e8mes d'exploitation ?</p>"},{"location":"NSI1/S2/S2A1.html#systemes-libres-ou-proprietaires","title":"Syst\u00e8mes libres ou propri\u00e9taires","text":"<p>Rechercher de l\u2019information</p> <p>A l'aide de cette page wikipedia, rappelez les 4 diff\u00e9rences fondamentales entre un logiciel libre et un logiciel propri\u00e9taire. Quelles sont les cons\u00e9quences du statut propri\u00e9taire de Microsoft Windows ?</p>"},{"location":"NSI1/S2/S2A1.html#le-systeme-linux","title":"Le syst\u00e8me Linux","text":"<p>Histoire du syst\u00e8me d'exploitation Linux</p> <p>Citer des \u00e9v\u00e9nements cl\u00e9s de l'informatique</p> <p>Qui a cr\u00e9\u00e9 Linux ?</p>"},{"location":"NSI1/S2/S2A1.html#systeme-de-fichiers-de-linux","title":"Syst\u00e8me de fichiers de Linux","text":"<p>Avec Linux, comme dans Microsoft Windows, les donn\u00e9es sont stock\u00e9es dans des fichiers, eux-m\u00eames contenus dans  des dossiers appel\u00e9s r\u00e9pertoires.  </p> <p>En revanche, il n'existe pas de notion de \u00ab disque <code>C:\\</code> ou <code>D:\\</code> ou autre\u00bb sous Linux. Un exemple d'organisation des principaux fichiers et  r\u00e9pertoires appel\u00e9e arborescence est repr\u00e9sent\u00e9e en version simplifi\u00e9e ci-dessous.</p> <p></p> <p>Dans le syst\u00e8me de fichiers de Linux, tous les  r\u00e9pertoires n\u00e9cessaires au fonctionnement du  syst\u00e8me d'exploitation (<code>usr</code>, <code>bin</code>, <code>etc</code>, <code>dev</code>, <code>tmp</code>, ...) sont  accessibles depuis le r\u00e9pertoire racine <code>/</code>.  </p> <p>Les r\u00e9pertoires des utilisateurs d'une machine Linux, sont situ\u00e9s dans le r\u00e9pertoire <code>home</code>. Dans l'exemple ci-dessus il s'agit des r\u00e9pertoires <code>Angie</code> et <code>Matei</code>. Attention, le syst\u00e8me d'exploitation Linux est sensible \u00e0 la casse, il faut donc \u00eatre vigilant et distinguer les majuscules des minuscules.  </p> <p>Pour naviguer dans le syst\u00e8me de fichiers, nous  devons d\u00e9finir les chemins absolus et relatifs.  </p> <p>D\u00e9finition</p> <p>Un chemin d'acc\u00e8s absolu part toujours du r\u00e9pertoire racine <code>/</code> suivi des noms de r\u00e9pertoires rencontr\u00e9s jusqu'\u00e0 la destination, s\u00e9par\u00e9s par des symboles <code>/</code> (slash).  </p> <p>Exemple </p> <p>Le chemin absolu vers le r\u00e9pertoire <code>Exos</code> de <code>Matei</code> est <code>/home/Matei/Math/Exos</code>.  </p> <p>A faire</p> <p>\u00c9crire le chemin absolu vers le r\u00e9pertoire <code>NSI</code> d'<code>Angie</code>.</p> <p>Lorsque l'on se d\u00e9place dans l'arborescence de fichiers, le r\u00e9pertoire dans lequel on se situe s'appelle le r\u00e9pertoire courant et est not\u00e9 <code>.</code> (point).  </p> <p>Un chemin relatif fait r\u00e9f\u00e9rence au r\u00e9pertoire courant et donne la liste des noms du ou des r\u00e9pertoire(s) rencontr\u00e9s jusqu'\u00e0 la destination, s\u00e9par\u00e9s par des <code>/</code>.  Exemple </p> <p>Le chemin relatif vers le r\u00e9pertoire <code>Exos</code> de <code>Matei</code> depuis le r\u00e9pertoire courant <code>home</code> est  <code>./Matei/Math/Exos</code>.  </p> <p>Reconna\u00eetre une situation</p> <p>\u00c9crire le chemin relatif vers le r\u00e9pertoire <code>NSI</code> d'<code>Angie</code> \u00e0 partir du r\u00e9pertoire courant <code>home</code>.</p> <p>Pour remonter d'un niveau dans l'arborescence de fichiers, il faut utiliser le r\u00e9pertoire parent <code>..</code> . Exemple </p> <p>Le chemin relatif depuis le r\u00e9pertoire courant d'Angie (<code>/home/Angie</code>) vers le r\u00e9pertoire <code>Math</code> de <code>Matei</code> est <code>../Matei/Math</code>.</p> <p>Reconna\u00eetre une situation</p> <p>\u00c9crire le chemin relatif vers le r\u00e9pertoire <code>Jeux</code> d'<code>Angie</code> \u00e0 partir du r\u00e9pertoire courant <code>NSI</code></p> <p>Le chemin vers le r\u00e9pertoire personnel d'un utilisateur est un cas particulier. Il poss\u00e8de un raccourci <code>~</code>, que l'on prononce tilde. Ainsi, si Angie souhaite rejoindre son r\u00e9pertoire personnel, il lui suffira de taper <code>cd ~</code>.</p>"},{"location":"NSI1/S2/S2A1.html#structure-dune-commande-sous-linux","title":"Structure d'une commande sous Linux","text":"<p>Pour interagir avec l'utilisateur, les syst\u00e8mes d'exploitation (SE) peuvent avoir une interface graphique, o\u00f9 les manipulations se font essentiellement \u00e0 la souris dans des fen\u00eatres. Il existe une autre possibilit\u00e9 d'interaction: l'interface en ligne de commande. Il s'agit d'un programme qui permet de saisir les commandes que le syst\u00e8me d'exploitation doit effectuer, en mode texte.  </p> <p>Pour d\u00e9couvrir comment interagir avec le syst\u00e8me d'exploitation en ligne de commandes, nous allons utiliser un syst\u00e8me Linux simplifi\u00e9 sp\u00e9cialement adapt\u00e9 pour cette activit\u00e9.</p> <p>Mobiliser des concepts</p> <p>Lancer un terminal sous Ubuntu avec la s\u00e9quence de touche Ctrl\uff0bAlt\uff0bT. A l'int\u00e9rieur de ce terminal, on saisira la commande: <code>docker run -it --rm nsilinux:1.6</code>. Un syst\u00e8me Linux d\u00e9marre. La connexion est automatiquement faite sur le compte d'Angie et un programme interpr\u00e9teur de commande (ici le shell Bash) est en attente. Pour quitter, on utilisera la s\u00e9quence de touches Ctrl\uff0bD .</p> <p>Commande</p> <p>La commande <code>ls</code> (de l'anglais list) permet d'afficher la liste des r\u00e9pertoires et des fichiers dans le r\u00e9pertoire courant.  </p> <p>Reconna\u00eetre une situation - Analyser</p> <p>Saisir la commande <code>ls</code>. Commenter.</p> <p>Commande</p> <p>La commande <code>pwd</code> (de l'anglais print working directory) affiche le r\u00e9pertoire courant. La commande <code>cd</code> (de l'anglais change directory) permet de changer de r\u00e9pertoire courant.</p> <p>Reconna\u00eetre une situation - Analyser</p> <p>Tester La commande <code>pwd</code>, puis \u00e9crire et tester les commandes appropri\u00e9es afin de v\u00e9rifier vos r\u00e9ponses aux questions de la section Syst\u00e8me de fichiers de Linux pr\u00e9c\u00e9dente.</p>"},{"location":"NSI1/S2/S2A2.html","title":"S\u00c9QUENCE 2","text":""},{"location":"NSI1/S2/S2A2.html#activite-2-commandes-de-base-avec-arguments","title":"ACTIVITE 2 - Commandes de base avec arguments","text":"<p>Angie veut mettre de l'ordre dans son repertoire personnel. Son syst\u00e8me de fichiers est le m\u00eame que celui de l'activit\u00e9 pr\u00e9c\u00e9dente.</p> <p>Commande</p> <p>La commande <code>cat</code> suivie d'un <code>nom_de_fichier</code> (de l'anglais catenate) affiche dans la console le contenu du fichier <code>nom_de_fichier</code> pass\u00e9 en argument.</p> <p>Utiliser les commandes de base du shell Bash</p> <p>Se connecter au syst\u00e8me linux pr\u00e9c\u00e9dent (<code>docker run --rm -it nsilinux:1.6</code>). A l'aide de la commande <code>cd</code>, aller dans le r\u00e9pertoire <code>NSI</code> puis afficher le contenu du fichier <code>Modules</code>. \u00c9crire les commandes saisies dans la console.</p>"},{"location":"NSI1/S2/S2A2.html#creer-des-repertoires","title":"Cr\u00e9er des r\u00e9pertoires","text":"<p>Commande</p> <p>La commande <code>mkdir</code> suivie d'un <code>nom_de_repertoire</code> (de l'anglais make directory) permet de cr\u00e9er un r\u00e9pertoire nomm\u00e9 <code>nom_de_repertoire</code> dans le r\u00e9pertoire courant.</p> <p>Utiliser les commandes de base du shell Bash</p> <p>Cr\u00e9er le r\u00e9pertoire <code>OS</code> dans le r\u00e9pertoire <code>NSI</code> \u00e0 l'aide de la commande <code>mkdir</code> et v\u00e9rifier sa cr\u00e9ation  avec la commande <code>ls</code>. \u00c9crire les commandes n\u00e9cessaires.</p> <p>On peut \u00e9galement cr\u00e9er un r\u00e9pertoire dans un autre r\u00e9pertoire en pr\u00e9cisant le chemin relatif:  </p> <p><code>mkdir chemin_relatif/nom_de_repertoire</code>.  </p> <p>Reconna\u00eetre des situations d\u00e9j\u00e0 analys\u00e9es et r\u00e9utiliser des solutions</p> <p>En restant dans le r\u00e9pertoire <code>NSI</code>, cr\u00e9er le r\u00e9pertoire <code>Linux</code> dans le r\u00e9pertoire <code>Angie</code>. \u00c9crire les commandes n\u00e9cessaires. </p>"},{"location":"NSI1/S2/S2A2.html#deplacer-et-copier-des-fichiers-repertoires","title":"D\u00e9placer et copier des fichiers / r\u00e9pertoires","text":"<p>Commande</p> <p>La commande <code>mv source destination</code> (de l'anglais move) permet de d\u00e9placer et/ou de renommer des fichiers et des r\u00e9pertoires. Les arguments <code>source</code> et <code>destination</code> sont constitu\u00e9s du nom du fichier ou du r\u00e9pertoire, pr\u00e9c\u00e9d\u00e9s \u00e9ventuellement du chemin.</p> <p>Reconna\u00eetre des situations d\u00e9j\u00e0 analys\u00e9es - Utiliser les commandes de base du shell Bash</p> <ul> <li>A l'aide de la commande <code>cd</code> aller dans le r\u00e9pertoire <code>Angie</code>. D\u00e9placer le r\u00e9pertoire <code>Types</code> d'Angie dans le r\u00e9pertoire <code>NSI</code> \u00e0 l'aide de la commande <code>mv</code>. \u00c9crire les commandes n\u00e9cessaires.</li> <li>Quel est le r\u00e9sultat de la commande <code>mv Encodage NSI/Encodage</code> ?</li> </ul> <p>Commande</p> <p>La commande <code>cp source destination</code> (de l'anglais copy) permet de copier des fichiers ou des r\u00e9pertoires <code>source</code> vers la <code>destination</code>.</p> <p>Reconna\u00eetre des situations d\u00e9j\u00e0 analys\u00e9es - Utiliser les commandes de base du shell Bash</p> <p>Sans changer de r\u00e9pertoire courant (<code>Angie</code>), cr\u00e9er un r\u00e9pertoire <code>Programmation</code> dans le r\u00e9pertoire <code>NSI</code>, puis copier le fichier <code>Modules</code> dans le r\u00e9pertoire <code>Programmation</code>. \u00c9crire les commandes n\u00e9cessaires.</p>"},{"location":"NSI1/S2/S2A2.html#supprimer-des-fichiers-et-des-repertoires","title":"Supprimer des fichiers et des r\u00e9pertoires","text":"<p>Commande</p> <p>La commande <code>rm chemin/nom_de_fichier</code> (de l'anglais remove) permet de supprimer d\u00e9finitivement un ou des fichiers.</p> <p>Reconna\u00eetre des situations d\u00e9j\u00e0 analys\u00e9es - Utiliser les commandes de base du shell Bash</p> <ul> <li>Supprimer le fichier <code>Modules</code> du r\u00e9pertoire <code>NSI</code>. \u00c9crire La commande n\u00e9cessaire.</li> <li>Tester la commande <code>rm Danse</code>. Que remarquez-vous ?Justifier.    </li> </ul> <p>Commande</p> <p>Pour avoir acc\u00e8s \u00e0 la documentation d'une commande, suffit de saisir <code>man nom_de_la_commande</code>.</p> <p>Reconna\u00eetre des situations d\u00e9j\u00e0 analys\u00e9es - Utiliser les commandes de base du shell Bash</p> <p>Tester la commande <code>rm -r Danse</code>. Apr\u00e8s avoir consulter la documentation de <code>rm</code> conclure sur l'utilit\u00e9 de l'option <code>-r</code>.</p>"},{"location":"NSI1/S2/S2A3.html","title":"S\u00e9quence 2","text":""},{"location":"NSI1/S2/S2A3.html#activite-3-etude-des-droits-et-permissions","title":"ACTIVITE 3 - Etude des droits et permissions","text":"<p>Angie s'int\u00e9resse aux droits et aux permissions d'acc\u00e8s \u00e0 des fichiers contenant des informations sur son jeu vid\u00e9o pr\u00e9f\u00e9r\u00e9, enregistr\u00e9es sur l'ordinateur familial, qui a pour syst\u00e8me d'exploitation Linux.  </p>  Arborescence <p>Utiliser le shell</p> <p>D\u00e9marrer le syst\u00e8me Linux simplifi\u00e9 avec la commande <code>docker run -it --rm nsilinux:1.6</code></p> <p>Quand on saisit un nom de fichier ou de r\u00e9pertoire, la touche Tab permet de compl\u00e9ter automatiquement son nom.</p> <p>Utiliser les commandes de base du shell Bash</p> <p>\u00c0 l'aide de la commande <code>cd</code>, aller dans le r\u00e9pertoire <code>Jeux</code> d'Angie.</p> <p>Les options <code>-al</code> de la commande <code>ls</code> permettent d'afficher plus d'informations, comme les droits et les permissions d'acc\u00e8s de tous  les fichiers et les r\u00e9pertoires (cach\u00e9s ou non) contenus dans le r\u00e9pertoire courant. Le premier caract\u00e8re permet de diff\u00e9rencier les r\u00e9pertoires des fichiers. Ainsi, le caract\u00e8re <code>d</code> (de l'anglais directory) d\u00e9signe un r\u00e9pertoire et le caract\u00e8re <code>-</code> d\u00e9signe un fichier ordinaire.</p> <p>Utiliser les commandes de base du shell Bash - Mobiliser des concepts</p> <p>Saisir la commande <code>ls -al</code>, puis identifier les r\u00e9pertoires et les fichiers du r\u00e9pertoire d'Angie.</p> <p>Les caract\u00e8res ci-dessous correspondent aux droits d'acc\u00e8s et aux permissions.  </p>  Droits  <p>Utiliser les commandes de base du shell Bash</p> <p>Quels sont les dix premiers caract\u00e8res affich\u00e9s pour le fichier <code>Mondes</code> et pour le r\u00e9pertoire <code>Saisons</code>.</p> <p>La pr\u00e9sence des lettres <code>r</code>, <code>w</code> et <code>x</code> donne le droit correspondant et <code>-</code> l'interdiction.  </p> Lettre De l'anglais Pour un fichier Pour un r\u00e9pertoire r read lire afficher la liste des fichiers et r\u00e9pertoires w write modifier le contenu cr\u00e9er, supprimer et changer le nom des fichiers x execute ex\u00e9cuter (si ex\u00e9cutable) Ouvrir le r\u00e9pertoire <p>L'ordinateur familial est configur\u00e9 pour qu'Angie et son fr\u00e8re Matei soient dans le m\u00eame groupe d'utilisateurs, appel\u00e9 <code>enfants</code>. Leurs parents ont leur propre groupe, diff\u00e9rent, appel\u00e9 <code>parents</code>. Sur un fichier ou un r\u00e9pertoire d'Angie, les parents sont consid\u00e9r\u00e9s comme \u00ab autres utilisateurs \u00bb. Enfin, Angie est \u00e9galement \u00ab propri\u00e9taire \u00bb de ses propres fichiers et r\u00e9pertoires.</p> <p>Mobiliser des concepts</p> <p>Compl\u00e9ter le tableau ci-dessous avec oui ou non pour les trois utilisateurs: Angie, Matei et P\u00e8re.</p> Lecture Ecriture Ex\u00e9cution Mondes Saisons <p>Mobiliser des concepts</p> <p>Quelles actions le p\u00e8re d'Angie peut-il effectuer sur le r\u00e9pertoire <code>Saisons</code> ?</p>"},{"location":"NSI1/S2/S2A4.html","title":"S\u00e9quence 2","text":""},{"location":"NSI1/S2/S2A4.html#activite-4-modifications-des-droits","title":"ACTIVITE 4 - Modifications des droits","text":"<p>Angie veut donner plus de droits \u00e0 son petit fr\u00e8re Mat\u00e9i afin qu'il puisse avoir un acc\u00e8s complet \u00e0 certains fichiers  contenant des informations sur son jeu vid\u00e9o pr\u00e9f\u00e9r\u00e9 et les modifier lui-m\u00eame. (Le syst\u00e8me linux simplifi\u00e9 doit \u00eatre d\u00e9marr\u00e9 pour cette activit\u00e9: <code>docker run -it --rm nsilinux:1.6</code>)</p> <p>Commande</p> <p>La commande <code>chmod droits nom_fichier_repertoire</code> (de l'anglais change mode) permet de modifier les permissions d'acc\u00e8s \u00e0 un fichier ou \u00e0 un r\u00e9pertoire nomm\u00e9 <code>nom_fichier_repertoire</code>. La syntaxe de <code>droits</code> est d\u00e9taill\u00e9e ci-dessous.</p> <p>Exemple </p> <p>la commande <code>chmod ug+x nom_fichier</code> ajoute le droit d'ex\u00e9cution du fichier <code>nom_fichier</code> au propri\u00e9taire et aux utilisateurs faisant partie du groupe du fichier.  </p> <p></p> <p>Utiliser des commandes du shell Bash</p> <ul> <li>\u00c0 l'aide de la commande <code>ls -l</code>, trouver les droits du fichier <code>Personnages</code> puis modifier ses droits afin qu'il soit modifiable par le fr\u00e8re d'Angie, qui est dans le m\u00eame groupe que le propri\u00e9taire. V\u00e9rifier enfin que les droits ont bien \u00e9t\u00e9 chang\u00e9s.</li> <li>Tester la commande <code>chmod u=rw,go=r Mondes</code>. Faire une hypoth\u00e8se sur l'utilit\u00e9 de la virgule.</li> </ul> <p>Au lieu de modifier les fichiers un par un, Angie a d\u00e9couvert, en utilisant la commande <code>man chmod</code>, que  l'option <code>-R</code> (de l'anglais recursive) modifie les autorisations de tout le contenu d'un r\u00e9pertoire.  </p> <p>Utiliser des commandes du shell Bash</p> <p>Tester, puis \u00e9crire la commande qui permet d'ajouter au r\u00e9pertoire <code>Saisons</code> et \u00e0 tout ce qu'il contient les droits en lecture et en \u00e9criture au groupe du fichier. Supprimer les droits en lecture aux utilisateurs qui ne font pas partie du groupe.</p>"},{"location":"NSI1/S2/S2C1.html","title":"S\u00e9quence 2","text":""},{"location":"NSI1/S2/S2C1.html#cours-systeme-dexploitation","title":"COURS - SYSTEME D'EXPLOITATION","text":""},{"location":"NSI1/S2/S2C1.html#quel-est-le-role-dun-systeme-dexploitation","title":"Quel est le r\u00f4le d'un syst\u00e8me d'exploitation?","text":"<p>Le syst\u00e8me d'exploitation permet:  </p> <ul> <li>l'ex\u00e9cution des applications;</li> <li>le partage des ressources entre les utilisateurs, les programmes;</li> <li> <p>la gestion:  </p> <ul> <li>des p\u00e9riph\u00e9riques;</li> <li>des fichiers;</li> <li>des erreurs;</li> <li>des performances.</li> </ul> </li> </ul>"},{"location":"NSI1/S2/S2C1.html#les-differents-types-de-systeme-dexploitation","title":"Les diff\u00e9rents types de syst\u00e8me d'exploitation","text":"<p>On distingue deux grandes familles de syst\u00e8me d'exploitation:  </p> <ul> <li>les d\u00e9riv\u00e9s d'UNIX (GNU/Linux, BSD, iOS, MacOS, Android, etc.);</li> <li>les syst\u00e8mes Microsoft Windows.  </li> </ul> <p>Certains sont libres (c-\u00e0-d ne n\u00e9cessitant pas le paiement d'une licence d'utilisation, code source disponible, entre autres), d'autres non (on les qualifie de syst\u00e8mes propri\u00e9taires). Conform\u00e9ment au programme, on utilisera un syst\u00e8me d'exploitation libre en NSI: GNU/Linux.  </p> <p>L'interaction avec le syst\u00e8me d'exploitation peut se faire de deux mani\u00e8res:  </p> <ul> <li>par le biais d'une interface graphique (GUI: Graphical User Interface);</li> <li>par le biais d'une interface en ligne de commande (CLI: Command Line Interface).  </li> </ul> <p>On privil\u00e9giera ici l'utilisation de la ligne de commande.</p>"},{"location":"NSI1/S2/S2C1.html#decouvrir-la-ligne-de-commande","title":"D\u00e9couvrir la ligne de commande","text":""},{"location":"NSI1/S2/S2C1.html#un-interpreteur-de-commande-bash-ou-shell-bash","title":"Un interpr\u00e9teur de commande : Bash ou shell Bash","text":"<p>On a acc\u00e8s \u00e0 la ligne de commande en ouvrant un terminal avec le raccourci clavier Ctrl\uff0bAlt\uff0bT .  Il s'agit d'un programme appel\u00e9 Bash qui est pr\u00e9sent par d\u00e9faut sur la majorit\u00e9 des syt\u00e8mes UNIX.</p>"},{"location":"NSI1/S2/S2C1.html#les-commandes-de-base","title":"Les commandes de base","text":"<p>Une fois le terminal d\u00e9marr\u00e9, chaque utilisateur se trouve par d\u00e9faut dans son dossier personnel (en anglais home directory ou plus simplement HOME) et le shell Bash est en attente de commande en affichant une s\u00e9rie d'informations: <code>nom_utilisateur@nom_machine:~$</code> </p> <p></p> <p>Le caract\u00e8re <code>~</code> (prononcez tilde, touche AltGr\uff0b2) correspond au chemin du r\u00e9pertoire personnel de l'utilisateur. Le caract\u00e8re <code>$</code> signifie que l'on a affaire \u00e0 un utilisateur normal c-\u00e0-d avec des droits limit\u00e9s.  </p> <p>Toutes les commandes acceptent de nombreuses options. Pour avoir un inventaire complet des options on doit taper: <code>man xxx</code> o\u00f9 xxx est la commande.  </p> <p>Quelques commandes \u00e0 conna\u00eetre (liste non exhaustive)</p> Commande Description ls lister le contenu du dossier courant mkdir cr\u00e9er un dossier cd se d\u00e9placer dans un dossier cp copier des fichiers ou dossiers rm supprimer des fichiers ou dossiers cat afficher le contenu d'un fichier touch cr\u00e9e un fichier vide clear efface l'\u00e9cran"},{"location":"NSI1/S2/S2C1.html#aborescence-dun-systeme-linux","title":"Aborescence d'un syst\u00e8me Linux","text":"<p>Les dossiers du syst\u00e8mes sont organis\u00e9s selon une arborescence dont la racine est <code>/</code>.  </p> <p> </p> <p>Un utilisateur normal n'a pas les droits suffisants pour \u00e9crire dans les dossiers syst\u00e8mes ou y effacer des fichiers. Seul le superutilisateur nomm\u00e9 root peut tout faire (et m\u00eame d\u00e9truire le syst\u00e8me) et n'importe o\u00f9 !  </p> <p>Les changements de dossier se font naturellement avec la commande <code>cd</code> qui peut prendre comme param\u00e8tre:  </p> <ul> <li>un chemin absolu, c-\u00e0-d compl\u00e8tement qualifi\u00e9 depuis racine <code>/</code> (par exemple <code>/home/bruno/Documents</code>);</li> <li>un chemin relatif, c-\u00e0-d par rapport au dossier o\u00f9 on se trouve qui est not\u00e9 avec le raccourci <code>.</code> (point); le dossier parent est not\u00e9 avec le raccourci <code>..</code> (point point). Ainsi, si on est dans <code>/home/bruno/Documents</code> et qu'on veut se rendre dans <code>/home/bruno/T\u00e9l\u00e9chargements</code> on tapera: </li> </ul> <pre><code>cd ../T\u00e9l\u00e9chargements\n</code></pre>"},{"location":"NSI1/S2/S2C1.html#gestion-des-droits","title":"Gestion des droits","text":"<p>Qui peut faire quoi et o\u00f9 ? Pour r\u00e9pondre \u00e0 cette question, les environnements UNIX divisent le monde en trois parties:  </p> <ul> <li>le propri\u00e9taire ou utilisateur (user);</li> <li>le groupe (group);</li> <li>les autres (others).  </li> </ul> <p>Par ailleurs, les fichiers peuvent \u00eatre manipul\u00e9s en:  </p> <ul> <li>lecture (read);</li> <li>\u00e9criture (write);</li> <li>ex\u00e9cution (execute).  </li> </ul> <p>Consid\u00e9rons la sortie de la commande <code>ls -l</code> sur un r\u00e9pertoire donn\u00e9.  </p> <p> </p> <p>Les colonnes n\u00b0 1, 3 et 4 sont utiles \u00e0 la gestion des droits.  </p> <ul> <li>La colonne 3 indique le nom du propri\u00e9taire;</li> <li>la colonne 4 indique le nom du groupe;</li> <li>la colonne 1 qui contient 10 caract\u00e8res doit \u00eatre d\u00e9compos\u00e9 en quatre parties. Par exemple <code>-rwx r-- r--</code>  (attention il n'y a pas d'espaces en r\u00e9alit\u00e9, ils ont \u00e9t\u00e9 rajout\u00e9s ici pour une meilleure lisibilit\u00e9) !  </li> </ul> <p>Les indications de la 1re colonne peuvent \u00eatre interpr\u00e9t\u00e9es de la mani\u00e8re suivante:</p> <ul> <li>le 1er caract\u00e8re: un <code>-</code> correspond \u00e0 un fichier et un <code>d</code> \u00e0 un r\u00e9pertoire;</li> <li>un groupe de 3 caract\u00e8res associ\u00e9s aux droits du propri\u00e9taire;</li> <li>un groupe de 3 caract\u00e8res associ\u00e9s aux droits du groupe;</li> <li>un groupe de 3 caract\u00e8res associ\u00e9s aux droits des autres;  </li> </ul> <p>Dans l'exemple de la capture ci-dessus, <code>Saison1</code> est un fichier ordinaire dont le propri\u00e9taire est <code>Angie</code> qui dispose des droits en lecture et \u00e9criture alors que le groupe <code>enfants</code> et les <code>autres</code> n'ont que le droit en lecture.  </p> <p>Un <code>x</code> signifie droit de traverser pour un r\u00e9pertoire. </p> <p>Enfin, seuls le propri\u00e9taire ou bien <code>root</code> peuvent changer les droits sur un fichier ou r\u00e9pertoire. La commande <code>chmod</code> est pr\u00e9vue \u00e0 cet effet. Voir des exemples de syntaxe dans le tableau ci-dessous.  </p> Accorder les droits de: Syntaxe lecture au groupe chmod g+r fichier \u00e9criture au propri\u00e9taire chmod u+w fichier ex\u00e9cution aux autres chmod o+x fichier ex\u00e9cution \u00e0 tous chmod ugo+r fichier <p>Remarque</p> <p>Pour supprimer un droit, on utilise le signe <code>-</code>; par exemple, pour supprimer le droit d'\u00e9criture au groupe sur un fichier, on utilisera la commande <code>chmod g-w fichier</code></p>"},{"location":"NSI1/S2/S2E1.html","title":"S\u00e9quence 2","text":""},{"location":"NSI1/S2/S2E1.html#exercices","title":"EXERCICES","text":""},{"location":"NSI1/S2/S2E1.html#revision-cocher-la-ou-les-bonnes-reponses","title":"R\u00e9vision: Cocher la ou les bonnes r\u00e9ponses","text":"<ul> <li> <p>La commande <code>ls -al</code> :</p> </li> <li> <p> permet de lister les fichiers du r\u00e9pertoire courant sans d\u00e9tail.</p> </li> <li> permet de lister les fichiers standards et cach\u00e9s du r\u00e9pertoire courant.</li> <li> permet d\u2019afficher des d\u00e9tails sur un fichier comme son propri\u00e9taire ou ses droits.</li> <li> <p> n\u2019existe pas en Bash.</p> </li> <li> <p>La commande <code>mv</code> :</p> </li> <li> <p> sert \u00e0 copier des fichiers ou r\u00e9pertoires.</p> </li> <li> sert \u00e0 d\u00e9placer des fichiers ou r\u00e9pertoires.</li> <li> peut servir \u00e0 renommer un fichier ou un r\u00e9pertoire.</li> <li> <p> n\u2019existe pas en Bash.</p> </li> <li> <p>La commande <code>ls -l toto.sh</code> affiche <code>-r-xr--r-- 1 john staff 128 18 mai 11:56 toto.sh</code>.  </p> </li> <li> <p> toto.sh appartient \u00e0 john.</p> </li> <li> toto.sh appartient \u00e0 staff du groupe john.</li> <li> Personne n\u2019a le droit d\u2019\u00e9criture sur toto.sh.</li> <li> <p> Personne n\u2019a le droit de lire toto.sh.</p> </li> <li> <p>Dans un terminal, on tape <code>cd</code> (sans arguments) pour se placer dans son r\u00e9pertoire personnel, not\u00e9 parfois <code>HOME</code>. Quelle commande doit-on ensuite taper pour d\u00e9placer dans le r\u00e9pertoire courant le fichier <code>exo1.py</code> qui se trouve dans <code>Documents/python/</code> en sachant que <code>Documents</code> est dans <code>HOME</code>?</p> </li> <li> <p> <code>cp Documents/python/exo1.py</code></p> </li> <li> <code>mv /Documents/python/exo1.py</code></li> <li> <code>mv ./Documents/python/exo1.py .</code></li> <li> <code>rm Documents/python/exo1.py</code></li> </ul> <p>Indication pour les exercices</p> <p>\ud83d\udc49 On utilisera la machine Linux simplifi\u00e9e. On se connectera avec le compte de <code>Matei</code> en saisissant la commande <code>su Matei</code> (son mot de passe est <code>eleve</code>). Puis on se d\u00e9place dans son r\u00e9pertoire personnel avec <code>cd ~</code>.</p>"},{"location":"NSI1/S2/S2E1.html#exercice-1-trouver-son-chemin","title":"Exercice 1 - Trouver son chemin","text":"<p>Observer l\u2019arborescence suivante :  </p> <p></p> <ol> <li> <p>Proposer une commande qui permette de se d\u00e9placer du r\u00e9pertoire <code>HOME</code> de Alice \u00e0 celui de Bob :</p> <ul> <li>en utilisant un chemin relatif ;</li> <li>en utilisant un chemin absolu.</li> </ul> </li> <li> <p>Alice est \u00e0 la racine <code>/</code> . Proposer deux commandes qui peuvent lui permettre de se d\u00e9placer dans son r\u00e9pertoire personnel (<code>HOME</code>).</p> </li> <li> <p>Bob est dans son <code>HOME</code>. Aidez-le \u00e0 :</p> <ul> <li>lister le contenu de son <code>HOME</code>;</li> <li>lister le contenu de son <code>HOME</code> y compris les fichiers et r\u00e9pertoires cach\u00e9s ;</li> <li>lister le contenu du r\u00e9pertoire <code>share</code> sans quitter son <code>HOME</code>.</li> </ul> </li> </ol>"},{"location":"NSI1/S2/S2E1.html#exercice-2-creer-une-arborescence-et-se-deplacer-dedans","title":"Exercice 2 - Cr\u00e9er une arborescence et se d\u00e9placer dedans","text":"<ol> <li> <p>Cr\u00e9er dans le r\u00e9pertoire personnel de <code>Matei</code> l\u2019arborescence ci-dessus dans laquelle A, B, C, D, E, F et G sont des r\u00e9pertoires.</p> </li> <li> <p>La commande du shell <code>touch nom_fichier</code> permet de cr\u00e9er un fichier vide. Cr\u00e9er deux fichiers vides appel\u00e9s <code>un</code> et <code>deux</code> dans le r\u00e9pertoire d\u2019accueil.</p> </li> <li> <p>Quelle commande permet de copier des fichiers ou r\u00e9pertoires ? Copier le fichier <code>un</code> dans le r\u00e9pertoire <code>A</code> en lui donnant le nom <code>trois</code>.</p> </li> <li> <p>Comment r\u00e9aliser la copie pr\u00e9c\u00e9dente en utilisant un chemin relatif si vous \u00eates :</p> <ul> <li>dans le r\u00e9pertoire A ?</li> <li>dans le r\u00e9pertoire B ?</li> </ul> </li> <li> <p>Si votre nom d\u2019utilisateur est <code>Angie</code>, comment r\u00e9aliser cette copie en utilisant un chemin absolu ?</p> </li> <li> <p>Comment renommer le fichier <code>trois</code> en <code>quatre</code>?</p> </li> </ol>"},{"location":"NSI1/S2/S2E1.html#exercice-3-utiliser-les-pages-du-manuel-dune-commande","title":"Exercice 3 - Utiliser les pages du manuel d'une commande","text":"<ol> <li>Quelle option de la commande <code>echo</code> faut-il utiliser pour rester sur la m\u00eame ligne ?</li> <li>Comment faut-il faire pour afficher un message sur plusieurs lignes avec cette m\u00eame commande ?</li> <li>La commande <code>cat nom_fichier</code> permet d'afficher son contenu dans le terminale. Comment peut-on afficher le contenu avec les num\u00e9ros de lignes? Tester.</li> </ol>"},{"location":"NSI1/S2/S2E1.html#exercice-4-avez-vous-les-droits","title":"Exercice 4 - Avez-vous les droits ?","text":"<p>On consid\u00e8re le syst\u00e8me \u00e9tudi\u00e9 dans les activit\u00e9s pr\u00e9paratoires. L'utilisateur <code>Matei</code> est connect\u00e9 et a obtenu les informations suivantes:  </p> <p></p> <p>Commandes utilis\u00e9es: <code>tree repertoire</code> affiche l'arborescence des fichiers depuis <code>repertoire</code> et <code>groups utilisateur</code> permet de connaitre les groupes auxquels appartient <code>utilisateur</code>.</p> <ol> <li>Matei souhaite ajouter un fichier <code>Saison4</code> dans le dossier <code>Saisons</code> d'Angie. Peut-il le faire directement ? Justifier la r\u00e9ponse.</li> <li>Proposer une strat\u00e9gie pour r\u00e9soudre le probl\u00e8me.</li> </ol>"},{"location":"NSI1/S2/sequence2.html","title":"SEQUENCE 2","text":""},{"location":"NSI1/S2/sequence2.html#activite-1-interface-en-ligne-de-commande-dun-syteme-dexploitation-libre","title":"ACTIVITE 1 - Interface en ligne de commande d'un syt\u00e8me d'exploitation libre","text":""},{"location":"NSI1/S2/sequence2.html#systemes-dexploitations","title":"Syst\u00e8mes d'exploitations","text":""},{"location":"NSI1/S2/sequence2.html#reperes-historiques","title":"Rep\u00e8res historiques","text":"<p>Prendre connaissance des vid\u00e9os suivantes:  </p> <ul> <li>Histoire des syst\u00e8mes d'exploitation</li> <li>Le(s) syst\u00e8me(s) de type UNIX</li> </ul> <p>A faire</p> <p>R\u00e9sumer en une phrase courte le r\u00f4le d'un syst\u00e8me d'exploitation. Vers quelle p\u00e9riode sont n\u00e9s les syst\u00e8mes d'exploitation ?</p>"},{"location":"NSI1/S2/sequence2.html#systemes-libres-ou-proprietaires","title":"Syst\u00e8mes libres ou propri\u00e9taires","text":"<p>A faire</p> <p>A l'aide de cette page wikipedia, rappelez les 4 diff\u00e9rences fondamentales entre un logiciel libre et un logiciel propri\u00e9taire. Quelles sont les cons\u00e9quences du statut propri\u00e9taire de Microsoft Windows ?</p>"},{"location":"NSI1/S2/sequence2.html#le-systeme-linux","title":"Le syst\u00e8me Linux","text":"<p>Histoire du syst\u00e8me d'exploitation Linux</p> <p>A faire</p> <p>Qui a cr\u00e9\u00e9 Linux ?</p>"},{"location":"NSI1/S2/sequence2.html#systeme-de-fichiers-de-linux","title":"Syst\u00e8me de fichiers de Linux","text":"<p>Avec Linux, comme dans Microsoft Windows, les donn\u00e9es sont stock\u00e9es dans des fichiers, eux-m\u00eames contenus dans  des dossiers appel\u00e9s r\u00e9pertoires.  </p> <p>En revanche, il n'existe pas de notion de \u00ab disque <code>C:\\</code> ou <code>D:\\</code> ou autre\u00bb sous Linux. Un exemple d'organisation des principaux fichiers et  r\u00e9pertoires appel\u00e9e arborescence est repr\u00e9sent\u00e9e en version simplifi\u00e9e ci-dessous.</p> <p></p> <p>Dans le syst\u00e8me de fichiers de Linux, tous les  r\u00e9pertoires n\u00e9cessaires au fonctionnement du  syst\u00e8me d'exploitation (<code>usr</code>, <code>bin</code>, <code>etc</code>, <code>dev</code>, <code>tmp</code>, ...) sont  accessibles depuis le r\u00e9pertoire racine <code>/</code>.  </p> <p>Les r\u00e9pertoires des utilisateurs d'une machine Linux, sont situ\u00e9s dans le r\u00e9pertoire <code>home</code>. Dans l'exemple ci-dessus il s'agit des r\u00e9pertoires <code>Angie</code> et <code>Matei</code>. Attention, le syst\u00e8me d'exploitation Linux est sensible \u00e0 la casse, il faut donc \u00eatre vigilant et distinguer les majuscules des minuscules.  </p> <p>Pour naviguer dans le syst\u00e8me de fichiers, nous  devons d\u00e9finir les chemins absolus et relatifs.  </p> <p>Un chemin d'acc\u00e8s absolu part toujours du r\u00e9pertoire racine <code>/</code> suivi des noms de r\u00e9pertoires rencontr\u00e9s jusqu'\u00e0 la destination, s\u00e9par\u00e9s par des symboles <code>/</code> (slash). Exemple </p> <p>Le chemin absolu vers le r\u00e9pertoire <code>Exos</code> de <code>Mat\u00e9i</code> est <code>/home/Matei/Math/Exos</code>.  </p> <p>A faire</p> <p>\u00c9crire le chemin absolu vers le r\u00e9pertoire <code>NSI</code> d'<code>Angie</code>.</p> <p>Lorsque l'on se d\u00e9place dans l'arborescence de fichiers, le r\u00e9pertoire dans lequel on se situe s'appelle le r\u00e9pertoire courant et est not\u00e9 <code>.</code> (point).  </p> <p>Un chemin relatif fait r\u00e9f\u00e9rence au r\u00e9pertoire courant et donne la liste des noms du ou des r\u00e9pertoire(s) rencontr\u00e9s jusqu'\u00e0 la destination, s\u00e9par\u00e9s par des <code>/</code>.  Exemple </p> <p>Le chemin relatif vers le r\u00e9pertoire <code>Exos</code> de <code>Matei</code> depuis le r\u00e9pertoire courant <code>home</code> est  <code>./Matei/Math/Exos</code>.  </p> <p>A faire</p> <p>\u00c9crire le chemin relatif vers le r\u00e9pertoire <code>NSI</code> d'<code>Angie</code> \u00e0 partir du r\u00e9pertoire courant <code>home</code>.</p> <p>Pour remonter d'un niveau dans l'arborescence de fichiers, il faut utiliser le r\u00e9pertoire parent <code>..</code> . Exemple </p> <p>Le chemin relatif depuis le r\u00e9pertoire courant d'Angie (<code>/home/Angie</code>) vers le r\u00e9pertoire <code>Math</code> de <code>Matei</code> est <code>../Matei/Math</code>.</p> <p>A faire</p> <p>\u00c9crire le chemin relatif vers le r\u00e9pertoire <code>Jeux</code> d'<code>Angie</code> \u00e0 partir du r\u00e9pertoire courant <code>NSI</code></p> <p>Le chemin vers le r\u00e9pertoire personnel d'un utilisateur est un cas particulier. Il poss\u00e8de un raccourci <code>~</code>, que l'on prononce tilde. Ainsi, si Angie souhaite rejoindre son r\u00e9pertoire personnel, il lui suffira de taper <code>cd ~</code>.</p>"},{"location":"NSI1/S2/sequence2.html#structure-dune-commande-sous-linux","title":"Structure d'une commande sous Linux","text":"<p>Pour interagir avec l'utilisateur, les syst\u00e8mes d'exploitation (SE) peuvent avoir une interface graphique, o\u00f9 les manipulations se font essentiellement \u00e0 la souris dans des fen\u00eatres. Il existe une autre possibilit\u00e9 d'interaction: l'interface en ligne de commande. Il s'agit d'un programme qui permet de saisir les commandes que le syst\u00e8me d'exploitation doit effectuer, en mode texte.  </p> <p>Pour d\u00e9couvrir comment interagir avec le syst\u00e8me d'exploitation en ligne de commandes, nous allons utiliser un syst\u00e8me Linux simplifi\u00e9 sp\u00e9cialement adapt\u00e9 pour cette activit\u00e9.</p> <p>A faire</p> <p>Lancer un terminal sous Ubuntu avec la s\u00e9quence de touche Ctrl\uff0bAlt\uff0bT. A l'int\u00e9rieur de ce terminal, on saisira la commande: <code>docker run -it --rm nsilinux:1.6</code>. Un syst\u00e8me Linux d\u00e9marre. La connexion est automatiquement faite sur le compte d'Angie et un programme interpr\u00e9teur de commande (ici le shell Bash) est en attente. Pour quitter, on utilisera la s\u00e9quence de touches Ctrl\uff0bD .</p> <p>Commande</p> <p>La commande <code>ls</code> (de l'anglais list) permet d'afficher la liste des r\u00e9pertoires et des fichiers dans le r\u00e9pertoire courant.  </p> <p>A faire</p> <p>Saisir la commande <code>ls</code>. Commenter.</p> <p>Commande</p> <p>La commande <code>pwd</code> (de l'anglais print working directory) affiche le r\u00e9pertoire courant. La commande <code>cd</code> (de l'anglais change directory) permet de changer de r\u00e9pertoire courant.</p> <p>A faire</p> <p>Tester La commande <code>pwd</code>, puis \u00e9crire et tester les commandes appropri\u00e9es afin de v\u00e9rifier vos r\u00e9ponses aux questions de la section Syst\u00e8me de fichiers de Linux pr\u00e9c\u00e9dente.</p>"},{"location":"NSI1/S2/sequence2.html#activite-2-commandes-de-base-avec-arguments","title":"ACTIVITE 2 - Commandes de base avec arguments","text":"<p>Angie veut mettre de l'ordre dans son repertoire personnel. Son syst\u00e8me de fichiers est le m\u00eame que celui de l'activit\u00e9 pr\u00e9c\u00e9dente.</p> <p>Commande</p> <p>La commande <code>cat</code> suivie d'un <code>nom_de_fichier</code> (de l'anglais catenate) affiche dans la console le contenu du fichier <code>nom_de_fichier</code> pass\u00e9 en argument.</p> <p>A faire</p> <p>Se connecter au syst\u00e8me linux pr\u00e9c\u00e9dent (<code>docker run --rm -it nsilinux:1.6</code>). A l'aide de la commande <code>cd</code>, aller dans le r\u00e9pertoire <code>NSI</code> puis afficher le contenu du fichier <code>Modules</code>. \u00c9crire les commandes saisies dans la console.</p>"},{"location":"NSI1/S2/sequence2.html#creer-des-repertoires","title":"Cr\u00e9er des r\u00e9pertoires","text":"<p>Commande</p> <p>La commande <code>mkdir</code> suivie d'un <code>nom_de_repertoire</code> (de l'anglais make directory) permet de cr\u00e9er un r\u00e9pertoire nomm\u00e9 <code>nom_de_repertoire</code> dans le r\u00e9pertoire courant.</p> <p>A faire</p> <p>Cr\u00e9er le r\u00e9pertoire <code>OS</code> dans le r\u00e9pertoire <code>NSI</code> \u00e0 l'aide de la commande <code>mkdir</code> et v\u00e9rifier sa cr\u00e9ation  avec la commande <code>ls</code>. \u00c9crire les commandes n\u00e9cessaires.</p> <p>On peut \u00e9galement cr\u00e9er un r\u00e9pertoire dans un autre r\u00e9pertoire en pr\u00e9cisant le chemin relatif:  </p> <p><code>mkdir chemin_relatif/nom_de_repertoire</code>.  </p> <p>A faire</p> <p>En restant dans le r\u00e9pertoire <code>NSI</code>, cr\u00e9er le r\u00e9pertoire <code>Linux</code> dans le r\u00e9pertoire <code>Angie</code>. \u00c9crire les commandes n\u00e9cessaires. </p>"},{"location":"NSI1/S2/sequence2.html#deplacer-et-copier-des-fichiers-repertoires","title":"D\u00e9placer et copier des fichiers / r\u00e9pertoires","text":"<p>Commande</p> <p>La commande <code>mv source destination</code> (de l'anglais move) permet de d\u00e9placer et/ou de renommer des fichiers et des r\u00e9pertoires. Les arguments <code>source</code> et <code>destination</code> sont constitu\u00e9s du nom du fichier ou du r\u00e9pertoire, pr\u00e9c\u00e9d\u00e9s \u00e9ventuellement du chemin.</p> <p>A faire</p> <ul> <li>A l'aide de la commande <code>cd</code> aller dans le r\u00e9pertoire <code>Angie</code>. D\u00e9placer le r\u00e9pertoire <code>Types</code> d'Angie dans le r\u00e9pertoire <code>NSI</code> \u00e0 l'aide de la commande <code>mv</code>. \u00c9crire les commandes n\u00e9cessaires.</li> <li>Quel est le r\u00e9sultat de la commande <code>mv Encodage NSI/Encodage</code> ?</li> </ul> <p>Commande</p> <p>La commande <code>cp source destination</code> (de l'anglais copy) permet de copier des fichiers ou des r\u00e9pertoires <code>source</code> vers la <code>destination</code>.</p> <p>A faire</p> <p>Sans changer de r\u00e9pertoire courant (<code>Angie</code>), cr\u00e9er un r\u00e9pertoire <code>Programmation</code> dans le r\u00e9pertoire <code>NSI</code>, puis copier le fichier <code>Modules</code> dans le r\u00e9pertoire <code>Programmation</code>. \u00c9crire les commandes n\u00e9cessaires.</p>"},{"location":"NSI1/S2/sequence2.html#supprimer-des-fichiers-et-des-repertoires","title":"Supprimer des fichiers et des r\u00e9pertoires","text":"<p>Commande</p> <p>La commande <code>rm chemin/nom_de_fichier</code> (de l'anglais remove) permet de supprimer d\u00e9finitivement un ou des fichiers.</p> <p>A faire</p> <ul> <li>Supprimer le fichier <code>Modules</code> du r\u00e9pertoire <code>NSI</code>. \u00c9crire La commande n\u00e9cessaire.</li> <li>Tester la commande <code>rm Danse</code>. Que remarquez-vous ?Justifier.    </li> </ul> <p>Commande</p> <p>Pour avoir acc\u00e8s \u00e0 la documentation d'une commande, suffit de saisir <code>man nom_de_la_commande</code>.</p> <p>A faire</p> <p>Tester la commande <code>rm -r Danse</code>. Apr\u00e8s avoir consulter la documentation de <code>rm</code> conclure sur l'utilit\u00e9 de l'option <code>-r</code>.</p>"},{"location":"NSI1/S2/sequence2.html#activite-3-etude-des-droits-et-permissions","title":"ACTIVITE 3 - Etude des droits et permissions","text":"<p>Angie s'int\u00e9resse aux droits et aux permissions d'acc\u00e8s \u00e0 des fichiers contenant des informations sur son jeu vid\u00e9o pr\u00e9f\u00e9r\u00e9, enregistr\u00e9es sur l'ordinateur familial, qui a pour syst\u00e8me d'exploitation Linux.  </p> <p></p> <p>A faire</p> <p>D\u00e9marrer le syst\u00e8me Linux simplifi\u00e9 avec la commande <code>docker run -it --rm nsilinux:1.6</code></p> <p>Quand on saisit un nom de fichier ou de r\u00e9pertoire, la touche Tab permet de compl\u00e9ter automatiquement son nom.</p> <p>A faire</p> <p>\u00c0 l'aide de la commande <code>cd</code>, aller dans le r\u00e9pertoire <code>Jeux</code> d'Angie.</p> <p>Les options <code>-al</code> de la commande <code>ls</code> permettent d'afficher plus d'informations, comme les droits et les permissions d'acc\u00e8s de tous  les fichiers et les r\u00e9pertoires (cach\u00e9s ou non) contenus dans le r\u00e9pertoire courant. Le premier caract\u00e8re permet de diff\u00e9rencier les r\u00e9pertoires des fichiers. Ainsi, le caract\u00e8re <code>d</code> (de l'anglais directory) d\u00e9signe un r\u00e9pertoire et le caract\u00e8re <code>-</code> d\u00e9signe un fichier ordinaire.</p> <p>A faire</p> <p>Saisir la commande <code>ls -al</code>, puis identifier les r\u00e9pertoires et les fichiers du r\u00e9pertoire d'Angie.</p> <p>Les caract\u00e8res ci-dessous correspondent aux droits d'acc\u00e8s et aux permissions.  </p> <p></p> <p>A faire</p> <p>Quels sont les dix premiers caract\u00e8res affich\u00e9s pour le fichier <code>Mondes</code> et pour le r\u00e9pertoire <code>Saisons</code>.</p> <p>La pr\u00e9sence des lettres <code>r</code>, <code>w</code> et <code>x</code> donne le droit correspondant et <code>-</code> l'interdiction.  </p> Lettre De l'anglais Pour un fichier Pour un r\u00e9pertoire r read lire afficher la liste des fichiers et r\u00e9pertoires w write modifier le contenu cr\u00e9er, supprimer et changer le nom des fichiers x execute ex\u00e9cuter (si ex\u00e9cutable) Ouvrir le r\u00e9pertoire <p>L'ordinateur familial est configur\u00e9 pour qu'Angie et son fr\u00e8re Matei soient dans le m\u00eame groupe d'utilisateurs, appel\u00e9 <code>enfants</code>. Leurs parents ont leur propre groupe, diff\u00e9rent, appel\u00e9 <code>parents</code>. Sur un fichier ou un r\u00e9pertoire d'Angie, les parents sont consid\u00e9r\u00e9s comme \u00ab autres utilisateurs \u00bb. Enfin, Angie est \u00e9galement \u00ab propri\u00e9taire \u00bb de ses propres fichiers et r\u00e9pertoires.</p> <p>A faire</p> <p>Compl\u00e9ter le tableau ci-dessous avec oui ou non pour les trois utilisateurs: Angie, Matei et P\u00e8re.</p> Lecture Ecriture Ex\u00e9cution Mondes Saisons <p>A faire</p> <p>Quelles actions le p\u00e8re d'Angie peut-il effectuer sur le r\u00e9pertoire <code>Saisons</code> ?</p>"},{"location":"NSI1/S2/sequence2.html#activite-4-modifications-des-droits","title":"ACTIVITE 4 - Modifications des droits","text":"<p>Angie veut donner plus de droits \u00e0 son petit fr\u00e8re Mat\u00e9i afin qu'il puisse avoir un acc\u00e8s complet \u00e0 certains fichiers  contenant des informations sur son jeu vid\u00e9o pr\u00e9f\u00e9r\u00e9 et les modifier lui-m\u00eame. (Le syst\u00e8me linux simplifi\u00e9 doit \u00eatre d\u00e9marr\u00e9 pour cette activit\u00e9: <code>docker run -it --rm nsilinux:1.6</code>)</p> <p>Commande</p> <p>La commande <code>chmod droits nom_fichier_repertoire</code> (de l'anglais change mode) permet de modifier les permissions d'acc\u00e8s \u00e0 un fichier ou \u00e0 un r\u00e9pertoire nomm\u00e9 <code>nom_fichier_repertoire</code>. La syntaxe de <code>droits</code> est d\u00e9taill\u00e9e ci-dessous.</p> <p>Exemple </p> <p>la commande <code>chmod ug+x nom_fichier</code> ajoute le droit d'ex\u00e9cution du fichier <code>nom_fichier</code> au propri\u00e9taire et aux utilisateurs faisant partie du groupe du fichier.  </p> <p></p> <p>A faire</p> <ul> <li>\u00c0 l'aide de la commande <code>ls -l</code>, trouver les droits du fichier <code>Personnages</code> puis modifier ses droits afin qu'il soit modifiable par le fr\u00e8re d'Angie, qui est dans le m\u00eame groupe que le propri\u00e9taire. V\u00e9rifier enfin que les droits ont bien \u00e9t\u00e9 chang\u00e9s.</li> <li>Tester la commande <code>chmod u=rw,go=r Mondes</code>. Faire une hypoth\u00e8se sur l'utilit\u00e9 de la virgule.</li> </ul> <p>Au lieu de modifier les fichiers un par un, Angie a d\u00e9couvert, en utilisant la commande <code>man chmod</code>, que  l'option <code>-R</code> (de l'anglais recursive) modifie les autorisations de tout le contenu d'un r\u00e9pertoire.  </p> <p>A faire</p> <p>Tester, puis \u00e9crire la commande qui permet d'ajouter au r\u00e9pertoire <code>Saisons</code> et \u00e0 tout ce qu'il contient les droits en lecture et en \u00e9criture au groupe du fichier. Supprimer les droits en lecture aux utilisateurs qui ne font pas partie du groupe.</p>"},{"location":"NSI1/S2/sequence2.html#cours-systeme-dexploitation","title":"COURS - SYSTEME D'EXPLOITATION","text":""},{"location":"NSI1/S2/sequence2.html#quel-est-le-role-dun-systeme-dexploitation","title":"Quel est le r\u00f4le d'un syst\u00e8me d'exploitation?","text":"<p>Le syst\u00e8me d'exploitation permet:  </p> <ul> <li>l'ex\u00e9cution des applications;</li> <li>le partage des ressources entre les utilisateurs, les programmes;</li> <li> <p>la gestion:  </p> <ul> <li>des p\u00e9riph\u00e9riques;</li> <li>des fichiers;</li> <li>des erreurs;</li> <li>des performances.</li> </ul> </li> </ul>"},{"location":"NSI1/S2/sequence2.html#les-differents-types-de-systeme-dexploitation","title":"Les diff\u00e9rents types de syst\u00e8me d'exploitation","text":"<p>On distingue deux grandes familles de syst\u00e8me d'exploitation:  </p> <ul> <li>les d\u00e9riv\u00e9s d'UNIX (GNU/Linux, BSD, iOS, MacOS, Android, etc.);</li> <li>les syst\u00e8mes Microsoft Windows.  </li> </ul> <p>Certains sont libres (c-\u00e0-d ne n\u00e9cessitant pas le paiement d'une licence d'utilisation, code source disponible, entre autres), d'autres non (on les qualifie de syst\u00e8mes propri\u00e9taires). Conform\u00e9ment au programme, on utilisera un syst\u00e8me d'exploitation libre en NSI: GNU/Linux.  </p> <p>L'interaction avec le syst\u00e8me d'exploitation peut se faire de deux mani\u00e8res:  </p> <ul> <li>par le biais d'une interface graphique (GUI: Graphical User Interface);</li> <li>par le biais d'une interface en ligne de commande (CLI: Command Line Interface).  </li> </ul> <p>On privil\u00e9giera ici l'utilisation de la ligne de commande.</p>"},{"location":"NSI1/S2/sequence2.html#decouvrir-la-ligne-de-commande","title":"D\u00e9couvrir la ligne de commande","text":""},{"location":"NSI1/S2/sequence2.html#un-interpreteur-de-commande-bash-ou-shell-bash","title":"Un interpr\u00e9teur de commande : Bash ou shell Bash","text":"<p>On a acc\u00e8s \u00e0 la ligne de commande en ouvrant un terminal avec le raccourci clavier Ctrl\uff0bAlt\uff0bT .  Il s'agit d'un programme appel\u00e9 Bash qui est pr\u00e9sent par d\u00e9faut sur la majorit\u00e9 des syt\u00e8mes UNIX.</p>"},{"location":"NSI1/S2/sequence2.html#les-commandes-de-base","title":"Les commandes de base","text":"<p>Une fois le terminal d\u00e9marr\u00e9, chaque utilisateur se trouve par d\u00e9faut dans son dossier personnel (en anglais home directory ou plus simplement HOME) et le shell Bash est en attente de commande en affichant une s\u00e9rie d'informations: <code>nom_utilisateur@nom_machine:~$</code> </p> <p></p> <p>Le caract\u00e8re <code>~</code> (prononcez tilde, touche AltGr\uff0b2) correspond au chemin du r\u00e9pertoire personnel de l'utilisateur. Le caract\u00e8re <code>$</code> signifie que l'on a affaire \u00e0 un utilisateur normal c-\u00e0-d avec des droits limit\u00e9s.  </p> <p>Toutes les commandes acceptent de nombreuses options. Pour avoir un inventaire complet des options on doit taper: <code>man xxx</code> o\u00f9 xxx est la commande.  </p> <p>Quelques commandes \u00e0 conna\u00eetre (liste non exhaustive)</p> Commande Description ls lister le contenu du dossier courant mkdir cr\u00e9er un dossier cd se d\u00e9placer dans un dossier cp copier des fichiers ou dossiers rm supprimer des fichiers ou dossiers cat afficher le contenu d'un fichier touch cr\u00e9e un fichier vide clear efface l'\u00e9cran"},{"location":"NSI1/S2/sequence2.html#aborescence-dun-systeme-linux","title":"Aborescence d'un syst\u00e8me Linux","text":"<p>Les dossiers du syst\u00e8mes sont organis\u00e9s selon une arborescence dont la racine est <code>/</code>.  </p> <p> </p> <p>Un utilisateur normal n'a pas les droits suffisants pour \u00e9crire dans les dossiers syst\u00e8mes ou y effacer des fichiers. Seul le superutilisateur nomm\u00e9 root peut tout faire (et m\u00eame d\u00e9truire le syst\u00e8me) et n'importe o\u00f9 !  </p> <p>Les changements de dossier se font naturellement avec la commande <code>cd</code> qui peut prendre comme param\u00e8tre:  </p> <ul> <li>un chemin absolu, c-\u00e0-d compl\u00e8tement qualifi\u00e9 depuis racine <code>/</code> (par exemple <code>/home/bruno/Documents</code>);</li> <li>un chemin relatif, c-\u00e0-d par rapport au dossier o\u00f9 on se trouve qui est not\u00e9 avec le raccourci <code>.</code> (point); le dossier parent est not\u00e9 avec le raccourci <code>..</code> (point point). Ainsi, si on est dans <code>/home/bruno/Documents</code> et qu'on veut se rendre dans <code>/home/bruno/T\u00e9l\u00e9chargements</code> on tapera: </li> </ul> <pre><code>cd ../T\u00e9l\u00e9chargements\n</code></pre>"},{"location":"NSI1/S2/sequence2.html#gestion-des-droits","title":"Gestion des droits","text":"<p>Qui peut faire quoi et o\u00f9 ? Pour r\u00e9pondre \u00e0 cette question, les environnements UNIX divisent le monde en trois parties:  </p> <ul> <li>le propri\u00e9taire ou utilisateur (user);</li> <li>le groupe (group);</li> <li>les autres (others).  </li> </ul> <p>Par ailleurs, les fichiers peuvent \u00eatre manipul\u00e9s en:  </p> <ul> <li>lecture (read);</li> <li>\u00e9criture (write);</li> <li>ex\u00e9cution (execute).  </li> </ul> <p>Consid\u00e9rons la sortie de la commande <code>ls -l</code> sur un r\u00e9pertoire donn\u00e9.  </p> <p> </p> <p>Les colonnes n\u00b0 1, 3 et 4 sont utiles \u00e0 la gestion des droits.  </p> <ul> <li>La colonne 3 indique le nom du propri\u00e9taire;</li> <li>la colonne 4 indique le nom du groupe;</li> <li>la colonne 1 qui contient 10 caract\u00e8res doit \u00eatre d\u00e9compos\u00e9 en quatre parties. Par exemple <code>-rwx r-- r--</code>  (attention il n'y a pas d'espaces en r\u00e9alit\u00e9, ils ont \u00e9t\u00e9 rajout\u00e9s ici pour une meilleure lisibilit\u00e9) !  </li> </ul> <p>Les indications de la 1re colonne peuvent \u00eatre interpr\u00e9t\u00e9es de la mani\u00e8re suivante:</p> <ul> <li>le 1er caract\u00e8re: un <code>-</code> correspond \u00e0 un fichier et un <code>d</code> \u00e0 un r\u00e9pertoire;</li> <li>un groupe de 3 caract\u00e8res associ\u00e9s aux droits du propri\u00e9taire;</li> <li>un groupe de 3 caract\u00e8res associ\u00e9s aux droits du groupe;</li> <li>un groupe de 3 caract\u00e8res associ\u00e9s aux droits des autres;  </li> </ul> <p>Dans l'exemple de la capture ci-dessus, <code>Saison1</code> est un fichier ordinaire dont le propri\u00e9taire est <code>Angie</code> qui dispose des droits en lecture et \u00e9criture alors que le groupe <code>enfants</code> et les <code>autres</code> n'ont que le droit en lecture.  </p> <p>Un <code>x</code> signifie droit de traverser pour un r\u00e9pertoire. </p> <p>Enfin, seuls le propri\u00e9taire ou bien <code>root</code> peuvent changer les droits sur un fichier ou r\u00e9pertoire. La commande <code>chmod</code> est pr\u00e9vue \u00e0 cet effet. Voir des exemples de syntaxe dans le tableau ci-dessous.  </p> Accorder les droits de: Syntaxe lecture au groupe chmod g+r fichier \u00e9criture au propri\u00e9taire chmod u+w fichier ex\u00e9cution aux autres chmod o+x fichier ex\u00e9cution \u00e0 tous chmod ugo+r fichier <p>Remarque</p> <p>Pour supprimer un droit, on utilise le signe <code>-</code>; par exemple, pour supprimer le droit d'\u00e9criture au groupe sur un fichier, on utilisera la commande <code>chmod g-w fichier</code></p>"},{"location":"NSI1/S2/sequence2.html#exercices-sequence-2","title":"EXERCICES - S\u00e9quence 2","text":""},{"location":"NSI1/S2/sequence2.html#cocher-la-ou-les-bonnes-reponses","title":"Cocher la ou les bonnes r\u00e9ponses","text":"<ul> <li> <p>La commande <code>ls -al</code> :</p> </li> <li> <p> permet de lister les fichiers du r\u00e9pertoire courant sans d\u00e9tail.</p> </li> <li> permet de lister les fichiers standards et cach\u00e9s du r\u00e9pertoire courant.</li> <li> permet d\u2019afficher des d\u00e9tails sur un fichier comme son propri\u00e9taire ou ses droits.</li> <li> <p> n\u2019existe pas en Bash.</p> </li> <li> <p>La commande <code>mv</code> :</p> </li> <li> <p> sert \u00e0 copier des fichiers ou r\u00e9pertoires.</p> </li> <li> sert \u00e0 d\u00e9placer des fichiers ou r\u00e9pertoires.</li> <li> peut servir \u00e0 renommer un fichier ou un r\u00e9pertoire.</li> <li> <p> n\u2019existe pas en Bash.</p> </li> <li> <p>La commande <code>ls -l toto.sh</code> affiche <code>-r-xr--r-- 1 john staff 128 18 mai 11:56 toto.sh</code>.  </p> </li> <li> <p> toto.sh appartient \u00e0 john.</p> </li> <li> toto.sh appartient \u00e0 staff du groupe john.</li> <li> Personne n\u2019a le droit d\u2019\u00e9criture sur toto.sh.</li> <li> <p> Personne n\u2019a le droit de lire toto.sh.</p> </li> <li> <p>Dans un terminal, on tape <code>cd</code> (sans arguments) pour se placer dans son r\u00e9pertoire personnel, not\u00e9 parfois <code>HOME</code>. Quelle commande doit-on ensuite taper pour d\u00e9placer dans le r\u00e9pertoire courant le fichier <code>exo1.py</code> qui se trouve dans <code>Documents/python/</code> en sachant que <code>Documents</code> est dans <code>HOME</code>?</p> </li> <li> <p> <code>cp Documents/python/exo1.py</code></p> </li> <li> <code>mv /Documents/python/exo1.py</code></li> <li> <code>mv ./Documents/python/exo1.py .</code></li> <li> <code>rm Documents/python/exo1.py</code></li> </ul> <p>Indication pour les exercices</p> <p>\ud83d\udc49 On utilisera la machine Linux simplifi\u00e9e. On se connectera avec le compte de <code>Matei</code> en saisissant la commande <code>su Matei</code> (son mot de passe est <code>eleve</code>). Puis on se d\u00e9place dans son r\u00e9pertoire personnel avec <code>cd ~</code>.</p>"},{"location":"NSI1/S2/sequence2.html#exercice-1-trouver-son-chemin","title":"Exercice 1 - Trouver son chemin","text":"<p>Observer l\u2019arborescence suivante :  </p> <p></p> <ol> <li> <p>Proposer une commande qui permette de se d\u00e9placer du r\u00e9pertoire <code>HOME</code> de Alice \u00e0 celui de Bob :</p> <ul> <li>en utilisant un chemin relatif ;</li> <li>en utilisant un chemin absolu.</li> </ul> </li> <li> <p>Alice est \u00e0 la racine <code>/</code> . Proposer deux commandes qui peuvent lui permettre de se d\u00e9placer dans son r\u00e9pertoire personnel (<code>HOME</code>).</p> </li> <li> <p>Bob est dans son <code>HOME</code>. Aidez-le \u00e0 :</p> <ul> <li>lister le contenu de son <code>HOME</code>;</li> <li>lister le contenu de son <code>HOME</code> y compris les fichiers et r\u00e9pertoires cach\u00e9s ;</li> <li>lister le contenu du r\u00e9pertoire <code>share</code> sans quitter son <code>HOME</code>.</li> </ul> </li> </ol>"},{"location":"NSI1/S2/sequence2.html#exercice-2-creer-une-arborescence-et-se-deplacer-dedans","title":"Exercice 2 - Cr\u00e9er une arborescence et se d\u00e9placer dedans","text":"<ol> <li> <p>Cr\u00e9er dans le r\u00e9pertoire personnel de <code>Matei</code> l\u2019arborescence ci-dessus dans laquelle A, B, C, D, E, F et G sont des r\u00e9pertoires.</p> </li> <li> <p>La commande du shell <code>touch nom_fichier</code> permet de cr\u00e9er un fichier vide. Cr\u00e9er deux fichiers vides appel\u00e9s <code>un</code> et <code>deux</code> dans le r\u00e9pertoire d\u2019accueil.</p> </li> <li> <p>Quelle commande permet de copier des fichiers ou r\u00e9pertoires ? Copier le fichier <code>un</code> dans le r\u00e9pertoire <code>A</code> en lui donnant le nom <code>trois</code>.</p> </li> <li> <p>Comment r\u00e9aliser la copie pr\u00e9c\u00e9dente en utilisant un chemin relatif si vous \u00eates :</p> <ul> <li>dans le r\u00e9pertoire A ?</li> <li>dans le r\u00e9pertoire B ?</li> </ul> </li> <li> <p>Si votre nom d\u2019utilisateur est <code>Angie</code>, comment r\u00e9aliser cette copie en utilisant un chemin absolu ?</p> </li> <li> <p>Comment renommer le fichier <code>trois</code> en <code>quatre</code>?</p> </li> </ol>"},{"location":"NSI1/S2/sequence2.html#exercice-3-utiliser-les-pages-du-manuel-dune-commande","title":"Exercice 3 - Utiliser les pages du manuel d'une commande","text":"<ol> <li>Quelle option de la commande <code>echo</code> faut-il utiliser pour rester sur la m\u00eame ligne ?</li> <li>Comment faut-il faire pour afficher un message sur plusieurs lignes avec cette m\u00eame commande ?</li> <li>La commande <code>cat nom_fichier</code> permet d'afficher son contenu dans le terminale. Comment peut-on afficher le contenu avec les num\u00e9ros de lignes? Tester.</li> </ol>"},{"location":"NSI1/S2/sequence2.html#exercice-4-avez-vous-les-droits","title":"Exercice 4 - Avez-vous les droits ?","text":"<p>On consid\u00e8re le syst\u00e8me \u00e9tudi\u00e9 dans les activit\u00e9s pr\u00e9paratoires. L'utilisateur <code>Matei</code> est connect\u00e9 et a obtenu les informations suivantes:  </p> <p></p> <p>Commandes utilis\u00e9es: <code>tree repertoire</code> affiche l'arborescence des fichiers depuis <code>repertoire</code> et <code>groups utilisateur</code> permet de connaitre les groupes auxquels appartient l'utilisateur.</p> <ol> <li>Matei souhaite ajouter un fichier <code>Saison4</code> dans le dossier <code>Saisons</code> d'Angie. Peut-il le faire directement ? Justifier la r\u00e9ponse.</li> <li>Proposer une strat\u00e9gie pour r\u00e9soudre le probl\u00e8me.</li> </ol>"},{"location":"NSI1/S3/S3A1.html","title":"Compter en base 2, 10 et 16","text":""},{"location":"NSI1/S3/S3A1.html#base-10-decimale","title":"Base 10 (d\u00e9cimale)","text":"<p>De fa\u00e7on naturelle, on travaille avec des nombres \u00e9crits le plus souvent en base 10, avec ses 10 chiffres de 0 \u00e0 9 (\u00e0 cause de nos 10 doigts ?).  Ainsi, chaque nombre est d\u00e9compos\u00e9 suivant des unit\u00e9s (rang 0), dizaines (rang 1), centaines (rang 2), etc.  On peut aussi utiliser les puissances de 10. Exemple Le nombre 125 est \u00e9gal une centaine plus deux dizaines plus cinq unit\u00e9s, ce qui  peut \u00eatre \u00e9crit aussi: \\(125=1\\times 10^2+2\\times 10^1+5\\times 10^0\\)</p> <p>A faire</p> <p>D\u00e9composer 63 en base 10.</p>"},{"location":"NSI1/S3/S3A1.html#base-2-binaire","title":"Base 2 (binaire)","text":"<p>Dans un ordinateur, la base naturelle est la base 2 ou binaire (l'\u00e9tat d'un compos\u00e9 \u00e9lectronique ne prend que deux valeurs: allum\u00e9 ou \u00e9teint).  Deux chiffres seulement sont n\u00e9cessaires: le z\u00e9ro et le un. Comme en base 10, un nombre peut \u00eatre d\u00e9compos\u00e9 en unit\u00e9 (rang 0), deuzaine (rang 1), quatraine (rang 2), huitaine (rang 3) etc.  </p> Info <p>Le nom des adjectifs num\u00e9raux peut \u00eatre consult\u00e9 sur cette page wikipedia.</p> <p>Comme en base 10 encore, on peut utiliser les puissances de la base, ici 2. Exemple Le nombre 17 peut \u00eatre d\u00e9compos\u00e9 en une seizaine plus une unit\u00e9:  </p> seizaine huitaine quatraine deuzaine unit\u00e9 \\(2^4=16\\) \\(2^3=8\\) \\(2^2=4\\) \\(2^1=2\\) \\(2^0=1\\) 1 0 0 0 1 <p>De ce fait, 17 s'\u00e9crit \\(10001_2\\) en base 2 (le deux en indice indique la base et \u00e9vite les ambiguit\u00e9s).</p> <p>A faire</p> <p>Le nombre 14 est \u00e9gal \u00e0 une huitaine plus une quatraine plus une deuzaine. D\u00e9composer 14 sur la base 2. </p> <p>Techniquement, la d\u00e9composition en puissance de 2 peut se faire en r\u00e9alisant des divisions euclidienne par 2.  </p> <p>Rappel important</p> <p>Le vocabulaire employ\u00e9 lorsqu'on pose une division (avec la potence): </p> <p>Il s'agit de r\u00e9aliser des divisions successives par 2 du quotient, tant que  celui-ci n'est pas nul.  </p> <p>Exemple Soit \u00e0 convertir 25 en binaire en utilisant les divisions successives par 2.  </p> M\u00e9thode des divisions successives par 2 <p>Le r\u00e9sultat est obtenu en faisant une lecture des restes de bas en haut: \\(11001_2\\).</p> <p>A faire</p> <p>Ecrire le nombre 19 en binaire en utilisant la technique des divisions successives par 2.</p> <p>Pour conna\u00eetre la valeur d'un nombre \u00e9crit en binaire, en base 10, il suffit de faire la somme de sa d\u00e9composition en puissances de deux.  </p> <p>Exemple \\(1101_2=1\\times 2^3+1\\times 2^2+1\\times 2^0=8+4+1=13\\)</p> \\(2^3\\) \\(2^2\\) \\(2^1\\) \\(2^0\\) 1 1 0 1 <p>A faire</p> <p>Convertir \\(110110_2\\) en base 10.</p>"},{"location":"NSI1/S3/S3A1.html#base-16-hexadecimale","title":"Base 16 (hexad\u00e9cimale)","text":"<p>La base 16 est \u00e9galement tr\u00e8s utilis\u00e9e en informatique. Dans cette base, seize symboles (chiffres) sont n\u00e9cessaires. On utilise les dix chiffres de la base 10 plus les six lettres A, B, C, D, E et F.  </p> Base 16 0 1 2 3 4 5 6 7 8 9 A B C D E F Base 10 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <p>Les principes de conversions vus pr\u00e9c\u00e9demment sont toujours valables.  </p> <ul> <li>Conversion de la base 10 vers la base 16     On effectue des divisions successives du quotient tant que celui-ci n'est pas nul. Exemple     Soit le nombre \\(480_{10}\\) \u00e0 \u00e9crire en base 16.      La fl\u00eache indique le sens de lecture: \\(480_{10}=1\\mathrm{E}0_{16}\\)</li> <li> <p>Conversion de la base 16 vers la base 10     On effectue la somme de la d\u00e9composition du nombre en puissance de 16. Exemple </p> \\(16^2\\) \\(16^1\\) \\(16^0\\) 1 E 0 <p>\\(1\\mathrm{E}0_{16}= 1\\times 16^2+14\\times 16^1+0\\times 16^0=256+224=480\\)</p> </li> </ul> <p>A faire</p> <p>Fanny a choisi comme couleur de fond de la page d'accueil de son site web la valeur <code>#F34DC1</code>. Dans cette syntaxe, chaque paire de caract\u00e8re correspond \u00e0 nombre hexad\u00e9cimal associ\u00e9 \u00e0 une nuance de rouge, de vert ou de bleu (codage RGB). Ici, la nuance de rouge est cod\u00e9 par le nombre <code>F3</code>. La nuance de vert est associ\u00e9 \u00e0 <code>4D</code> et celle du bleu \u00e0 <code>C1</code>.  </p> <ul> <li>Donner chaque nuance de couleur en base 10;</li> <li>Les autres pages du site auront une couleur de fond cod\u00e9e en d\u00e9cimal par le triplet RGB (241, 19, 126). Donner le code hexad\u00e9cimal de cette couleur.</li> </ul> <pre><code>\n</code></pre>"},{"location":"NSI1/S3/S3A1.html#conversion-hexadecimale-binaire","title":"Conversion hexad\u00e9cimale - binaire","text":"<p>Pour passer de l'hexad\u00e9cimal au binaire il suffit de remplacer chaque chiffre hexad\u00e9cimal par son code binaire.  </p> Hexad\u00e9cimal 0 1 2 3 4 5 6 7 8 9 A B C D E F Binaire 0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111 <p>A faire</p> <p>Quelle est la valeur en binaire, du code de la couleur de la page d'accueil du site de Fanny ?</p> <p>Pour passer d'une \u00e9criture binaire \u00e0 l'hexad\u00e9cimale, on fait des groupes de 4 chiffres binaires de la droite vers la gauche (si besoin on compl\u00e8te avec des z\u00e9ros). On fait correspondre \u00e0 chaque groupe le chiffre hexad\u00e9cimal correct (voir tableau ci-dessus. Exemple Que vaut \\(111\\ 0001\\ 1010_2\\) en hexad\u00e9cimal ? R\u00e9ponse: \\(71\\mathrm{A}\\) </p> <p>A faire</p> <p>Ecrire \\(10\\ 1111\\ 1101\\ 1010\\ 0111\\ 1011_2\\) en hexad\u00e9cimal</p>"},{"location":"NSI1/S3/S3A2.html","title":"Manipuler des nombres en machine","text":""},{"location":"NSI1/S3/S3A2.html#somme-dentiers-positifs","title":"Somme d'entiers positifs","text":"<p>En binaire on a:  </p> <ul> <li>\\(0+0=0\\)</li> <li>\\(0+1=1+0=1\\)</li> <li>\\(1+1=0\\) et on a une retenue de 1.</li> </ul> <p>La derni\u00e8re relation est facile \u00e0 comprendre: en d\u00e9cimal \\(1+1=2\\) qui est \u00e9gal \u00e0 \\(10_2\\).  </p> <p>A faire</p> <ul> <li>Effectuer les sommes \\(1001_2+0101_2\\) puis \\(0011_2+1001_2\\);</li> <li>Au maximum, combien de bits sont n\u00e9cessaires pour additionner deux entiers cod\u00e9s sur \\(n\\) bits? </li> </ul>"},{"location":"NSI1/S3/S3A2.html#somme-dentiers-relatifs","title":"Somme d'entiers relatifs","text":"<p>Voici une proposition de codage des entiers n\u00e9gatifs sur 4 bits.  </p> <p>A faire</p> <p>Compte tenu de ces informations, effectuer les additions \\((-7)+5\\) et \\(3+(-7)\\). Les r\u00e9sultats obtenus sont-ils corrects?</p> <p>La m\u00e9thode de codage des entiers n\u00e9gatifs, dite du compl\u00e9ment \u00e0 2 (qui sera d\u00e9taill\u00e9e dans le cours), est r\u00e9sum\u00e9e ci-dessous.   Pour coder un nombre \\(x\\):  </p> <ul> <li>coder \\(\\lvert x\\rvert\\) en binaire de fa\u00e7on habituelle;</li> <li>inverser tous les bits;</li> <li>additionner 1.</li> </ul> <p>Exemple Soit \u00e0 coder \\(-6\\).</p> |-6| = 6 0110 Inversion 1001 Addition de 1 + 0001 R\u00e9sultat 1010 <p>A faire</p> <p>Coder \\(-68_{10}\\) sur 8 bits en adoptant la m\u00e9thode du compl\u00e9ment \u00e0 2.    </p>"},{"location":"NSI1/S3/S3A2.html#depassement-de-capacite","title":"D\u00e9passement de capacit\u00e9","text":"<p>A faire</p> <p>En utilisant la roue binaire pr\u00e9c\u00e9dente d\u00e9crire ce qui se passe si on effectue \\(7+1\\) ou \\((-8)-1\\) sur 4 bits.</p>"},{"location":"NSI1/S3/S3A2.html#decomposition-dun-nombre-a-virgule","title":"D\u00e9composition d'un nombre \u00e0 virgule","text":"<p>A faire</p> <p>D\u00e9composer le nombre \\(10,0111_2\\) en base 2 selon la m\u00e9thode habituelle, sachant qu'apr\u00e8s la virgule les puissances de 2 sont n\u00e9gatives. Quelle est sa valeur en d\u00e9cimal ?</p>"},{"location":"NSI1/S3/S3A2.html#comment-convertir-un-nombre-a-virgule","title":"Comment convertir un nombre \u00e0 virgule ?","text":"<p>Pour la partie enti\u00e8re (avant la virgule) on proc\u00e8de comme d'habitude. Pour la partie fractionnaire, la m\u00e9thode est la suivante:  </p> <ul> <li>on multiplie la partie fractionnaire par 2;</li> <li>la partie enti\u00e8re donne le prochain chiffre binaire;</li> <li>on r\u00e9cup\u00e8re la partie fractionnaire et on recommence le processus tant que cette derni\u00e8re n'est pas nulle</li> </ul> <p>Exemple Soit \u00e0 convertir \\(6,125\\). \\(6_{10}=110_2\\) </p> Multiplication par 2 Prochain chiffre binaire 0,125 x 2 = 0,25 0 0,25 x 2 = 0,5 0 0,5 x 2 = 1,0 1 <p>On a donc \\(6,125=110,001_2\\).</p> <p>A faire</p> <p>Convertir 9,375 en binaire.</p>"},{"location":"NSI1/S3/S3C1.html","title":"TRAVAILLER EN BASE 2, 10 ET 16","text":""},{"location":"NSI1/S3/S3C1.html#reperes-historiques","title":"Rep\u00e8res historiques","text":"<p>L'invention du syst\u00e8me binaire est souvent attribu\u00e9 \u00e0 tort au savant allemand Wilhelm Gottfried Leibniz (1646-1716). </p> <p>En effet, le math\u00e9maticien et astronome anglais Thomas Harriot (1560-1621) avait d\u00e9j\u00e0 travaill\u00e9 sur les syst\u00e8mes non d\u00e9cimaux. Voir une publication en ligne des manuscrits de Harriot </p> <p>Leibniz s'inspira des figures de le l'empereur chinois Fuxi (-3000) que l'on peut consid\u00e9rer comme la premi\u00e8re expression d'un codage binaire. </p>"},{"location":"NSI1/S3/S3C1.html#comment-representer-des-informations-sur-une-machine-numerique","title":"Comment repr\u00e9senter des informations sur une machine num\u00e9rique ?","text":""},{"location":"NSI1/S3/S3C1.html#unite-dinformation","title":"Unit\u00e9 d'information","text":"<p>Les machines num\u00e9riques sont compos\u00e9es d'\u00e9l\u00e9ments manipulant l'information sous forme de deux \u00e9tats distincts. C'est la raison pour laquelle on les appelle machine binaire. Par convention, ces \u00e9tats sont not\u00e9s \\(0\\) ou \\(1\\). En anglais, ces informations \u00e9l\u00e9mentaires sont appel\u00e9es binary digit ou bit. Un bit permet de repr\u00e9senter \\(2^1=2\\) informations.  </p> <p>On peut g\u00e9n\u00e9raliser: \\(n\\) bits permettent de repr\u00e9senter \\(2^n\\) informations. </p> <p>Les machines num\u00e9riques manipulent habituellement des groupes de bits. Ainsi, un groupe de 8 bits forment un octet.  </p> <p>ATTENTION</p> <p>en anglais un octet est traduit par BYTE. </p> <p>Au del\u00e0 de 8 bits on utilise le terme mot. On parle par exemple de mot de 16 bits, de mot de 32 bits (on trouve aussi le terme double mot) ou de mot de 64 bits (ou quadruple mot).</p> <p>Les quantit\u00e9s d'informations stock\u00e9es ou manipul\u00e9es s'expriment avec les pr\u00e9fixes habituels reli\u00e9s aux puissances de 10 (1 kilooctet (ko) \\(= 1\\times10^3\\) octets, 1 m\u00e9gaoctet (Mo) \\(= 1\\times10^6\\) octets, 1 gigaoctet (Go) \\(= 1\\times10^9\\) octets etc).  </p> <p>Remarque</p> <p>Certains informaticiens/\u00e9lectroniciens utilisent encore des d\u00e9finitions de ces quantit\u00e9s exprim\u00e9es en puissances de 2 (\\(2^{10}\\), \\(2^{20}\\), \\(2^{30}\\), etc). Pour \u00e9viter les confusions, l'International Electrotechnical Commission (IEC) a normalis\u00e9 ces appellations en d\u00e9cembre 1998. Voir lien.</p>"},{"location":"NSI1/S3/S3C1.html#representation-binaire-des-entiers-naturels","title":"Repr\u00e9sentation binaire des entiers naturels","text":""},{"location":"NSI1/S3/S3C1.html#representation-positionnelle-decomposition-suivant-une-base","title":"Repr\u00e9sentation positionnelle: d\u00e9composition suivant une base","text":"<p>On pr\u00e9sente les nombres entiers de mani\u00e8re classique en repr\u00e9sentation positionnelle. Par exemple en base 10, la suite 123 signifie \\(1\\times 10^2+2\\times 10^1+3\\times 10^0\\). En base 2, la suite 10011 signifie \\(1\\times 2^4+0\\times 2^3+0\\times 2^2+1\\times 2^1+1\\times 2^0\\).  </p> <p>Dans un motif binaire, le bit le plus \u00e0 droite est le bit de poids faible ou LSB (Least Significant Bit). A l'oppos\u00e9, le bit le plus \u00e0 gauche est le bit de poids fort ou MSB (Most Significant Bit). </p> <p>Astuce</p> <p>Le bit de poids faible peut \u00eatre utilis\u00e9 pour trouver la parit\u00e9 du nombre: \\(0\\) indique un nombre pair et \\(1\\) un nombre impair.</p>"},{"location":"NSI1/S3/S3C1.html#conversion-binaire-decimal","title":"Conversion binaire - d\u00e9cimal","text":"<p>La conversion binaire - d\u00e9cimale d'un entier naturel d\u00e9coule simplement du mode de repr\u00e9sentation positionnelle: on additionne les puissances de 2 pr\u00e9sentes dans le motif binaire. Ainsi, pour l'exemple pr\u00e9c\u00e9dent on a: \\(10011_2=(1\\times 2^4+0\\times 2^3+0\\times 2^2+1\\times 2^1+1\\times 2^0)_{10}=19_{10}\\) </p> <p>Remarque</p> <p>La base a \u00e9t\u00e9 indiqu\u00e9e ici en indice, on peut l'omettre lorsqu'il n'y a pas d'ambiguit\u00e9.</p>"},{"location":"NSI1/S3/S3C1.html#conversion-decimal-binaire","title":"Conversion d\u00e9cimal - binaire","text":"<p>On d\u00e9compose le nombre entier en une somme de puissance de 2 par divisions  enti\u00e8res successives tant que le quotient n'est pas nul. Le r\u00e9sultat est  alors constitu\u00e9 des restes de chaque division, en commen\u00e7ant par la derni\u00e8re.  </p> <p> </p> <p>\\(25=11001_2\\) </p>"},{"location":"NSI1/S3/S3C1.html#representation-hexadecimale","title":"Repr\u00e9sentation hexad\u00e9cimale","text":"<p>La repr\u00e9sentation binaire devient rapidement encombrante. On lui pr\u00e9f\u00e8re souvent la repr\u00e9sentation hexad\u00e9cimale (base 16). L'utilisation de cette base n\u00e9cessite 16 caract\u00e8res. Le tableau ci-dessous pr\u00e9sente ces caract\u00e8res ainsi que leur \u00e9quivalence en base 10 et 2.  </p> <p></p>"},{"location":"NSI1/S3/S3C1.html#conversion-decimal-hexadecimale","title":"Conversion d\u00e9cimal - hexad\u00e9cimale","text":"<p>De la m\u00eame fa\u00e7on qu'en binaire, on d\u00e9compose le nombre entier en une somme de  puissance de 16, par divisions successives par 16 tant que le quotient n'est pas nul.  </p> <p></p> <p>\\(480=1\\mathrm{E}0_{16}\\)</p>"},{"location":"NSI1/S3/S3C1.html#conversion-hexadecimale-decimale","title":"Conversion hexad\u00e9cimale - d\u00e9cimale","text":"<p>On additionne les puissances de 16 pr\u00e9sentes dans le motif hexad\u00e9cimal.  </p> <p>\\(1\\mathrm{E}0_{16}=1\\times 16^2+14\\times 16^1+0\\times 16^0=256+224+0=480\\) </p> <p>Remarque</p> <p>Dans la somme, on remplace \u00e9videmment chaque chiffre hexad\u00e9cimal par sa valeur (en d\u00e9cimal). Dans l'exemple pr\u00e9c\u00e9dent, \\(\\mathrm{E}\\) est remplac\u00e9 par 14.</p>"},{"location":"NSI1/S3/S3C1.html#conversions-binaire-hexadecimal-et-vice-versa","title":"Conversions binaire - hexad\u00e9cimal et vice-versa","text":"<p>Pour passer du binaire \u00e0 l'hexad\u00e9cimal il suffit de grouper les bits par 4 et de  les remplacer par leur \u00e9quivalent hexd\u00e9cimal (voir tableau ci-dessus).  </p> <p>\\(1101011111_2=0011\\ 0101\\ 1111=35\\mathrm{F}_{16}\\)</p> <p>A l'inverse, pour passer de l'hexad\u00e9cimal au binaire, on remplace chaque  chiffre hexad\u00e9cimal par sa valeur en binaire.</p> <p>\\(\\mathrm{F}15_{16}=1111\\ 0001\\ 0101_2\\)</p>"},{"location":"NSI1/S3/S3C2.html","title":"Encodage des entiers relatifs","text":""},{"location":"NSI1/S3/S3C2.html#comment-coder-un-entier-signe-sur-une-machine-numerique","title":"Comment coder un entier sign\u00e9 sur une machine num\u00e9rique?","text":"<p>Le signe d'un entier relatif peut prendre deux valeurs possibles: <code>+</code> ou <code>-</code>. Par cons\u00e9quent, un seul bit suffit pour le codage du signe.  </p> <p>Convention</p> <p>Par convention le signe + est cod\u00e9 par 0 et le signe - par 1.</p> <p>Les tailles courantes pour repr\u00e9senter un entier sont 8, 16, 32 ou 64 bits.</p>"},{"location":"NSI1/S3/S3C2.html#proprietes-a-verifier-et-premiere-solution","title":"Propri\u00e9t\u00e9s \u00e0 v\u00e9rifier et premi\u00e8re solution","text":"<p>Note</p> <p>Quelque soit l'encodage choisi, on doit respecter deux propri\u00e9t\u00e9s essentielles:  </p> <ul> <li>\\(a + (-a) = 0\\) (propri\u00e9t\u00e9 1)</li> <li>\\(-(-a) = a\\) (propri\u00e9t\u00e9 2)</li> </ul> <p>La premi\u00e8re id\u00e9e est d'utiliser un bit, g\u00e9n\u00e9ralement le bit de poids fort, pour repr\u00e9senter le signe et les autres bits pour repr\u00e9senter la valeur absolue du nombre \\(x\\) \u00e0 coder.  Ce qui peut \u00eatre repr\u00e9sent\u00e9 par:  </p> <p><pre><code>    &lt;---- n-1 bits --&gt;\n+---+----------------+\n| 1 |    |x|         |\n+---+----------------+\n</code></pre> ou </p> <p><pre><code>    &lt;---- n-1 bits --&gt;\n+---+----------------+\n| 0 |    |x|         |\n+---+----------------+\n</code></pre> selon que \\(x\\) soit n\u00e9gatif ou positif.</p> <p>Exemple </p> <p>Soit \u00e0 coder \\(-5\\) sur 4 bits. Avec 4 bits, la valeur absolue sera cod\u00e9e sur 3 bits et le signe sur 1 bit. On a \\(|-5| = 5\\), ce qui correspond \u00e0 \\(101_{2}\\), le bit de signe valant 1 car \\(-5&lt;0\\). On aura donc le codage suivant: \\(-5\\rightarrow 1\\ 1\\ 0\\ 1\\) </p> <p>La propri\u00e9t\u00e9 (1) ci-dessus est-elle v\u00e9rifi\u00e9e ? Ajoutons les repr\u00e9sentations de \\(5\\) et \\(-5\\), avec un r\u00e9sultat sur 4 bits:  </p> \\(_1\\) \\(_1\\) \\(_1\\) 0 1 0 1 + 1 1 0 1 0 0 1 0 <p>La valeur obtenue sur 4 bits est diff\u00e9rente de z\u00e9ro: cette solution n'est pas satisfaisante.  </p> <p>Remarque</p> <p>Un probl\u00e8me suppl\u00e9mentaire peut \u00eatre mis en \u00e9vidence: l'existence de deux repr\u00e9sentations pour z\u00e9ro.</p>"},{"location":"NSI1/S3/S3C2.html#une-solution-plus-satisfaisante","title":"Une solution plus satisfaisante","text":""},{"location":"NSI1/S3/S3C2.html#le-complement-a-2","title":"Le compl\u00e9ment \u00e0 2","text":"<p>Sur \\(n\\) bits on peut coder \\(2^n\\) entiers. Il y en a autant de positifs que de n\u00e9gatifs, soit \\(\\dfrac{2^n}{2}=2^{n-1}\\). Les plages de valeurs repr\u00e9sentables sont:</p> <ul> <li>de \\(0\\) \u00e0 \\(2^{n-1}-1\\) pour les valeurs positives;</li> <li>de \\(-1\\) \u00e0 \\(-2^{n-1}\\) pour les valeurs n\u00e9gatives</li> </ul> <p>Ainsi, avec \\(n=8\\) bits par exemple, on peut repr\u00e9senter les entiers allant de \\(-128\\) \u00e0 \\(+127\\).  </p> <p>D\u00e9finition</p> <p>Soit un entier relatif \\(x\\) \u00e0 coder sur \\(n\\) bits.  </p> <ul> <li>Si \\(x\\in [\\![0..2^{n-1}-1]\\!]\\), alors on code \\(x\\) comme un entier naturel sur \\(n\\) bits;</li> <li>si \\(x\\in [\\![-2^{n-1}..-1]\\!]\\), alors on code \\(x\\) comme l'entier naturel \\(2^n-\\lvert x\\rvert\\) sur \\(n\\) bits.</li> </ul> <p>Vocabulaire</p> <p>La quantit\u00e9 \\(2^n-\\lvert x\\rvert\\), appel\u00e9e compl\u00e9ment \u00e0 \\(2^n\\) de \\(x\\) voit son nom souvent abr\u00e9g\u00e9 en compl\u00e9ment \u00e0 2.</p>"},{"location":"NSI1/S3/S3C2.html#comment-utiliser-le-complement-a-2","title":"Comment utiliser le compl\u00e9ment \u00e0 2 ?","text":""},{"location":"NSI1/S3/S3C2.html#methode-1","title":"M\u00e9thode 1","text":"<p>On utilise directement la d\u00e9finition. Exemples Soit \u00e0 coder les entiers relatifs \\(x_1=107\\) et \\(x_2=-107\\) sur 8 bits. </p> <ul> <li>\\(x_1=107=1101011_2\\), soit \\(0110\\ 1011\\). On constate que le bit de poids fort vaut \\(0\\), ce qui indique un nombre positif.  </li> <li>Pour \\(x_2\\) on a: \\(2^8-\\lvert -107\\rvert=149\\) qui s'\u00e9crit en binaire \\(1001\\ 0101\\) et qui correspond \u00e0 la repr\u00e9sentation de \\(-107\\) sur 8 bits. Par ailleurs, le bit de poids fort vaut \\(1\\), ce qui indique bien un nombre n\u00e9gatif.</li> </ul> <p>Effectuons \\(x_1+x_2\\):</p> 1 1 1 1 1 1 1 1 0 1 1 0 1 0 1 1 + 1 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 <p>La m\u00e9thode du compl\u00e9ment \u00e0 2 v\u00e9rifie la propri\u00e9t\u00e9 1.</p> <p>M\u00e9thode 2 (\u00e0 conna\u00eetre)</p> <p>Pour repr\u00e9senter l'oppos\u00e9 d'un entier relatif:</p> <ul> <li>Ecrire la valeur absolue du nombre en binaire naturel avec le nombre de bits sp\u00e9cifi\u00e9 (compl\u00e9ter si besoin avec des z\u00e9ros);</li> <li>Inverser tous les bits (compl\u00e9ment \u00e0 un);</li> <li>Ajouter 1 au r\u00e9sultat pr\u00e9c\u00e9dent.</li> </ul> <p>Exemple Coder \\(x_2=-107\\) sur 8 bits en utilisant la m\u00e9thode 2. \\(\\lvert x_2\\rvert = 0110\\ 1011\\). On inverse les bits: \\(1001\\ 0100\\) et on ajoute 1: \\(1001\\ 0101\\). On retrouve heureusement le r\u00e9sultat pr\u00e9c\u00e9dent. Appliquons une deuxi\u00e8me fois le compl\u00e9ment \u00e0 2 sur le r\u00e9sultat \\(1001\\ 0101\\): Inversion des bits: \\(0110\\ 1010\\), additionner 1: \\(0110\\ 1011\\). La propri\u00e9t\u00e9 2 est v\u00e9rifi\u00e9e.</p>"},{"location":"NSI1/S3/S3C2.html#representation-circulaire","title":"Repr\u00e9sentation circulaire","text":"<p>Il est commode de repr\u00e9senter le codage d'entiers relatifs sous forme circulaire.  </p> <p>On y rep\u00e8re l'intervalle des valeurs couvertes selon qu'on travaille avec des entiers non sign\u00e9s (ext\u00e9rieur) ou sign\u00e9s (int\u00e9rieur). Par ailleurs, la notion de compl\u00e9ment \u00e0 \\(2^n\\) est bien mise en \u00e9vidence. Par exemple, \\(-5\\) sera cod\u00e9 comme son compl\u00e9ment \u00e0 \\(2^4\\), c'est-\u00e0-dire \\(2^4-\\lvert -5\\rvert=11\\).</p>"},{"location":"NSI1/S3/S3C2.html#a-retenir","title":"A retenir","text":"<p>Pour coder un entier relatif, on utilise la m\u00e9thode du compl\u00e9ment \u00e0 \\(2^n\\). Pour cela, si la capacit\u00e9 est fix\u00e9e \u00e0 \\(n\\) bits, on peut simplement:  </p> <ul> <li>\u00e9crire la valeur absolue du nombre en binaire naturel avec le nombre de bits sp\u00e9cifi\u00e9 (compl\u00e9ter si besoin avec des z\u00e9ros);  </li> <li>inverser tous les bits (compl\u00e9ment \u00e0 un);  </li> <li>ajouter 1 au r\u00e9sultat pr\u00e9c\u00e9dent  </li> </ul> <p>Avec \\(n\\) bits, on peut coder les entiers appartenant \u00e0 l'intervalle \\([\\![-2^{n-1}...2^{n-1}-1]\\!]\\). Si une op\u00e9ration conduit \u00e0 un nombre se situant en dehors de cet intervalle, on a un ph\u00e9nom\u00e8ne de d\u00e9passement de capacit\u00e9 (en anglais overflow).</p>"},{"location":"NSI1/S3/S3C3.html","title":"CODAGE DES NOMBRES DECIMAUX","text":""},{"location":"NSI1/S3/S3C3.html#conversion-decimal-binaire-dun-nombre-en-virgule-fixe","title":"Conversion d\u00e9cimal - binaire d'un nombre en virgule fixe","text":"<p>Pour passer du binaire au d\u00e9cimal, la m\u00e9thode consiste \u00e0 consid\u00e9rer deux parties:  </p> <ul> <li>la premi\u00e8re, compos\u00e9ee de puissances positives et qui correspond \u00e0 la partie enti\u00e8re;</li> <li>la seconde, compos\u00e9e de puissances n\u00e9gatives et qui correspond \u00e0 la la partie fractionnaire.</li> </ul> <p>Ces deux parties \u00e9tant s\u00e9par\u00e9es par la virgule qui est fixe dans ce cas. La conversion binaire \\(\\rightarrow\\) d\u00e9cimale est obtenue en additionnant les termes de la d\u00e9composition en base 2.  </p> Exemple \\(2^2\\) \\(2^1\\) \\(2^0\\) \\(2^{-1}\\) \\(2^{-2}\\) \\(2^{-3}\\) \\(2^{-4}\\) 1 0 1 1 1 0 1 <p>Ce nombre vaut \\(2^2+1+\\dfrac{1}{2}+\\dfrac{1}{4}+\\dfrac{1}{16}=5.8125\\)</p> <p>Pour passer du d\u00e9cimal au binaire, on peut utiliser l'algorithme ci-dessous.  </p> <p>ATTENTION</p> <p>Cet algorithme est destin\u00e9 \u00e0 \u00eatre d\u00e9roul\u00e9 \u00e0 la main. En effet, il peut boucler ind\u00e9finiment. Ce cas se produit pour des nombres qui ne peuvent \u00eatre repr\u00e9sent\u00e9s en machine. La valeur retenue est forc\u00e9ment approch\u00e9e.</p> Exemple <p>Convertir en binaire 6,6875. En appliquant l'algorithme (la conversion de 6 en binaire est imm\u00e9diate et  n'est pas d\u00e9taill\u00e9e):</p> r f resultat 0,6875 110, 1,375 0,375 110,1 0,75 0,75 110,10 1,5 0,5 110,101 1,0 0 110,1011 <p>Par cons\u00e9quent \\(6,6875=110,1011_2\\) en virgule fixe.</p>"},{"location":"NSI1/S3/S3C3.html#conversion-dun-nombre-decimal-en-binaire-virgule-flottante","title":"Conversion d'un nombre d\u00e9cimal en binaire - virgule flottante","text":"<p>Il s'agit de d\u00e9couvrir ici la fa\u00e7on dont on repr\u00e9sente de mani\u00e8re approximative les nombres d\u00e9cimaux ou nombres flottants en machine. Il s'agit de la repr\u00e9sentation en virgule flottante.</p>"},{"location":"NSI1/S3/S3C3.html#le-format-et-les-notations","title":"Le format et les notations","text":"<p>Cette deuxi\u00e8me fa\u00e7on d'encoder un nombre d\u00e9cimal est inspir\u00e9e de la notation scientifique: \\(\\pm m\\times 10^n\\) avec \\(1\\leq m&lt;10\\) et \\(n\\) un entier. De mani\u00e8re similaire, en base 2, on va \u00e9crire les nombres sous la forme \\(\\pm m\\times 2^n\\) avec \\(1\\leq m \\lt 2\\) et \\(n\\) un entier. Le codage d'un nombre d\u00e9cimal en base 2 n\u00e9cessite trois informations binaires:  </p> <ul> <li>une pour le signe \\(s\\);</li> <li>une pour l'exposant \\(n\\);</li> <li>une pour \\(m\\) qu'on appelle encore mantisse. </li> </ul>"},{"location":"NSI1/S3/S3C3.html#representation-en-simple-ou-double-precision","title":"Repr\u00e9sentation en simple ou double pr\u00e9cision","text":"<p>Le format pr\u00e9c\u00e9dent a \u00e9t\u00e9 d\u00e9taill\u00e9 dans une norme appel\u00e9e IEEE754. Plusieurs niveaux de pr\u00e9cisions sont d\u00e9finis dans cette norme. On ne s'int\u00e9ressera ici qu'\u00e0 la repr\u00e9sentation en simple pr\u00e9cision sur 32 bits et double pr\u00e9cision sur 64 bits.</p>"},{"location":"NSI1/S3/S3C3.html#le-signe","title":"Le signe","text":"<p>Un seul bit est n\u00e9cessaire pour coder le signe \\(s\\). On garde la convention d\u00e9j\u00e0 rencontr\u00e9e: 0 pour le signe <code>+</code> et 1 pour le signe <code>-</code> .</p>"},{"location":"NSI1/S3/S3C3.html#lexposant","title":"L'exposant","text":"<p>La norme pr\u00e9voit 8 bits en simple pr\u00e9cision et 11 bits en double pr\u00e9cision pour l'exposant. Les valeurs de \\(n\\) possibles seraient donc comprises entre 0 et 255 ou 0 et 2047. C'est un probl\u00e8me car cela nous emp\u00eache de travailler avec des nombres proches de z\u00e9ro.  </p> <p>Pour y rem\u00e9dier, on a eu recours \u00e0 l'astuce suivante: l'exposant est biais\u00e9 ou d\u00e9cal\u00e9 de 127 en simple pr\u00e9cision et 1023 en double pr\u00e9cision. La cons\u00e9quence est que l'exposant \\(n\\) ne correspond pas \u00e0 la valeur cod\u00e9e \\(e\\) mais \u00e0:  </p> <ul> <li>\\(e-127\\) en simple pr\u00e9cision;</li> <li>\\(e-1023\\) en double pr\u00e9cision.</li> </ul> <p>Ainsi, sur 8 bits, la valeur cod\u00e9e \\(e\\) variant de \\(0000\\ 0000=0\\) \u00e0 \\(1111\\ 1111=255\\) va correspondre \u00e0 un exposant allant de \\(0-127=-127\\) \u00e0 \\(255-127=128\\).</p>"},{"location":"NSI1/S3/S3C3.html#la-mantisse","title":"La mantisse","text":"<p>Avec le format d\u00e9crit, \\(1\\leq m \\lt 2\\), on aura toujours \\(m=1,\\dots\\). La mantisse commence toujours par \\(1\\) (sauf cas particuliers qui ne seront pas trait\u00e9s ici). De ce fait, on ne code jamais le 1 et les 23 ou 52 bits restants sont utilis\u00e9s pour coder la partie fractionnaire \\(f\\) de la mantisse.  </p> <p>Remarque</p> <p>\\(m=1+f\\)</p>"},{"location":"NSI1/S3/S3C3.html#resume","title":"R\u00e9sum\u00e9","text":"<p>Un nombre d\u00e9cimal sera cod\u00e9 de la mani\u00e8re suivante: signe | exposant \\(e\\) | partie fractionnaire \\(f\\) </p> pr\u00e9cision exposant \\(e\\) partie frac. \\(f\\) expression de la valeur en d\u00e9cimal 32 bits 8 bits 23 bits \\((-1)^s\\times (1+f)\\times 2^{e-127}\\) 64 bits 11 bits 52 bits \\((-1)^s\\times (1+f)\\times 2^{e-1023}\\) <p>En marge du programme</p> <p>D'apr\u00e8s le programme officiel aucune connaissance pr\u00e9cise de la norme IEEE754 n'est exigible. Les deux exemples qui suivent compl\u00e8tent le cours (notamment pour les plus curieux) mais ne feront pas l'objet d'\u00e9valuation.</p>"},{"location":"NSI1/S3/S3C3.html#exemple-de-conversion-decimal-flottant","title":"Exemple de conversion d\u00e9cimal - flottant","text":"<p>Soit \u00e0 convertir \\(N=17,25\\) en flottant, format simple pr\u00e9cision. Il s'agit de touver les trois composantes \\(s,e \\mbox{ et}f\\) de la repr\u00e9sentation en virgule flottante.  </p> <p>Signe Le nombre est positif donc \\(s=0\\).  </p> <p>Mantisse et code de l'exposant En virgule fixe on a \\(N=10001,01\\). Apr\u00e8s d\u00e9calage de la virgule de 4 rangs vers la gauche (cela revient \u00e0 multiplier par \\(2^4\\)), on obtient:  </p> \\[ N=1,000101 \\times 2^4\\] <p>On a fait appara\u00eetre la partie fractionnaire \\(f=000101\\) soit, sur 23 bits, \\(f=00010100\\ 00000000\\ 0000000\\). L'exposant r\u00e9el est \\(n=4\\). La valeur cod\u00e9e \\(e\\) sera:  </p> \\[ n=e - 127 = 4 \\iff e=131=10000011_2\\] <p>Ecriture selon la norme IEEE754 simple pr\u00e9cision </p> \\[N= 0\\ 10000011\\ 00010100 00000000 0000000\\]"},{"location":"NSI1/S3/S3C3.html#exemple-de-conversion-flottant-decimal","title":"Exemple de conversion flottant - d\u00e9cimal","text":"<p>Soit \u00e0 convertir \\(1\\ 10000110\\ 10101101100000000000000\\) Signe \\(s=(-1)^1=-1\\);  </p> <p>Exposant En simple pr\u00e9cision, \\(n=e-127\\). Or on peut lire \\(e=10000110_2 = 134_{10}\\); on a donc \\(n=134-127=7\\).  </p> <p>Mantisse \\(m=1+f\\) avec \\(f=2^{-1}+2^{-3}+2^{-5}+2^{-6}+2^{-8}+2^{-9}\\), soit \\(m=1,677734375\\).  </p> <p>Finalement, ce nombre vaut en d\u00e9cimal:</p> \\[-1,677734375\\times 2^7=-214,75\\]"},{"location":"NSI1/S3/S3C3.html#cas-particuliers","title":"Cas particuliers","text":"<p>Lorsque tous les bits sont \u00e0 z\u00e9ros, cela correspond \u00e0 la valeur z\u00e9ro. Lorsque tous les bits de l'exposant sont \u00e0 1 et que la partie fractionnaire est nulle, cela correspond \u00e0 l'infini (plus ou moins, cela d\u00e9pend du bit de signe). Enfin, pour les nombres tr\u00e8s petits (inf\u00e9rieurs \u00e0 \\(2^{-126}\\)) il existe une forme d\u00e9normalis\u00e9e, qui ne sera pas \u00e9tudi\u00e9e ici.</p>"},{"location":"NSI1/S3/S3C3.html#caractere-approchee-de-la-representation","title":"Caract\u00e8re approch\u00e9e de la repr\u00e9sentation","text":"Probl\u00e8meR\u00e9ponse <p>Quel constat peut-on faire concernant les repr\u00e9sentations binaires de certains nombres comme 0.2 et 0.3 par exemple ?</p> <p>En d\u00e9roulant l'algorithme propos\u00e9 \u00e0 la main, on constate rapidement que la partie fractionnaire est constitu\u00e9e d'une r\u00e9p\u00e9tition infinie du motif <code>1001</code>.</p> <p>Un ordinateur qui ne peut stocker qu'un nombre fini de chiffre, ne peut repr\u00e9senter correctement certains nombres r\u00e9els et utilise par cons\u00e9quent une valeur approch\u00e9e. Par exemple:  </p> <ul> <li><code>1.2* 3</code> donne 3.5999999999999996;</li> <li><code>0.1 + 0.2 == 0.3</code> donne False  </li> </ul> <p>Par ailleurs, des propri\u00e9t\u00e9s comme l'associativit\u00e9 de l'addition ne sont plus valables</p> <pre><code>1.6 +(3.2 + 1.7)\n</code></pre> <pre><code>6.5\n</code></pre> <pre><code>(1.6 + 3.2) + 1.7\n</code></pre> <pre><code>6.500000000000001\n</code></pre> <p>CONSEQUENCE IMPORTANTE</p> <p>Il faut \u00e9viter de tester l'\u00e9galit\u00e9 entre deux nombres flottants.</p> <p>A retenir</p> <p>Les nombres flottants sont une repr\u00e9sentation approximatives des nombres r\u00e9els dans les ordinateurs. Une norme internationale IEEE754 d\u00e9finit un encodage en simple ou double pr\u00e9cision (32 ou 64 bits). Les op\u00e9rations arithm\u00e9tiques sur les nombres flottants n'ont pas toujours les m\u00eames propri\u00e9t\u00e9s que ces m\u00eames op\u00e9rations sur les nombres r\u00e9els.</p>"},{"location":"NSI1/S3/S3E1.html","title":"S\u00e9quence 3 - exercices","text":""},{"location":"NSI1/S3/S3E1.html#exercice-1-codage-dune-information-numerique","title":"Exercice 1 - Codage d'une information num\u00e9rique","text":"<ul> <li>Citer un syst\u00e8me qui n\u00e9cessite un bit pour coder son information.  </li> <li>Combien de bits sont n\u00e9cessaires pour distinguer les 4 familles d'un jeu de cartes? </li> <li>Combien de bits sont n\u00e9cessaires pour distinguer les 26 lettres de l'alphabet ?  </li> <li>Justifier le fait qu'\u00e0 l'origine 7 bits \u00e9taient suffisants pour coder du texte (en anglais!)</li> </ul>"},{"location":"NSI1/S3/S3E1.html#exercice-2-manipuler-les-bases-2-10-et-16","title":"Exercice 2 - Manipuler les bases 2, 10 et 16","text":"<p>Compl\u00e9ter le tableau suivant:  </p> Base Valeur Valeur Valeur Base 10 16 Base 2 0110 1101 Base 16 44"},{"location":"NSI1/S3/S3E1.html#exercice-3-adresse-ipv6","title":"Exercice 3 - Adresse IPv6","text":"<p>Une adresse IPv6 est compos\u00e9e de 8 champs de 4 valeurs hexad\u00e9cimales, d\u00e9limit\u00e9es par des <code>:</code> pour la rendre plus lisible. Par exemple, l'adresse IPv6 de <code>facebook.com</code> est <code>2a03:2880:f130:83:face:b00c:0:25de</code>.  </p> <p>Calculer le nombre de bits n\u00e9cessaire pour \u00e9crire une adresse IPv6 en binaire.</p>"},{"location":"NSI1/S3/S3E1.html#exercice-4-bug-2038","title":"Exercice 4 - Bug 2038","text":"<p>Les machines UNIX suivent la norme IEEE 1003 (ou norme POSIX) qui sp\u00e9cifie, entre autres, que le temps est compt\u00e9 en secondes \u00e0 partir du 1er janvier 1970 \u00e0 00:00:00 temps universel.  </p> <p>De nombreux syst\u00e8mes de fichiers codent ce temps par un entier sign\u00e9 sur 32 bits. Expliquer pourquoi ces syst\u00e8mes pourraient conna\u00eetre un bug en 2038. Indice: un entier sign\u00e9 a un bit r\u00e9serv\u00e9 pour le signe.</p>"},{"location":"NSI1/S3/S3R1.html","title":"L'ESSENTIEL DE LA SEQUENCE 3","text":""},{"location":"NSI1/S3/S3R1.html#ce-quil-faut-savoir","title":"Ce qu\u2019il faut savoir","text":"<ul> <li> <p>en base 10 nous avons 10 symboles (chiffres) : 0, 1, 2, 3, 4, 5\u2026.9</p> </li> <li> <p>en base 2 (binaire) nous avons 2 symboles (chiffres) : 0 et 1</p> </li> <li> <p>en base 16 (hexad\u00e9cimal) nous avons 16 symboles : 0, 1, 2\u2026.8, 9, A, B, C, D, E, F</p> </li> <li> <p>il serait judicieux de conna\u00eetre par coeur (ou au moins \u00eatre capable de les retrouver rapidement) les nombres jusqu\u2019\u00e0 15 :  </p> </li> </ul> <p></p> <ul> <li> <p>on peut coder \\(2^n\\) valeurs avec \\(n\\) bits</p> </li> <li> <p>conna\u00eetre le principe du compl\u00e9ment \u00e0 2 (voir cours)</p> </li> <li> <p>savoir que pour une repr\u00e9sentation sur \\(n\\) bits, il sera possible de coder des valeurs comprises entre \\(-2^{n-1}\\) et \\(+2^{n-1}- 1\\).</p> </li> <li> <p>la repr\u00e9sentation en machine des nombres r\u00e9els (on parle souvent en informatique de nombres flottants ou nombre \u00e0 virgule flottante) diff\u00e8re de la repr\u00e9sentation en machine des entiers</p> </li> <li> <p>la norme IEEE 754 est la norme la plus employ\u00e9e pour la repr\u00e9sentation des nombres \u00e0 virgule flottante dans le domaine informatique.</p> </li> <li> <p>il existe 2 formats associ\u00e9s \u00e0 la norme IEEE 754 : le format simple pr\u00e9cision (le nombre est repr\u00e9sent\u00e9 sur 32 bits) et le format double pr\u00e9cision (le nombre est repr\u00e9sent\u00e9 sur 64 bits)</p> </li> <li> <p>que cela soit en simple pr\u00e9cision ou en double pr\u00e9cision, la norme IEEE754 utilise :</p> <ul> <li> <p>1 bit de signe (1 si le nombre est n\u00e9gatif et 0 si le nombre est positif)</p> </li> <li> <p>des bits consacr\u00e9s \u00e0 l'exposant (8 bits pour la simple pr\u00e9cision et 11 bits pour la double pr\u00e9cision)</p> </li> <li> <p>des bits consacr\u00e9s \u00e0 la mantisse (23 bits pour la simple pr\u00e9cision et 52 bits pour la double pr\u00e9cision)</p> </li> </ul> </li> <li> <p>\u00e0 cause de la taille fixe de la mantisse on peut, dans certains cas, avoir des erreurs d\u2019arrondies, par exemple 0.1 + 0.2 n\u2019est pas \u00e9gal \u00e0 0.3. On \u00e9vitera de tester l\u2019\u00e9galit\u00e9 entre 2 flottants (par exemple <code>0.1 + 0.2 == 0.3</code> renvoie <code>False</code> en python!)</p> </li> </ul>"},{"location":"NSI1/S3/S3R1.html#ce-quil-faut-savoir-faire","title":"Ce qu\u2019il faut savoir faire","text":"<ul> <li>convertir d\u00e9cimal vers binaire</li> <li>convertir binaire vers d\u00e9cimal</li> <li>convertir d\u00e9cimal vers hexad\u00e9cimal</li> <li>convertir hexad\u00e9cimal vers d\u00e9cimal</li> <li>convertir binaire vers hexad\u00e9cimal</li> <li> <p>convertir hexad\u00e9cimal vers binaire</p> </li> <li> <p>Vous devez savoir repr\u00e9senter un entier (positif ou n\u00e9gatif) en utilisant le compl\u00e9ment \u00e0 2 sur \\(n\\) bits (repr\u00e9sentation binaire \\(\\longrightarrow\\) repr\u00e9sentation d\u00e9cimale et repr\u00e9sentation d\u00e9cimale \\(\\longrightarrow\\) repr\u00e9sentation binaire).</p> </li> <li> <p>vous devez \u00eatre capable de trouver la repr\u00e9sentation en binaire d\u2019un nombre r\u00e9el (par exemple 0.1, 0.25 ou encore 1/3)</p> </li> <li>vous n\u2019avez pas \u00e0 savoir \u00e9crire un nombre flottant en utilisant la norme IEEE754, vous devez juste connaitre les grands principes de cette norme (bit de signe, exposant, mantisse)</li> </ul>"},{"location":"NSI1/S3/S3TP1.html","title":"Travailler en base 2, 10 ou 16 - Applications","text":""},{"location":"NSI1/S3/S3TP1.html#manipulations-binaires-en-python","title":"Manipulations binaires en python","text":""},{"location":"NSI1/S3/S3TP1.html#preambule-types-natifs","title":"Pr\u00e9ambule: types natifs","text":"<p>Python poss\u00e8de trois types d'objets num\u00e9riques natifs, parmi lesquels on peux citer le type <code>int</code> (integer) pour manipuler les entiers relatifs  et le type <code>float</code> pour manipuler les nombres d\u00e9cimaux \u00e0 virgule flottante. Pour manipuler les cha\u00eenes de caract\u00e8res, on dispose du type <code>str</code> (string). Ces derni\u00e8res sont d\u00e9clar\u00e9es en \u00e9tant entour\u00e9es de double quotes <code>\" \"</code> ou de simples quotes <code>' '</code>  (s'il n'y a pas d'ambiguit\u00e9s avec l'apostrophe). Par exemple </p> <pre><code>mavariable = \"programmation\"\n</code></pre> <p>Pour acc\u00e9der au type d'un objet <code>obj</code>on utilise la fonction native <code>type()</code> sur cet objet:  </p> <pre><code>type(obj)\n</code></pre> <p>\u00c0 faire</p> <p>Donner le type des objets suivants: 11, 11.0 et \"11\". Repr\u00e9sentent-ils le m\u00eame objet ?</p>"},{"location":"NSI1/S3/S3TP1.html#convertisseur-decimal-binaire","title":"Convertisseur decimal binaire","text":"<p>Python poss\u00e8de une fonction native qui permet la conversion d'un entier en binaire: la fonction <code>bin()</code>.  </p> <pre><code>bin(77)\n</code></pre> <pre><code>'0b1001101'\n</code></pre> <p>On constate que le r\u00e9sultat est:  </p> <ul> <li>une cha\u00eene de caract\u00e8res;</li> <li>pr\u00e9fix\u00e9 des caract\u00e8res <code>0b</code> pour indiquer du binaire.  </li> </ul> <p>On se propose d'\u00e9crire ici notre propre fonction de conversion en python, en suivant l'algorithme \u00e9crit en pseudo-code ci-apr\u00e8s.  </p> <p>Dans cet algorithme, l'affectation est not\u00e9e \\(\\leftarrow\\) (fl\u00eache gauche) et la chaine de caract\u00e8res vide <code>\"\"</code>. Par ailleurs, en python:  </p> <ul> <li>le reste <code>r</code> de la division d'un entier naturel \\(a\\) par un entier naturel \\(b\\) est obtenu par <code>r = a % b</code>; </li> <li>le quotient <code>q</code> de la division euclidienne de \\(a\\) par \\(b\\) s'obtient par <code>q = a // b</code>;</li> <li>la transformation d'un nombre \\(x\\) en chaine de caract\u00e8res <code>\"x\"</code> est r\u00e9alis\u00e9e par <code>str(x)</code>.  </li> </ul> <pre><code># R\u00e9aliser des divisions euclidiennes en python\na = 17\nb = 2\nq = a // b\nr = a % b\nprint(\"quotient:\", q, \", reste:\", r)\nprint(\"concat\u00e9nation de 'r' et '00':\", str(r) + '00')\n</code></pre> <pre><code>quotient: 8 , reste: 1\nconcat\u00e9nation de 'r' et '00': 100\n</code></pre> <p>\u00c0 faire</p> <ul> <li>En utilisant l'algorithme 1, \u00e9crire une fonction <code>dec2bin</code> qui prend en param\u00e8tre un entier naturel <code>n</code> et qui renvoit la repr\u00e9sentation binaire de <code>n</code> sous la forme d'une chaine de caract\u00e8res.</li> <li>Bonus \u00c9crire une fonction <code>convertir_sur_16_bits</code> qui prend en param\u00e8tre un entier n et qui renvoit sa d\u00e9composition binaire \u00e9crite sur 16 bits. Il faudra donc rajouter, si besoin, des z\u00e9ros.  </li> </ul> <p>Indication</p> <p>R\u00e9utiliser la fonction pr\u00e9c\u00e9dente.</p> ### Lancer assert dec2bin(0) == '0'bksl-nlassert dec2bin(255) == '11111111'bksl-nlassert dec2bin(127) == '1111111'bksl-nl Valider 25/25 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>def dec2bin(n):bksl-nl    \"\"\"bksl-nl    Renvoie une cha\u00eene correspondant \u00e0 la repr\u00e9sentation binaire de l'entier n.bksl-nl    \"\"\"bksl-nl    result = ''bksl-nl    # \u00c0 compl\u00e9terbksl-nl    return resultbksl-nldef dec2bin(n):bksl-nl    \"\"\"bksl-nl    Renvoie une cha\u00eene correspondant \u00e0 la repr\u00e9sentation binaire de l'entier n.bksl-nl    \"\"\"bksl-nl    result = ''bksl-nl    quotient = nbksl-nl    if quotient == 0:bksl-nl        result = '0'bksl-nl    else:bksl-nl        while quotient != 0:bksl-nl            result = str(quotient % 2) + resultbksl-nl            quotient = quotient // 2bksl-nl    return resultbksl-nl</p> <p>A</p> <p>Z</p>"},{"location":"NSI1/S3/S3TP1.html#bonus","title":"Bonus","text":"### Lancer assert convertirpy-undsurpy-und16py-undbits(0) == '0000000000000000'bksl-nlassert convertirpy-undsurpy-und16py-undbits(2py-strpy-str16 - 1) == '1111111111111111'bksl-nlassert convertirpy-undsurpy-und16py-undbits(256) == '0000000100000000'bksl-nl Valider 25/25 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>def convertirpy-undsurpy-und16py-undbits(n):bksl-nl    \"\"\"bksl-nl    Renvoie la conversion binaire de n sur 16 bitsbksl-nl    \"\"\"bksl-nl    assert n &lt; 2py-strpy-str16, \"Erreur: n n\u00e9cessite plus de 16 bits\"bksl-nl    bksl-nl    # \u00c0 compl\u00e9ter    bksl-nldef convertirpy-undsurpy-und16py-undbits(n):bksl-nl    \"\"\"bksl-nl    Renvoie la conversion binaire de n sur 16 bitsbksl-nl    \"\"\"bksl-nl    assert n &lt; 2py-strpy-str16, \"Erreur: n n\u00e9cessite plus de 16 bits\"bksl-nl    bksl-nl    result = dec2bin(n)bksl-nl    k = 16 - len(result) # nb de z\u00e9ros \u00e0 ajouterbksl-nl    for i in range(k):bksl-nl        result = '0' + resultbksl-nl    return result    bksl-nl</p> <p>A</p> <p>Z</p>"},{"location":"NSI1/S3/S3TP1.html#application-de-la-numeration-hexadecimale","title":"Application de la num\u00e9ration hexad\u00e9cimale","text":""},{"location":"NSI1/S3/S3TP1.html#introduction","title":"Introduction","text":"<p>Quelque soit leur type, les fichiers sont stock\u00e9s en machine sous forme binaire. Celle-ci est peu pratique la plupart du temps. On lui pr\u00e9f\u00e8re la forme hexad\u00e9cimale. Le fichier de travail est un fichier image \u00e0 t\u00e9l\u00e9charger ici. </p> <p>\u00c0 faire</p> <ul> <li>On peut utiliser un outil en ligne de commande: <code>Hexdump</code> pour visualiser le contenu en hexad\u00e9cimal d'un fichier.  Apr\u00e8s voir consult\u00e9 la documentation en annexe, dans un terminal (Ctrl\uff0bAlt\uff0bT), saisir la commande <code>hexdump -C -n 64 logo.bmp</code> qui affiche les 64 premiers octets du fichier <code>logo.bmp</code> en hexad\u00e9cimal. On s'int\u00e9ressera uniquement \u00e0 la colonne centrale o\u00f9 chaque ligne repr\u00e9sente 16 octets.</li> <li>Donner la valeur des 6 premiers octets.</li> <li>On peut aussi convertir un nombre hexad\u00e9cimal en d\u00e9cimal via la ligne de commande en prenant soin de le pr\u00e9fix\u00e9 par <code>0x</code>. Exemple de syntaxe: <code>echo $((0x7F))</code> qui donne 127. Convertir le nombre h\u00e9xad\u00e9cimal <code>B104</code> en d\u00e9cimal.</li> </ul>"},{"location":"NSI1/S3/S3TP1.html#notion-de-boutisme-endianness-en-anglais","title":"Notion de boutisme (endianness en anglais)","text":"<p>Pour une donn\u00e9e qui occupent au moins deux octets, la question de sa repr\u00e9sentation en m\u00e9moire (on dit aussi de son boutisme) se pose. En effet, on a deux possibilit\u00e9s pour l'\u00e9crire:  </p> <ul> <li>de l'octet de poids fort vers l'octet de poids faible; c'est la repr\u00e9sentation gros-boutisme ou big-endian;</li> <li>de l'octet de poids faible vers l'octet de poids fort; c'est la repr\u00e9sentation petit-boutisme ou little-endian;</li> </ul> <p>Le choix du boutisme est typiquement fix\u00e9 par l'architecture du processeur ou le protocole. Pour ce TP, au lyc\u00e9e, c'est la repr\u00e9sentation little-endian qui pr\u00e9vaut.  </p> <p>Exemple Le nombre hexad\u00e9cimal <code>0x1A597C</code> occupe trois octets, <code>1A</code> est l'octet de poids fort et <code>7C</code> l'octet de poids faible. Sur une architecture little-endian ce nombre sera repr\u00e9sent\u00e9 par <code>7C 59 1A</code>.  </p> <p>\u00c0 faire</p> <ul> <li>Saisir la commande <code>hexdump -C -n 14 logo.bmp</code> qui affiche les 14 premiers octets du fichier. Relever les 4 octets allant du n\u00b02 au n\u00b05;</li> </ul> <p>Num\u00e9rotation des octets</p> <p>Attention, on compte \u00e0 partir de 0.</p> <ul> <li>Sachant que c'est la repr\u00e9sentation little-endian qui est utilis\u00e9e, quel est le nombre hexad\u00e9cimal correspondant ?</li> </ul>"},{"location":"NSI1/S3/S3TP1.html#caracteristiques-dune-image-au-format-bmp","title":"Caract\u00e9ristiques d'une image au format BMP","text":"<p>Les fichiers images au format BMP sont bien document\u00e9s. On peut aisemment consulter les informations avec un \u00e9diteur hexadecimal. Dans ce TP, ce sera <code>Hexdump</code>.</p>"},{"location":"NSI1/S3/S3TP1.html#exploitation-de-lentete-bitmap-file-header","title":"Exploitation de l'ent\u00eate Bitmap File Header","text":"<p>Les 2 premiers octets servent \u00e0 identifier le fichier. Pour une image BMP, on doit avoir <code>B</code> et <code>M</code> soit <code>42</code> et <code>4D</code> en hexad\u00e9cimal.  </p> <p>Les 4 octets suivants nous donnent la taille du fichier, en hexad\u00e9cimal.  </p> <p>\u00c0 faire</p> <ul> <li>Consulter la documentation en annexe sur l'organisation d'un fichier image <code>BMP</code>;</li> <li>En utilisant <code>hexdump</code> et compte tenu du boutisme, donner la commande qui permet d'avoir la taille du fichier et uniquement celle-ci, en hexad\u00e9cimal. Convertir cette valeur en d\u00e9cimal. Est-ce coh\u00e9rent avec la valeur fourni par la commande <code>ls -l</code>?</li> </ul>"},{"location":"NSI1/S3/S3TP1.html#exploitation-de-lentete-dib-header","title":"Exploitation de l'ent\u00eate DIB Header","text":"<p>On se r\u00e9f\u00e8re toujours \u00e0 la documention du format BMP fournie en annexe (qui est disponible sur en version compl\u00e8te sur wikipedia). Sur le sch\u00e9ma propos\u00e9, la taille d'une cellule est de 4 octets. </p> <p>\u00c0 faire</p> <p>\u00c0 partir des informations extraites de l'ent\u00eate DIB Header:</p> <ul> <li>donner la valeur en hexad\u00e9cimal et en d\u00e9cimal de la largeur (en anglais width) de l'image;</li> <li>donner la valeur en hexad\u00e9cimal et en d\u00e9cimal de la hauteur (en anglais height) de l'image;</li> <li>dire si l'image est compress\u00e9e ou non. Justifier en donnant la valeur d'octets bien particuliers.</li> </ul>"},{"location":"NSI1/S3/S3TP1An.html","title":"Annexe - Documentations","text":""},{"location":"NSI1/S3/S3TP1An.html#hexdump","title":"Hexdump","text":"<pre><code>HEXDUMP(1)                              BSD General Commands Manual                             HEXDUMP(1)\n\nNAME\n     hexdump, hd \u2014 ASCII, decimal, hexadecimal, octal dump\n\nSYNOPSIS\n     hexdump [-bcCdovx] [-e format_string] [-f format_file] [-n length] [-s offset] file ...\n     hd [-bcdovx] [-e format_string] [-f format_file] [-n length] [-s offset] file ...\n\nDESCRIPTION\n     The hexdump utility is a filter which displays the specified files, or the standard input, if no\n     files are specified, in a user specified format.\n\n     The options are as follows:\n\n     -b      One-byte octal display.  Display the input offset in hexadecimal, followed by sixteen space-\n             separated, three column, zero-filled, bytes of input data, in octal, per line.\n\n     -c      One-byte character display.  Display the input offset in hexadecimal, followed by sixteen\n             space-separated, three column, space-filled, characters of input data per line.\n\n     -C      Canonical hex+ASCII display.  Display the input offset in hexadecimal, followed by sixteen\n             space-separated, two column, hexadecimal bytes, followed by the same sixteen bytes in %_p\n             format enclosed in ``|'' characters.\n\n             Calling the command hd implies this option.\n\n     -d      Two-byte decimal display.  Display the input offset in hexadecimal, followed by eight space-\n             separated, five column, zero-filled, two-byte units of input data, in unsigned decimal, per\n             line.\n\n     -e format_string\n             Specify a format string to be used for displaying data.\n\n     -f format_file\n             Specify a file that contains one or more newline separated format strings.  Empty lines and\n             lines whose first non-blank character is a hash mark (#) are ignored.\n\n     -n length\n             Interpret only length bytes of input.\n\n     -o      Two-byte octal display.  Display the input offset in hexadecimal, followed by eight space-\n             separated, six column, zero-filled, two byte quantities of input data, in octal, per line.\n\n     -s offset\n             Skip offset bytes from the beginning of the input.  By default, offset is interpreted as a\n             decimal number.  With a leading 0x or 0X, offset is interpreted as a hexadecimal number, oth\u2010\n             erwise, with a leading 0, offset is interpreted as an octal number.  Appending the character\n             b, k, or m to offset causes it to be interpreted as a multiple of 512, 1024, or 1048576, re\u2010\n</code></pre>"},{"location":"NSI1/S3/S3TP1An.html#le-format-bmp","title":"Le format BMP","text":"<p>Cr\u00e9dit: By Vectorization: Alhadis - Own work based on: BMPfileFormat.png\u00a0by Verpies, Public Domain</p>"},{"location":"NSI1/S4/S4A1.html","title":"ACTIVITE 1","text":""},{"location":"NSI1/S4/S4A1.html#simulations-logiques","title":"Simulations logiques","text":""},{"location":"NSI1/S4/S4A1.html#operateurs-and-or-et-not","title":"Op\u00e9rateurs and, or et not","text":"<p>A faire</p> <p>Simuler les op\u00e9rations logiques <code>and</code>, <code>or</code> et <code>not</code>. \u00c9tablir leur table de v\u00e9rit\u00e9.  </p> <p> </p>"},{"location":"NSI1/S4/S4A1.html#lois-de-de-morgan","title":"Lois de De Morgan","text":"<ol> <li>Dresser la table de v\u00e9rit\u00e9 de l'expression <code>not (A or B)</code>;</li> <li>V\u00e9rifier les r\u00e9sultats par simulation;</li> <li>Proposer une expression \u00e9quivalente;</li> <li>Reprendre les questions 1, 2 et 3 avec l'expression <code>not (A and B)</code></li> </ol>"},{"location":"NSI1/S4/S4A1.html#une-operation-logique-tres-utilisee","title":"Une op\u00e9ration logique tr\u00e8s utilis\u00e9e","text":"<p>Soit le circuit <code>dilemme</code> suivant:  </p> <p> </p> <p>R\u00e9aliser la simulation. \u00c9tablir et commenter sa table de v\u00e9rit\u00e9. Cette op\u00e9ration tr\u00e8s utilis\u00e9e a pour symbole (US):  </p> <p></p>"},{"location":"NSI1/S4/S4A1.html#addition-binaire","title":"Addition binaire","text":""},{"location":"NSI1/S4/S4A1.html#demi-additionneur","title":"Demi additionneur","text":"<p>Le demi additionneur est un circuit combinatoire qui permet de r\u00e9aliser la somme arithm\u00e9tique de deux nombres A et B chacun sur un bit.  </p> <p> </p> <p>A la sortie on va avoir la somme S et une \u00e9ventuelle retenue R.  </p> <ol> <li>Simuler et dresser alors la table de v\u00e9rit\u00e9 de ce circuit.</li> <li>En d\u00e9duire la table d'addition binaire.</li> <li>*** Sauriez-vous trouver l'expression bool\u00e9enne de la sortie S et de la retenue R?</li> </ol>"},{"location":"NSI1/S4/S4A1.html#additionneur-complet","title":"Additionneur complet","text":"<p>Lorsqu'on souhaite effectuer l'addition binaire sur un bit de deux nombres \\(A_i\\) et \\(B_i\\), il faut tenir compte d'une \u00e9ventuelle retenue \\(R_{i-1}\\) provenant du calcul du rang pr\u00e9c\u00e9dent. On a alors un additionneur complet, qui est r\u00e9alis\u00e9 avec deux demi-additionneurs.  </p> <p> </p> <p>A la sortie on va avoir la somme \\(S_i\\) et une \u00e9ventuelle retenue \\(R_i\\). Simuler et dresser la table de v\u00e9rit\u00e9 de l'additionneur complet.</p>"},{"location":"NSI1/S4/S4A2.html","title":"S\u00e9quence d'instructions en langage machine","text":""},{"location":"NSI1/S4/S4A2.html#format-dune-instruction","title":"Format d'une instruction","text":"<p>Un mot extrait depuis la m\u00e9moire repr\u00e9sente un ordre donn\u00e9 au processeur. Il se pr\u00e9sente sous la forme d'une chaine binaire de \\(p\\) bits (typiquement \\(p=32\\) ou \\(64\\) bits), compos\u00e9e de deux parties.  </p> <p>Pour s'affranchir des codes binaires et des calculs d'adresse le programmeur utilise plut\u00f4t un langage d'assemblage o\u00f9 les instructions binaires sont remplac\u00e9s par une chaine de caract\u00e8res mn\u00e9moniques. En effet, <code>MOV R0,#127</code> est un peu plus explicite que <code>11100011\u200910100000\u200900000000\u200901111111</code> !  </p> <p>Un programme appel\u00e9 assembleur r\u00e9alisera ensuite le passage vers le code binaire.  </p> Compl\u00e9ment <p>Les instructions du langage machine peuvent \u00eatre rang\u00e9es dans six cat\u00e9gories: calcul, transfert,  entr\u00e9es/sorties, saut, appel de sous programme, instructions particuli\u00e8res (arr\u00eat par exemple).  </p> <p>L'ensemble des codes op\u00e9ration reconnu par un processeur s'appelle son jeu d'instructions.</p> <p>Il n'est pas question dans cette activit\u00e9 de d\u00e9tailler un quelconque jeu d'instructions, ni les subtilit\u00e9s de son utilisation. Il s'agit plut\u00f4t de pr\u00e9senter quelques s\u00e9quences simples. </p>"},{"location":"NSI1/S4/S4A2.html#premiers-pas-avec-un-langage-dassemblage","title":"Premiers pas avec un langage d'assemblage","text":"<p>Dans les exemples qui suivront le jeu d'instructions minimaliste utilis\u00e9 (voisin de celui des processeurs ARM) peut \u00eatre trouv\u00e9 ici.</p> <p>A faire</p> <p>R\u00e9alisez l'activit\u00e9 ci-dessous et dont la version originale peut \u00eatre trouv\u00e9e \u00e0  cette adresse.</p> <p>Afin de mettre en pratique ce que nous avons \u00e9tudi\u00e9 dans le cours 2 \"Architecture des ordinateurs - Mod\u00e8le de von Neumann\", nous allons utiliser un simulateur d\u00e9velopp\u00e9 par Peter L Higginson. Ce simulateur est bas\u00e9 sur une architecture de von Neumann. Nous allons trouver dans ce simulateur :</p> <ul> <li> <p>une RAM</p> </li> <li> <p>un CPU</p> </li> </ul> <p>Une version en ligne de ce simulateur est disponible ici :  http://www.peterhigginson.co.uk/AQA/</p> <p>Voici ce que vous devriez obtenir en vous rendant \u00e0 l'adresse indiqu\u00e9e ci-dessus :</p> <p>Simulateur d\u00e9velopp\u00e9 par Peter L Higginson</p> <p></p> <p>Il est relativement facile de distinguer les diff\u00e9rentes parties du simulateur :</p> <ul> <li> <p>\u00e0 droite, on trouve la m\u00e9moire vive (\"main memory\") au centre, on trouve le microprocesseur</p> </li> <li> <p>\u00e0 gauche on trouve la zone d'\u00e9dition (\"Assembly Language\"), c'est dans cette zone que nous allons saisir nos programmes en assembleur</p> </li> </ul> <p>Revenons sur les parties RAM et CPU</p>"},{"location":"NSI1/S4/S4A2.html#la-ram","title":"La RAM","text":"<p>Par d\u00e9faut le contenu des diff\u00e9rentes cellules de la m\u00e9moire est en base 10 (entier sign\u00e9), mais d'autres options sont possibles : base 10 (entier non-sign\u00e9, \"unsigned\"), base 16 (\"hex\"), base 2 (\"binary\"). On acc\u00e8de \u00e0 ces options \u00e0 l'aide du bouton \"OPTIONS\" situ\u00e9 en bas dans la partie gauche du simulateur.</p>"},{"location":"NSI1/S4/S4A2.html#activite-91","title":"activit\u00e9 9.1","text":"<p>A faire</p> <p>\u00c0 l'aide du bouton \"OPTIONS\", passez \u00e0 un affichage en binaire.</p> <p>Comme vous pouvez le constater, chaque cellule de la m\u00e9moire comporte 32 bits (nous avons vu que classiquement une cellule de RAM comporte 8 bits). Chaque cellule de la m\u00e9moire poss\u00e8de une adresse (de 000 \u00e0 199), ces adresses sont cod\u00e9es en base 10.</p> <p>A faire</p> <p>Vous pouvez repasser \u00e0 un affichage en base 10 (bouton \"OPTION\"-&gt;\"signed\")</p>"},{"location":"NSI1/S4/S4A2.html#le-cpu","title":"Le CPU","text":"<p>Dans la partie centrale du simulateur, nous allons trouver en allant du haut vers le bas :</p> <ul> <li>le bloc \"registre\" (\"Registers\") : nous avons 13 registres (R0 \u00e0 R12) + 1 registre (PC) qui contient l'adresse m\u00e9moire de l'instruction en court d'ex\u00e9cution;</li> <li>le bloc \"unit\u00e9 de commande\" (\"Control Unit\") qui contient l'instruction machine en cours d'ex\u00e9cution (au format hexad\u00e9cimal)</li> <li>le bloc \"unit\u00e9 arithm\u00e9tique et logique\" (\"Arithmetic and Logic Unit\")</li> </ul> <p>Nous ne nous int\u00e9resserons pas aux autres composants de la partie CPU</p>"},{"location":"NSI1/S4/S4A2.html#programmer-en-langage-dassemblage","title":"Programmer en langage d'assemblage.","text":""},{"location":"NSI1/S4/S4A2.html#activite-92","title":"activit\u00e9 9.2","text":"<p>A faire</p> <p>Dans la partie \"\u00e9diteur\" (\"Assembly Language\") saisissez les lignes de codes ci-dessous.</p> <pre><code>MOV R0,#42\nSTR R0,150\nHALT\n</code></pre> <p>A faire</p> <p>Une fois la saisie termin\u00e9e, cliquez sur le bouton \"submit\". Vous devriez voir apparaitre des nombres  \"\u00e9tranges\" dans les cellules m\u00e9moires d'adresses 000, 001 et 002 :</p> <p></p> <p>L'assembleur a fait son travail, il a converti les 3 lignes de notre programme en instructions machines, la premi\u00e8re instruction machine est stock\u00e9e \u00e0 l'adresse m\u00e9moire 000 (elle correspond \u00e0 <code>MOV R0,#42</code> en assembleur), la deuxi\u00e8me \u00e0 l'adresse 001 (elle correspond \u00e0 <code>STR R0,150</code> en assembleur) et la troisi\u00e8me \u00e0 l'adresse 002 (elle correspond \u00e0 <code>HALT</code> en langage d'assemblage). </p> <p>A faire</p> <p>Pour avoir une id\u00e9e des v\u00e9ritables instructions machines, vous devez repasser \u00e0 un affichage en binaire  (bouton \"OPTION\"-&gt;\"binary\"). Vous devriez obtenir ceci :</p> <p></p> <p>Nous pouvons donc maintenant affirmer que :</p> <ul> <li>l'instruction machine <code>11100011\u200910100000\u200900000000\u200900101010</code> correspond au code assembleur <code>MOV R0,#42</code></li> <li>l'instruction machine <code>11100101\u200910001111\u200900000010\u200901001100</code> correspond au code assembleur <code>STR R0,150</code></li> <li>l'instruction machine <code>11101111\u200900000000\u200900000000\u200900000000</code> correspond au code assembleur <code>HALT</code></li> </ul> <p>Au passage, pour l'instruction machine <code>11100011\u200910100000\u200900000000\u200900101010</code>, vous pouvez remarquer que l'octet le plus \u00e0 droite, \\(00101010_2\\), est bien \u00e9gale \u00e0 \\(42_{10}\\)!</p> <p>A faire</p> <p>Repassez \u00e0 un affichage en base 10 afin de faciliter la lecture des donn\u00e9es pr\u00e9sentes en m\u00e9moire.</p>"},{"location":"NSI1/S4/S4A2.html#activite-93","title":"activit\u00e9 9.3","text":"<p>A faire</p> <p>Pour ex\u00e9cuter notre programme, il suffit maintenant de cliquer sur le bouton <code>RUN</code>. Vous allez voir le CPU  travailler en direct gr\u00e2ce \u00e0 de petites animations. Si cela va trop vite (ou trop doucement), vous pouvez r\u00e9gler la vitesse de simulation \u00e0 l'aide des  boutons <code>&lt;&lt;</code> et <code>&gt;&gt;</code>.  </p> <p>Un appui sur le bouton <code>STOP</code> met en pause la simulation, si vous rappuyez une  deuxi\u00e8me fois sur ce m\u00eame bouton <code>STOP</code>, la simulation reprend l\u00e0 o\u00f9 elle s'\u00e9tait arr\u00eat\u00e9e.</p> <p>Une fois la simulation termin\u00e9e, vous pouvez constater que la cellule m\u00e9moire d'adresse 150, contient bien  le nombre 42 (en base 10). Vous pouvez aussi constater que le registre <code>R0</code> a bien stock\u00e9 le nombre 42.</p> <p> </p> <p>ATTENTION</p> <p>Pour relancer la simulation, il est n\u00e9cessaire d'appuyer sur le bouton <code>RESET</code> afin de remettre les  registres <code>R0</code> \u00e0 <code>R12</code> \u00e0 0, ainsi que le registre <code>PC</code> (il faut que l'unit\u00e9 de commande pointe de nouveau  sur l'instruction situ\u00e9e \u00e0 l'adresse m\u00e9moire 000).  </p> <p>La m\u00e9moire n'est pas modifi\u00e9e par un appui sur le bouton <code>RESET</code>, pour remettre la m\u00e9moire \u00e0 0, il faut  cliquer sur le bouton <code>OPTIONS</code> et choisir <code>clr memory</code>. Si vous remettez votre m\u00e9moire \u00e0 0, il faudra  cliquer sur le bouton \"ASSEMBLE\" avant de pouvoir ex\u00e9cuter de nouveau votre programme.</p>"},{"location":"NSI1/S4/S4A2.html#activite-94","title":"activit\u00e9 9.4","text":"<p>A faire</p> <p>Modifiez le programme pr\u00e9c\u00e9dent pour qu'\u00e0 la fin de l'ex\u00e9cution on trouve le nombre 54 \u00e0 l'adresse m\u00e9moire  50. On utilisera le registre <code>R1</code> \u00e0 la place du registre <code>R0</code>. Testez vos modifications en ex\u00e9cutant la  simulation.</p> <p>Le simulateur prend en charge les labels.</p>"},{"location":"NSI1/S4/S4A2.html#activite-95","title":"activit\u00e9 9.5","text":"<p>A faire</p> <p>Saisissez et testez le programme suivant :</p> <pre><code>   MOV R0, #4\n   STR R0,30\n   MOV R0, #8\n   STR R0,75\n   LDR R0,30\n   CMP R0, #10\n   BNE else\n   MOV R0, #9\n   STR R0,75\n   B endif\nelse:\n   LDR R0,30\n   ADD R0, R0, #1\n   STR R0,30\nendif:\n   MOV R0, #6\n   STR R0,23\n   HALT\n</code></pre>"},{"location":"NSI1/S4/S4A2.html#activite-96","title":"activit\u00e9 9.6","text":"<p>Voici un programme Python :</p> <pre><code>x=0\nwhile x&lt;3:\n   x=x+1\n</code></pre> <p>A faire</p> <p>\u00c9crivez et testez un programme en assembleur \u00e9quivalent au programme ci-dessus.</p>"},{"location":"NSI1/S4/S4C1.html","title":"Expressions bool\u00e9ennes","text":""},{"location":"NSI1/S4/S4C1.html#reperes-historiques","title":"Rep\u00e8res historiques","text":"George Boole <p>George Boole (1815-1864): math\u00e9maticien, logicien britannique, auteur d'une alg\u00e8bre binaire dite bool\u00e9enne n'acceptant que deux valeurs 0 et 1. Voir ce lien ou celui-ci vers la pr\u00e9sentation de Marie Duflot-Kremer, chercheuse en informatique l'Universit\u00e9 de Lorraine. Aujourd'hui, l'alg\u00e8bre de Boole trouve de nombreuses applications en informatique et dans la conception des circuits \u00e9lectroniques</p>"},{"location":"NSI1/S4/S4C1.html#quelques-definitions","title":"Quelques d\u00e9finitions","text":"<p>Valeur logique (bool\u00e9enne)</p> <p>On appelle valeur logique ou valeur bool\u00e9enne toute valeur not\u00e9e par deux symboles. </p> <p>On peut utiliser par exemple un des couples de valeurs suivants : {0,1}, {vrai, faux}, {true, false} ou {ouvert, ferm\u00e9}. Exemple L'\u00e9tat d'un interrupteur a une valeur bool\u00e9enne, il peut \u00eatre ouvert ou ferm\u00e9.  </p> <p>Variable bool\u00e9enne</p> <p>Une variable bool\u00e9enne ou variable logique est une grandeur repr\u00e9sent\u00e9e par un nom et pouvant prendre des valeurs bool\u00e9ennes.  </p> <p>L'alg\u00e8bre de Boole est caract\u00e9ris\u00e9e par la donn\u00e9e:  </p> <ul> <li>de deux op\u00e9rations binaires or et and (<code>ou</code> et <code>et</code> en fran\u00e7ais, correspondant respectivement, \u00e0 la somme \"+\" et au produit \".\")  </li> <li>d'une op\u00e9ration unaire not (en fran\u00e7ais non, correspondant au compl\u00e9mentaire \\(\\bar{}\\)).  </li> </ul> <p>Ces op\u00e9rations doivent v\u00e9rifier certaines conditions qui ne seront pas expos\u00e9es ici.</p> <p>Remarque</p> <p>En math\u00e9matique on trouve les notations \\(\\lor\\) (disjonction pour le <code>ou</code>), \\(\\wedge\\) (conjonction pour  le <code>et</code>) et \\(\\lnot\\) (n\u00e9gation).  </p> <p>Expression bool\u00e9enne</p> <p>On appelle expression bool\u00e9enne, l'association de variables bool\u00e9ennes et d'op\u00e9rateur(s) bool\u00e9en(s).</p> <p>Exemple Si \\(a\\), \\(b\\) et \\(c\\) sont trois variables bool\u00e9ennes, <code>(a and b and not c) or (a and  not b and c)</code> est une expression bool\u00e9enne.  </p> <p>Remarque</p> <p>L'usage de parenth\u00e8ses am\u00e9liore la lisibilit\u00e9.</p> <p>Table de v\u00e9rit\u00e9</p> <p>Dresser la table de v\u00e9rit\u00e9 d'une expression bool\u00e9enne signifie construire une table ayant autant de  colonnes que de variables d'entr\u00e9e plus une colonne donnant le r\u00e9sultat (vrai ou faux, 0 ou 1) pour  chaque combinaison possible des variables d'entr\u00e9e.</p>"},{"location":"NSI1/S4/S4C1.html#les-operations-logiques-elementaires","title":"Les op\u00e9rations logiques \u00e9l\u00e9mentaires","text":""},{"location":"NSI1/S4/S4C1.html#les-symboles","title":"Les symboles","text":"<p>Les op\u00e9rations logiques sont r\u00e9alis\u00e9es simplement avec des circuits \u00e9lectroniques (\u00e0 base de transistors) appel\u00e9s portes logiques. Voici les symboles des portes logiques utilis\u00e9es pour les op\u00e9rations <code>and</code>, <code>or</code> et <code>not</code>.  </p> Symboles"},{"location":"NSI1/S4/S4C1.html#la-conjonction-et-logique","title":"La conjonction (\"et logique\")","text":"<p>La conjonction fait appel \u00e0 l'op\u00e9rateur logique and. Elle traduit le fait que deux expressions sont vraies simultan\u00e9ment: <code>a and b</code> est vrai si et seulement si <code>a</code> est vrai et <code>b</code> est vrai aussi.  </p> <p>Table de v\u00e9rit\u00e9 </p> a b a and b 0 0 0 0 1 0 1 0 0 1 1 1"},{"location":"NSI1/S4/S4C1.html#la-disjonction-ou-logique","title":"La disjonction (\"ou logique\")","text":"<p>La disjonction fait appel \u00e0 l'op\u00e9rateur logique or. Elle traduit le fait  qu\u2019une parmi deux expressions est vraie: <code>a or b</code> est vrai si soit <code>a</code> est vrai, soit <code>b</code> est vrai soit les deux sont vrais.  </p> <p>Table de v\u00e9rit\u00e9 </p> a b a or b 0 0 0 0 1 1 1 0 1 1 1 1"},{"location":"NSI1/S4/S4C1.html#la-negation-non-logique","title":"La n\u00e9gation (\"non logique\")","text":"<p>La n\u00e9gation fait appel \u00e0 l'op\u00e9rateur logique not. Il permet d'obtenir la valeur inverse d\u2019une valeur bool\u00e9enne.  </p> <p>Table de v\u00e9rit\u00e9</p> a not a 0 1 1 0"},{"location":"NSI1/S4/S4C1.html#expression-booleenne-en-python","title":"Expression bool\u00e9enne en python","text":"<p>Python poss\u00e8de un type de base <code>bool</code>. Les objets de ce type ne peuvent prendre que deux valeurs <code>True</code> ou <code>False</code>.  </p> <p>Les op\u00e9rateurs logiques sont not\u00e9s, sans surprise: <code>and</code>, <code>or</code> et <code>not</code>.  </p> <p>Exemples</p> <pre><code>a = 6\nb = 7\nc = 42\nprint('- a == 6:',a == 6)\nprint('- a == 7:', a == 7)\nprint('- a == 16 and b == 7:', a == 16 and b == 7)\nprint('- a == 6 or b == 67:', a == 6 or b == 67)\n</code></pre> <pre><code>- a == 6: True\n- a == 7: False\n- a == 16 and b == 7: False\n- a == 6 or b == 67: True\n</code></pre> <p>Important</p> <p>Les expressions contenant les op\u00e9rateurs <code>and</code>et <code>or</code>sont \u00e9valu\u00e9es de mani\u00e8res s\u00e9quentielles. Ainsi,  dans une expression du type:  </p> <ul> <li><code>x and y</code>, le deuxi\u00e8me argument <code>y</code> est \u00e9valu\u00e9 uniquement si <code>x</code> est vrai;</li> <li><code>x or y</code>, le deuxi\u00e8me argument <code>y</code> est \u00e9valu\u00e9 uniquement si <code>x</code> est faux.</li> </ul> <p>Voir les exemples lignes 6 et 7 ci-dessus.</p>"},{"location":"NSI1/S4/S4C2.html","title":"ARCHITECTURE DES ORDINATEURS - MODELE DE VON NEUMANN","text":"<p>Ce cours comporte deux niveaux de lecture. Un premier niveau que l'on peut qualifi\u00e9 de normal et accessible \u00e0 un \u00e9l\u00e8ve de 1re sp\u00e9cialit\u00e9 NSI et un second niveau plus complet o\u00f9 apparaissent des d\u00e9tails (non exigibles \u00e0 l'\u00e9valuation) et rep\u00e9r\u00e9 par la mention \"En compl\u00e9ment\"</p>"},{"location":"NSI1/S4/S4C2.html#reperes-historiques","title":"Rep\u00e8res historiques","text":""},{"location":"NSI1/S4/S4C2.html#lobjet-conceptuel","title":"L\u2019objet conceptuel. . .","text":"<p>En 1936, Alan Turing - un des plus brillants math\u00e9maticiens du XX e si\u00e8cle - d\u00e9crit une machine abstraite pour donner un support formel aux notions d\u2019algorithme et de calcul : la fameuse \u00abmachine de Turing\u00bb. Tout algorithme (proc\u00e9d\u00e9 syst\u00e9matique de calcul) peut \u00eatre r\u00e9alis\u00e9 par une machine de Turing.  </p> En compl\u00e9ment <p>Il s\u2019agit d\u2019un automate imaginaire muni d\u2019un programme (sous la forme d\u2019une table de transition entre  \u00e9tats) et pouvant lire et \u00e9crire des caract\u00e8res sur un ruban de longueur illimit\u00e9e. Le coup de g\u00e9nie de Turing est de d\u00e9montrer l\u2019existence d\u2019une Machine Universelle: si on fournit \u00e0  cette derni\u00e8re la table de transition d\u2019une machine de Turing particuli\u00e8re, autrement dit le programme  d\u2019un algorithme, elle est capable de reproduire le fonctionnement de cette machine, donc d\u2019ex\u00e9cuter le  programme en question!  </p> <p></p> <p>On peut \u00e9galement consulter l'article sur  interstices</p>"},{"location":"NSI1/S4/S4C2.html#au-modele-darchitecture-de-von-neumann","title":"Au mod\u00e8le d\u2019architecture de von Neumann","text":"<p>En 1945, John von Neumann (1903-1957), math\u00e9maticien am\u00e9ricano-hongrois qui avait d\u00e9j\u00e0 rencontr\u00e9 Alan Turing et qui connaissait ses travaux, publia un rapport dans lequel il d\u00e9finit le mod\u00e8le de l\u2019ordinateur \u00e0 \u00abprogramme enregistr\u00e9\u00bb.  </p> <p>La m\u00e9moire de l'ordinateur contient \u00e0 la fois les programmes et les donn\u00e9es!  </p> <p></p>"},{"location":"NSI1/S4/S4C2.html#modele-darchitecture-sequentielle-ou-modele-de-von-neumann","title":"Mod\u00e8le d'architecture s\u00e9quentielle ou mod\u00e8le de von Neumann","text":"<p>Un des grands points faibles du premier calculateur \u00e9lectronique l\u2019ENIAC \u00e9tait le fait que les donn\u00e9es \u00e9taient lues sur cartes perfor\u00e9es, alors que le programme \u00e9tait repr\u00e9sent\u00e9 sur un support externe, sous la forme d\u2019un panneau de connexion analogue \u00e0 celui d\u2019un standard t\u00e9l\u00e9phonique. L\u2019id\u00e9e fondamentale de John von Neumann a \u00e9t\u00e9 de stocker les donn\u00e9es et les instructions des programmes en m\u00e9moire centrale.</p>"},{"location":"NSI1/S4/S4C2.html#les-composants-essentiels","title":"Les composants essentiels","text":"<p>En juin 1945 dans la premi\u00e8re version du rapport  sur la conception de l'EDVAC  John von Neumann d\u00e9crit un sch\u00e9ma d'architecture d'un calculateur organis\u00e9 autour des \u00e9l\u00e9ments suivants:  </p> <ul> <li>une unit\u00e9 centrale ou processeur (on dit aussi CPU pour Central Processing Unit), form\u00e9e d\u2019une unit\u00e9 arithm\u00e9tique et logique (UAL) et d\u2019une unit\u00e9 de commande (Control Unit);</li> <li>la m\u00e9moire;</li> <li>des unit\u00e9s d'entr\u00e9e/sortie qui permettent de communiquer avec l'ext\u00e9rieur.</li> </ul> <p>Ces \u00e9l\u00e9ments \u00e9tant reli\u00e9s entre eux par des bus.  </p> <p></p>"},{"location":"NSI1/S4/S4C2.html#lunite-arithmetique-et-logique-ual","title":"L'unit\u00e9 arithm\u00e9tique et logique (UAL)","text":"<p>Elle est charg\u00e9e d'effectuer le traitements des op\u00e9rations arithm\u00e9tiques ou bool\u00e9ennes.</p> En compl\u00e9ment <p>L'UAL r\u00e9alise:  </p> <ul> <li>les addition, multiplication, soustraction, division;</li> <li>les op\u00e9rations logiques ET, OU et NON;</li> <li>les d\u00e9calages de bits dans des registres ;</li> </ul> <p>Elle est entour\u00e9e g\u00e9n\u00e9ralement de registres de donn\u00e9es (m\u00e9moires rapides) et d'un accumulateur qui  accueille les op\u00e9randes des op\u00e9rations ou le r\u00e9sultat.</p>"},{"location":"NSI1/S4/S4C2.html#lunite-de-commande-ou-unite-de-controle","title":"L'unit\u00e9 de commande  ou unit\u00e9 de contr\u00f4le","text":"<p>Elle est charg\u00e9e de coordonner les \u00e9changes dans les transferts entre la m\u00e9moire, les diff\u00e9rents registres et l'UAL.  </p> En compl\u00e9ment <p>Elle joue ainsi un r\u00f4le essentiel dans le cycle de fonctionnement du processeur, c'est-\u00e0-dire pendant les  phases:  </p> <ul> <li>de r\u00e9cup\u00e9ration d'instruction en m\u00e9moire;</li> <li>de d\u00e9codage d'instruction;</li> <li>d'ex\u00e9cution d'instruction.</li> </ul> <p>Pour les plus curieux voir la vid\u00e9o suivante d\u00e9crivant le processus Fetch-Decode-Execute qu'un processeur effectue en permanence.</p>"},{"location":"NSI1/S4/S4C2.html#les-memoires","title":"Les m\u00e9moires","text":"<p>Le r\u00f4le des m\u00e9moires est d'enregistrer les programmes et les donn\u00e9es pouvant \u00eatre execut\u00e9es par le microprocesseur.  </p> En compl\u00e9ment <p>On peut classer les m\u00e9moires en deux grandes cat\u00e9gories:  </p> <ul> <li>les m\u00e9moires de travail;</li> <li>les m\u00e9moires de stockage.</li> </ul> <p>Les registres sont des m\u00e9moires internes au microprocesseur. Ils sont tr\u00e8s rapides et en nombre  limit\u00e9. La m\u00e9moire cache est un interm\u00e9diaire entre une unit\u00e9 du microprocesseur et la RAM. Elle stocke des  donn\u00e9es provenant de celle-ci et permet ainsi d'acc\u00e9l\u00e9rer leurs traitements. Les m\u00e9moires vives ou RAM (Random Access Memory) permettent des op\u00e9rations de lecture et d'\u00e9criture.  Elles sont volatiles. Les m\u00e9moires accessibles uniquement en lecture sont connues sous le nom de ROM (Read Only Memory).  </p> <p>Les m\u00e9moires de stockage (ou m\u00e9moire de masse) se pr\u00e9sentent souvent sous la forme de disque. M\u00eame si la fonction est la m\u00eame (m\u00e9morisation de l'information), toutes ces m\u00e9moires ont des  caract\u00e9ristiques diff\u00e9rentes.  </p> <p></p>"},{"location":"NSI1/S4/S4C2.html#les-entrees-sorties","title":"Les entr\u00e9es-sorties","text":"<p>Les p\u00e9riph\u00e9riques d\u2019entr\u00e9e-sortie permettent \u00e0 l\u2019ordinateur de communiquer avec l\u2019homme ou d\u2019autres machines. Ils \u00e9taient initialement command\u00e9s par l\u2019unit\u00e9 centrale. Depuis le d\u00e9but des ann\u00e9es 1960 ils sont sous le contr\u00f4le de processeurs autonomes.  </p> En compl\u00e9ment <p>Exemple de fonctionnement d\u2019un p\u00e9riph\u00e9rique d\u2019entr\u00e9e-sortie : le disque dur. Supposons que l\u2019unit\u00e9  centrale veuille lire un bloc sur le disque dur. Les principales \u00e9tapes sont les suivantes:  </p> <ul> <li>l\u2019unit\u00e9 centrale formule cette demande en \u00e9crivant \u00e0 l\u2019adresse m\u00e9moire du contr\u00f4leur de disque;</li> <li>le contr\u00f4leur de disque se charge d\u2019\u00e9crire directement en m\u00e9moire les octets lus depuis le disque;</li> <li>le contr\u00f4leur de disque signale la fin de la lecture sur le disque par le biais d\u2019un m\u00e9canisme  d\u2019interruption (non abord\u00e9 ici) ;</li> <li>l\u2019unit\u00e9 centrale execute la routine d\u2019interruption puis reprend le flot d\u2019instructions o\u00f9 il a \u00e9t\u00e9  interrompu.</li> </ul> <p></p>"},{"location":"NSI1/S4/S4C2.html#les-bus","title":"Les bus","text":"<p>Les diff\u00e9rentes unit\u00e9s sont interconnect\u00e9es par des syst\u00e8mes de c\u00e2blage appel\u00e9 bus. Autour du processeur on trouve:  </p> <ul> <li>le bus d'adresse (unidirectionnel);</li> <li>le bus de donn\u00e9es (bidirectionnel);</li> <li>le bus de contr\u00f4le (bidirectionnel).</li> </ul> En compl\u00e9ment <p>Les ordinateurs r\u00e9cents poss\u00e8dent d'autres types de bus rep\u00e9r\u00e9s en trait \u00e9pais bleu sur la figure ci- dessous.  </p>"},{"location":"NSI1/S4/S4C2.html#quen-est-il-aujourdhui","title":"Qu'en est-il aujourd'hui ?","text":"<p>Presque 75 ans apr\u00e8s sa pr\u00e9sentation le mod\u00e8le d'architecture de Von Neumann est toujours valable.  Cependant, les diff\u00e9rences de vitesse entre le processeur et la m\u00e9moire ont conduit les fabricants d'ordinateur \u00e0 intercaler des m\u00e9moires caches tr\u00e8s rapides entre la m\u00e9moire centrale et le processeur. Par ailleurs, les ordinateurs actuels comportent plusieurs processeurs (on dit aussi plusieurs \"coeurs\") int\u00e9gr\u00e9s sur une m\u00eame puce. Cette tendance au \"parall\u00e9lisme\" dans le traitement et la circulation des informations a conduit \u00e0 une augmentation de la puissance de calcul sans augmenter la fr\u00e9quence des processeurs individuels.</p> <p>Enfin, une diff\u00e9rence, peu significative, par rapport au mod\u00e8le original est que les dispositifs d'entr\u00e9es/sorties peuvent communiquer avec la m\u00e9moire par le biais de contr\u00f4leur d\u00e9di\u00e9 (DMA). Si bien que le sch\u00e9ma actuel serait plut\u00f4t le suivant:  </p> En compl\u00e9ment <p>Alternative: architecture de Harvard Dans le mod\u00e8le d'architecture de Harvard les instructions et les donn\u00e9es sont situ\u00e9es dans des m\u00e9moires  diff\u00e9rentes et sont v\u00e9hicul\u00e9s sur des bus ind\u00e9pendants.</p> <p></p> <p>La vitesse d'execution est de fait am\u00e9lior\u00e9e car en un seul cycle d'horloge on peut r\u00e9cup\u00e9rer les donn\u00e9es  et le code instruction. L'architecture de Harvard se retrouve beaucoup dans les syst\u00e8mes embarqu\u00e9s.</p>"},{"location":"NSI1/S4/S4E1.html","title":"Exercices de logique bool\u00e9enne en python","text":""},{"location":"NSI1/S4/S4E1.html#loperateur-xor","title":"L'op\u00e9rateur XOR","text":"<ol> <li>En s'appuyant sur une simulation r\u00e9alis\u00e9e dans l'activit\u00e9 1 (Dilemme) \u00e9crire une fonction python <code>xor</code> qui prend en param\u00e8tre deux variables bool\u00e9ennes <code>a</code> et <code>b</code> et qui renvoie le r\u00e9sultat de <code>a xor b</code>.</li> <li>V\u00e9rifier l'\u00e9galit\u00e9 <code>a xor b = (a and not b) or ((not a) and b)</code> en utilisant une assertion. </li> </ol> <pre><code>def xor(a, b):\n\"\"\"\n    renvoie a xor b\n    a,b : variables bool\u00e9ennes\n    \"\"\"\n    pass\n</code></pre> <pre><code># Question 2 - d\u00e9commentez et compl\u00e9tez\n#assert ...\n</code></pre>"},{"location":"NSI1/S4/S4E1.html#loperateur-logique-nand","title":"L'op\u00e9rateur logique NAND","text":"<ol> <li>Ecrire une fonction python <code>nand</code> (pour not and) qui prend en param\u00e8tres deux variables bool\u00e9ennes <code>a</code> et <code>b</code> et qui renvoie le r\u00e9sultat de <code>a nand b</code>.</li> <li>Ecrire la table de v\u00e9rit\u00e9.</li> <li>Comparer les expressions suivantes:<ul> <li><code>nand(a,a)</code> et <code>not a</code>;</li> <li><code>nand(nand(a, b), nand(a, b))</code> et <code>a and b</code>;</li> <li><code>nand(nand(a, a), nand(b, b))</code> et <code>a or b</code></li> </ul> </li> </ol> <pre><code>\n</code></pre> <pre><code># Question 1\ndef nand(a, b):\n\"\"\"\n    renvoie a nand b\n    a,b: variables bool\u00e9ennes\n    \"\"\"\n    pass\n</code></pre> <p>Question 2</p> <pre><code># Question 3\n</code></pre>"},{"location":"NSI1/S4/S4E1.html#loperateur-logique-nor","title":"L'op\u00e9rateur logique NOR","text":"<ol> <li>Ecrire une fonction python <code>nor</code> (pour not or) qui prend en param\u00e8tres deux variables bool\u00e9ennes <code>a</code> et <code>b</code> et qui renvoie le r\u00e9sultat de <code>a nor b</code>.</li> <li>Ecrire la table de v\u00e9rit\u00e9.</li> <li>Comparer les expressions suivantes:<ul> <li><code>nor(a,a)</code> et <code>not a</code>;</li> <li><code>nor(nor(a, b), nor(a, b))</code> et <code>a or b</code>;</li> <li><code>nor(nor(a, a), nor(b, b))</code> et <code>a and b</code></li> </ul> </li> </ol> <pre><code># Question 1\ndef nor(a, b):\n\"\"\"\n    renvoie a nor b\n    a,b: variables bool\u00e9ennes\n    \"\"\"\n    pass   \n</code></pre> <p>Question 2</p> <pre><code># Question 3\n</code></pre>"},{"location":"NSI1/S4/S4R1.html","title":"Ce qu\u2019il faut savoir","text":""},{"location":"NSI1/S4/S4R1.html#logique-booleenne","title":"Logique bool\u00e9enne","text":"<ul> <li>un ordinateur ne connait que 2 \u00e9tats (0/1 ou vrai/faux), un ordinateur travaille donc en binaire</li> <li>les op\u00e9rateurs logiques essentiels sont les op\u00e9rateurs <code>not</code>, <code>or</code> et <code>and</code>.</li> <li>\u00e0 chaque op\u00e9rateur logique est associ\u00e9 une table de v\u00e9rit\u00e9 (vous devez conna\u00eetre ces tables)</li> <li>en combinant les op\u00e9rations logiques, on obtient des circuits plus complexes (exemple: l'additionneur).</li> <li>le langage Python permet de manipuler les expressions bool\u00e9ennes; ne pas oublier le caract\u00e8re s\u00e9quentiel de leur \u00e9valuation.</li> </ul>"},{"location":"NSI1/S4/S4R1.html#les-composants-essentiels-dun-ordinateur","title":"Les composants essentiels d\u2019un ordinateur","text":"<ul> <li>La m\u00e9moire (vive ou RAM pour Random Access Memory): la m\u00e9moire vive permet de stocker des donn\u00e9es et des programmes.  </li> <li> <p>Le processeur ou CPU (Central Processing Unit) qui ex\u00e9cute les instructions extraites de la m\u00e9moire. Il est compos\u00e9 des 3 \u00e9l\u00e9ments suivants:</p> <ul> <li>les registres permettent de m\u00e9moriser de l'information (donn\u00e9e ou instruction) au sein m\u00eame du CPU. Leur nombre et leur taille sont variables en fonction du type de microprocesseur.</li> <li>L'unit\u00e9 arithm\u00e9tique et logique (UAL) est charg\u00e9e de l'ex\u00e9cution de tous les calculs. L'UAL stocke le r\u00e9sultat des calculs dans l'accumulateur.</li> <li>L'unit\u00e9 de commande permet de coordonner les \u00e9changes entre m\u00e9moire et registres ou UAL.</li> </ul> </li> <li> <p>Les dispositifs d'entr\u00e9e/sortie qui permettent de communiquer avec le monde ext\u00e9rieur. </p> </li> <li>Le bus qui permettent la communication entre les divers composants.</li> </ul>"},{"location":"NSI1/S4/S4R1.html#architecture-de-von-neumann","title":"Architecture de von Neumann","text":"<p>John von Neumann (math\u00e9maticien et physicien am\u00e9ricano-hongrois 1903-1957) proposa en 1945 un mod\u00e8le o\u00f9 donn\u00e9es et programmes seraient stock\u00e9es en m\u00e9moire.  Voici un sch\u00e9ma, \u00e0 conna\u00eetre, qui repr\u00e9sente ce mod\u00e8le de von Neumann :</p> <p></p> <p>Les ordinateurs actuels continuent de se baser sur l'architecture de von Neumann. Pendant tr\u00e8s longtemps les constructeurs ont cherch\u00e9 \u00e0 augmenter la fr\u00e9quence d\u2019horloge des CPU afin d\u2019am\u00e9liorer les performances, aujourd\u2019hui la tendance est plut\u00f4t \u00e0 l\u2019augmentation du nombre de coeurs</p>"},{"location":"NSI1/S4/S4R1.html#ce-quil-faut-savoir-faire","title":"Ce qu\u2019il faut savoir faire","text":"<p>Vous devez \u00eatre capable d\u2019\u00e9crire et de lire (et comprendre) des programmes simples en assembleur (en ayant en votre possession l\u2019aide m\u00e9moire sur l\u2019assembleur)</p>"},{"location":"NSI1/S4/S4TP1.html","title":"Impl\u00e9mentation d'un additionneur complet en python","text":"<p>A faire</p> <p>Prendre absolument connaissance des documents 1 et 2 avant de r\u00e9pondre aux questions. Ne pas h\u00e9siter \u00e0 ex\u00e9cuter les  exemples fournis dans les diverses cellules.</p>"},{"location":"NSI1/S4/S4TP1.html#document-1-notation-des-electroniciens","title":"Document 1: notation des \u00e9lectroniciens","text":"<p>On rappelle le sch\u00e9ma d'un additionneur complet, vu dans l'activit\u00e9 1:  </p> <p> </p> <p>En logique \u00e9lectronique, il est commun de noter les op\u00e9rations logiques et et ou respectivement <code>.</code> et <code>+</code>. Quant \u00e0 la n\u00e9gation non, on la repr\u00e9sente avec une barre au dessus de la variable.  </p> <p>Ainsi, l'expression bool\u00e9enne de la sortie \\(S_i\\) de l'additionneur complet est  </p> \\[S_i=(\\overline{A_i} \\cdot \\overline{B_i} \\cdot R_{i-1}) + (\\overline{A_i} \\cdot B_i \\cdot \\overline{R_{i-1}}) + (A_i \\cdot \\overline{B_i} \\cdot \\overline{R_{i-1}}) + (A_i \\cdot B_i \\cdot R_{i-1})\\] <p>Celle de la retenue est:  </p> \\[R_i=(A_i \\cdot R_{i-1}) + (A_i \\cdot B_i) + (B_i \\cdot R_{i-1})\\]"},{"location":"NSI1/S4/S4TP1.html#document-2-connaissances-du-langage","title":"Document 2: connaissances du langage","text":""},{"location":"NSI1/S4/S4TP1.html#le-type-booleen","title":"Le type bool\u00e9en","text":"<p>En python, les op\u00e9rateurs bool\u00e9ens sont nomm\u00e9s <code>and</code>, <code>or</code> et <code>not</code>. Ainsi l'expression bool\u00e9enne \\(\\overline{A}\\cdot(B+\\overline{C})\\) se traduit en python par:  </p> <p><pre><code>not A and (B or not C)\n</code></pre> Par ailleurs, Python poss\u00e8de un type bool\u00e9en nomm\u00e9 <code>bool</code>. Les valeurs bool\u00e9enne vrai et faux ou 1 et 0 se notent <code>True</code> et <code>False</code>. Voir ci-dessous.</p> <pre><code>print(type(False))\nA = False\nprint(not A)\n</code></pre> <pre><code>B = True\nprint(A or B)\n</code></pre> <p>Python associe les valeurs bool\u00e9ennes <code>True</code>et <code>False</code> \u00e0 <code>1</code> et <code>0</code> respectivement.</p> <pre><code>A = True\nB = False\nprint(A == 1)\nprint(B == 0)\n</code></pre>"},{"location":"NSI1/S4/S4TP1.html#le-type-chaine-de-caracteres","title":"Le type cha\u00eene de caract\u00e8res","text":"<p>Python poss\u00e8de un type natif pour traiter les cha\u00eenes de caract\u00e8res: le type string <code>str</code>. Une cha\u00eene de carat\u00e8res est d\u00e9clar\u00e9e en \u00e9tant entour\u00e9e de double quotes <code>\"</code> ou simple quote <code>'</code>.  </p> <pre><code>ch = \"bonjour\"\n</code></pre> <p>On peut acc\u00e9der aux caract\u00e8res individuellement avec une notation index\u00e9e entre crochet <code>[ ]</code>.</p> index 0 1 2 3 4 5 6 ch 'b' 'o' 'n' 'j' 'o' 'u' 'r' <pre><code>ch = \"bonjour\"\nprint(ch[0])\nprint(ch[3])\n</code></pre>"},{"location":"NSI1/S4/S4TP1.html#comprendre-une-fonction","title":"Comprendre une fonction","text":"<pre><code>def addb(n,a,b):\n\"\"\"\n    Renvoie ....\n    On suppose que a et b sont des chaines constitu\u00e9s des caract\u00e8res \n    appartenant \u00e0 {'0','1'}; n est un entier naturel sup\u00e9rieur \u00e0 z\u00e9ro.\n    \"\"\"\n    ri_1 = False\n    res = \"\"\n    for i in range(n - 1, -1, -1):\n        ai = int(a[i])\n        bi = int(b[i])\n        si = (not ai and not bi and ri_1) or (not ai and bi and not ri_1) or \\\n        (ai and not bi and not ri_1) or (ai and bi and ri_1)\n        ri_1 = (ai and ri_1) or (ai and bi) or (bi and ri_1)\n        res = str(int(si)) + res\n    if ri_1:\n        res = '1' + res\n    return res\n</code></pre> <pre><code>addb(8,'11111111','00000001')\n</code></pre> <ul> <li>Consulter la documentation officielle de python sur la fonction range afin de comprendre la construction qui apparait \u00e0 la ligne 9.</li> <li>Les sp\u00e9cifications \u00e9tant incompl\u00e8tes, expliquer ce que r\u00e9alise cette fonction en \u00e9tudiant le code fourni ainsi que les documents 1 &amp; 2.</li> <li>V\u00e9rifier vos hypoth\u00e8ses avec quelques tests; par exemple:</li> <li><code>addb(4,'0001','0001')</code> </li> <li><code>addb(8,'11111111','00000001')</code> </li> <li>Quelle est l'utilit\u00e9 du test ligne 16 ?</li> </ul>"},{"location":"NSI1/S4/S4TP1.html#un-circuit-important-le-multiplexeur","title":"Un circuit important: le multiplexeur","text":"<p>Le multiplexeur est un circuit logique tr\u00e8s important en architecture machine. Il permet de s\u00e9lectionner une entr\u00e9e parmi \\(N\\) et de transf\u00e9rer sa valeur sur la sortie. La s\u00e9lection se fait \u00e0 l'aide d'une entr\u00e9e Select.</p>"},{"location":"NSI1/S4/S4TP1.html#principe","title":"Principe","text":"<p>Le circuit ci-dessous pr\u00e9sente le sch\u00e9ma de principe d'un multiplexeur \u00e0 4 entr\u00e9es \\(A_0 ... A_3\\) que vous pouvez tester.</p> <p> </p> <p>Sa r\u00e9alisation avec les portes logiques \u00e9l\u00e9mentaires:</p> <p> </p>"},{"location":"NSI1/S4/S4TP1.html#simulation","title":"Simulation","text":"<ol> <li>Simuler le circuit ci-dessus.</li> <li>Quelle op\u00e9ration logique effectuent les 4 circuits \u00e0 3 entr\u00e9es, visibles sur la r\u00e9alisation ci-dessus?</li> <li>Quelles valeurs logiques doit-on porter les entr\u00e9es de ces circuits si on veut obtenir un 1 logique sur leur sortie?</li> <li>On souhaite s\u00e9lectionner la deuxi\u00e8me entr\u00e9e (en d'autres termes \\(S\\) doit recopier \\(A_1\\)), quelle valeur logique doit-on affecter \u00e0 \\(Sel_0\\) et \\(Sel_1\\)?</li> <li>R\u00e9aliser la s\u00e9lection pr\u00e9c\u00e9dente sur le simulateur. Entrer la combinaison \\((1,1,0,0)\\) pour \\((A_0,A_1,A_2,A_3)\\). Que vaut \\(S\\) ? Expliquer.</li> <li>Garder la m\u00eame s\u00e9lection pour \\(Sel_0\\) et \\(Sel_1\\). Donner une autre combinaison qui conduit \u00e0 \\(S=1\\). Expliquer.</li> </ol>"},{"location":"NSI1/S5/S5A1.html","title":"S\u00e9quence 5 - Activit\u00e9 1: le codage des caract\u00e8res","text":"<p>En recherchant un extrait du \u00ab Seigneur des anneaux \u00bb sur Internet avec un navigateur mal configur\u00e9, nous sommes tomb\u00e9s sur une page web, dont le contenu est reproduit ci-dessous. </p> <p>Les anneaux de pouvoir (au nombre de 20) sont d'abord d\u00c3\u00a9crits au d\u00c3\u00a9but de la Communaut\u00c3\u00a9 de l'Anneau dans un po\u00c3\u00a8me, connu depuis  longtemps des Elfes, \u00c3\u00a9nonc\u00c3\u00a9 par Gandalf \u00c3  Frodon Sacquet.</p> <p>Trois anneaux pour les rois Elfes sous le ciel,</p> <p>Sept pour les seigneurs Nains dans leurs demeures de pierre,</p> <p>Neuf pour les Hommes, mortels destin\u00c3\u00a9s au tr\u00c3\u00a9pas,</p> <p>Un pour le Seigneur T\u00c3\u00a9n\u00c3\u00a9breux sur son sombre tr\u00c3\u00b4ne,</p> <p>Dans le Pays de Mordor o\u00c3\u00b9 s'\u00c3\u00a9tendent les Ombres.</p> <p>Un anneau pour les gouverner tous. Un anneau pour les trouver,</p> <p>Un anneau pour les amener tous et dans les t\u00c3\u00a9n\u00c3\u00a8bres les lier,</p> <p>Au Pays de Mordor o\u00c3\u00b9 s'\u00c3\u00a9tendent les Ombres.</p> <p>Analyser</p> <p>Expliquer la situation. Pr\u00e9ciser quel type de lettres pose probl\u00e8me.</p>"},{"location":"NSI1/S5/S5A1.html#le-code-ascii","title":"Le code ASCII","text":"<p>Le code ASCII (American Standard Code for Information Interchange), d\u00e9fini aux Etats-Unis en 1963, est bas\u00e9 sur un tableau contenant les caract\u00e8res les plus utilis\u00e9s en langue anglaise. Chaque caract\u00e8re est repr\u00e9sent\u00e9 par un nombre \u00e9crit sur 7 bits (ce qui donne \\(2^7=128\\) combinaisons possibles).  </p> <p>Table de codes ascii (en hexad\u00e9cimal) </p> <p></p> <p>Analyser et r\u00e9utiliser des solutions</p> <ul> <li>Coder, \u00e0 l'aide de la table ci-dessus, la phrase suivante : La compagnie de l\u2019anneau.</li> <li>Retrouver le texte correspondant au code ASCII suivant : (46 72 6F 64 6F 6E 20 6C 65 20 48 6F 62 62 69 74).</li> <li>Justifier, pourquoi il n'est pas possible de coder correctement le texte Mon pr\u00e9cieux \u00e0 l'aide du code ASCII.</li> </ul>"},{"location":"NSI1/S5/S5A1.html#la-norme-iso-8859-1-latin-1","title":"La norme ISO 8859-1 (latin 1)","text":"<p>La n\u00e9cessit\u00e9 de repr\u00e9senter des caract\u00e8res non pr\u00e9sents dans la table ASCII tels que ceux de l\u2019alphabet latin comme le \u00ab\u00e0\u00bb, le \u00ab\u00e9\u00bb, \u00ab\u00e7\u00bb ... impose l\u2019utilisation d\u2019un autre code. Ces codes sont des extensions du code ASCII. Pour cela le 8\u00e8me bit est utilis\u00e9 ce qui permet de coder 256 caract\u00e8res (128 caract\u00e8res suppl\u00e9mentaire par rapport au code ASCII de base). On parle de code ASCII \u00e9tendu. </p> <p>Les tables ascii \u00e9tendu sont souvent pr\u00e9sent\u00e9s sous la forme de tableau \u00e0 double entr\u00e9es.  </p> <p></p> <p>L\u2019ISO, organisation internationale de normalisation, propose plusieurs variantes de ce code, adapt\u00e9e aux diff\u00e9rentes langues. Nous utilisons la norme ISO-8859-1 nomm\u00e9e aussi ISO-Latin1.</p> <p>R\u00e9utiliser des solutions</p> <p>Coder le texte Mon pr\u00e9cieux en utilisant la table \u00ab ASCII \u00e9tendu \u00bb pr\u00e9c\u00e9dente.</p>"},{"location":"NSI1/S5/S5A1.html#la-norme-iso-10646-unicode","title":"La norme ISO 10646 (Unicode)","text":""},{"location":"NSI1/S5/S5A1.html#presentation","title":"Pr\u00e9sentation","text":"<p>La g\u00e9n\u00e9ralisation de l\u2019utilisation d\u2019Internet dans le monde a ainsi n\u00e9cessit\u00e9 une prise en compte d\u2019un nombre beaucoup plus important de caract\u00e8res. Ce que permet la norme Unicode qui \u00e9tablit une correspondance unique caract\u00e8re - code num\u00e9rique (on dit aussi charset en anglais).  </p> <p>Le r\u00e9pertoire Unicode peut contenir plus d'un million de caract\u00e8res. Unicode d\u00e9finit des m\u00e9thodes standardis\u00e9es pour coder et stocker cet index sous forme de s\u00e9quence d'octets : UTF-8, UTF-16, UTF-32 et leurs diff\u00e9rentes variantes. </p> <p>L\u2019UTF-8 est l\u2019encodage (encoding en anglais) le plus r\u00e9pandu. Les navigateurs Internet utilisent le codage UTF-8 par d\u00e9faut. Le langage de programmation utilis\u00e9 en NSI (Python) g\u00e8re l'Unicode par d\u00e9faut.</p> <p>L\u2019index des caract\u00e8res UNICODE est disponible \u00e0 l\u2019adresse suivante http://www.unicode.org/fr/charts/charindex.html. Par ailleurs, une description d\u00e9taill\u00e9e de l'UTF-8 peut \u00eatre trouv\u00e9e sur Wikipedia https://fr.wikipedia.org/wiki/UTF-8</p>"},{"location":"NSI1/S5/S5A1.html#description-rapide-et-simplifiee","title":"Description rapide et simplifi\u00e9e","text":"<p>L'encodage UTF-8 utilise 1, 2, 3 ou 4 octets. Si le code du caract\u00e8re est inf\u00e9rieur ou \u00e9gal \u00e0 127, on n\u2019utilise qu'un octet avec le bit de poids fort \u00e0 0. Sinon, les bits de poids fort du premier octet forment une suite de 1 indiquant le nombre d'octets utilis\u00e9s pour coder le caract\u00e8re. Les octets suivants commencent tous par le bloc binaire 10.</p> <p></p> <p>Analyser et mobiliser des concepts</p> <p>Sous Unicode le caract\u00e8re inf\u00e9rieur ou \u00e9gal a comme point de code U+2A7D.  </p> <ul> <li>Quelle la valeur binaire de 0x2A7D ? Combien d\u2019octets seront n\u00e9cessaires pour repr\u00e9senter ce caract\u00e8re en unicode UTF-8?</li> <li>D\u00e9terminer la repr\u00e9sentation binaire puis hexad\u00e9cimale du caract\u00e8re inf\u00e9rieur ou \u00e9gal en Unicode UTF-8.</li> </ul>"},{"location":"NSI1/S5/S5C1.html","title":"S\u00e9quence 4 - Premier type construit: le tableau","text":""},{"location":"NSI1/S5/S5C1.html#introduction-les-structures-de-donnees","title":"Introduction: les structures de donn\u00e9es","text":"<p>Une des probl\u00e9matiques importantes de l'informatique est le stockage de donn\u00e9es. Pour traiter efficacement ces derni\u00e8res, il faut les ranger de mani\u00e8re ad\u00e9quate en m\u00e9moire. L'objet informatique utilis\u00e9 pour stocker ces donn\u00e9es en m\u00e9moire s'appelle une structure de donn\u00e9es. Une structure de donn\u00e9e est caract\u00e9ris\u00e9e par les op\u00e9rations qu'elle permet ainsi que leur co\u00fbt (notion d\u00e9velopp\u00e9e dans le cours d'algorithmique). La premi\u00e8re structure de donn\u00e9e \u00e9tudi\u00e9e en sp\u00e9cialit\u00e9 NSI est le tableau.</p>"},{"location":"NSI1/S5/S5C1.html#quest-ce-quun-tableau","title":"Qu'est-ce qu'un tableau ?","text":"<p>D\u00e9finition</p> <p>Un tableau est une suite de valeurs de m\u00eame type, stock\u00e9es dans des cases m\u00e9moires contig\u00fces.  </p> <p>Un tableau permet de stocker plusieurs valeurs dans une seule variable et d'y acc\u00e9der ensuite facilement. Python ne poss\u00e8de pas de type tableau, du moins pas sans utilisation de module sp\u00e9cialis\u00e9. De ce fait, on utilisera le type list en python pour construire des tableaux. En pratique, il s'agira d'\u00e9num\u00e9rer  les valeurs entre crochets et s\u00e9par\u00e9es par une virgule. Ainsi, on d\u00e9clare et affecte un tableau \u00e0 la variable <code>t</code> en utilisant la syntaxe <code>t = [valeur_1, valeur_2, ..., valeur_n]</code>.</p> <pre><code># Exemple\n\nt = [12, 13, 15]\n</code></pre> <p>Les valeurs 12, 13 et 15 sont index\u00e9es c'est-\u00e0-dire qu'on peut les rep\u00e9rer par leur position \u00e0 l'aide d'un indice.  </p> <p>Important</p> <p>Les index (indices) commencent partir de z\u00e9ro en python.  </p> <pre><code>  0    1    2     Indice\n  |    |    |\n  v    v    v\n+----+----+----+\n| 12 | 13 | 15 |  Tableau\n+----+----+----+\n</code></pre> <p>Seules les valeurs sont stock\u00e9es, les indices ne le sont pas. On acc\u00e8de \u00e0 une valeur \u00e0 l'aide de la notation <code>t[indice]</code>. Exemple</p> <pre><code>print(t[2])\n</code></pre> <pre><code>15\n</code></pre> <p>Si on tente un acc\u00e8s en dehors des cases valides du tableau on obtient une erreur de type <code>IndexError</code>:</p> <pre><code>t[4]\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\n&lt;ipython-input-4-5977d405d0f2&gt; in &lt;module&gt;\n----&gt; 1 t[4]\n\nIndexError: list index out of range\n</code></pre> <p>On obtient la taille d'un tableau avec la fonction native <code>len</code>.</p> <pre><code>len(t)\n</code></pre> <pre><code>3\n</code></pre> <p>Le contenu d'un tableau peut \u00eatre modifi\u00e9: c'est une structure mutable. Pour cela, on utilise une affectation, exactement comme on l'a fait avec les variables jusqu'\u00e0 maintenant:</p> <pre><code>t[1] = 0\nprint(t)\n</code></pre> <pre><code>[12, 0, 15]\n</code></pre> <p>Remarques</p> <ul> <li>le terme de <code>list</code> bien que couramment utilis\u00e9 en python est un choix malheureux de vocabulaire; en effet la confusion peut \u00eatre faite  avec une structure de donn\u00e9e qui sera vue en terminale. Aussi on privil\u00e9giera l'utilisation du terme tableau en 1re NSI;</li> <li>conform\u00e9ment au programme, on n'utilisera que des tableaux homog\u00e8nes (c-\u00e0-d contenant qu'un seul type de donn\u00e9e), bien que les <code>list</code>  de python permettraient de construire des tableaux h\u00e9t\u00e9rog\u00e8nes.</li> </ul>"},{"location":"NSI1/S5/S5C1.html#comment-acceder-aux-elements-dun-tableau","title":"Comment acc\u00e9der aux \u00e9l\u00e9ments d'un tableau ?","text":""},{"location":"NSI1/S5/S5C1.html#iteration-sur-les-indices","title":"It\u00e9ration sur les indices","text":"<p>Une premi\u00e8re possibilit\u00e9 pour parcourir les \u00e9l\u00e9ments d'un tableau est d'utiliser une boucle <code>for</code> sur les indices. Parcourir un tableau <code>t</code> en it\u00e9rant sur les indices se fait de la mani\u00e8re suivante:  </p> <pre><code>for i in range(len(t)):\n    traitement()\n</code></pre> <p>Dans le code pr\u00e9c\u00e9dent, le g\u00e9n\u00e9rateur d'entier <code>range</code> permet d'obtenir une s\u00e9quence allant de <code>0</code> \u00e0 <code>len(t)-1</code>. Par exemple, le code suivant permet d'afficher tous les \u00e9l\u00e9ments du tableau:</p> <pre><code>for i in range(len(t)): # parcours tout le tableau\n    print(t[i]) # affiche le i\u00e8me \u00e9l\u00e9ment\n</code></pre> <pre><code>12\n0\n15\n</code></pre>"},{"location":"NSI1/S5/S5C1.html#iteration-sur-les-elements","title":"It\u00e9ration sur les \u00e9l\u00e9ments","text":"<p>Une autre possibilit\u00e9 pour parcourir les \u00e9l\u00e9ments d'un tableau est d'utiliser une boucle <code>for</code> sur les \u00e9l\u00e9ments. Parcourir un tableau <code>t</code> en it\u00e9rant sur les \u00e9l\u00e9ments se fait de la mani\u00e8re suivante:  </p> <pre><code>for element in t:\n    traitement()\n</code></pre> <p>Dans le code pr\u00e9c\u00e9dent, <code>element</code> est une variable qui va valoir successivement <code>t[0]</code>, <code>t[1]</code>, etc.  </p> <p>Exemple</p> <pre><code>for elt in t:\n    print(elt)\n</code></pre> <pre><code>12\n0\n15\n</code></pre>"},{"location":"NSI1/S5/S5C1.html#comment-construire-de-grands-tableaux","title":"Comment construire de grands tableaux ?","text":"<p>Lorsque le tableau \u00e0 construire est tr\u00e8s grand, il est difficile d'\u00e9num\u00e9rer tous ses \u00e9l\u00e9ments. On utilise alors la construction typique de Python:</p> <pre><code>DIM = 500 # taille du tableau\nt = [0] * DIM\nprint(len(t))\n</code></pre> <pre><code>500\n</code></pre> <p>Supposons que l'on veuille remplir ce tableau avec le carr\u00e9 des 500 premiers entiers:</p> <pre><code>for i in range(DIM):\n    t[i] = i * i\n\n### Que vaut t[25] ?\nprint(t[25])\n</code></pre> <pre><code>625\n</code></pre> <p>On peut \u00e9galement concat\u00e9ner c'est-\u00e0-dire mettre bout \u00e0 bout, deux tableaux:</p> <pre><code>t2 = [7, 10, 13] + [16, 19]\nprint(t2)\n</code></pre> <pre><code>[7, 10, 13, 16, 19]\n</code></pre>"},{"location":"NSI1/S5/S5C1.html#quelques-subtilites","title":"Quelques subtilit\u00e9s","text":"<p>Contrairement aux variables dont le type est un type de base comme <code>int</code>, <code>float</code> ou <code>string</code>, une variable de type tableau ne contient pas les valeurs. Elle contient une r\u00e9f\u00e9rence vers l'objet qui contient les valeurs, symbolis\u00e9 sur le sch\u00e9ma ci-dessous par un point reli\u00e9 \u00e0 une fl\u00eache.  </p> <pre><code>x = 10\ny = 15.5\nch = \"chaine\"\nt = [1, 1, 2, 3, 5]\nu = [2, 8, 16, 32, 64]\n</code></pre>  Diff\u00e9rentes variables en python <p>Remarque</p> <p>Ce sch\u00e9ma a \u00e9t\u00e9 obtenu avec un outil en ligne tr\u00e8s int\u00e9ressant Pythontutor et qui nous sera tr\u00e8s utile dans certaine situation.</p> <p>Une cons\u00e9quence importante de ce mode de repr\u00e9sentation est que l'affectation du tableau \u00e0 une autre variable ne cr\u00e9e pas un nouveau tableau, elle ne fait que recopier la r\u00e9f\u00e9rence vers l'objet <code>list</code> qui contient les valeurs. Ainsi, si \u00e0 la suite du code pr\u00e9c\u00e9dent, on ajoute:  </p> <pre><code>v = u\n</code></pre> <p>cela signifiera que <code>v</code> fait r\u00e9f\u00e9rence au m\u00eame objet <code>list</code> que <code>u</code>.</p> Cas des tableaux <p>Cela implique que toute modification de v entraine une modification de u. Par exemple,  </p> <pre><code>v[0] = 0\n</code></pre> <p>entraine:  </p>  Apr\u00e8s modification d'un tableau ... <p>Recommandation</p> <p>Dans la mesure du possible, en sp\u00e9cialit\u00e9 NSI, on \u00e9vitera d'avoir deux variables qui r\u00e9f\u00e9rencent le m\u00eame tableau.</p>"},{"location":"NSI1/S5/S5C2.html","title":"S\u00e9quence 2 - Repr\u00e9senter du texte","text":""},{"location":"NSI1/S5/S5C2.html#lobjectif","title":"L'objectif","text":"<p>Il s'agit d'associer un caract\u00e8re \u00e0 un num\u00e9ro unique: c'est ce que l'on appelle encoder. Pour \u00eatre efficace un encodage doit repr\u00e9senter le plus de caract\u00e8res possible et \u00eatre compact.</p>"},{"location":"NSI1/S5/S5C2.html#lascii","title":"L'ASCII","text":"<p>\u00c0 l'origine plusieurs encodages incompatibles entre eux coexistaient jusqu'\u00e0 ce qu'une norme s'impose dans les ann\u00e9es 60: l'American Standard Code for Information Interchange (ASCII). Un octet est utilis\u00e9 pour coder un caract\u00e8re. En r\u00e9alit\u00e9, seuls 7 bits sont utilis\u00e9s: on peut donc coder \\(2^7=128\\) caract\u00e8res avec cette norme. Le dernier bit \u00e9tait utilis\u00e9 \u00e0 des fins de contr\u00f4le lors des transmissions. Il faut noter que seuls les caract\u00e8res anglo-saxons sont pr\u00e9sents. Les caract\u00e8res accentu\u00e9s ne sont pas repr\u00e9sentables.</p>"},{"location":"NSI1/S5/S5C2.html#evolution-la-norme-iso-8859","title":"\u00c9volution: la norme ISO 8859","text":"<p>Afin d'int\u00e9grer plus de caract\u00e8res (notamment les caract\u00e8res accentu\u00e9s), une premi\u00e8re \u00e9volution a eu lieu et a \u00e9t\u00e9 caract\u00e9ris\u00e9e par la norme ISO 8859. Il s'agit d'une extension de l'ASCII: on utilise le 8\u00e8me bit (utilis\u00e9 jusque l\u00e0 pour le contr\u00f4le de parit\u00e9) pour coder des caract\u00e8res. On a ainsi \\(2^8=256\\) possibilit\u00e9s ! Une table de correspondance code hexad\u00e9cimal ou d\u00e9cimal \\(\\longleftrightarrow\\) ASCII et ASCII \u00e9tendu peut \u00eatre trouv\u00e9e \u00e0 cette adresse</p>"},{"location":"NSI1/S5/S5C2.html#norme-iso-10646-standard-unicode","title":"Norme ISO 10646 - Standard Unicode","text":"<p>Bien qu'int\u00e9ressante l'\u00e9volution vers la norme ISO 8859 ne r\u00e8gle pas tous les probl\u00e8mes et notamment l'encodage des caract\u00e8res des langues autres qu'europ\u00e9ennes (asiatiques entre autres). Pour tenir compte de tous les caract\u00e8res utilis\u00e9s, l'ISO proposa une nouvelle norme dans laquelle un caract\u00e8re est vu comme une entit\u00e9 poss\u00e9dant:  </p> <ul> <li>un nom;  </li> <li>un num\u00e9ro, appel\u00e9 encore point de code et not\u00e9 U+xxxx o\u00f9 xxxx est un nombre hexad\u00e9cimal.  </li> </ul> <p>Voir la page wikipedia </p> <p>Un consortium priv\u00e9 \u00e0 but non lucratif, Unicode, proposa alors plusieurs techniques pour encoder ces points de code. La plus utilis\u00e9e est manifestement l'encodage UTF-8 (Universal Transformation Format); le 8 signifie qu'il faut au minimum 8 bits pour repr\u00e9senter le caract\u00e8re associ\u00e9 \u00e0 un point de code. Les encodages UTF-16 (complexe) et UTF-32 (peu \u00e9conome) ne seront pas abord\u00e9s ici.</p>"},{"location":"NSI1/S5/S5C2.html#principe-de-lencodage-utf-8","title":"Principe de l'encodage UTF-8","text":"<p>Cet encodage permet de coder un caract\u00e8re sur 1, 2, 3 ou 4 octets. Si le point de code est inf\u00e9rieur ou \u00e9gal \u00e0 127 (<code>7F</code> en hexad\u00e9cimal), le caract\u00e8re est cod\u00e9 sous la forme <code>0xxx xxxx</code> comme en ASCII. Sinon, on utilise la forme binaire du point de code et on d\u00e9termine ainsi le nombre de bits n\u00e9cessaire au codage du caract\u00e8re.</p> Point de code Octets (binaire) Nb de bits utiles U+0000-U+007F 0xxx xxxx 7 U+0080-U+07FF 110x xxxx 10xx xxxx 11 U+0800-U+FFFF 1110 xxxx 10xx xxxx 10xx xxxx 16 U+10000-U+10FFFF 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx 21 <p>L'octet de poids fort est compos\u00e9 d'une s\u00e9quence de 1 termin\u00e9 par un 0. Le nombre de 1 pr\u00e9sent dans cette s\u00e9quence indique le nombre d'octet utilis\u00e9 pour coder le caract\u00e8re.  </p> <p>Exemple Soit \u00e0 coder le symbole de l'ensemble vide \\(\\varnothing\\) qui a pour point de code 8709 ou U+2205. Le point de code exprim\u00e9 en binaire est: <code>10 0010 0000 0101</code>. Il faut 14 bits pour coder ce nombre. D'apr\u00e8s le tableau ci-dessus, on va utiliser un codage sur 3 octets:  </p> \\[ \\mathbf{1110}\\ 0010\\ \\mathbf{10}00\\ 1000\\ \\mathbf{10}00\\ 0101 \\] <p>Prolongement hors programme: Unicode et Python</p> <p>Les chaines de caract\u00e8res en python utilisent l'encodage UTF-8. Par ailleurs, on peut saisir directement une chaine \u00e0 partir de ses points de code (qu'on  peut trouver sur le site https://unicode-table.com/fr/ par exemple), en proc\u00e9dant ainsi:  </p> <ul> <li>'\\u' suivi du point de code \u00e9crit avec quatre chiffres hexad\u00e9cimaux, si sa valeur est comprise entre <code>0000</code> et <code>FFFF</code>;</li> <li>'\\U' suivi du point de code \u00e9crit avec huit chiffres hexad\u00e9cimaux, si sa valeur est sup\u00e9rieure \u00e0 <code>FFFF</code>.</li> </ul> <p>Voir les exemples ci-apr\u00e8s.</p> <p>Exemples d'utilisation en python</p> <pre><code>ch1 = '\\u0078\\u2A7E\\u0030'\nprint(ch1)\n</code></pre> <pre><code>x\u2a7e0\n</code></pre> <pre><code>ch2 = '\\U0001F914'\nprint(ch2)\n</code></pre> <pre><code>\ud83e\udd14\n</code></pre> <p>Il est possible en python de conna\u00eetre le r\u00e9sultat de l'encodage (en hexad\u00e9cimal), en utilisant la m\u00e9thode de cha\u00eene <code>encode</code> (le terme m\u00e9thode sera pr\u00e9cis\u00e9 en terminale).</p> <pre><code>tableau_octets = ch1.encode('utf8') # encode prend en param\u00e8tre le type d'encodage\nfor valeur in tableau_octets:\n    print(hex(valeur))\n</code></pre> <pre><code>0x78\n0xe2\n0xa9\n0xbe\n0x30\n</code></pre> <p>Remarque</p> <p>Le tableau d'octets et la chaine de caract\u00e8res n'ont pas m\u00eame la longueur. Cela montre qu'en UTF-8, un caract\u00e8re peut \u00eatre cod\u00e9 sur plusieurs octets. Ici, le caract\u00e8re sup\u00e9rieur ou \u00e9gal est cod\u00e9 sur trois octets.  </p> <p>On peut \u00e9galement faire le conversion inverse (d'une chaine d'octets vers une chaine caract\u00e8res) avec la m\u00e9thode <code>decode</code>.</p> <pre><code>a = b'\\x78\\xe2\\xa9\\xbe\\x30' # b' ' signifie qu'on traite une cha\u00eene d'octets (bytes)\na.decode('utf8')\n</code></pre> <pre><code>'x\u2a7e0'\n</code></pre> <p>R\u00e9f\u00e9rences </p> <p>Sp\u00e9cialit\u00e9 NSI 1re - Balabonski et al. - ellipses lien vers la description</p>"},{"location":"NSI1/S5/S5C3.html","title":"D'AUTRES TYPES CONSTRUITS","text":""},{"location":"NSI1/S5/S5C3.html#les-tableaux-part-2-construire-des-tableaux-en-comprehension","title":"Les tableaux - part. 2: construire des tableaux en compr\u00e9hension","text":""},{"location":"NSI1/S5/S5C3.html#construction-de-tableaux-en-comprehension","title":"Construction de tableaux en compr\u00e9hension","text":"<p>Supposons le probl\u00e8me suivant:  </p> <p>Construire un tableau des 10 premiers entiers naturels multiples de 9.   </p> <p>On peut construire ce tableau comme on l'a vu lors de la d\u00e9couverte des tableaux (on dit aussi construire en extension):  </p> <pre><code>t = [0, 9, 18, 27, ...]\n</code></pre> <p>C'est potentiellement long et pas tr\u00e8s \u00e9l\u00e9gant! Une deuxi\u00e8me solution serait d'utiliser une boucle <code>for</code>:  </p> <pre><code>t = [0] * 10\nfor i in range(10):\n    t[i] = 9 * i\n</code></pre> <p>Python propose une syntaxe plus compacte pour r\u00e9aliser cette op\u00e9ration. Il s'agit de la construction par compr\u00e9hension (on dit aussi en intension):  </p> <pre><code>t = [9 * i for i in range(10)]\n</code></pre> <p>\u00c0 retenir</p> <p>Plus g\u00e9n\u00e9ralement, au lieu de d\u00e9clarer un tableau puis de le remplir avec une boucle, on pr\u00e9f\u00e8rera une construction plus concise appel\u00e9e  construction par compr\u00e9hension, qui prend la forme suivante:  </p> <pre><code>tableau = [expr(i) for i in sequence]\n</code></pre> <p><code>expr(i)</code> est une expression de la variable <code>i</code> qui parcourt tous les \u00e9l\u00e9ments de <code>sequence</code> (qui peut \u00eatre un objet <code>range</code>, un tableau,  une chaine de caract\u00e8re ou un des types qui seront vus dans les paragraphes ci-apr\u00e8s). </p> <p>Modifions notre consigne de d\u00e9part:  </p> <p>Parmi les 10 premiers entiers naturels multiples de 9, construire un tableau des entiers pairs uniquement.  </p> <p>La construction par compr\u00e9hension permet l\u00e0 encore, une \u00e9criture compacte:  </p> <pre><code>t = [9 * i for i in range(10) if 9 * i % 2 == 0]\n</code></pre> <p>\u00c0 retenir</p> <p>La construction par compr\u00e9hension permet d'ajouter une condition bool\u00e9enne.  </p> <pre><code>tableau = [expr(i) for i in sequence if condition]\n</code></pre> <p><code>condition</code> est exprim\u00e9e avec les op\u00e9rateurs de comparaisons habituels.</p> <pre><code># Exemple\nt = [9 * i for i in range(20) if 9 * i % 2 == 0]\nprint(t)\n</code></pre> <pre><code>[0, 18, 36, 54, 72, 90, 108, 126, 144, 162]\n</code></pre>"},{"location":"NSI1/S5/S5C3.html#complement-agrandir-un-tableau","title":"Compl\u00e9ment: agrandir un tableau","text":"<p>Le langage python autorise un traitement particulier sur un tableau: pouvoir l'agrandir sur sa droite, m\u00eame si sa taille a d\u00e9j\u00e0 \u00e9t\u00e9 fix\u00e9e. La syntaxe fait intervenir une fonction disponible avec les objets de type list (on dit aussi une m\u00e9thode): <code>append</code>.</p> <pre><code>tab = [1, 2, 3]\ntab.append(5)\nprint(tab)\n</code></pre> <pre><code>[1, 2, 3, 5]\n</code></pre> <p>Attention</p> <p>Dans le cadre du programme de 1re NSI, on privil\u00e9giera autant que possible la compr\u00e9hension de tableau par  rapport \u00e0 l'utilisation de la m\u00e9thode <code>append</code>.</p>"},{"location":"NSI1/S5/S5C3.html#les-p-uplets","title":"Les p-uplets","text":""},{"location":"NSI1/S5/S5C3.html#construction-et-proprietes-dun-p-uplet","title":"Construction et propri\u00e9t\u00e9s d'un p-uplet","text":"<p>p-uplet</p> <p>En math\u00e9matique, un p-uplet est une collection ordonn\u00e9e d'objets.  </p> <p>Python fournit un type adapt\u00e9 \u00e0 la repr\u00e9sentation des p-uplets: le type <code>tuple</code>.  On cr\u00e9\u00e9 un tuple en \u00e9crivant les composantes du p-uplet s\u00e9par\u00e9es par une virgule et de pr\u00e9f\u00e9rence entre parenth\u00e8ses:  </p> <pre><code>notes = (17, 15, 16) \n</code></pre> <p>Comme avec les tableaux, on peut obtenir la taille d'un tuple avec la fonction native <code>len</code> et acc\u00e9der au \\(i^{\u00e8me}\\) \u00e9l\u00e9ment avec la notation habituelle des crochets:</p> <pre><code>notes = (17, 15, 16, 10)\nprint(\"Taille du p-uplet: \", len(notes))\nprint(\"Valeur du 3\u00e8me \u00e9l\u00e9ment (index 2): \", notes[2])\n</code></pre> <pre><code>Taille du p-uplet:  4\nValeur du 3\u00e8me \u00e9l\u00e9ment (index 2):  16\n</code></pre> <pre><code>notes[1] = 7\nprint(notes)\n</code></pre> <pre><code>---------------------------------------------------------------------------\n\nTypeError                                 Traceback (most recent call last)\n\n&lt;ipython-input-8-c340dc6cd5d2&gt; in &lt;module&gt;\n----&gt; 1 notes[1] = 7\n      2 print(notes)\n\n\nTypeError: 'tuple' object does not support item assignment\n</code></pre> <p>Contrairement aux tableaux les composantes d'un tuple ne sont pas modifiables. On dit que les tuples sont des objets immuables (ou non mutables). </p> <pre><code>notes[3] = 16.5\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-4-06e2d03882e0&gt; in &lt;module&gt;()\n----&gt; 1 notes[3] = 16.5\n\nTypeError: 'tuple' object does not support item assignment\n</code></pre>"},{"location":"NSI1/S5/S5C3.html#parcourir-un-p-uplet","title":"Parcourir un p-uplet","text":"<p>Les m\u00e9thodes de parcours rencontr\u00e9es lors de la d\u00e9couverte des tableaux sont toujours valables. On peut it\u00e9rer sur les index ou sur les \u00e9l\u00e9ments.</p> <pre><code>print(\"****Relev\u00e9 de notes****\")\nfor n in notes:\n    print(n)\nprint(\"****Moyenne****\")\ns = 0\nfor i in range(len(notes)):\n    s = s + notes[i]\nm = s / len(notes)\nprint(m)\n</code></pre> <pre><code>****Relev\u00e9 de notes****\n17\n15\n16\n10\n****Moyenne****\n14.5\n</code></pre>"},{"location":"NSI1/S5/S5C3.html#insuffisance-des-p-uplets","title":"Insuffisance des p-uplets","text":"<p>Etant donn\u00e9 le probl\u00e8me suivant:  </p> <p>On souhaite stocker les informations concernant des fichers image dans un p-uplet. Ce dernier aura pour composante sa largeur en pixel, sa hauteur en pixel et sa taille en kilo-octet. </p> <p>Par exemple, soit le fichier \"dog.png\" qui a une largeur de 384 pixels, une hauteur de 576 pixels et dont la taille est de 243 ko.  On peut le mod\u00e9liser par un simple tuple:</p> <pre><code>image = (384, 576, 243)\n</code></pre> <p>Cependant cette solution n'est pas id\u00e9ale. En effet, il faut se souvenir de l'ordre dans lequel les entiers ont \u00e9t\u00e9 rentr\u00e9s ! On \u00e9vitera d'utiliser des p-uplets lorsque des ambiguit\u00e9s ou confusions sont possibles.</p>"},{"location":"NSI1/S5/S5C3.html#une-solution-possible","title":"Une solution possible","text":"<p>Pour contourner le probl\u00e8me soulev\u00e9 pr\u00e9c\u00e9demment, Python a une solution: les p-uplets nomm\u00e9s. Chaque composante du p-uplet se voit donner un nom!  </p> <p>Python poss\u00e8de un type permettant de manipuler les p-uplets nomm\u00e9s: les <code>namedtuple</code> du module <code>collections</code>.  Cependant, et conform\u00e9ment au programme, en classe de 1re NSI, on utilisera des dictionnaires pour impl\u00e9menter des p-uplets nomm\u00e9s.</p>"},{"location":"NSI1/S5/S5C3.html#les-dictionnaires","title":"Les dictionnaires","text":"<p>On consultera au pr\u00e9alable la vid\u00e9o suivante.</p>"},{"location":"NSI1/S5/S5C3.html#construction-et-proprietes-des-dictionnaires","title":"Construction et propri\u00e9t\u00e9s des dictionnaires","text":"<p>Python poss\u00e8de une structure de donn\u00e9es tr\u00e8s importante: le dictionnaire. Contrairement aux tableaux ou aux tuples, les valeurs ne sont plus associ\u00e9es \u00e0 des index forc\u00e9ment num\u00e9riques mais \u00e0 des cl\u00e9s qui peuvent \u00eatre des nombres, des chaines de caract\u00e8res, des tuples.  On d\u00e9clare un dictionnaire en pla\u00e7ant ses paires cl\u00e9-valeur entre accolades et s\u00e9par\u00e9es par une virgule. La cl\u00e9 et la valeur \u00e9tant s\u00e9par\u00e9es par le caract\u00e8re <code>:</code>.  </p> <p>Ainsi, le probl\u00e8me du fichier image pr\u00e9c\u00e9dent peut \u00eatre mod\u00e9lis\u00e9 par:</p> <pre><code>image = {'nom':'dog.png', 'larg': 384, 'haut': 576, 'taille': 243}\nprint(\"Taille de l'image:\", image['taille'], \"ko\")\nprint(\"Hauteur:\", image['haut'], \"pixels\")\n</code></pre> <pre><code>Taille de l'image: 243 ko\nHauteur: 576 pixels\n</code></pre> <p>Autre exemple On peut \u00e9galement construire un dictionnaire \u00e0 partir d'un dictionnaire vide. La syntaxe est la suivante:</p> <pre><code>cyclones_reunion = {}\ncyclones_reunion[\"bejisa\"] = (2, 1, 2014)\ncyclones_reunion[\"dumile\"] = (3, 1, 2013)\ncyclones_reunion[\"dina\"] = (22, 1, 2002)\ncyclones_reunion[\"gamede\"] = (25, 2, 2007)\nprint(cyclones_reunion)\n</code></pre> <pre><code>{'bejisa': (2, 1, 2014), 'dumile': (3, 1, 2013), 'dina': (22, 1, 2002), 'gamede': (25, 2, 2007)}\n</code></pre> <p>Le nombre d'entr\u00e9es du dictionnaire est obtenu avec la fonction <code>len</code>.</p> <pre><code>len(cyclones_reunion)\n</code></pre> <pre><code>4\n</code></pre> <p>On acc\u00e8de \u00e0 la valeur associ\u00e9e \u00e0 une cl\u00e9 d'un dictionnaire <code>d</code> avec une construction du type <code>d[cl\u00e9]</code>. Si la cl\u00e9 n'existe pas, python l\u00e8vera une exception KeyError.</p> <pre><code>print(cyclones_reunion[\"dina\"])\n</code></pre> <pre><code>(22, 1, 2002)\n</code></pre> <p>Si la cl\u00e9 n'existe pas:  </p> <pre><code>print(cyclones_reunion[\"carlos\"])\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n&lt;ipython-input-9-0306c0a2304c&gt; in &lt;module&gt;()\n----&gt; 1 print(cyclones_reunion[\"carlos\"])\n\nKeyError: 'carlos'\n</code></pre> <p>Enfin, un dictionnaire n'est pas ordonn\u00e9. Les \u00e9l\u00e9ments ne sont pas forc\u00e9ment afich\u00e9s dans l'ordre de leur cr\u00e9ation.</p>"},{"location":"NSI1/S5/S5C3.html#parcours-dun-dictionnaire","title":"Parcours d'un dictionnaire","text":"<p>L'appartenance \u00e0 un dictionnaire (en r\u00e9alit\u00e9 aux cl\u00e9s d'un dictionnaire) se fait avec le mot cl\u00e9 <code>in</code>. Ainsi:</p> <pre><code>'dina' in cyclones_reunion.keys()\n</code></pre> <pre><code>True\n</code></pre> <pre><code>'carlos' in cyclones_reunion.keys()\n</code></pre> <pre><code>False\n</code></pre> <p>Le parcours d'un dictionnaire <code>d</code> peut se faire en it\u00e9rant avec une boucle <code>for</code> sur:  </p> <ul> <li>les cl\u00e9s  <pre><code>for cle in d.keys(): # souvent abr\u00e9g\u00e9 en `for cle in d`\n    ...\n</code></pre></li> <li>les valeurs <pre><code>for val in d.values():\n    ...\n</code></pre></li> <li>les couples (cl\u00e9,valeur) <pre><code>for cle,val in d.items():\n    ...\n</code></pre></li> </ul> <p>R\u00e9sum\u00e9</p> <p>Tableau On peut it\u00e9rer directement sur les \u00e9l\u00e9ments d'un tableau avec la construction du type <code>for element in  tableau:</code>. Pour remplir un tableau on peut utiliser une construction par compr\u00e9hension:  </p> <pre><code>tableau = [expr(x) for x in sequence]\n</code></pre> <p>p-uplet Les p-uplets sont impl\u00e9ment\u00e9s en python par le type <code>tuple</code>. Il s'agit d'un objet non mutable. La syntaxe  pour construire un p-uplet ayant N composantes, est:  </p> <pre><code>mon_objet = (comp1, comp2, ..., compN)\n</code></pre> <p>Les diff\u00e9rentes composantes sont accessibles par indexation, comme pour un tableau: <code>mon_objet[0]</code>,  <code>mob_objet[1]</code> etc. Le parcours est identique \u00e0 celui d'un tableau.  </p> <p>Dictionnaires Un dictionnaire est une structure regroupant des paires \"cl\u00e9:valeur\". En python, ces paires sont situ\u00e9es  entre accolades et s\u00e9par\u00e9es par une virgule.  </p> <pre><code>image = {'nom':'dog.png', 'larg': 384, 'haut': 576, 'taille': 243}\n</code></pre> <p>On peut it\u00e9rer sur les cl\u00e9s, les valeurs ou les paires cl\u00e9,valeur avec les m\u00e9thodes <code>keys()</code>, <code>values()</code>  ou <code>items()</code>.  </p> <p>p-uplets nomm\u00e9s En python, les p-uplets nomm\u00e9s sont impl\u00e9ment\u00e9s avec des dictionnaires.</p>"},{"location":"NSI1/S5/S5C3a.html","title":"S\u00e9quence 4 - Aller plus loin avec les tableaux","text":""},{"location":"NSI1/S5/S5C3a.html#construction-de-tableaux-en-comprehension","title":"Construction de tableaux en compr\u00e9hension","text":"<p>Supposons le probl\u00e8me suivant:  </p> <p>Construire un tableau des 10 premiers entiers naturels multiples de 9.   </p> <p>On peut construire ce tableau comme on l'a vu lors de la d\u00e9couverte des tableaux (on dit aussi construire en extension):  </p> <pre><code>t = [0, 9, 18, 27, ...]\n</code></pre> <p>C'est potentiellement long et pas tr\u00e8s \u00e9l\u00e9gant! Une deuxi\u00e8me solution serait d'utiliser une boucle <code>for</code>:  </p> <pre><code>t = [0] * 10\nfor i in range(10):\n    t[i] = 9 * i\n</code></pre> <p>Python propose une syntaxe plus compacte pour r\u00e9aliser cette op\u00e9ration. Il s'agit de la construction par compr\u00e9hension (on dit aussi en intension):  </p> <pre><code>t = [9 * i for i in range(10)]\n</code></pre> <p>\u00c0 retenir</p> <p>Plus g\u00e9n\u00e9ralement, au lieu de d\u00e9clarer un tableau puis de le remplir avec une boucle, on pr\u00e9f\u00e8rera une construction plus concise appel\u00e9e  construction par compr\u00e9hension, qui prend la forme suivante:  </p> <pre><code>tableau = [expr(i) for i in sequence]\n</code></pre> <p><code>expr(i)</code> est une expression de la variable <code>i</code> qui parcourt tous les \u00e9l\u00e9ments de <code>sequence</code> (qui peut \u00eatre un objet <code>range</code>, un tableau,  une chaine de caract\u00e8re ou un des types qui seront vus dans les paragraphes ci-apr\u00e8s). </p> <p>Modifions notre consigne de d\u00e9part:  </p> <p>Parmi les 10 premiers entiers naturels multiples de 9, construire un tableau des entiers pairs uniquement.  </p> <p>La construction par compr\u00e9hension permet l\u00e0 encore, une \u00e9criture compacte:  </p> <pre><code>t = [9 * i for i in range(10) if 9 * i % 2 == 0]\n</code></pre> <p>\u00c0 retenir</p> <p>La construction par compr\u00e9hension permet d'ajouter une condition bool\u00e9enne.  </p> <pre><code>tableau = [expr(i) for i in sequence if condition]\n</code></pre> <p><code>condition</code> est exprim\u00e9e avec les op\u00e9rateurs de comparaisons habituels.</p> <pre><code># Exemple\nt = [9 * i for i in range(20) if 9 * i % 2 == 0]\nprint(t)\n</code></pre> <pre><code>[0, 18, 36, 54, 72, 90, 108, 126, 144, 162]\n</code></pre>"},{"location":"NSI1/S5/S5C3a.html#complement-agrandir-un-tableau","title":"Compl\u00e9ment: agrandir un tableau","text":"<p>Le langage python autorise un traitement particulier sur un tableau: pouvoir l'agrandir sur sa droite, m\u00eame si sa taille a d\u00e9j\u00e0 \u00e9t\u00e9 fix\u00e9e. La syntaxe fait intervenir une fonction disponible avec les objets de type list (on dit aussi une m\u00e9thode): <code>append</code>.</p> <pre><code>tab = [1, 2, 3]\ntab.append(5)\nprint(tab)\n</code></pre> <pre><code>[1, 2, 3, 5]\n</code></pre> <p>Attention</p> <p>Dans le cadre du programme de 1re NSI, on privil\u00e9giera autant que possible la compr\u00e9hension de tableau par  rapport \u00e0 l'utilisation de la m\u00e9thode <code>append</code>.</p>"},{"location":"NSI1/S5/S5C3b.html","title":"S\u00e9quence 4 - Deuxi\u00e8me type construit: les p-uplets","text":""},{"location":"NSI1/S5/S5C3b.html#construction-et-proprietes-dun-p-uplet","title":"Construction et propri\u00e9t\u00e9s d'un p-uplet","text":"<p>p-uplet</p> <p>En math\u00e9matique, un p-uplet est une collection ordonn\u00e9e d'objets.  </p> <p>Python fournit un type adapt\u00e9 \u00e0 la repr\u00e9sentation des p-uplets: le type <code>tuple</code>.  On cr\u00e9\u00e9 un tuple en \u00e9crivant les composantes du p-uplet s\u00e9par\u00e9es par une virgule et de pr\u00e9f\u00e9rence entre parenth\u00e8ses:  </p> <pre><code>notes = (17, 15, 16) \n</code></pre> <p>Comme avec les tableaux, on peut obtenir la taille d'un tuple avec la fonction native <code>len</code> et acc\u00e9der au \\(i^{\u00e8me}\\) \u00e9l\u00e9ment avec la notation habituelle des crochets:</p> <pre><code>notes = (17, 15, 16, 10)\nprint(\"Taille du p-uplet: \", len(notes))\nprint(\"Valeur du 3\u00e8me \u00e9l\u00e9ment (index 2): \", notes[2])\n</code></pre> <pre><code>Taille du p-uplet:  4\nValeur du 3\u00e8me \u00e9l\u00e9ment (index 2):  16\n</code></pre> <pre><code>notes[1] = 7\nprint(notes)\n</code></pre> <pre><code>---------------------------------------------------------------------------\n\nTypeError                                 Traceback (most recent call last)\n\n&lt;ipython-input-8-c340dc6cd5d2&gt; in &lt;module&gt;\n----&gt; 1 notes[1] = 7\n      2 print(notes)\n\n\nTypeError: 'tuple' object does not support item assignment\n</code></pre> <p>Contrairement aux tableaux les composantes d'un tuple ne sont pas modifiables. On dit que les tuples sont des objets immuables (ou non mutables). </p> <pre><code>notes[3] = 16.5\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-4-06e2d03882e0&gt; in &lt;module&gt;()\n----&gt; 1 notes[3] = 16.5\n\nTypeError: 'tuple' object does not support item assignment\n</code></pre>"},{"location":"NSI1/S5/S5C3b.html#parcourir-un-p-uplet","title":"Parcourir un p-uplet","text":"<p>Les m\u00e9thodes de parcours rencontr\u00e9es lors de la d\u00e9couverte des tableaux sont toujours valables. On peut it\u00e9rer sur les index ou sur les \u00e9l\u00e9ments.</p> <pre><code>print(\"****Relev\u00e9 de notes****\")\nfor n in notes:\n    print(n)\nprint(\"****Moyenne****\")\ns = 0\nfor i in range(len(notes)):\n    s = s + notes[i]\nm = s / len(notes)\nprint(m)\n</code></pre> <pre><code>****Relev\u00e9 de notes****\n17\n15\n16\n10\n****Moyenne****\n14.5\n</code></pre>"},{"location":"NSI1/S5/S5C3b.html#insuffisance-des-p-uplets","title":"Insuffisance des p-uplets","text":"<p>Etant donn\u00e9 le probl\u00e8me suivant:  </p> <p>On souhaite stocker les informations concernant des fichers image dans un p-uplet. Ce dernier aura pour composante sa largeur en pixel, sa hauteur en pixel et sa taille en kilo-octet. </p> <p>Par exemple, soit le fichier \"dog.png\" qui a une largeur de 384 pixels, une hauteur de 576 pixels et dont la taille est de 243 ko.  </p> <p>On peut le mod\u00e9liser par un simple tuple:</p> <pre><code>image = (384, 576, 243)\n</code></pre> <p>Cependant cette solution n'est pas id\u00e9ale. En effet, il faut se souvenir de l'ordre dans lequel les entiers ont \u00e9t\u00e9 rentr\u00e9s ! On \u00e9vitera d'utiliser des p-uplets lorsque des ambiguit\u00e9s ou confusions sont possibles.</p>"},{"location":"NSI1/S5/S5C3b.html#une-solution-possible","title":"Une solution possible","text":"<p>Pour contourner le probl\u00e8me soulev\u00e9 pr\u00e9c\u00e9demment, Python a une solution: les p-uplets nomm\u00e9s. Chaque composante du p-uplet se voit donner un nom!  </p> <p>Python poss\u00e8de un type permettant de manipuler les p-uplets nomm\u00e9s: les <code>namedtuple</code> du module <code>collections</code>.  Cependant, et conform\u00e9ment au programme, en classe de 1re NSI, on utilisera des dictionnaires pour impl\u00e9menter des p-uplets nomm\u00e9s (voir cours dictionnaires).</p>"},{"location":"NSI1/S5/S5C4.html","title":"TABLES DE DONNEES","text":""},{"location":"NSI1/S5/S5C4.html#les-tableaux-suite-et-fin","title":"Les tableaux (suite et fin)","text":""},{"location":"NSI1/S5/S5C4.html#quest-ce-quun-tableau-de-tableaux","title":"Qu'est-ce qu'un tableau de tableaux?","text":"<p>Les \u00e9l\u00e9ments d'un tableau peuvent \u00eatre des entiers, des flottants, des chaines de caract\u00e8res, mais aussi ... des tableaux! Ainsi, l'\u00e9criture suivante est parfaitement valide:  </p> <pre><code>t = [[1, 2, 3, 4], [5, 6, 7, 8]]\n</code></pre> <p><code>t</code> est un tableau compos\u00e9 de deux tableaux de quatre entiers. Pour faciliter la compr\u00e9hension, on aussi saisir <code>t</code> de la mani\u00e8re suivante:</p> <pre><code>t = [[1, 2, 3, 4],\n     [5, 6, 7, 8]]\n</code></pre> <p>Cette pr\u00e9sentation met bien en \u00e9vidence une structure \u00e0 deux lignes et quatre colonnes. Un tel tableau, dont les lignes ont la m\u00eame taille, est appel\u00e9 une matrice.  </p> <p>Les tableaux de tableaux sont utilis\u00e9s, entre autres, pour les manipulations des donn\u00e9es tabul\u00e9es (voir ci-dessous) ou des images.</p>"},{"location":"NSI1/S5/S5C4.html#comment-acceder-aux-elements-dun-tableau-de-tableaux","title":"Comment acc\u00e9der aux \u00e9l\u00e9ments d'un tableau de tableaux?","text":"<p>On peut envisager un acc\u00e8s index\u00e9. Ce qui revient \u00e0 dire que l'acc\u00e8s \u00e0 un \u00e9l\u00e9ment du tableau <code>t[i][j]</code> se fera gr\u00e2ce \u00e0 deux index \\(i\\) et \\(j\\) qui repr\u00e9sentent respectivement le num\u00e9ro de la ligne et le num\u00e9ro de la colonne. Exemples</p> <pre><code>t = [[1, 2, 3, 4],\n     [5, 6, 7, 8]]\n#El\u00e9ment de la 2\u00e8me ligne, 3\u00e8me colonne --&gt; i=1, j=2\nprint(t[1][2])\n\n7\n</code></pre> <p>On peut aussi envisager de modifier la valeur situ\u00e9e \u00e0 la ligne \\(i\\) et \u00e0 la colonne \\(j\\).</p> <pre><code>#Modification de la valeur de la 1ere ligne, 4eme colonne --&gt; i=0, j=3\nt[0][3] = 10\nprint(t)\n\n[[1, 2, 3, 10], [5, 6, 7, 8]]\n</code></pre> \u00c0 faire <p>Exercice d'application directe Soit la matrice:</p> <pre><code>t = [[15, 17, 22],\n     [17, 25, 27],\n     [31, 33, 35]]\n</code></pre> <ul> <li>Que vaut <code>t[1][2]</code>?</li> <li>Que doit-on modifier pour avoir <code>[[15, 17, 22], [17, 25, 45], [31, 33, 35]]</code>?</li> </ul>"},{"location":"NSI1/S5/S5C4.html#comment-construire-un-tableau-de-tableaux-en-comprehension","title":"Comment construire un tableau de tableaux en compr\u00e9hension?","text":"<p>Pour construire un tableau <code>t</code> ayant \\(n\\) lignes et \\(p\\) colonnes initialis\u00e9 avec des z\u00e9ros par exemple, on peut proc\u00e9der comme suit:</p> <pre><code>n = 3\np = 4\n\nt = [[0]*p for i in range(n)]\n</code></pre> <p>Notation</p> <p>L'instruction <code>[0]*p</code> est \u00e9quivalente \u00e0 <code>[0] + [0] + ... + [0]</code> c'est \u00e0 dire <code>p</code> tableaux <code>[0]</code>) soit <code>[0,  0, ..., 0]</code> compos\u00e9 de <code>p</code> z\u00e9ros.</p> \u00c0 faire <p>Application directe Que vaut <code>t</code> apr\u00e8s l'instruction <code>t = [[i, i+1] for i in range(2)]</code>?</p>"},{"location":"NSI1/S5/S5C4.html#organisation-des-donnees-sous-forme-de-tables","title":"Organisation des donn\u00e9es sous forme de tables","text":""},{"location":"NSI1/S5/S5C4.html#reperes-historiques","title":"Rep\u00e8res historiques","text":"<p>Le compilateur fortran de l'IBM OS/360 supportait d\u00e8s 1972 des donn\u00e9es tabul\u00e9es, au format csv (comma-separated values). Source</p>"},{"location":"NSI1/S5/S5C4.html#quest-ce-quune-table-de-donnees","title":"Qu'est-ce qu'une table de donn\u00e9es?","text":"<p>Une table de donn\u00e9es est un arrangement de lignes et de colonnes. Les lignes ont divers synonymes: enregistrement, p-uplet, vecteur, etc.. Il en est de m\u00eame pour les colonnes: champ, propri\u00e9t\u00e9, attribut, etc.  L'organisation des donn\u00e9es sous forme de table (on dit aussi sous forme tabul\u00e9e) est tr\u00e8s r\u00e9pandue.  </p> <p>Exemple: un jeu de donn\u00e9es en lien avec des artistes \u00e9voluant dans le milieu du rap durant ces 30 derni\u00e8res ann\u00e9es. Les donn\u00e9es sont disponibles \u00e0 cette adresse et on peut les r\u00e9cup\u00e9rer sous forme de fichier <code>csv</code>. Le fichier comporte 581 enregistrements qui ont 12 champs. En voici un aper\u00e7u:</p> Name Categories URL Years Active Start Birthdate Summary 0 Trae Tha Truth rapper https://en.wikipedia.org/wiki/Trae_tha_Truth 1998 1980-07-03 Frazier Othel Thompson III (born July 3, 1980), better known by his stage name Trae tha Truth or simply Trae, is an American hip hop recording artist from Houston, Texas. 1 13 Block group https://genius.com/artists/13-block 2014 13 Block is a french Hip Hop group from Sevran,  Seine-Saint-Denis. The group is composed of DeTess, OldPee, Zefor, et Zed. 2 Jay Rock rapper https://en.wikipedia.org/wiki/Jay_Rock 2003 1985-03-31 Johnny Reed McKinzie, Jr., (born March 31, 1985), better known by his stage name Jay Rock, is an American hip hop recording artist from Watts, California. 3 Droogz Brigade group https://genius.com/artists/Droogz-brigade 2008 Droogz Brigade is french hiphop group from Toulouse. The group is composed by Sad Vicious, Staff l\u2019instable, Al\u2019tarba, Rhama le singe and Herken. 4 Jeff le Nerf rapper https://fr.wikipedia.org/wiki/Jeff_Le_Nerf 1997 1982-03-17 Jeff Le Nerf is a french rapper from Grenoble. He is a member of the crew Collal-Shit. In 2005 he join the label IV My People, released the \"Le Nerf \u00e0 vif\" album, after what he continue is carrier has an independant artist. ... Years Active End Deathdate Clip Example YouTube City Neighborhood Coordinates 0 https://www.youtube.com/embed/QqKh5Bhx3YE Houston 29.674552,-95.363456 1 https://www.youtube.com/embed/ewExz3cx_RM Sevran 48.929103,2.533054 2 https://www.youtube.com/embed/fk10RoZV4fw Watts Nickerson Gardens projects 33.930751,-118.24893 3 https://www.youtube.com/embed/e9UbNKuxzzk Toulouse 43.582029,1.458244 4 https://www.youtube.com/embed/kSiLpodQTBQ Grenoble 45.189542,5.707799 <p>Remarque</p> <p>il n'est pas rare dans des jeux de donn\u00e9es r\u00e9els, d'avoir des champs vides. Il faudra, peut \u00eatre en tenir compte lors des traitements.</p> <p>Les donn\u00e9es tabul\u00e9es sont tr\u00e8s importantes en informatique: on les utilise dans de nombreux domaines (web, IA, calcul scientifique, etc.). </p>"},{"location":"NSI1/S5/S5C4.html#quelle-structure-de-donnees-pour-representer-une-table","title":"Quelle structure de donn\u00e9es pour  repr\u00e9senter une table ?","text":"<p>Les donn\u00e9es sont habituellement s\u00e9par\u00e9es des programmes qui les traitent, dans un fichier texte. On utilise souvent des fichiers au format csv (comma separated values). Chaque ligne de ce fichier correspond \u00e0 un enregistrement (p-uplet). Les diff\u00e9rents champs (attributs) \u00e9tant s\u00e9par\u00e9s par un d\u00e9limiteur (virgule, point-virgule, tabulation, etc.).  </p> <p>La librairie standard de python poss\u00e8de un module adapt\u00e9 \u00e0 la lecture (et \u00e0 l'\u00e9criture) de ce type de fichiers: le module csv.</p>"},{"location":"NSI1/S5/S5C4.html#importation-sous-forme-de-tableau-de-tableaux","title":"Importation sous forme de tableau de tableaux","text":"<p>On souhaite importer le fichier pr\u00e9c\u00e9dent regroupant des artistes: <code>rapworld.csv</code> situ\u00e9 dans le dossier <code>data</code>, sous la forme d'un tableau de tableaux. Une bonne pratique pour ouvrir le fichier et y r\u00e9aliser des op\u00e9rations consiste \u00e0 utiliser la structure suivante:</p> <p>\u00c0 conna\u00eetre</p> <pre><code>import csv\n\n\nwith open('data/rapworld.csv', newline='', encoding='utf8') as f:\n    table = [ligne for ligne in csv.reader(f, delimiter=';')]\n</code></pre> <p>Utilisons cette fa\u00e7on de proc\u00e9der pour afficher les 3 premi\u00e8res lignes de cette table:</p> <pre><code>import csv\n\n\nwith open('data/rapworld.csv', newline='', encoding='utf8') as f:\n    table = [ligne for ligne in csv.reader(f, delimiter=';')]\n\nfor i in range(3):\n    print(i,'-', table[i])\n    print() # ins\u00e8re une ligne vide pour plus de lisibilit\u00e9\n</code></pre> <pre><code>0 - ['Name', 'Categories', 'URL', 'Years Active Start', 'Birthdate', 'Summary', 'Years Active End', 'Deathdate', 'Clip Example YouTube', 'City', 'Neighborhood', 'Coordinates']\n\n1 - ['Trae Tha Truth', 'rapper', 'https://en.wikipedia.org/wiki/Trae_tha_Truth', '1998', '1980-07-03', 'Frazier Othel Thompson III (born July 3, 1980), better known by his stage name Trae tha Truth or simply Trae, is an American hip hop recording artist from Houston, Texas.', '', '', 'https://www.youtube.com/embed/QqKh5Bhx3YE', 'Houston', '', '29.674552,-95.363456']\n\n2 - ['13 Block', 'group', 'https://genius.com/artists/13-block', '2014', '', '13 Block is a french Hip Hop group from Sevran,  Seine-Saint-Denis. The group is composed of DeTess, OldPee, Zefor, et Zed.', '', '', 'https://www.youtube.com/embed/ewExz3cx_RM', 'Sevran', '', '48.929103,2.533054']\n</code></pre> <p>Bilan</p> <p>Cette premi\u00e8re solution est simple \u00e0 mettre en oeuvre, cependant elle souffre de deux d\u00e9fauts:  </p> <ul> <li>on doit m\u00e9moriser l'ordre des attributs;</li> <li>la premi\u00e8re ligne apparait comme une ligne de donn\u00e9es, il va falloir l'ignorer lors des traitements.</li> </ul> \u00c0 faire <p>Application directe </p> <p>\u00c0 l'index 533 de la table pr\u00e9c\u00e9dente, on trouve un groupe r\u00e9unionnais. De quelle ville ce groupe est-il originaire?</p>"},{"location":"NSI1/S5/S5C4.html#importation-sous-forme-de-tableau-de-n-uplets-nommes","title":"Importation sous forme de tableau de n-uplets nomm\u00e9s","text":"<p>Pour \u00e9viter les inconv\u00e9nients pr\u00e9c\u00e9dents, on peut importer les donn\u00e9es tabul\u00e9es sous forme de tableau de p-uplets nomm\u00e9s. Un code python typique est le suivant:</p> <p>\u00c0 conna\u00eetre</p> <pre><code>import csv\n\n\nwith open('data/rapworld.csv', newline='', encoding='utf8') as f:\n    table = [dict(ligne) for ligne in csv.DictReader(f, delimiter=';')]\n</code></pre> <p>Les premiers \u00e9l\u00e9ments affich\u00e9s confirment que l'on a bien un tableau de dictionnaire:</p> <pre><code>import csv\n\n\nwith open('data/rapworld.csv', newline='', encoding='utf8') as f:\n    table = [dict(ligne) for ligne in csv.DictReader(f, delimiter=';')]\n\nfor i in range(3):\n    print(table[i])\n    print()\n</code></pre> <pre><code>{'Name': 'Trae Tha Truth', 'Categories': 'rapper', 'URL': 'https://en.wikipedia.org/wiki/Trae_tha_Truth', 'Years Active Start': '1998', 'Birthdate': '1980-07-03', 'Summary': 'Frazier Othel Thompson III (born July 3, 1980), better known by his stage name Trae tha Truth or simply Trae, is an American hip hop recording artist from Houston, Texas.', 'Years Active End': '', 'Deathdate': '', 'Clip Example YouTube': 'https://www.youtube.com/embed/QqKh5Bhx3YE', 'City': 'Houston', 'Neighborhood': '', 'Coordinates': '29.674552,-95.363456'}\n\n{'Name': '13 Block', 'Categories': 'group', 'URL': 'https://genius.com/artists/13-block', 'Years Active Start': '2014', 'Birthdate': '', 'Summary': '13 Block is a french Hip Hop group from Sevran,  Seine-Saint-Denis. The group is composed of DeTess, OldPee, Zefor, et Zed.', 'Years Active End': '', 'Deathdate': '', 'Clip Example YouTube': 'https://www.youtube.com/embed/ewExz3cx_RM', 'City': 'Sevran', 'Neighborhood': '', 'Coordinates': '48.929103,2.533054'}\n\n{'Name': 'Jay Rock', 'Categories': 'rapper', 'URL': 'https://en.wikipedia.org/wiki/Jay_Rock', 'Years Active Start': '2003', 'Birthdate': '1985-03-31', 'Summary': 'Johnny Reed McKinzie, Jr., (born March 31, 1985), better known by his stage name Jay Rock, is an American hip hop recording artist from Watts, California.', 'Years Active End': '', 'Deathdate': '', 'Clip Example YouTube': 'https://www.youtube.com/embed/fk10RoZV4fw', 'City': 'Watts', 'Neighborhood': 'Nickerson Gardens projects', 'Coordinates': '33.930751,-118.24893'}\n</code></pre> <p>On remarque que ce tableau ne contient plus la premi\u00e8re ligne. Cette derni\u00e8re a servi \u00e0 fournir les cl\u00e9s du dictionnaire cr\u00e9\u00e9.  </p> <p>Note</p> <p>L'instruction <code>dict</code> du tableau construit en compr\u00e9hension est n\u00e9cessaire avec les derni\u00e8res versions de  python, afin d'avoir des \u00e9l\u00e9ments de type dictionnaire.</p> \u00c0 faire <p>Application directe Les informations concernant <code>Future Crew</code> se trouvent maintenant \u00e0 l'index 532 de cette table (rappel: la  1ere ligne a servi pour cr\u00e9er les cl\u00e9s du dictionnaire). Afficher l'URL de Wikipedia concernant ce groupe.</p>"},{"location":"NSI1/S5/S5C4.html#resume","title":"R\u00e9sum\u00e9","text":"<p>\u00c0 retenir</p> <ul> <li>Les tableaux peuvent contenir aussi des tableaux. Il est commode de les pr\u00e9senter sur plusieurs lignes.  Un \u00e9l\u00e9ment sera alors rep\u00e9r\u00e9 par <code>t[i][j]</code> (i et j repr\u00e9sentant la ligne et la colonne).</li> <li>Une table de donn\u00e9es est un arrangement de lignes et de colonnes. Les donn\u00e9es sont souvent situ\u00e9es dans  des fichiers csv. On peut les importer de deux mani\u00e8res:  </li> </ul> <pre><code>import csv\n\n\nwith open(fichier, newline='', encoding='utf8') as f:\n    table = [ligne for ligne in csv.reader(f, delimiter=';')]\n</code></pre> <p>ou</p> <pre><code>import csv\n\n\nwith open(fichier, newline='', encoding='utf8') as f:\n    table = [dict(ligne) for ligne in csv.DictReader(f, delimiter=';')]\n</code></pre> <p>Attention \u00e0 bien ajuster le d\u00e9limiteur (au besoin, ouvrir le fichier csv pour v\u00e9rification).</p>"},{"location":"NSI1/S5/S5C5.html","title":"Recherche dans une table","text":"<p>Lien vers les fichiers de travail</p> <pre><code>import csv\n\n\nwith open('data/rapworld.csv', newline='', encoding='utf8') as f:\n    t = [dict(ligne) for ligne in csv.DictReader(f, delimiter=';')]\n</code></pre>"},{"location":"NSI1/S5/S5C5.html#coherence-dune-table","title":"Coh\u00e9rence d'une table","text":""},{"location":"NSI1/S5/S5C5.html#les-donnees-sont-elles-valides","title":"Les donn\u00e9es sont-elles valides?","text":"<p>Dans le cours pr\u00e9c\u00e9dent on a import\u00e9 les donn\u00e9es d'un fichier csv dans un tableau.  Cependant, rien ne garantit la validit\u00e9 des lignes. Les informations peuvent \u00eatre manquantes ou incoh\u00e9rentes.  </p> <p>Pour faire un traitement sur l'\u00e2ge des artistes par exemple, on s'assurera que ce champ est bien renseign\u00e9.</p> <pre><code>def est_valide_age(artiste):\n\"\"\"\n    Renvoie True si l'\u00e2ge est renseign\u00e9.\n    \"\"\"\n    if artiste['Birthdate'] != '':\n        return True\n    return False\n</code></pre> <pre><code>table_conforme_age = [art for  art in t if est_valide_age(art) is True]\nlen(table_conforme_age)\n</code></pre> <pre><code>277\n</code></pre> <p>On pourrait v\u00e9rifier que les date d'anniversaire et de d\u00e9c\u00e8s (si pr\u00e9sente) sont bien coh\u00e9rentes. </p> <pre><code>def est_valide_dc(artiste):\n\"\"\" Renvoie True si les dates de d\u00e9c\u00e8s et d'anniversaire sont coh\u00e9rentes\"\"\"\n    if artiste['Deathdate'] != '' and artiste['Birthdate'] != '':\n        if int(artiste['Deathdate'][0:4]) &gt; int(artiste['Birthdate'][0:4]):\n            return True\n    return False\n</code></pre> <pre><code>table_conforme_dc = [art for  art in t if est_valide_dc(art) is True]\nlen(table_conforme_dc)\n</code></pre> <pre><code>18\n</code></pre>"},{"location":"NSI1/S5/S5C5.html#la-table-comporte-t-elle-des-doublons","title":"La table comporte-t-elle des doublons?","text":"<p>Les tables de donn\u00e9es ne doivent g\u00e9n\u00e9ralement pas comporter de doublons. La fonction suivante v\u00e9rifie la pr\u00e9sence de doublons dans une table.</p> <pre><code>def doublon(t):\n\"\"\"\n    Renvoie un bool\u00e9en correspond \u00e0 la pr\u00e9sence ou non de doublons dans la table.\n    t: tableau de dictionnaires\n    \"\"\"\n    for i in range(len(t) - 1):\n        for j in range(i + 1, len(t)):\n            if t[i] == t[j]:\n                return True\n    return False\n</code></pre> <pre><code>doublon(t)\n</code></pre> <pre><code>False\n</code></pre> <p>Note</p> <p>Cette fonction n'est pas tr\u00e8s efficace, notamment sur des tables volumineuses.</p>"},{"location":"NSI1/S5/S5C5.html#selection-de-lignes-ou-de-colonnes","title":"S\u00e9lection de lignes ou de colonnes","text":""},{"location":"NSI1/S5/S5C5.html#comment-selectionner-des-lignes-dune-table","title":"Comment s\u00e9lectionner des lignes d'une table?","text":"<p>Les op\u00e9rations faites sur les tables sont en nombre tr\u00e8s limit\u00e9. Parmi celles-ci, on trouve la s\u00e9lection de lignes qui r\u00e9pondent \u00e0 certain(s) crit\u00e8re(s). Ces crit\u00e8res sont exprim\u00e9s avec des bool\u00e9ens.  </p> <p>En python, on exprimera ces crit\u00e8res avec des fonctions <code>condition_</code> renvoyant un bool\u00e9en.</p>"},{"location":"NSI1/S5/S5C5.html#exemple-1","title":"Exemple 1","text":"<p>On souhaite s\u00e9lectionner les artistes dont le d\u00e9but de carri\u00e8re se situe apr\u00e8s une ann\u00e9e donn\u00e9e.</p> <pre><code>def verifie_condition_1(p_uplet, date):\n\"\"\" Renvoie True si le d\u00e9but de carri\u00e8re de l'artiste 'art' a eu\n    lieu apr\u00e8s 'date'\n    p_uplet: dictionnaire\n    date: entier\n    \"\"\"\n    cond = False\n    if p_uplet['Years Active Start'] != '' and int(p_uplet['Years Active Start']) &gt;= date:\n        cond = True\n    return cond\n\ndef select_1(t, date):\n\"\"\"\n    Renvoie une table dont les lignes v\u00e9rifient la 'condition_1'.\n    t: tableau de dictionnaires\n    date: entier \n    \"\"\"\n    return [art for art in t if verifie_condition_1(art, date) is True]\n</code></pre> <pre><code># Artiste dont le d\u00e9but de carri\u00e8re remonte \u00e0 2017\n\nt_2017 = select_1(t, 2017)\nt_2017\n</code></pre> <pre><code>[{'Name': 'Original Flow Mastaz',\n  'Categories': 'group',\n  'URL': 'https://www.facebook.com/OriginalFlowMastaz/',\n  'Years Active Start': '2017',\n  'Birthdate': '',\n  'Summary': \"Original Flow Mastaz is a Hip Hop band from Neuch\u00e2tel formed by Akim, Le R', Seko and Askaine.\",\n  'Years Active End': '',\n  'Deathdate': '',\n  'Clip Example YouTube': 'https://www.youtube.com/embed/iTJu8uDyJ8E',\n  'City': 'Neuch\u00e2tel',\n  'Neighborhood': '',\n  'Coordinates': '46.999944,6.917182'},\n {'Name': 'Sinya',\n  'Categories': 'rapper',\n  'URL': 'https://genius.com/Sinyasound-rafale-2-dz-lyrics',\n  'Years Active Start': '2017',\n  'Birthdate': '1995-08-05',\n  'Summary': 'Yassine Benhadji (born 5th august 1995) is a french rappeur of algerian descent who grew up in Perpignan.',\n  'Years Active End': '',\n  'Deathdate': '',\n  'Clip Example YouTube': 'https://www.youtube.com/embed/WkQveBSw_gI',\n  'City': 'Perpignan',\n  'Neighborhood': 'Toulouges',\n  'Coordinates': '42.670169,2.831146'}]\n</code></pre>"},{"location":"NSI1/S5/S5C5.html#exemple-2","title":"Exemple 2","text":"<p>On souhaite s\u00e9lectionner les artistes originaires de Lyon.</p> <pre><code>def verifie_condition_2(p_uplet, v):\n\"\"\" Renvoie True si l'artiste vie dans la ville 'v'\n    p_uplet: dictionnaire\n    v: cha\u00eene\n    \"\"\"\n    cond = False\n    if p_uplet['City'] != '' and p_uplet['City'] == v:\n        cond = True\n    return cond\n\ndef select_2(t, v):\n\"\"\"\n    Renvoie une table dont les lignes v\u00e9rifient la 'condition_2'.\n    t: tableau de dictionnaires\n    v: cha\u00eene \n    \"\"\"\n    return [art for art in t if verifie_condition_2(art, v) is True]\n</code></pre> <pre><code># Artistes originaires de Lyon\n\nt_lyon = select_2(t, 'Lyon')\nt_lyon\n</code></pre> <pre><code>[{'Name': 'Kacem Wapalek',\n  'Categories': 'rapper',\n  'URL': 'https://www.chantefrance.com/artist/4568059-kacem-wapalek/biographie',\n  'Years Active Start': '2009',\n  'Birthdate': '',\n  'Summary': 'Kacem Wapalek is a french rapper from Lyon. He is a member of the Amasseurs de Mots (S.L.A.M.)  crew.',\n  'Years Active End': '',\n  'Deathdate': '',\n  'Clip Example YouTube': 'https://www.youtube.com/embed/D19OwfGaNvE',\n  'City': 'Lyon',\n  'Neighborhood': '',\n  'Coordinates': '45.745237,4.839238'},\n {'Name': 'Jorrdee',\n  'Categories': 'producer / dj;rapper',\n  'URL': 'https://fr.wikipedia.org/wiki/Jorrdee',\n  'Years Active Start': '2011',\n  'Birthdate': '',\n  'Summary': \"Jorrdee, born Jordan Bourgeois is a French rapper from Lyon. He's a original member of the rap crew 667.\",\n  'Years Active End': '',\n  'Deathdate': '',\n  'Clip Example YouTube': 'https://www.youtube.com/embed/zvtHEJ6DsK0',\n  'City': 'Lyon',\n  'Neighborhood': 'Mermoz',\n  'Coordinates': '45.731094,4.885971'},\n {'Name': 'Lucio Bukowski',\n  'Categories': 'rapper',\n  'URL': 'https://genius.com/artists/Lucio-bukowski',\n  'Years Active Start': '2007',\n  'Birthdate': '',\n  'Summary': \"Ludovic Villard (better know has Lucio Bukowski) is a French rapper from Lyon, member of the crew L'animalerie.\",\n  'Years Active End': '',\n  'Deathdate': '',\n  'Clip Example YouTube': 'https://www.youtube.com/embed/zsWiNkt9fIw',\n  'City': 'Lyon',\n  'Neighborhood': '',\n  'Coordinates': '45.769508,4.831418'}]\n</code></pre>"},{"location":"NSI1/S5/S5C5.html#comment-selectionner-des-colonnes-dune-table","title":"Comment s\u00e9lectionner des colonnes d'une table?","text":"<p>La s\u00e9lection de colonnes est une op\u00e9ration appel\u00e9e couramment projection. D'un point de vue pratique, on boucle sur la table originale et on sauvegarde les champs qui nous int\u00e9ressent dans un tableau annexe.</p> <pre><code>def projection(t, col):\n\"\"\"\n    R\u00e9alise la projection de 't' sur les champs d\u00e9finis dans 'col' et \n    renvoie un nouveau tableau;\n    t: tableau de dictionnaire\n    col: tableau contenant les colonnes \u00e0 garder\n    \"\"\"\n    # Cr\u00e9ation du tableau annexe\n    t_fin = [{} for _ in range(len(t))]\n    for i in range(len(t)):\n        for champ in col:\n            t_fin[i][champ] = t[i][champ]\n    return t_fin\n</code></pre> <pre><code>t2 = projection(t, ['Name','Categories', 'City'])\nfor i in range(8):\n    print(t2[i])\n</code></pre> <pre><code>{'Name': 'Trae Tha Truth', 'Categories': 'rapper', 'City': 'Houston'}\n{'Name': '13 Block', 'Categories': 'group', 'City': 'Sevran'}\n{'Name': 'Jay Rock', 'Categories': 'rapper', 'City': 'Watts'}\n{'Name': 'Droogz Brigade', 'Categories': 'group', 'City': 'Toulouse'}\n{'Name': 'Jeff le Nerf', 'Categories': 'rapper', 'City': 'Grenoble'}\n{'Name': 'Bitsu', 'Categories': 'rapper', 'City': 'Toulouse'}\n{'Name': 'The Opposites', 'Categories': 'group', 'City': 'Amsterdam'}\n{'Name': 'Stormzy', 'Categories': 'rapper', 'City': 'London'}\n</code></pre> <p>Attention</p> <p>Une projection peut entrainer la pr\u00e9sence de doublons</p> <pre><code>doublon(projection(t, ['Categories', 'City']))\n</code></pre> <pre><code>True\n</code></pre>"},{"location":"NSI1/S5/S5C6.html","title":"TRI &amp; FUSION DE TABLES","text":""},{"location":"NSI1/S5/S5C6.html#tri-dune-table-en-python","title":"Tri d'une table en python","text":"<p>Lorsqu'on manipule des donn\u00e9es en tables, il est fr\u00e9quent de vouloir les trier. Le langage python offre quelques possibilit\u00e9s de tri:  </p> <ul> <li>m\u00e9thode <code>sort</code> des tableaux;</li> <li>fonction <code>sorted</code> de la librairie standard -qui sera privil\u00e9gi\u00e9e ici-.</li> </ul>"},{"location":"NSI1/S5/S5C6.html#quels-objets-peuvent-etre-compares","title":"Quels objets peuvent \u00eatre compar\u00e9s ?","text":"<p>Python sait comparer \u00e9videmment des nombres et des chaines de caract\u00e8res, mais aussi des p-uplets. Voici quelques exemples:</p> <pre><code># Comparaison de chaine\nprint(\"'abc' &gt; 'aac': \", 'abc' &gt; 'aac')\n</code></pre> <pre><code>'abc' &gt; 'aac':  True\n</code></pre> <pre><code># Comparaison de p-uplets\nprint('(5,4) &gt; (5,3): ', (5, 4) &gt; (5, 3))\nprint('(5,4,6) &gt; (5,4,8): ', (5, 4, 6) &gt; (5, 4, 8))\nprint(\"(6, 'c') &lt; (5, 'c'): \", (6, 'c') &lt; (5, 'c'))\nprint(\"(6, 'c') &lt; (6, 'e'): \", (6, 'c') &lt; (6, 'e'))\n</code></pre> <pre><code>(5,4) &gt; (5,3):  True\n(5,4,6) &gt; (5,4,8):  False\n(6, 'c') &lt; (5, 'c'):  False\n(6, 'c') &lt; (6, 'e'):  True\n</code></pre> <p>Qu'en est-il des p-uplets nomm\u00e9s repr\u00e9sent\u00e9s par des dictionnaires?</p> <pre><code>e1 = {'nom':'bob', 'age':20, 'domaine':'ia'}\ne2 = {'nom':'alice', 'age':23, 'domaine':'algorithmique'}\nprint('e1 &lt; e2: ', e1 &lt; e2)\n</code></pre> <pre><code>---------------------------------------------------------------------------\n\nTypeError                                 Traceback (most recent call last)\n\n&lt;ipython-input-3-7ea8c292dfb3&gt; in &lt;module&gt;\n      1 e1 = {'nom':'bob', 'age':20, 'domaine':'ia'}\n      2 e2 = {'nom':'alice', 'age':23, 'domaine':'algorithmique'}\n----&gt; 3 print('e1 &lt; e2: ', e1 &lt; e2)\n\n\nTypeError: '&lt;' not supported between instances of 'dict' and 'dict'\n</code></pre> <p>Les p-uplets nomm\u00e9s impl\u00e9ment\u00e9s en 1\u00e8re par des dictionnaires ne peuvent pas \u00eatre compar\u00e9s.</p>"},{"location":"NSI1/S5/S5C6.html#comment-utiliser-la-fonction-sorted-de-la-librairie-standard","title":"Comment utiliser la fonction 'sorted' de la librairie standard?","text":"<p>La fonction <code>sorted</code> prend en param\u00e8tre obligatoire un it\u00e9rable, comme un tableau ou un tuple par exemple, et renvoie un nouveau tableau tri\u00e9 par ordre croissant.</p> Application directe <p>L'une des deux instructions suivantes provoque une erreur. Laquelle et pourquoi?  </p> <pre><code>t1 = sorted(8, 56, 9, 2, 15)\nt2 = sorted((8, 56, 9, 2, 15))\n</code></pre> <p>Que renvoie l'instruction correcte?</p> <p>La fonction <code>sorted</code> poss\u00e8de un param\u00e8tre optionnel <code>key</code> qui est utile lorsque python ne sait pas comparer des objets comme les dictionnaires. On affecte \u00e0 ce param\u00e8tre le nom de la fonction charg\u00e9e d'indiquer la cl\u00e9 suivant laquelle on trie.</p>"},{"location":"NSI1/S5/S5C6.html#exemple","title":"Exemple","text":"<p>Soit \u00e0 ranger le tableau <code>t</code> suivant par ordre croissant d'\u00e2ge:</p> <pre><code>t = [{'nom':'bob', 'age':24, 'domaine':'IA'}, \n     {'nom':'alex', 'age':23, 'domaine':'web'}, \n     {'nom':'sara', 'age':21, 'domaine':'web'}, \n     {'nom':'alice', 'age':23, 'domaine':'algorithmique'},\n     {'nom':'lisa', 'age':23, 'domaine':'robotique'}]\n\n#On d\u00e9finit une fonction qui renvoie un crit\u00e8re de tri\ndef suivant_age(dico):\n    return dico['age']\n\n#On appelle 'sorted' en affectant \u00e0 'key' le nom de la fonction de tri\nt_trie = sorted(t, key=suivant_age)\n\n#Affichage\nfor e in t_trie:\n    print(e)\n</code></pre> <pre><code>{'nom': 'sara', 'age': 21, 'domaine': 'web'}\n{'nom': 'alex', 'age': 23, 'domaine': 'web'}\n{'nom': 'alice', 'age': 23, 'domaine': 'algorithmique'}\n{'nom': 'lisa', 'age': 23, 'domaine': 'robotique'}\n{'nom': 'bob', 'age': 24, 'domaine': 'IA'}\n</code></pre> <p>On peut vouloir rajouter un deuxi\u00e8me crit\u00e8re de tri, en cas d'\u00e9galit\u00e9 par exemple. Il suffit alors de placer ce deuxi\u00e8me crit\u00e8re dans un tuple (que python sait trier!) renvoy\u00e9 par la fonction.</p> <pre><code>t = [{'nom':'bob', 'age':24, 'domaine':'IA'}, \n     {'nom':'alex', 'age':23, 'domaine':'web'}, \n     {'nom':'sara', 'age':21, 'domaine':'web'}, \n     {'nom':'alice', 'age':23, 'domaine':'algorithmique'},\n     {'nom':'lisa', 'age':23, 'domaine':'robotique'}]\n\n#On d\u00e9finit une fonction qui renvoie le crit\u00e8re de tri\ndef suivant_age_puis_nom(dico):\n    return (dico['age'], dico['nom'])\n\n#On appelle 'sorted' en affectant \u00e0 'key' le nom de la fonction de tri\nt_trie = sorted(t, key=suivant_age_puis_nom)\n\n#Affichage\nfor e in t_trie:\n    print(e)\n</code></pre> <pre><code>{'nom': 'sara', 'age': 21, 'domaine': 'web'}\n{'nom': 'alex', 'age': 23, 'domaine': 'web'}\n{'nom': 'alice', 'age': 23, 'domaine': 'algorithmique'}\n{'nom': 'lisa', 'age': 23, 'domaine': 'robotique'}\n{'nom': 'bob', 'age': 24, 'domaine': 'IA'}\n</code></pre> <p>La fonction <code>sorted</code> poss\u00e8de un dernier param\u00e8tre optionnel: <code>reverse</code>. On lui donnera la valeur <code>True</code> si on veut un classement d\u00e9croissant.</p> Application directe <p>Modifier le code pr\u00e9c\u00e9dent pour trier <code>t</code> par domaine, puis par nom en cas  d'\u00e9galit\u00e9.</p> <pre><code>t = [{'nom':'bob', 'age':24, 'domaine':'IA'}, \n     {'nom':'alex', 'age':23, 'domaine':'web'}, \n     {'nom':'sara', 'age':21, 'domaine':'web'}, \n     {'nom':'alice', 'age':23, 'domaine':'algorithmique'},\n     {'nom':'lisa', 'age':23, 'domaine':'robotique'}]\n\ndef suivant_domaine_puis_nom(e):\n    #######A compl\u00e9ter#########\n    return ...\n\n#D\u00e9commentez la ligne ci-dessous et compl\u00e9tez!\n#t_trie = sorted(..., ...)\n\n#Affichage\nfor e in t_trie:\n    print(e)\n</code></pre>"},{"location":"NSI1/S5/S5C6.html#fusion","title":"Fusion","text":"<p>L'objectif est de r\u00e9unir dans une seule table les donn\u00e9es de deux tables existantes. On examinera deux cas simples:  </p> <ul> <li>tables ayant les m\u00eames attributs;</li> <li>tables ayant au moins un attribut en commun</li> </ul> <pre><code># les tables de travail\nimport csv\nfrom pprint import pprint\n\n\n# table des pr\u00e9noms d'enfants n\u00e9s \u00e0 Paris en 2020\nwith open('data/prenoms2020.csv', newline='', encoding='utf8') as f1:\n    t_2020 = [dict(ligne) for ligne in csv.DictReader(f1, delimiter=';')]\n\n# table des pr\u00e9noms d'enfants n\u00e9s \u00e0 Paris en 2021\nwith open('data/prenoms2021.csv', newline='', encoding='utf8') as f2:\n    t_2021 = [dict(ligne) for ligne in csv.DictReader(f2, delimiter=';')]\n\n# table de films\nwith open('data/Film.csv', newline='', encoding='utf8') as f2:\n    t_film = [dict(ligne) for ligne in csv.DictReader(f2, delimiter=',')]\n\n# table d'artistes du cin\u00e9ma\nwith open('data/Artiste.csv', newline='', encoding='utf8') as f2:\n    t_artiste = [dict(ligne) for ligne in csv.DictReader(f2, delimiter=',')]\n</code></pre>"},{"location":"NSI1/S5/S5C6.html#comment-fusionner-des-tables-ayant-les-memes-attributs","title":"Comment fusionner des tables ayant les m\u00eames attributs?","text":"<p>Lorsque des tables poss\u00e8dent les m\u00eames attributs, leur fusion ne pose aucun probl\u00e8me. On utilise l'op\u00e9rateur <code>+</code> (rencontr\u00e9 dans le cours pr\u00e9c\u00e9dent) sur les deux tableaux existants.</p> <pre><code># On v\u00e9rifie que les deux tables ont  les m\u00eames attributs\nprint(t_2020[0].keys())\nprint(t_2021[0].keys())\n</code></pre> <pre><code>dict_keys(['Nombre pr\u00e9noms d\u00e9clar\u00e9s', 'Sexe', 'Annee', 'Prenoms'])\ndict_keys(['Nombre pr\u00e9noms d\u00e9clar\u00e9s', 'Sexe', 'Annee', 'Prenoms'])\n</code></pre> <pre><code>t_prenoms = t_2020 + t_2021\nprint(len(t_2020))\nprint(len(t_2021))\nprint(len(t_prenoms))\n</code></pre> <pre><code>1271\n1270\n2541\n</code></pre>"},{"location":"NSI1/S5/S5C6.html#comment-fusionner-des-tables-ayant-des-attributs-differents","title":"Comment fusionner des tables ayant des attributs diff\u00e9rents?","text":"<p>On se limite au cas simple o\u00f9 les deux tables ont un attribut en commun. L'op\u00e9ration de fusion de table de donn\u00e9es est appel\u00e9e aussi jointure. </p> <pre><code>print(t_film[0].keys())\nprint(t_artiste[0].keys())\n</code></pre> <pre><code>dict_keys(['idFilm', 'titre', 'ann\u00e9e', 'genre', 'r\u00e9sum\u00e9', 'codePays', 'idArtiste'])\ndict_keys(['idArtiste', 'nom', 'pr\u00e9nom'])\n</code></pre> <p>On remarque que les tables <code>Film</code> et <code>Artiste</code> ont l'attribut <code>idArtiste</code> en commun. Affichons un \u00e9l\u00e9ment de chaque table.</p> <pre><code>#Affichage de la structure des deux tables\npprint(t_film[0])\nprint()\npprint(t_artiste[0])\n</code></pre> <pre><code>{'ann\u00e9e': '1977',\n 'codePays': 'US',\n 'genre': 'Aventure',\n 'idArtiste': '1',\n 'idFilm': '11',\n 'r\u00e9sum\u00e9': 'Il y a bien longtemps, dans une galaxie tr\u00e8s lointaine... La '\n           \"guerre civile fait rage entre l'Empire galactique et l'Alliance \"\n           \"rebelle. Captur\u00e9e par les troupes de choc de l'Empereur men\u00e9es par \"\n           'le sombre et impitoyable Dark Vador, la princesse Leia Organa '\n           'dissimule les plans de l\u2019\u00c9toile Noire, une station spatiale '\n           'invuln\u00e9rable, \u00e0 son dro\u00efde R2-D2 avec pour mission de les remettre '\n           'au Jedi Obi-Wan Kenobi. Accompagn\u00e9 de son fid\u00e8le compagnon, le '\n           \"dro\u00efde de protocole C-3PO, R2-D2 s'\u00e9choue sur la plan\u00e8te Tatooine \"\n           'et termine sa qu\u00eate chez le jeune Luke Skywalker. R\u00eavant de '\n           'devenir pilote mais confin\u00e9 aux travaux de la ferme, ce dernier se '\n           'lance \u00e0 la recherche de ce myst\u00e9rieux Obi-Wan Kenobi, devenu '\n           'ermite au c\u0153ur des montagnes d\u00e9sertiques de Tatooine...',\n 'titre': 'La Guerre des \u00e9toiles'}\n\n{'idArtiste': '1', 'nom': 'Lucas', 'pr\u00e9nom': 'George'}\n</code></pre> <p>On d\u00e9cide de fusionner les deux tables sur l'attribut <code>idArtiste</code> (qui sera ici le r\u00e9alisateur du film). L'algorithme de fusion est le suivant:  </p> <pre><code>Pour chaque ligne de la table film: \n    Parcourir chaque ligne de la table artiste.\n        Si les attributs 'idArtiste' sont les m\u00eames:\n            fusionner les lignes et sauver le r\u00e9sultat.  \n</code></pre> <p>Ecrivons d'abord une fonction qui permet de fusionner deux lignes des deux tables pr\u00e9c\u00e9dentes.</p> <pre><code>def fusion(f, a):\n\"\"\"\n    Renvoie un dictionnaire, r\u00e9sultat de la fusion des deux lignes e et o;\n    f: ligne de la table film (dictionnaire);\n    a: ligne de la table artiste (dictionnaire);\n    \"\"\"\n    return {'ann\u00e9e': f['ann\u00e9e'], \n           'codePays': f['codePays'],\n           'genre': f['genre'],\n           'idFilm': f['idFilm'],\n           'r\u00e9sum\u00e9': f['r\u00e9sum\u00e9'],\n           'titre': f['titre'],\n           'nom': a['nom'],\n           'pr\u00e9nom': a['pr\u00e9nom']}\n</code></pre> <p>On peut impl\u00e9menter l'algorithme d\u00e9crit pr\u00e9c\u00e9demment de deux mani\u00e8res en python:  </p> <ul> <li>en utilisant le type <code>list</code> de python et sa m\u00e9thode <code>append</code> (qui permet d'ajouter un \u00e9l\u00e9ment \u00e0 la fin de la liste);</li> <li>en utilisant un tableau construit en compr\u00e9hension.</li> </ul> <pre><code># 1ere fa\u00e7on\n\ndef jointure_1(tf, ta):\n\"\"\" R\u00e9alise la fusion entre tf et ta; renvoie un tableau de dictionnaire\"\"\"\n    t = []\n    for f in tf:\n        for a in ta:\n            if a['idArtiste'] == f['idArtiste']:\n                t.append(fusion(f, a))\n    return t\n</code></pre> <pre><code>t1 = jointure_1(t_film, t_artiste)\nprint(len(t1))\npprint(t1[0])\n</code></pre> <pre><code>233\n{'ann\u00e9e': '1977',\n 'codePays': 'US',\n 'genre': 'Aventure',\n 'idFilm': '11',\n 'nom': 'Lucas',\n 'pr\u00e9nom': 'George',\n 'r\u00e9sum\u00e9': 'Il y a bien longtemps, dans une galaxie tr\u00e8s lointaine... La '\n           \"guerre civile fait rage entre l'Empire galactique et l'Alliance \"\n           \"rebelle. Captur\u00e9e par les troupes de choc de l'Empereur men\u00e9es par \"\n           'le sombre et impitoyable Dark Vador, la princesse Leia Organa '\n           'dissimule les plans de l\u2019\u00c9toile Noire, une station spatiale '\n           'invuln\u00e9rable, \u00e0 son dro\u00efde R2-D2 avec pour mission de les remettre '\n           'au Jedi Obi-Wan Kenobi. Accompagn\u00e9 de son fid\u00e8le compagnon, le '\n           \"dro\u00efde de protocole C-3PO, R2-D2 s'\u00e9choue sur la plan\u00e8te Tatooine \"\n           'et termine sa qu\u00eate chez le jeune Luke Skywalker. R\u00eavant de '\n           'devenir pilote mais confin\u00e9 aux travaux de la ferme, ce dernier se '\n           'lance \u00e0 la recherche de ce myst\u00e9rieux Obi-Wan Kenobi, devenu '\n           'ermite au c\u0153ur des montagnes d\u00e9sertiques de Tatooine...',\n 'titre': 'La Guerre des \u00e9toiles'}\n</code></pre> <pre><code># 2eme fa\u00e7on (plus \u00e9l\u00e9gante)\n\ndef jointure_2(tf, ta):\n\"\"\" R\u00e9alise la fusion entre tf et ta; renvoie un tableau de dictionnaire\"\"\"\n    t = [fusion(f, a) for f in tf for a in ta if a['idArtiste'] == f['idArtiste']]\n    return t\n</code></pre> <pre><code>t2 = jointure_1(t_film, t_artiste)\nprint(len(t2))\npprint(t2[0])\n</code></pre> <pre><code>233\n{'ann\u00e9e': '1977',\n 'codePays': 'US',\n 'genre': 'Aventure',\n 'idFilm': '11',\n 'nom': 'Lucas',\n 'pr\u00e9nom': 'George',\n 'r\u00e9sum\u00e9': 'Il y a bien longtemps, dans une galaxie tr\u00e8s lointaine... La '\n           \"guerre civile fait rage entre l'Empire galactique et l'Alliance \"\n           \"rebelle. Captur\u00e9e par les troupes de choc de l'Empereur men\u00e9es par \"\n           'le sombre et impitoyable Dark Vador, la princesse Leia Organa '\n           'dissimule les plans de l\u2019\u00c9toile Noire, une station spatiale '\n           'invuln\u00e9rable, \u00e0 son dro\u00efde R2-D2 avec pour mission de les remettre '\n           'au Jedi Obi-Wan Kenobi. Accompagn\u00e9 de son fid\u00e8le compagnon, le '\n           \"dro\u00efde de protocole C-3PO, R2-D2 s'\u00e9choue sur la plan\u00e8te Tatooine \"\n           'et termine sa qu\u00eate chez le jeune Luke Skywalker. R\u00eavant de '\n           'devenir pilote mais confin\u00e9 aux travaux de la ferme, ce dernier se '\n           'lance \u00e0 la recherche de ce myst\u00e9rieux Obi-Wan Kenobi, devenu '\n           'ermite au c\u0153ur des montagnes d\u00e9sertiques de Tatooine...',\n 'titre': 'La Guerre des \u00e9toiles'}\n</code></pre> <p>R\u00e9sum\u00e9</p> <p>Python poss\u00e8de une fonction de tri <code>sorted</code> qui retourne un tableau tri\u00e9, par  d\u00e9faut par ordre croissant. Pour trier un tableau de dictionnaires, on doit  utiliser le param\u00e8tre <code>key</code> qui indique \u00e0 la fonction <code>sorted</code> le nom d'une  fonction qui retournera un ou des crit\u00e8res de tri.  </p> <p>Pour fusionner deux tables ayant les m\u00eames attributs on utilise simplement la  concat\u00e9nation (+) de tableaux. Si on a un attribut en commun, on utilise un  algorithme adapt\u00e9 pour r\u00e9aliser la jointure</p>"},{"location":"NSI1/S5/S5E1.html","title":"Les tableaux","text":"<p>Extrait NSI 1re Ed. Ellipses</p>"},{"location":"NSI1/S5/S5E1.html#exercice-69","title":"Exercice 69","text":"<p>On souhaite \u00e9crire un programme python permettant de travailler sur la pyramide des \u00e2ges des fran\u00e7ais. Il fait intervenir un tableau <code>PDA = [691165, 710534, 728579, ...]</code> dans lequel la case d'index \\(i\\) contient le nombre de fran\u00e7ais ayant l'\u00e2ge \\(i\\).  </p> <pre><code>PDA = [691165, 710534, 728579, ..., 2160] # 106 valeurs\n\ndef examen_pda(tab_pda, age_min, age_max):\n\"\"\"\n    renvoie ...\n    \"\"\"\n    n = 0\n    for age in range(age_min, age_max):\n        n = n + tab_pda[age]\n    return n\n</code></pre> <ol> <li>Que fait la fonction <code>examen_pda</code> ?</li> <li>Cette fonction n'est pas tr\u00e8s robuste. En effet, si l'utilisateur l'appelle avec une valeur de <code>age_max</code> plus grande que 106 (la taille du tableau <code>PDA</code>), alors le programme va \u00e9chouer suite \u00e0 un acc\u00e8s en dehors des limites du tableau. Am\u00e9liorer ce programme pour que l'utilisateur puisse sp\u00e9cifier une valeur de <code>age_max</code> arbitrairement grande, sans pour autant que le programme n'\u00e9choue.</li> </ol> <pre><code>def examen_pda(tab_pda, age_min, age_max):\n\"\"\"\n    renvoie ...\n    \"\"\"\n    # Supprimer 'pass' et compl\u00e9ter\n    pass\n</code></pre>"},{"location":"NSI1/S5/S5E1.html#exercice-70","title":"Exercice 70","text":"<p>\u00c9crire une fonction <code>occurrences(v, t)</code> qui renvoie le nombre d'occurrences de la valeur <code>v</code> dans le tableau <code>t</code>. </p> <pre><code>def occurences(v, t):\n\"\"\"\n    renvoie le nombre d'occurence de v dans le tableau t\n    v: entier\n    t: tableau non vide\n    \"\"\"\n    # Supprimer 'pass' et compl\u00e9ter\n    pass\n</code></pre> <pre><code># CELLULE DE TESTS - A DECOMMENTER PUIS EXECUTER\nassert occurences(-1, [2,3,4,5,-1,6,7,-1]) == 2\nprint(\"Valid\u00e9\")\n</code></pre>"},{"location":"NSI1/S5/S5E1.html#exercice-72","title":"Exercice 72","text":"<p>Ecrire une fonction <code>max_tab(t)</code> qui prend un tableau <code>t</code> non vide en param\u00e8tre et qui renvoie l'\u00e9l\u00e9ment maximum de ce tableau. Interdiction d'utiliser la fonction native <code>max</code> de python.</p> <pre><code>def max_tab(t):\n\"\"\"\n    renvoie la valeur maximale rencontr\u00e9e dans t\n    t: tableau non vide\n    \"\"\"\n    assert len(t) &gt; 0, \"Erreur: tableau vide\"\n    # Supprimer 'pass' et compl\u00e9ter\n    pass\n</code></pre> <pre><code># CELLULE DE TESTS - A DECOMMENTER PUIS EXECUTER\nfrom random import randint\ntest = [randint(-10, 10) for i in range(20)]\nassert max_tab(test) == max(test)\nprint(\"Valid\u00e9\")\n</code></pre>"},{"location":"NSI1/S5/S5E1.html#exercice-73","title":"Exercice 73","text":"<p>\u00c9crire une fonction <code>hasard</code> qui tire au hasard mille entiers entre 1 et 10 et renvoie ensuite le nombre de fois que chaque nombre a \u00e9t\u00e9 tir\u00e9. Appeler la fonction plusieurs fois. Conseil: penser \u00e0 renvoyer un tableau.</p> <pre><code>from random import randint\n\n\ndef hasard():\n\"\"\"\n    renvoie le nombre de tirage al\u00e9atoire de nombres\n    compris 1 et 10\n    \"\"\"\n    # Supprimer 'pass' et compl\u00e9ter\n    pass\n</code></pre> <pre><code># CELLULE DE TESTS - A DECOMMENTER PUIS EXECUTER\nassert sum(hasard()) == 1000\nprint(\"OK\")\n</code></pre>"},{"location":"NSI1/S5/S5E1.html#exercice-74","title":"Exercice 74","text":"<p>En math\u00e9matiques, la tr\u00e8s c\u00e9l\u00e8bre suite de Fibonacci est une s\u00e9quence infinie d'entiers d\u00e9finie de la fa\u00e7on suivante : on part des deux entiers 0 et 1 puis on construit \u00e0 chaque fois l'entier suivant comme la somme des deux entiers pr\u00e9c\u00e9dents.  0, 1, 1, 2, 3, 5, ...  </p> <p>\u00c9crire une fonction <code>fibo(k)</code> qui construit puis renvoie un tableau contenant les \\(k\\) premiers termes de la suite. V\u00e9rifier avec la cellule de test.</p> <pre><code>def fibo(k):\n\"\"\"\n    renvoie les k premiers termes de la suite de fibonacci\n    \"\"\"\n    # Supprimer 'pass' et compl\u00e9ter\n    pass\n</code></pre> <pre><code># CELLULE DE TESTS - A DECOMMENTER PUIS EXECUTER\nassert fibo(30)[-1] == 514229\n</code></pre>"},{"location":"NSI1/S5/S5E1.html#exercice-75","title":"Exercice 75","text":"<p>\u00c9crire une fonction <code>copie(t)</code> qui prend en param\u00e8tre un tableau <code>t</code> et renvoie une copie de ce tableau. Quelle exp\u00e9rience peut-on faire pour s'assurer qu'on ne s'est pas tromp\u00e9 ?</p> <pre><code>def copie(t):\n\"\"\"\n    renvoie une copie de t;\n    t: tableau\n    \"\"\"\n    # Supprimer 'pass' et compl\u00e9ter\n    pass\n</code></pre> <pre><code># Comment \u00eatre s\u00fbr que c'est une copie ?\nt1 = [1, 2, 3, 4]\nt2 = copie(t1)\nt2[0] = -100 # On modifie le 1er \u00e9l\u00e9ment de t2\nprint(f\"t1 = {t1}\")\nprint(f\"t2 = {t2}\")\n</code></pre>"},{"location":"NSI1/S5/S5E1.html#exercice-76","title":"Exercice 76","text":"<p>\u00c9crire une fonction <code>ajout(v, t)</code> qui cr\u00e9e un nouveau tableau contenant d'abord tous les \u00e9l\u00e9ments de <code>t</code> puis <code>v</code> puis qui renvoie ce tableau.</p> <pre><code>def ajout(v, t):\n\"\"\"\n    ajoute un \u00e9l\u00e9ment \u00e0 la copie d'un tableau et renvoie ce dernier\n    t: tableau\n    v: \u00e9l\u00e9ment de type quelconque\n    \"\"\"\n    # Supprimer 'pass' et compl\u00e9ter\n    pass\n</code></pre> <pre><code># CELLULE DE TESTS - A DECOMMENTER PUIS EXECUTER\nassert ajout(1, []) == [1]\nassert ajout(3, [1, 2]) == [1, 2, 3]\nprint(\"valid\u00e9\")\n</code></pre>"},{"location":"NSI1/S5/S5E1.html#exercice-77","title":"Exercice 77","text":"<p>\u00c9crire une fonction <code>concatenation(t1, t2)</code> qui cr\u00e9e un nouveau tableau contenant, dans l'ordre, tous les \u00e9l\u00e9ments de <code>t1</code> puis tous les \u00e9l\u00e9ments de <code>t2</code>.</p> <pre><code>def concatenation(t1, t2):\n\"\"\"\n    renvoie un tableau contenant la concat\u00e9nation de t1 et t2\n    t1, t2: tableau\n    \"\"\"\n    # Supprimer 'pass' et compl\u00e9ter\n    pass\n</code></pre> <pre><code># CELLULE DE TESTS - A DECOMMENTER PUIS EXECUTER\nassert concatenation([-1,3], [8,90]) == [-1, 3, 8, 90]\nassert concatenation([], []) == []\nprint(\"Valid\u00e9\")\n</code></pre>"},{"location":"NSI1/S5/S5E1.html#exercice-78","title":"Exercice 78","text":"<p>\u00c9crire une fonction <code>tableau_aleatoire(n, a, b)</code> qui renvoie un tableau de taille <code>n</code> contenant des entiers tir\u00e9s au hasard entre <code>a</code> et <code>b</code>.</p> <pre><code>from random import randint\n\n\ndef tableau_aleatoire(n, a, b):\n\"\"\"\n    renvoie un tableau de taille n contenant des valeurs al\u00e9atoires\n    n: entier positif\n    a, b: entiers\n    \"\"\"\n    # Supprimer 'pass' et compl\u00e9ter\n    pass\n</code></pre>"},{"location":"NSI1/S5/S5E1.html#exercice-79","title":"Exercice 79","text":"<p>\u00c9crire une fonction <code>tableau_croissant(n)</code> qui renvoie un tableau de taille <code>n</code> contenant des entiers tir\u00e9s au hasard et ayant la propri\u00e9t\u00e9 d'\u00eatre tri\u00e9 par ordre croissant. Pour faire cela, on pourrait utiliser l'exercice pr\u00e9c\u00e9dent pour construire un tableau al\u00e9atoire, puis le trier avec un algorithme de tri (ce que nous verrons au cours de l'ann\u00e9e en NSI). Il y a n\u00e9anmoins une fa\u00e7on plus simple de proc\u00e9der, consistant \u00e0 remplir le tableau de gauche \u00e0 droite en ajoutant \u00e0 chaque fois un entier positif ou nul \u00e0 l'\u00e9l\u00e9ment pr\u00e9c\u00e9dent. Ainsi, le tableau est tri\u00e9 par construction. </p> <pre><code>def tableau_croissant(n):\n\"\"\"\n    renvoie un tableau croissant de taille n;\n    n: entier positif\n    \"\"\"\n    # Supprimer 'pass' et compl\u00e9ter\n    pass\n</code></pre> <pre><code>tableau_croissant(8)\n</code></pre>"},{"location":"NSI1/S5/S5E1.html#exercice-80","title":"Exercice 80","text":"<p>\u00c9crire une fonction <code>echange(tab, i, j)</code> qui \u00e9change dans le tableau <code>tab</code> les \u00e9l\u00e9ments aux indices <code>i</code> et <code>j</code>.</p> <pre><code>def echange_tab(tab, i, j):\n\"\"\"\n    \u00e9change les \u00e9l\u00e9ments d'indice i et j d'un tableau;\n    tab: tableau non vide\n    i, j: entiers naturels\n    \"\"\"\n    # Supprimer 'pass' et compl\u00e9ter\n    pass\n</code></pre> <pre><code>t = [1,2,3,4,5,6,10]\nechange_tab(t, 1, 6)\nprint(t)\n</code></pre>"},{"location":"NSI1/S5/S5E1.html#exercice-81","title":"Exercice 81","text":"<p>\u00c9crire une fonction <code>somme(tab)</code> qui calcule et renvoie la somme des \u00e9l\u00e9ments d'un tableau d'entiers. En d\u00e9duire une fonction <code>moyenne(tab)</code> qui calcule et renvoie la moyenne des \u00e9l\u00e9ments du tableau <code>tab</code>, suppos\u00e9 non vide. Interdiction d'utiliser des fonctions natives de python.</p> <pre><code>def somme(tab):\n\"\"\"\n    renvoie la somme des \u00e9l\u00e9ments d'un tableau;\n    tab: tableau\n    \"\"\"\n    # Supprimer 'pass' et compl\u00e9ter\n    pass\n\ndef moyenne(tab):\n\"\"\"\n    renvoie la moyenne des \u00e9l\u00e9ments d'un tableau\n    tab: tableau\n    \"\"\"\n    # Supprimer 'pass' et compl\u00e9ter\n    pass\n</code></pre> <pre><code>moyenne([10, 12.5, 3, 7.5])\n</code></pre>"},{"location":"NSI1/S5/S5E1.html#exercice-82","title":"Exercice 82","text":"<p>\u00c9crire une fonction <code>produit(tab)</code> qui calcule et renvoie le produit des \u00e9l\u00e9ments d'un tableau d'entiers. Si le tableau contient 0, la fonction devra renvoyer 0 sans terminer le calcul. Interdiction d'utiliser des fonctions de biblioth\u00e8ques python</p> <pre><code>def produit(tab):\n\"\"\"\n    renvoie le produit des \u00e9l\u00e9ments d'un tableau\n    tab: tableau\n    \"\"\"\n    # Supprimer 'pass' et compl\u00e9ter\n    pass\n</code></pre> <pre><code>produit([1,2,3,4,5,6])\n</code></pre>"},{"location":"NSI1/S5/S5E2.html","title":"Exercices - Encodage de texte","text":""},{"location":"NSI1/S5/S5E2.html#complements-python","title":"Compl\u00e9ments python","text":"<p>La fonction <code>ord</code> permet d'avoir le point de code d'un caract\u00e8re, en d\u00e9cimal. On rappelle qu'Unicode est compatible avec l'ascii et l'ascii \u00e9tendu. De ce fait les codes ascii et les points de code correspondent pour les caract\u00e8res de code ascii inf\u00e9rieur \u00e0 255.</p> <pre><code>ord('y')\n</code></pre> <pre><code>121\n</code></pre> <p>Une conversion entier \\(\\longrightarrow\\) hexad\u00e9cimal peut \u00eatre r\u00e9alis\u00e9e avec la fonction <code>hex</code>.</p> <pre><code>hex(121)\n</code></pre> <pre><code>'0x79'\n</code></pre> <p>Une cha\u00eene de caract\u00e8res peut \u00eatre index\u00e9e comme les tableaux. On peut alors y r\u00e9aliser des it\u00e9rations.</p> <pre><code>ch1 = \"Ma cha\u00eene\"\nprint('longueur: ', len(ch1))\nfor i in range(len(ch1)):\n    print(ch1[i])\n</code></pre> <pre><code>longueur:  9\nM\na\n\nc\nh\na\n\u00ee\nn\ne\n</code></pre> <p>Comme avec les tableaux, on peut aussi r\u00e9aliser une it\u00e9ration sur les \u00e9l\u00e9ments.</p> <pre><code>for lettre in ch1:\n    print(lettre)\n</code></pre> <pre><code>M\na\n\nc\nh\na\n\u00ee\nn\ne\n</code></pre>"},{"location":"NSI1/S5/S5E2.html#exercice-1","title":"Exercice 1","text":"<p>Donner le codage ASCII des deux cha\u00eenes de caract\u00e8res Python ci-dessous. Attention, on ne code pas les marques de cha\u00eene <code>'</code> ou <code>\"</code>! </p> <pre><code>'bonjour tout le monde!'\n</code></pre> <pre><code>\"\"\"programmer en \nPython\"\"\"\n</code></pre>"},{"location":"NSI1/S5/S5E2.html#exercice-2","title":"Exercice 2","text":"<p>\u00c9crire une fonction <code>printASCII(s)</code> qui renvoie un tableau contenant les codes ASCII au format hexad\u00e9cimal, d'une cha\u00eene de caract\u00e8res <code>s</code> pass\u00e9e en param\u00e8tre. Utiliser cette fonction pour v\u00e9rifier les r\u00e9ponses de l'exercice pr\u00e9c\u00e9dent. On pourra utiliser la cellule suivante en compl\u00e9tant les zones o\u00f9 <code>...</code> apparaissent.</p> <pre><code>def printASCII(s):\n\"\"\"\n    renvoie un tableau contenant le code ascii d'une chaine s, sous forme hexad\u00e9cimale;\n    s: chaine (str)\n    \"\"\"\n    code_ascii = [0] * ... # Cr\u00e9ation d'un tableau de ... \u00e9l\u00e9ments\n    for i in range(len(s)):\n        code_ascii[i] = ...\n    return ...\n</code></pre>"},{"location":"NSI1/S5/S5E2.html#exercice-3","title":"Exercice 3","text":"<p>\u00c9crire une fonction <code>printUTF8(s)</code> qui prend une cha\u00eene <code>s</code> en param\u00e8tre et qui renvoie un tableau contenant les octets \u00e9crits en binaire r\u00e9sultant de l'encodage de <code>s</code> en UTF-8. Tester votre fonction sur le mot <code>\u00e9l\u00e9gance</code>. Utiliser la fonction <code>bin_8bits</code> qui permet de convertir un entier \\(n\\) en binaire sur 8 bits (un octet). On pourra utiliser la cellule suivante en compl\u00e9tant les zones o\u00f9 <code>...</code> apparaissent.</p> <pre><code>def bin_8bits(n):\n\"\"\" Renvoie la repr\u00e9sentation binaire de n sur 1 octet. \"\"\"\n    return f\"{n:08b}\"\n\n\ndef printUTF8(s):\n\"\"\"\n    Renvoie la repr\u00e9sentation binaire d'une cha\u00eene s, encod\u00e9e en utf-8, sous la \n    forme d'un tableau d'octets \u00e9crits en binaire.\n    s: chaine (str)\n    \"\"\"\n\n    octets = s.encode('utf8') # Encodage de s en utf-8 dans un tableau d'octets\n    repr_binaire = [0] * ...\n    for i in range(...):\n        repr_binaire[i] = bin_8bits(...)\n    return ...\n</code></pre> <pre><code># Cellule de TEST\nres = ['11000011',\n       '10101001',\n       '01101100',\n       '11000011',\n       '10101001',\n       '01100111',\n       '01100001',\n       '01101110',\n       '01100011',\n       '01100101'\n      ]\nassert printUTF8(\"\u00e9l\u00e9gance\") == res\nprint(\"Valid\u00e9\")\n</code></pre>"},{"location":"NSI1/S5/S5E2.html#exercice-4","title":"Exercice 4**","text":"<p>Ecrire une fonction <code>est_utf8_valide(n1, n2, n3)</code> qui renvoie <code>True</code> si la suite d'octets (repr\u00e9sent\u00e9e en base 10) <code>n1</code>, <code>n2</code>, <code>n3</code> repr\u00e9sente une s\u00e9quence valide UTF-8. Elle renvoie <code>False</code> sinon. Quelques indices Une suite de 3 octets est un encodage UTF-8 valide si elle poss\u00e8de une des formes suivantes:  </p> <ol> <li><code>1110 xxxx 10xx xxxx 10xx xxxx</code>: 1 caract\u00e8re cod\u00e9 sur 3 octets;</li> <li><code>110x xxxx 10xx xxxx 0xxx xxxx</code>: 1 caract\u00e8re cod\u00e9 sur 2 octets suivi de 1 caract\u00e8re cod\u00e9 sur 1 octet;</li> <li><code>0xxx xxxx 110x xxxx 10xx xxxx</code>: 1 caract\u00e8re cod\u00e9 sur 1 octet suivi de 1 caract\u00e8re cod\u00e9 sur 2 octets;</li> <li><code>0xxx xxxx 0xxx xxxx 0xxx xxxx</code>: 3 caract\u00e8res cod\u00e9s chacun sur 1 octet.</li> </ol> <pre><code>def est_utf8_valide(n1, n2, n3):\n\"\"\"\n    renvoie True si n1, n2, n3 est une suite valide en UTF-8, False sinon.\n    n1, n2, n3: entiers naturels strictement inf\u00e9rieurs \u00e0 256.\n    \"\"\"\n    # On stoppe la fonction si la pr\u00e9condition n'est pas assur\u00e9e.\n    assert n1 &lt; 256 and n2 &lt; 256 and n3 &lt; 256\n\n    # Cas 3 &amp; 4 --&gt; le 1er octet est compris entre 0 et 0111 1111 soit 127 en d\u00e9cimal\n    if n1 &lt; ...:\n        if n2 &lt; ... and n3 &lt; 128: # Cas n\u00b0 4\n            return True\n        if (191 &lt; n2 &lt; 224) and (127 &lt; n3 &lt; 192): # Cas n\u00b0 3\n            return True\n    # Cas 2\n    if ... &lt; n1 &lt; ...:\n        if (127 &lt; n2 &lt; 192) and (n3 &lt; 128):\n            return True\n    # Cas 1 (forc\u00e9)\n    if (... &lt; n1) and (127 &lt; n2 &lt; 192 and 127 &lt; n3 &lt; 192):\n        return True\n\n    return False\n</code></pre> <pre><code># Cellule de TESTS\nassert est_utf8_valide(227, 180, 140)\nassert est_utf8_valide(126, 64, 100)\nassert not est_utf8_valide(198, 129, 129)\nprint(\"Valid\u00e9 !\")\n</code></pre>"},{"location":"NSI1/S5/S5E3.html","title":"Types construits - Exercices","text":""},{"location":"NSI1/S5/S5E3.html#tableau-defini-en-comprehension","title":"Tableau d\u00e9fini en compr\u00e9hension","text":"<ol> <li>Que construit l'expression ci-dessous?  </li> </ol> <pre><code>t = [i % 3 for i in range(100)]\n</code></pre> <ol> <li>On d\u00e9fini une fonction \\(f\\) telle que:  </li> </ol> <p><pre><code>def f(t):\n\"\"\"\n    renvoie ...?\n    \"\"\"\n    return [n for n in t if n &gt; 0]\n</code></pre> Etant donn\u00e9 <code>x = [-5, 2, 3, -7, 42, 7]</code>. Que vaut <code>f(x)</code>?</p>"},{"location":"NSI1/S5/S5E3.html#utilisation-des-tableaux-en-comprehension","title":"Utilisation des tableaux en compr\u00e9hension","text":"<p>On souhaite \u00e9crire un programme donnant le graphe d'une fonction \\(f\\) sur un intervalle donn\u00e9.  </p> <p></p> <p>On d\u00e9finit d'abord la fonction \\(f\\).</p> <pre><code>def f(x):\n    return x ** 2 + x - 4\n</code></pre> <ol> <li>Que r\u00e9alise l'instruction <code>X = [0.1 * n for n in range(-30, 31)]</code>?</li> <li>Construire un tableau <code>Y</code> par compr\u00e9hension, qui correspond \u00e0 l'image de <code>X</code> par \\(f\\). En d'autres termes, on devra appliquer la fonction \\(f\\) \u00e0 chaque \u00e9l\u00e9ment de <code>X</code> pour construire le tableau <code>Y</code>.</li> </ol> <pre><code>X = [0.1 * n for n in range(-30, 31)]\n# ENTRER VOTRE CODE ICI\n</code></pre> <p>3. \u00c9xecuter la cellule ci-dessous. Le r\u00e9sultat obtenu est-il conforme \u00e0 la demande ?</p> <pre><code>import matplotlib.pyplot as plt\n\n\ndef tracer(t_x, t_y):\n    assert len(t_x) == len(t_y), \"Erreur: tableaux incoh\u00e9rents\"\n    plt.plot(t_x, t_y)\n    plt.grid()\n    plt.show()\n\ntracer(X, Y)\n</code></pre>"},{"location":"NSI1/S5/S5E3.html#composantes-dun-vecteur","title":"Composantes d'un vecteur","text":"<p>Ecrire une fonction <code>vecteur</code> qui prend en param\u00e8tres deux p-uplets qui correspondent aux coordonn\u00e9es dans le plan de deux points A et B et qui renvoie un p-uplet correspondant aux coordonn\u00e9es du vecteur \\(\\overrightarrow{AB}\\) dans le plan.</p> <pre><code>#Votre code dans cette cellule\ndef vecteur(pt_A, pt_B):\n\"\"\"\n    Renvoie un p-uplet ayant deux composantes correspondant aux coordonn\u00e9es d'un vecteur AB.\n    pt_A, pt_B: tuple \u00e0 deux \u00e9l\u00e9ments, correspondant aux coordonn\u00e9es (xA, yA) et (xB, yB) de\n    deux points A et B.\n    \"\"\"\n    # Indications\n    # pt_A: ce sont les coordonn\u00e9es de A. Exemple:\n    # pt_A = (2, 5); on a donc xA = 2 et yA = 5\n    # Il en est de m\u00eame pour B;\n    # On doit renvoyer (xB - xA, yB - yA)\n    pass\n</code></pre> <pre><code># TEST - DECOMMENTER et EXECUTER\nassert vecteur((5,1), (3,4)) == (-2, 3), \"La fonction ne passe pas le test\"\n</code></pre>"},{"location":"NSI1/S5/S5E3.html#trouver-le-jour-correspondant-a-une-date","title":"Trouver le jour correspondant \u00e0 une date","text":"<p>Python poss\u00e8de un module permettant de g\u00e9rer les dates. Il s'agit du module <code>datetime</code>. On y trouve, entre autres, une <code>classe</code> (ce mot sera d\u00e9fini en terminale) qui permet la cr\u00e9ation d'objet <code>date</code> \u00e0 partir d'entiers naturels repr\u00e9sentant l'ann\u00e9e, le mois et le jour. On y trouve aussi une m\u00e9thode <code>today()</code> dont on verra une utilisation plus loin.  </p> <p>Par exemple, pour cr\u00e9er un objet <code>date</code> correspondant au 31 d\u00e9cembre 2019, on proc\u00e8dera de la mani\u00e8re suivante:  </p> <pre><code>from datetime import date\n\n\nd = date(2019, 12, 31)\n</code></pre> <p>Les attributs year (ann\u00e9e), month (mois) et day (jour) d'un objet date <code>d</code> peuvent \u00eatre obtenus par <code>d.year</code>, <code>d.month</code> et <code>d.day</code>.</p> <p>1. Consulter la documentation relative aux objets de type <code>date</code> et notamment la m\u00e9thode <code>today()</code> et <code>weekday()</code>. Indication: utiliser la fonction <code>help</code> de python.</p> <p>2. \u00c9x\u00e9cuter la cellule suivante qui utilise des objets <code>date</code>.  </p> <pre><code>from datetime import date\n\n\nd1 = date(2019, 12, 31)\nd2 = date.today() # date d'aujourd'hui\nprint(d1.day, '/', d1.month, '/', d1.year)\nprint(\"Aujourd'hui, on est le \", end='')\nprint(d2.day, '/', d2.month, '/', d2.year)\n</code></pre> <p>3. \u00c0 partir des exemples pr\u00e9c\u00e9dents, cr\u00e9er un objet <code>date_an</code> de type <code>date</code> et correspondant \u00e0 votre date d'anniversaire. </p> <pre><code># \u00c0 compl\u00e9ter\n\ndate_an = ...\n</code></pre> <p>4. \u00c9crire une fonction <code>trouver_jour</code> (en compl\u00e9tant la cellule suivante) qui prend en param\u00e8tre un objet de type date et qui renvoie un p-uplet \u00e0 4 composantes, qui sont dans l'ordre:  </p> <ul> <li>le jour, ici une chaine de caract\u00e8res valant 'lundi', 'mardi', etc.</li> <li>le jour dans le mois, ici un entier valant 1, 2, .., 30 ou 31 selon le mois;</li> <li>le mois, une cha\u00eene de caract\u00e8re valant 'janvier', 'f\u00e9vrier', etc.</li> <li>l'ann\u00e9e, un entier positif.</li> </ul> Aide: m\u00e9thode weekday() <p>Cette m\u00e9thode permet d'obtenir le jour correspondant \u00e0 une date. Par exemple, le premier jour de l'an 2000 correspondait \u00e0 :  </p> <pre><code>from datetime import date\n\n\nd2000 = date(2000,1,1)\nprint(d2000.weekday())\n5\n</code></pre> <p>D'apr\u00e8s la documentation, si lundi correspond \u00e0 0 alors 5 correspond \u00e0 un samedi</p> <pre><code>#Votre code ici\ndef trouver_jour(d):\n\"\"\"\n    Renvoie le jour sous la forme d'un p-uplet \u00e0 4 composantes: jour de la semaine (string), \n    jour dans le mois (int), mois (int) et ann\u00e9e (int).\n    d: objet de type date\n    \"\"\"\n\n    # Constantes de type p-uplet \u00e0 utiliser\n    SEMAINE = ('lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi', 'dimanche')\n    MOIS = ('janvier', 'f\u00e9vrier', 'mars', 'avril', 'mai', 'juin', 'juillet',\n           'ao\u00fbt', 'septembre', 'octobre', 'novembre', 'd\u00e9cembre')\n    #A compl\u00e9ter\n    pass\n</code></pre> <pre><code># TEST - DECOMMENTER et EXECUTER\nassert trouver_jour(date(2021, 12, 6)) == ('lundi', 6, 'd\u00e9cembre', 2021), \"La fonction ne passe pas le test\"\n</code></pre> <p>5. Trouver le jour de votre naissance.</p> <pre><code># Votre code ici\n</code></pre>"},{"location":"NSI1/S5/S5E3.html#analyse-dun-tableau-de-notes","title":"Analyse d'un tableau de notes","text":"<p>On souhaite analyser les notes obtenues par un groupe de sp\u00e9cialit\u00e9 NSI. Ces r\u00e9sultats sont mod\u00e9lis\u00e9s sous la forme d'un tableau de nombres flottants compris entre 0 et 20. Ecrire une fonction <code>analyse_note</code> qui prend comme param\u00e8tre un tableau de notes et qui renvoie un p-uplet compos\u00e9 de la m\u00e9diane, la moyenne et l'\u00e9cart type. On utilisera des fonctions disponibles dans la librairie standard de python, plus pr\u00e9cisemment dans le module <code>statistics</code>: <code>median</code>, <code>mean</code> et <code>stdev</code>.</p> <ol> <li>Prendre connaissance de la documentation sur les fonctions <code>median</code>, <code>mean</code> et <code>stdev</code> du module <code>statistics</code>.  </li> <li>L'\u00e9cart type est d\u00e9fini comme la racine carr\u00e9e de la variance. La fonction racine carr\u00e9e <code>sqrt</code> peut \u00eatre import\u00e9e depuis le module <code>math</code>. Compl\u00e9ter la fonction <code>analyse_note</code> dans la cellule d\u00e9j\u00e0 pr\u00e9par\u00e9e ci-dessous, puis tester votre code.</li> </ol> <pre><code>#1. Afficher l'aide sur les fonctions median, mean et variance du module statistics\n</code></pre> <pre><code>#2. Votre code dans cette cellule\nfrom math import sqrt\nfrom statistics import median, mean, stdev\n\n\ndef analyse_note(t):\n\"\"\"\n    Renvoie un p-uplet compos\u00e9 de la m\u00e9diane, la moyenne et l'\u00e9cart type d'\u00e9chantillon de notes.\n    t: tableau de nombres flottants compris entre 0.0 et 20.0\n    \"\"\"\n    #A compl\u00e9ter\n    pass\n</code></pre> <pre><code># TEST - DECOMMENTER et EXECUTER\nfrom math import fabs\n\n\nnotes = [15, 10, 3, 9, 5, 13, 2]\nepsilon = 1e-5\nassert fabs(analyse_note(notes)[0] - 9.0) &lt; epsilon, \"La fonction ne passe pas le test\"\nassert fabs(analyse_note(notes)[1] - 8.14285) &lt; epsilon, \"La fonction ne passe pas le test\"\nassert fabs(analyse_note(notes)[2] - 4.98091) &lt; epsilon, \"La fonction ne passe pas le test\" \n</code></pre>"},{"location":"NSI1/S5/S5E3.html#iterer-sur-les-elements-dun-dictionnaire","title":"It\u00e9rer sur les \u00e9l\u00e9ments d'un dictionnaire","text":"<p>Au zoo de Beauval, il y a 5 \u00e9l\u00e9phants d'Asie, 17 \u00e9cureuils d'Asie, 2 pandas d'Asie, etc. On mod\u00e9lise cet inventaire avec un dictionnaire, de la fa\u00e7on suivante:</p> <pre><code>zoo_Beauval = {\n    \"\u00e9l\u00e9phant\" : (\"Asie\", 5),\n    \"\u00e9cureuil\" : (\"Asie\", 17),\n    \"panda\" : (\"Asie\", 2),\n    \"hippopotame\" : (\"Afrique\", 7),\n    \"girafe\" : (\"Afrique\", 4)}\n</code></pre> <p>De la m\u00eame fa\u00e7on on repr\u00e9sente le zoo de La Fl\u00e8che:</p> <pre><code>zoo_LaFleche = {\n    \"ours\" : (\"Europe\", 4),\n    \"tigre\" : (\"Asie\", 7),\n    \"hippopotame\" : (\"Afrique\", 3),\n    \"girafe\" : (\"Afrique\", 11)}\n</code></pre> <pre><code>maxi = 0\nnom_animal = ''\nfor categorie in zoo_Beauval.items():\n    if categorie[1][1] &gt; maxi:\n        maxi = categorie[1][1]\n        nom_animal = categorie[0]\n</code></pre> <pre><code>Asie\nAsie\nAsie\nAfrique\nAfrique\n</code></pre> <p>On souhaite \u00e9crire une fonction <code>plus_grand_nombre</code> qui prend un zoo en param\u00e8tre et qui retourne le nom de l'animal le plus repr\u00e9sent\u00e9 dans ce zoo.  </p> <p>1. Quel type d'it\u00e9ration doit-on utiliser dans cette fonction?  </p> <ul> <li><code>for cle in d.keys()</code></li> <li><code>for val in d.values()</code></li> <li><code>for cle,val in d.items()</code></li> <li>Aucune it\u00e9ration</li> </ul> <p>2. \u00c9crire cette fonction</p> <pre><code>#Votre code dans cette cellule\ndef plus_grand_nombre(zoo):\n\"\"\"\n    Renvoie le nom de l'animal (string) le plus repr\u00e9sent\u00e9 dans le zoo pass\u00e9 en param\u00e8tre.\n    zoo: dictionnaire\n    \"\"\"\n    pass\n</code></pre> <pre><code># TEST - DECOMMENTER et EXECUTER\nassert plus_grand_nombre(zoo_LaFleche) == \"girafe\", \"La fonction ne passe pas le test\"\nassert plus_grand_nombre(zoo_Beauval) == \"\u00e9cureuil\", \"La fonction ne passe pas le test\"\n</code></pre> <p>3. On souhaite \u00e9crire une fonction <code>nombre_total</code> qui prend en param\u00e8tres un zoo et un nom de continent. Cette fonction doit renvoyer le nombre total d'animaux originaires de ce continent. Quel type d'it\u00e9ration doit-on utiliser dans cette fonction?</p> <ul> <li><code>for cle in d.keys()</code></li> <li><code>for val in d.values()</code></li> <li><code>for cle,val in d.items()</code></li> <li>Aucune it\u00e9ration  </li> </ul> <p>4. \u00c9crire cette fonction</p> <pre><code>#Votre code dans cette cellule\ndef nombre_total(zoo, continent):\n\"\"\"\n    Renvoie le nombre total d'animaux (entier naturel) pr\u00e9sents dans le zoo \n    et originaire du continent.\n    zoo: dictionnaire\n    continent: string\n    \"\"\"\n    #A compl\u00e9ter\n    pass\n</code></pre> <pre><code># TEST - DECOMMENTER et EXECUTER\nassert nombre_total(zoo_LaFleche, \"Afrique\") == 14, \"La fonction ne passe pas le test\"\nassert nombre_total(zoo_Beauval, \"Asie\") == 24, \"La fonction ne passe pas le test\"\n</code></pre> <p>5. On souhaite \u00e9crire une fonction <code>nombre</code> qui prend en param\u00e8tres un zoo et un nom d'animal. La fonction doit renvoyer le nombre de repr\u00e9sentant de cet animal (entier naturel) dans le zoo. Quel type d'it\u00e9ration doit-on utiliser dans cette fonction?</p> <ul> <li><code>for cle in d.keys()</code></li> <li><code>for val in d.values()</code></li> <li><code>for cle,val in d.items()</code></li> <li>Aucune it\u00e9ration</li> </ul> <p>6. \u00c9crire cette fonction</p> <pre><code>#Votre code dans cette cellule\ndef nombre(zoo, animal):\n\"\"\"\n    Renvoie le nombre total d'animaux (entier naturel) pr\u00e9sents dans le zoo \n    et originaire du continent.\n    zoo: dictionnaire\n    continent: string\n    \"\"\"\n    #A compl\u00e9ter\n    pass\n</code></pre> <pre><code># TEST - DECOMMENTER et EXECUTER\nassert nombre_total(zoo_LaFleche, \"Afrique\") == 14, \"La fonction ne passe pas le test\"\nassert nombre_total(zoo_Beauval, \"Asie\") == 24, \"La fonction ne passe pas le test\"\n</code></pre>"},{"location":"NSI1/S5/S5E4.html","title":"Donn\u00e9es tabul\u00e9es - Exercices","text":""},{"location":"NSI1/S5/S5E4.html#fichiers-de-travail-a-utiliser","title":"Fichiers de travail \u00e0 utiliser","text":"<p>Rendez-vous sur Capytale avec le code <code>9ca9-2976730</code>, les fichiers csv sont d\u00e9j\u00e0 int\u00e9gr\u00e9s.</p>"},{"location":"NSI1/S5/S5E4.html#exercice-1-utilisation-dun-tableau-de-dictionnaires","title":"Exercice 1: Utilisation d'un tableau de dictionnaires","text":"<p>On utilise le fichier csv <code>rapworld.csv</code> rencontr\u00e9 dans le cours 4. On importe ce fichier vers une structure de tableau de dictionnaire.</p> <pre><code># Cellule \u00e0 ex\u00e9cuter\nimport csv\n\n\ndef importer_table(f):\n\"\"\" Importe le fichier csv 'f' et renvoie un tableau de dictionnaire, \n    correspondant \u00e0 chaque ligne du fichier.\n    \"\"\"\n    with open(f, newline='', encoding='utf8') as f_ob:\n        return [dict(ligne) for ligne in csv.DictReader(f_ob, delimiter=';')]\n\nt = importer_table('rapworld.csv')\n</code></pre> <p>1. Afficher tous les champs de la table <code>t</code>.</p> <pre><code>\n</code></pre> Coup de pouce <p>On peut afficher le type du premier \u00e9l\u00e9ment du tableau <code>t</code> avec <code>print(type(t[0])</code>.</p> <p>2. On souhaiterait connaitre le nombre d'artistes vivant \u00e0 Paris ou Houston. Compl\u00e9ter la fonction <code>ville</code> ci dessous permettant de r\u00e9soudre ce probl\u00e8me.</p> <pre><code>def ville(t, v):\n\"\"\" Renvoie le nombre d'artiste de la table 't' vivant dans la ville 'v'.\n    t: table de donn\u00e9es (tableau de dictionnaire)\n    v: ville (str)\n    \"\"\"\n    nb_artiste = 0\n    for artiste in ...:\n        if v in ...:\n            nb_artiste = nb_artiste + 1\n    return nb_artiste\n</code></pre> <pre><code># TESTS\nassert ville(t, 'London') == 13\nassert ville(t, 'Paris') == 36\nassert ville(t, 'Houston') == 21\nprint('Valid\u00e9 !')\n</code></pre> <p>3. On souhaiterait obtenir la liste des artistes d\u00e9c\u00e9d\u00e9s ainsi que la date de leur d\u00e9c\u00e8s. Compl\u00e9ter la fonction suivante.</p> <pre><code>def nb_dcd(t):\n\"\"\" Renvoie un tableau de p-uplets dont les composantes sont (nom, date de d\u00e9c\u00e8s).\n    t: table de donn\u00e9es (tableau de dictionnaire)\n    \"\"\"\n    return [(artiste['Name'], artiste['Deathdate']) \n            for ... in ... if ... != '']\n</code></pre> <pre><code>print(nb_dcd(t))\n</code></pre>"},{"location":"NSI1/S5/S5E4.html#exercice-2-modifier-un-champ","title":"Exercice 2 Modifier un champ","text":"<p>Lors de la cr\u00e9ation de la structure de donn\u00e9es associ\u00e9e \u00e0 l'ensemble des donn\u00e9es tabul\u00e9es, tous les champs enregistr\u00e9s sont de type chaine de caract\u00e8res (string).  Cependant, il serait plus judicieux quelques fois, d'avoir des attributs de type num\u00e9rique (entiers ou flottants).  </p> <p>Cet exercice pr\u00e9sente une situation de ce genre.</p> <pre><code># Cellule \u00e0 ex\u00e9cuter\nimport csv\n\n\ndef importer_table(f):\n\"\"\" Importe le fichier csv 'f' et renvoie un tableau de tableaux, dont\n    les \u00e9l\u00e9ments correspondent \u00e0 une ligne du fichier.\n    \"\"\"\n    with open(f, newline='', encoding='utf8') as f_ob:\n        return [ligne for ligne in csv.reader(f_ob, delimiter=';')]\n\nt = importer_table('rapworld.csv')\n</code></pre> <p>1. En examinant le code ci-dessous, dire quelle(s) modification(s) apporte la fonction <code>modifier_col</code> \u00e0 une table <code>t</code>?</p> <pre><code>def extraire_annee(date, i, j):\n\"\"\" Extrait l'ann\u00e9e de la chaine 'date' pass\u00e9e en param\u00e8tre sachant que celle-ci\n    est comprise entre les index i et j exclus.\n    Renvoie un entier.\n    date: chaine (str)\n    i, j: index (int)\n    \"\"\"\n    # R\u00e9cup\u00e9rer une \"tranche\" d'une chaine (on dit aussi faire du \"slicing\"), n'est \n    # pas exigible en 1re NSI.\n    return int(date[i:j])\n\ndef modifier_col(t, colonnes):\n\"\"\"\n    ....\n    t: table de donn\u00e9e (tableau de tableaux)\n    colonnes: tableau d'entier(s) correspondant aux colonnes \u00e0 modifier.\n    \"\"\"\n    t_fin = [None for _ in range(len(t))]\n    for i in range(len(t)):\n        t_fin[i] = [champ for champ in t[i]]\n        if i != 0:\n            for j in colonnes:\n                if t[i][j] != '':\n                    t_fin[i][j] = extraire_annee(t[i][j], 0, 4)\n                else:\n                    t_fin[i][j] = -1\n    return t_fin        \n</code></pre> Coup de pouce <p>L'instruction <code>print(t[0])</code> fournit:  </p> <pre><code>['Name',\n'Categories',\n'URL',\n'Years Active Start',\n'Birthdate',\n'Summary',\n'Years Active End',\n'Deathdate',\n'Clip Example YouTube',\n'City',\n'Neighborhood',\n'Coordinates']\n</code></pre> <p>2. \u00c9crire le code qui produit \u00e0 l'ex\u00e9cution l'affichage suivant:  </p> <pre><code>18 -  J Dilla : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de  32 ans\n90 -  Coyote Jo Bastard : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de  0 ans\n110 -  Lord Infamous : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de  40 ans\n159 -  The Jacka : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de  38 ans\n210 -  The Notorious B.I.G. : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de  25 ans\n312 -  Proof : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de  33 ans\n318 -  Nate Dogg : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de  42 ans\n326 -  Big Hawk : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de  37 ans\n327 -  Fat Pat : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de  28 ans\n353 -  Soulja Slim : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de  26 ans\n358 -  Koopsta Knicca : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de  40 ans\n409 -  Big Pun : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de  29 ans\n433 -  Aaliyah : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de  22 ans\n457 -  DJ Screw : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de  29 ans\n502 -  Big L : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de  25 ans\n514 -  Big Moe : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de  33 ans\n526 -  Pimp C : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de  34 ans\n550 -  Guru : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de  49 ans\n578 -  Ol' Dirty Bastard : d\u00e9c\u00e9d\u00e9 \u00e0 l'\u00e2ge de  36 ans\n</code></pre> <p>3. Commenter la deuxi\u00e8me ligne.</p>"},{"location":"NSI1/S5/S5E4.html#exercice-3-ajouter-un-champ-ou-un-enregistrement-a-une-table","title":"Exercice 3 Ajouter un champ ou un enregistrement \u00e0 une table","text":"<p>On dispose d'un fichier <code>groupe1.csv</code> qui regroupe les donn\u00e9es tabul\u00e9es suivantes:  </p> Nom LV1 NSI Math Alex 17 16 16 Zo\u00e9 15 7 9 Max 13 19 14 <p>1. \u00c9crire la fonction <code>lire_table</code> qui prend en param\u00e8tre un nom de fichier (string) et qui renvoie un tableau de p-uplets nomm\u00e9s (des dictionnaires ici) qui repr\u00e9sente la table ci-dessus.  </p> <p>Attention</p> <p>Le caract\u00e8re s\u00e9parateur est la virgule dans cet exercice.</p> <pre><code>import csv\nfrom pprint import pprint\n\ndef lire_table(f):\n\"\"\"\n    \"\"\"\n    # A compl\u00e9ter\n    pass\n\nt1 = lire_table('groupe1.csv')\npprint(t1)\n</code></pre> <p>Suggestions pour la suite</p> <p>Pour r\u00e9aliser une copie d'un objet complexe comme notre table, on pourra utiliser la fonction  <code>copier_table</code> ci-dessous.</p> <pre><code>def copier_table(table_src, table_dest):\n\"\"\" \n    Copie le tableau de dictionnaire source 'table_src' \n    vers le tableau de dictionnaire de destination 'table_dest'    \n    \"\"\"\n\n    # Recopie les couples cle, valeur de chaque ligne i de table_src dans la destination\n    for i in range(len(table_src)):\n        for cle in table_src[i].keys():\n            table_dest[i][cle] = table_src[i][cle]\n</code></pre> <p>2. Compl\u00e9ter la fonction <code>inserer_ligne</code> qui prend une table de donn\u00e9es <code>t</code> en param\u00e8tre, ainsi que les notes d'un eleve <code>e</code> et qui  renvoie un nouvelle table qui contient les \u00e9l\u00e9ments de <code>t</code> mais aussi la ligne correspondant \u00e0 <code>e</code>.  </p> <p>Ex\u00e9cuter la cellule de tests qui v\u00e9rifiera si les notes de Chlo\u00e9: 17 en math, 19 en LV1 et 18 en NSI, sont bien ins\u00e9r\u00e9es dans la table <code>t</code>.</p> <pre><code>def inserer_ligne(t, e):\n\"\"\" \n    Renvoie un nouveau tableau qui contient les \u00e9l\u00e9ments de 't' ansi que les informations\n    relatives \u00e0 l'\u00e9l\u00e8ve 'e'.\n    t: tableau de dictionnaires\n    e: dictionnaire de la forme {'Nom': 'xxx', 'LV1': n, ...}\n    \"\"\"\n\n    nouvelle_table = [{} for i in range(len(t) + 1)] # on doit renvoyer un NOUVEAU tableau\n    copier_table(t, nouvelle_table) \n    for ... in ...:\n        ...\n    return nouvelle_table\n</code></pre> <pre><code># TESTS\nchloe = {'Nom': 'Chlo\u00e9', 'LV1': '19', 'NSI': '18', 'Math': '17'}\ntable = ajouter_ligne(t1, chloe)\nassert table[3]['Nom'] == 'Chlo\u00e9', \"Erreur: la fonction ne passe pas les tests\"\nassert table[3]['NSI'] == '18', \"Erreur: la fonction ne passe pas les tests\"\nassert table[3]['Math'] == '17', \"Erreur: la fonction ne passe pas les tests\"\nprint('Valid\u00e9 !')\n</code></pre> <p>On voudrait ajouter une colonne contenant les moyennes de chaque \u00e9l\u00e8ve, comme dans la table ci-dessous:</p> Nom LV1 NSI Math Moyenne Alex 17 16 16 16.3 Zo\u00e9 15 7 9 10.3 Max 13 19 14 15.3 Chlo\u00e9 19 18 17 18.0 <p>La strat\u00e9gie propos\u00e9e est la suivante:  </p> <ul> <li>On modifie le type des colonnes de notes, en flottant par exemple;</li> <li>Pour chaque \u00e9l\u00e8ve (en r\u00e9alit\u00e9 chaque ligne du tableau), on calcule la moyenne et on ajoute la paire <code>'Moyenne':valeur</code> \u00e0 la ligne.  </li> </ul> <p>Chacun des deux points pr\u00e9c\u00e9dents sera r\u00e9solu en \u00e9crivant une fonction renvoyant un nouveau tableau.</p> <p>a. Compl\u00e9ter la fonction <code>colonnes_numeriques</code> afin que celle-ci renvoie une nouvelle table dont les colonnes num\u00e9riques sont de type flottant.</p> <pre><code>def colonnes_numeriques(t):\n\"\"\" Change le type des colonnes de 't' autres que le nom en flottant,\n    et renvoie un nouveau tableau.\n    \"\"\"\n\n    # R\u00e9cup\u00e9ration du nom des mati\u00e8res\n    liste_matieres = [m for m in t[0].keys() if m != 'Nom']\n\n    # Travail sur une copie de 't'\n    copie = [{} for i in range(len(t))]\n    copier_table(t, copie)\n\n    for i in range(len(t)):\n        for matiere in ...:\n            copie[i][matiere] = float(...)\n    return copie\n</code></pre> <p>b. Compl\u00e9ter la fonction <code>calculer_moyenne</code>.  </p> <p>Astuce</p> <p>Pour obtenir un nombre flottant avec un nombre de d\u00e9cimales bien d\u00e9termin\u00e9, on peut utiliser la fonction <code>round</code>. Exemple <code>round(3.14159, 2)</code> <code>&gt;&gt;&gt; 3.14</code></p> <pre><code>def calculer_moyenne(t):\n\"\"\" \n    Ins\u00e8re une colonne 'Moyenne' dans une copie du tableau 't' et le renvoie.\n    t: tableau de dictionnaires\n    \"\"\"\n    # R\u00e9cup\u00e9ration du nom des mati\u00e8res\n    liste_matieres = [m for m in t[0].keys() if m != 'Nom']\n\n    # Travail sur une copie de t\n    copie = [{} for i in range(len(t))]\n    copier_table(t, copie)\n\n    for i in range(len(copie)): # on calcule la moyenne pour CHAQUE \u00e9l\u00e8ve\n        somme = 0\n        # On fait d'abord la somme de ses notes\n        for matiere in liste_matieres:\n            somme = somme + ...\n        # On divise par le nombre de notes et on cr\u00e9\u00e9 la cl\u00e9 'Moyenne' associ\u00e9e \u00e0 sa valeur\n        copie[i]['Moyenne'] = round(..., 2)\n    return copie\n</code></pre> <p>V\u00e9rifier que l'ex\u00e9cution de <code>pprint(calculer_moyenne(table))</code> fournit bien:</p> <pre><code>[{'LV1': 17.0, 'Math': 16.0, 'Moyenne': 16.33, 'NSI': 16.0, 'Nom': 'Alex'},\n {'LV1': 15.0, 'Math': 9.0, 'Moyenne': 10.33, 'NSI': 7.0, 'Nom': 'Zo\u00e9'},\n {'LV1': 13.0, 'Math': 14.0, 'Moyenne': 15.33, 'NSI': 19.0, 'Nom': 'Max'},\n {'LV1': 19.0, 'Math': 17.0, 'Moyenne': 18.0, 'NSI': 18.0, 'Nom': 'Chlo\u00e9'}]\n</code></pre> <p>c. (Pour les cracks) On voudrait rajouter un enregistrement qui donne la moyenne par mati\u00e8re, comme dans la table suivante:  </p> Nom LV1 NSI Math Moyenne Alex 17 16 16 16.3 Zo\u00e9 15 7 9 10.3 Max 13 19 14 15.3 Chlo\u00e9 19 18 17 18 moy_mat 16.0 15.0 14.0 15.0 <p>\u00c9crire une fonction <code>moyennes_matieres</code> qui prend en param\u00e8tre une table (de type tableau de dictionnaire et ayant la m\u00eame forme qu'\u00e0 la question pr\u00e9c\u00e9dente) et qui renvoit une nouvelle table en y ajoutant une ligne comportant les moyennes par mati\u00e8re. </p>"},{"location":"NSI1/S6/S6A1.html","title":"ELEMENTS D'INTERACTION DANS UNE PAGE WEB","text":""},{"location":"NSI1/S6/S6A1.html#analyse-dune-page-web","title":"Analyse d'une page web","text":""},{"location":"NSI1/S6/S6A1.html#les-composants-graphiques-permettant-linteraction-avec-lutilisateur","title":"Les composants graphiques permettant l'interaction avec l'utilisateur","text":"<p>Dans une page web, des \u00e9l\u00e9ments servent \u00e0 structurer la page et \u00e0 fournir sa s\u00e9mantique. D'autres vont permettre \u00e0 l'utilisateur d'interagir avec la page.</p> <p>\u00c0 faire</p> <p>Saisir et ex\u00e9cuter le code ci-dessous dans Capytale ou avec VSCode + Chrome</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"fr\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;IHM sur le web en NSI&lt;/title&gt;\n    &lt;style&gt;\nspan:hover {\ncolor: royalblue;\nfont-size: 120%;\n}\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;article&gt;\n        &lt;h1&gt;Identification&lt;/h1&gt;\n\n        &lt;form action=\"\"&gt;\n            &lt;label for=\"nom\"&gt;Votre Nom&lt;/label&gt; \n            &lt;input type=\"text\" name=\"nom\" id=\"nom\"&gt;\n            &lt;label for=\"prenom\"&gt;Votre pr\u00e9nom&lt;/label&gt;\n            &lt;input type=\"text\" name=\"prenom\" id=\"prenom\"&gt;\n            &lt;label for=\"mdp\"&gt;Mot de passe&lt;/label&gt;\n            &lt;input type=\"password\" name=\"mdp\" id=\"mdp\"&gt;\n            &lt;input type=\"submit\" value=\"Valider\"&gt;\n        &lt;/form&gt;\n    &lt;h1&gt;Les ressources&lt;/h1&gt;\n    &lt;p&gt; \n    Le site incontournable pour l'\u00e9tudiant ayant un parcours &lt;span&gt;Web&lt;/span&gt; dans son cursus est le site \n    &lt;strong&gt;MDN  web docs&lt;/strong&gt;. il s'agit d'une communaut\u00e9 ouverte de d\u00e9veloppeurs et r\u00e9dacteurs \n    qui cr\u00e9ent des ressources afin de rendre le &lt;span&gt;Web&lt;/span&gt; meilleur. &lt;br&gt;\n    &lt;a href=\"https://developer.mozilla.org/fr/docs/Apprendre\" target=\"_blank\"&gt;Adresse du site&lt;/a&gt;   \n    &lt;/p&gt;\n    &lt;p&gt;Son dernier logo&lt;/p&gt;\n    &lt;img src=\"https://www.mozilla.org/media/protocol/img/logos/mozilla/black.40d1af88c248.svg\" alt=\"logo de la mdn\"&gt;\n    &lt;h1&gt;Les langages&lt;/h1&gt;\n    &lt;p&gt;Les trois langages \u00e0 conna\u00eetre sont:&lt;/p&gt;\n    &lt;ol&gt;\n        &lt;li&gt;HTML&lt;/li&gt;\n        &lt;li&gt;CSS&lt;/li&gt;\n        &lt;li&gt;Javascript&lt;/li&gt;\n    &lt;/ol&gt;\n    &lt;label for=\"langage\"&gt;S\u00e9lectionner votre niveau dans ces trois langages&lt;/label&gt;\n    &lt;select name=\"listlangages\" id=\"langages\"&gt;\n        &lt;option value=\"debutant\"&gt;D\u00e9butant&lt;/option&gt;\n        &lt;option value=\"inter\"&gt;Interm\u00e9diaire&lt;/option&gt;\n        &lt;option value=\"expert\"&gt;Expert&lt;/option&gt;\n    &lt;/select&gt;\n    &lt;/article&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Une possibilit\u00e9 d'interaction avec la page est donn\u00e9e par l'utilisation de composants graphiques (formulaire, liste d\u00e9roulante, case \u00e0 cocher, bouton, etc.). On trouvera une liste exhaustive de toutes les possibilit\u00e9s \u00e0 cette adresse.</p> <p>\u00c0 faire</p> <p>Quels sont les \u00e9l\u00e9ments qui permettent une interaction  dans la page pr\u00e9c\u00e9dente?</p>"},{"location":"NSI1/S6/S6A1.html#quels-evenements-sont-associes-aux-composants-graphiques","title":"Quels \u00e9v\u00e9nements sont associ\u00e9s aux composants graphiques?","text":""},{"location":"NSI1/S6/S6A1.html#decouvrir-les-attributs-devenements","title":"D\u00e9couvrir les attributs d'\u00e9v\u00e9nements","text":"\u00c0 faire <p>Ouvrir le fichier <code>evenement.html</code> avec Chrome. Ouvrir  la console de d\u00e9veloppement web (touche F12). </p> <p>1. Quel \u00e9l\u00e9ment graphique de la page permet d'interagir  avec l'utilisateur ? 2. Lister tous les attributs de cet \u00e9l\u00e9ment. Etant donn\u00e9  le caract\u00e8re explicite de leur nom, faire une hypoth\u00e8se sur  leur r\u00f4le. 3. Quel \u00e9v\u00e9nement provoque un changement dans la page ? 4. \u00c0 quel attribut, ce changement est-il li\u00e9?</p>"},{"location":"NSI1/S6/S6A1.html#quappelle-t-on-evenement-et-comment-est-il-lie-a-une-page-web","title":"Qu'appelle-t-on \u00e9v\u00e9nement et comment est-il li\u00e9 \u00e0 une page web?","text":"<p>On appelle \u00e9v\u00e9nement une action de l'utilisateur ou d'un composant du navigateur. Les \u00e9v\u00e9nements associ\u00e9s \u00e0 des balises HTML sont nombreux. Voici quelques exemples:</p> D\u00e9nomination de l'\u00e9v\u00e9nement (event en anglais) Description Domaine d'utilisation onclick Clic du bouton gauche Pointage souris oninput Modification de champ d'un formulaire Formulaire onload Chargement complet d'une page Traitement des pages web <p>Ils sont li\u00e9s aux \u00e9l\u00e9ments d'une page web en tant qu'attribut. Les attributs d'\u00e9v\u00e9nements portent un nom pr\u00e9fix\u00e9 par <code>on</code>. La syntaxe habituelle est:  </p> <p><code>&lt;tag on....=\"action()\"&gt;&lt;/tag&gt;</code> </p> <p>Dans cette \u00e9criture, <code>tag</code> est le nom d'une balise, le terme <code>on....</code> est l'\u00e9v\u00e9nement et <code>action()</code> est une fonction qui traite l'\u00e9v\u00e9nement (voir paragraphe suivant). On trouvera sur le site W3Schools.com une liste exhaustive des attributs d'\u00e9v\u00e9nements.</p> Application directe <p>On dispose d'une page <code>gestion_evenement.html</code> dans laquelle on  souhaiterait:  </p> <ul> <li>rendre le lien actif (adresse du site:  https://www.w3schools.com/)</li> <li>que le lien r\u00e9agisse \u00e0 un clic en ouvrant une <code>popup</code> (fen\u00eatre surgissante) qui indique 'Tr\u00e8s bon choix !'.  </li> </ul> <p>R\u00e9aliser ces deux consignes.  </p> <p>Indications: l'ouverture d'une <code>popup</code> (l'action \u00e0 r\u00e9aliser)  se fera avec la m\u00e9thode <code>alert()</code> \u00e0 qui on passe le texte \u00e0  afficher.</p>"},{"location":"NSI1/S6/S6A1.html#comment-modifier-le-traitement-des-evenements","title":"Comment modifier le traitement des \u00e9v\u00e9nements?","text":""},{"location":"NSI1/S6/S6A1.html#le-langage-utilise","title":"Le langage utilis\u00e9","text":"<p>Le troisi\u00e8me langage incontournable du web est incontestablement Javascript (autre d\u00e9nomination ECMAScript). Il est utilis\u00e9 pour impl\u00e9menter l'interactivit\u00e9 dans les pages web. Le programme de premi\u00e8re NSI ne pr\u00e9voit pas d'\u00e9tude approfondie de ce langage. Aussi, les plus curieux pourront visiter les excellentes adresses suivantes:</p> <ul> <li>Openclassrooms (en fran\u00e7ais);</li> <li>W3Schools (en anglais).</li> </ul>"},{"location":"NSI1/S6/S6A1.html#presentation-de-quelques-exemples","title":"Pr\u00e9sentation de quelques exemples","text":""},{"location":"NSI1/S6/S6A1.html#exemple-1-manipuler-date-et-heure","title":"Exemple 1: manipuler date et heure","text":"<p>Dans ce premier exemple simple, on souhaite afficher la date et l'heure si l'utilisateur clique sur le bouton.</p> \u00c0 faire <p>Saisir et ex\u00e9cuter le code ci-dessous dans  Capytale ou dans VSCode + Chrome.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"fr\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Exemple 1&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;p&gt;Pour afficher la date et l'heure, cliquer sur le bouton&lt;/p&gt;\n    &lt;button onclick=\"alert('Nous sommes le : '+ Date())\"&gt;Quelle heure est-il?&lt;/button&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Ici l'\u00e9v\u00e9nement trait\u00e9 est le clic (du bouton gauche) de la souris sur le bouton. Lorsque cet \u00e9v\u00e9nement se produit, la fonction <code>alert</code> qui permet d'afficher un message dans une fen\u00eatre de type popup. Le message est concat\u00e9n\u00e9 ici avec l'objet <code>Date</code> de Javascript.  </p> <p>Les fonctions de traitement d'\u00e9v\u00e9nements peuvent \u00eatre beaucoup plus longue que dans ce premier exemple. Dans ce cas, on \u00e9vitera de passer tout le code dans l'attribut de l'\u00e9l\u00e9ment comme dans cet exemple et on privil\u00e9giera une des m\u00e9thodes trait\u00e9es dans les prochains exemples.</p>"},{"location":"NSI1/S6/S6A1.html#exemple-2-utilisation-de-la-balise-script","title":"Exemple 2: utilisation de la balise script","text":"<p>On reprend le m\u00eame exemple mais en d\u00e9portant le traitement de l'\u00e9v\u00e9nement <code>onclick</code> dans une fonction d\u00e9finie dans un \u00e9l\u00e9ment <code>&lt;script&gt;</code>.</p> <p>\u00c0 faire</p> <p>Saisir et ex\u00e9cuter le code ci-dessous dans  Capytale ou dans VSCode + Chrome.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"fr\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Exemple 2&lt;/title&gt;\n    &lt;script defer&gt;\nfunction displayDate() {\nalert('Nous sommes le: ' + Date());\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;p&gt;Cliquer sur le bouton pour afficher la date et l'heure.&lt;/p&gt;\n    &lt;button onclick=\"displayDate()\"&gt;Quelle heure est-il?&lt;/button&gt;    \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>En Javascript une fa\u00e7on de d\u00e9clarer une fonction est d'utiliser le mot cl\u00e9 <code>function</code> suivi d'un nom et d'\u00e9ventuels param\u00e8tres entre parenth\u00e8ses. L'attribut <code>defer</code> indique au navigateur de charger tous les \u00e9l\u00e9ments de la page avant d'ex\u00e9cuter le script. </p> <p>Cette fa\u00e7on de proc\u00e9der est acceptable.  </p>"},{"location":"NSI1/S6/S6A1.html#exemple-3-changer-la-couleur-dun-paragraphe","title":"Exemple 3: changer la couleur d'un paragraphe","text":"<p>On consid\u00e8re le code de l'exemple 3 suivant:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"fr\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Exemple 3&lt;/title&gt;\n    &lt;script defer&gt;\nfunction dblClic() {\nlet paraCible = document.getElementById(\"para1\");\nparaCible.style.color = \"red\";\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;p id=\"para1\"&gt;Double-cliquer sur ce paragraphe pour changer la couleur.&lt;/p&gt;\n\n    &lt;p id=\"para2\"&gt;\n        L'exercice &lt;br&gt;\n        La fonction 'dblClic()' doit \u00eatre appel\u00e9e lorsque l'utilisateur double clique sur le paragraphe identifi\u00e9 par \"para1\"\n        Cette fonction modifie la couleur du texte de ce paragraphe.\n    &lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>On souhaiterait modifier l'\u00e9l\u00e9ment <code>p</code> appropri\u00e9 de cette page de sorte que le texte du paragraphe 1 passe en rouge lorsque l'utilisateur double-clique dessus. </p> \u00c0 faire <p>Saisir et ex\u00e9cuter le code ci-dessus dans  Capytale ou dans VSCode + Chrome et  apporter les modifications n\u00e9cessaires.</p> <p>Un extrait de la documentation sur les attributs \u00e9v\u00e9nementiels est donn\u00e9 ci-apr\u00e8s:</p> Attribute Value Description onclick script Fires on a mouse click on the element ondblclick script Fires on a mouse double-click on the element onmousedown script Fires when a mouse button is pressed down on an element onmousemove script Fires when the mouse pointer is moving while it is over an element onmouseout script Fires when the mouse pointer moves out of an element onmouseover script Fires when the mouse pointer moves over an element onmouseup script Fires when a mouse button is released over an element onmousewheel script Deprecated. Use the onwheel attribute instead onwheel script Fires when the mouse wheel rolls up or down over an element"},{"location":"NSI1/S6/S6A1.html#exemple-4-code-javascript-deporte","title":"Exemple 4: code javascript d\u00e9port\u00e9","text":"<p>Une bonne pratique \u00e0 adopter est de d\u00e9porter le code javascript dans un fichier externe. Analysons le code HTML puis Javascript de la page <code>evenement.html</code> rencontr\u00e9e plus haut.  </p> \u00c0 faire <p>Ouvrir la page evenement.html avec Chrome avec sa console de  d\u00e9veloppement web (F12).</p> <p>La gestion d'un clic sur le bouton est assur\u00e9e par la ligne:</p> <p><code>&lt;button id=\"boutonSolution\" onclick=\"afficheMasque()\"&gt;Afficher solution&lt;/button&gt;</code></p> <p>L'\u00e9v\u00e8nement <code>onclick</code> est g\u00e9r\u00e9 par l'appel de la fonction <code>afficheMasque()</code> qui est d\u00e9finie dans le fichier externe <code>script1.js</code>.</p> En compl\u00e9ment <p>Le code javascript de la fonction afficheMasque g\u00e9rant le clic  sur le bouton.  </p> <pre><code>const afficheMasque = function () {\n// On utilise la propri\u00e9t\u00e9 CSS visibility pour rendre visible ou pour masquer un \u00e9l\u00e9ment\n\nlet sol = document.getElementById(\"solution1\")//s\u00e9lection du bloc html contenant la solution \nlet etatAffichage = getComputedStyle(sol, null)//d\u00e9termination de sa propri\u00e9t\u00e9 visible ou cach\u00e9\n\nlet btn = document.getElementById(\"boutonSolution\")\n//s\u00e9lection de l'\u00e9l\u00e9ment bouton\n\nif (etatAffichage.visibility == \"hidden\") {\n/*\n        Si le bloc solution est cach\u00e9, un clic le rendra visible;\n        On change aussi le texte du bouton.\n        */\nsol.style.visibility = \"visible\";\nbtn.innerHTML = \"Cacher solution\"\n} else {\n/*\n        Si le bloc solution est visible, un clic le rendra cach\u00e9;\n        On change aussi le texte du bouton.\n        */\nsol.style.visibility = \"hidden\"; btn.innerHTML = \"Afficher solution\"\n}\n}\n</code></pre> <p>En Javascript, les blocs d'instructions sont d\u00e9limit\u00e9s par les accolades <code>{</code> et <code>}</code>. L'indentation n'est significative comme en python, cependant elle am\u00e9liore la lisibilit\u00e9 du code. Les commentaires sont signal\u00e9s par <code>//</code> ou la paire <code>/*</code>, <code>*/</code> selon qu'ils tiennent sur une ligne ou plusieurs lignes. Le mot cl\u00e9 <code>let</code> permet de d\u00e9clarer des variables. Javascript est utilis\u00e9 ici pour modifier les propri\u00e9t\u00e9s CSS du bloc <code>div</code> contenant la solution: <code>visibility = \"visible\"</code> ou <code>visibility = \"hidden\"</code>.</p>"},{"location":"NSI1/S6/S6A1.html#alternative-plus-elegante","title":"Alternative plus \u00e9l\u00e9gante","text":"<p>Une deuxi\u00e8me fa\u00e7on de proc\u00e9der (plus \u00e9l\u00e9gante) est de ne pas surcharger le code HTML avec l'attribut <code>onclick</code> mais de g\u00e9rer l'\u00e9v\u00e8nement <code>click</code> dans un fichier Javascript (voir fichier <code>script2.js</code>) avec une d\u00e9finition du type:  </p> <pre><code>btn.addEventListener('click', (e) =&gt; {\n...\n});\n</code></pre> <p>On indique ainsi que l'on \u00e9coute l'\u00e9v\u00e9nement <code>click</code> sur le bouton cibl\u00e9 par <code>btn</code>, et que lorsque le clic survient, on ex\u00e9cute le traitement appropri\u00e9.</p>"},{"location":"NSI1/S6/S6A1.html#exercice-pour-les-plus-curieuxrapides","title":"Exercice  pour les plus curieux/rapides","text":"<p>On souhaiterait modifier l\u00e9g\u00e8rement le code de la fonction <code>afficheMasque()</code> de mani\u00e8re \u00e0 ce que m\u00eame si l'utilisateur clique sur <code>Afficher solution</code> celle-ci soit automatiquement cach\u00e9e au bout de 5 secondes.  </p> <p>On utilisera la m\u00e9thode javascript <code>setTimeout</code> \u00e0 qui on passera deux arguments: la fonction qui cachera le code \u00e0 nouveau et le temps (en millisecondes) au bout duquel cette fonction sera ex\u00e9cut\u00e9e. Typiquement, cette fonction sera appel\u00e9e avec la syntaxe suivante:</p> <pre><code>const cacher = function () {\n....\n};\n\nsetTimeout(cacher, 5000);\n</code></pre> <p>On peut trouver des exemples sur le site MDN</p> <p>En r\u00e9sum\u00e9</p> <p>Les principaux \u00e9l\u00e9ments d'interaction d'une page web sont:</p> <ul> <li>les styles CSS;</li> <li>des \u00e9l\u00e9ments graphiques HTML comme des boutons, associ\u00e9s \u00e0 des fonctions de traitements d'\u00e9v\u00e9nements par le biais de leurs attributs.</li> </ul> <p>Les fonctions de traitements des \u00e9v\u00e9nements sont cod\u00e9es en javascript. On d\u00e9portera les codes javascript dans un fichier externe. Dans les cas simples, il s'agira de:</p> <ul> <li>s\u00e9lectionner un \u00e9l\u00e9ment HTMl avec une m\u00e9thode appropri\u00e9e;</li> <li>modifier une propri\u00e9t\u00e9 CSS de cet \u00e9l\u00e9ment.</li> </ul>"},{"location":"NSI1/S6/S6C1.html","title":"HTML5 &amp; CSS3: LES BASES","text":"<p>L'objectif est de rappeler puis d'approfondir des notions d\u00e9j\u00e0 rencontr\u00e9es en SNT. Les tests de code pourront \u00eatre r\u00e9alis\u00e9s de deux fa\u00e7ons diff\u00e9rentes:  </p> <ul> <li>en ligne, sur jsfiddle;</li> <li>en local avec un \u00e9diteur de code (Visual Studio Code) + navigateur (Chrome de pr\u00e9f\u00e9rence).</li> </ul>"},{"location":"NSI1/S6/S6C1.html#les-langages-du-web","title":"Les langages du web","text":"<p>C\u00f4t\u00e9 client, c'est-\u00e0-dire c\u00f4t\u00e9 utilisateur, les langages incontournables sont:  </p> <ul> <li>HTML pour la description du contenu d'une page;</li> <li>CSS pour d\u00e9finir la mise en forme des pages;</li> <li>Javascript (qui ne sera pas abord\u00e9 dans ce chapitre) pour permettre l'interactivit\u00e9 avec l'utilisateur.</li> </ul>"},{"location":"NSI1/S6/S6C1.html#html","title":"HTML","text":""},{"location":"NSI1/S6/S6C1.html#rappels-et-definitions","title":"Rappels et d\u00e9finitions","text":"<p>Le langage HTML est un langage de balisage qui permet de d\u00e9crire la structure et le contenu d'un document. Un navigateur web donne un rendu graphique au fichier textuel HTML.</p> <p>\u00c0 faire</p> <p>Tester le code ci-dessous dans jsfiddle ou avec VSCode + Chrome</p> <pre><code>   &lt;!DOCTYPE html&gt;\n   &lt;html lang=\"fr\"&gt;\n   &lt;head&gt;\n         &lt;meta charset=\"UTF-8\"&gt;\n         &lt;title&gt;Document&lt;/title&gt;\n   &lt;/head&gt;\n   &lt;body&gt;\n         &lt;h1&gt;Structuration de document&lt;/h1&gt;\n         &lt;p&gt;Les &lt;em&gt;balises&lt;/em&gt; html doivent rendre compte de la structure de la page.&lt;/p&gt;\n   &lt;/body&gt;\n   &lt;/html&gt; \n</code></pre> <p>Un fichier HTML est structur\u00e9 \u00e0 partir de balises (tag en anglais). Ce sont des informations situ\u00e9es entre les caract\u00e8res <code>&lt;</code> et <code>&gt;</code>. La premi\u00e8re ligne n'est pas une balise HTML, en toute rigueur il s'agit d'une d\u00e9claration de type de document \u00e0 destination du navigateur.  </p> <p>Sauf exceptions, qui seront vues au fur et \u00e0 mesure de la d\u00e9couverte du langage, \u00e0 une balise ouvrante &lt;...&gt; correspond une balise fermante . La prem\u00e8re exception rencontr\u00e9e ici est la balise <code>meta</code> (qui est une balise auto-fermante).  </p> <p>L'ensemble constitu\u00e9 des balises ouvrante et fermante et du contenu se trouvant entre ces balises, constitue un \u00e9l\u00e9ment HTML.  Chaque \u00e9l\u00e9ment HTML peut avoir des attributs. Ce sont des valeurs suppl\u00e9mentaires qui permettent de configurer ces \u00e9l\u00e9ments ou d'adapter leur comportement, avec une syntaxe du type <code>attribut=\"valeur\"</code>. Exemple </p> \u00c9l\u00e9ment HTML"},{"location":"NSI1/S6/S6C1.html#application-directe-decrire-des-elements","title":"Application directe: d\u00e9crire des \u00e9l\u00e9ments","text":"<p>\u00c0 faire</p> <p>Donner les attributs et les valeurs associ\u00e9es, des \u00e9l\u00e9ments meta et html de l'exemple ci-dessus.</p>"},{"location":"NSI1/S6/S6C1.html#structuration-des-documents","title":"Structuration des documents","text":"<p>D'une mani\u00e8re g\u00e9n\u00e9rale, un fichier HTML aura un squelette sera tr\u00e8s proche de celui de l'exemple donn\u00e9 en introduction. On adaptera le contenu de l'\u00e9l\u00e9ment <code>head</code>, notamment le texte de sa balise <code>&lt;title&gt;</code>, ainsi que celui de l'\u00e9l\u00e9ment <code>body</code>.  </p> <p>L'\u00e9l\u00e9ment obligatoire <code>head</code> apporte des informations (non affich\u00e9es) sur la page et l'\u00e9l\u00e9ment <code>body</code> d\u00e9limite le contenu de la page.</p>"},{"location":"NSI1/S6/S6C1.html#les-titres","title":"Les titres","text":"<p>Les titres peuvent \u00eatre d\u00e9clin\u00e9s en six niveaux de 1 \u00e0 6 \u00e0 l'aide des balises <code>&lt;h1&gt;</code> \u00e0 <code>&lt;h6&gt;</code>:</p> <pre><code>&lt;h1&gt;Titre de niveau 1&lt;/h1&gt;\n&lt;h2&gt;Titre de niveau 2&lt;/h2&gt;\n......\n&lt;h6&gt;Titre de niveau 6&lt;/h6&gt;\n</code></pre> <p>Le rendu est le suivant:  </p> Balises de titre <p>\u00c0 faire</p> <p>Ajouter un titre de niveau \u00e0 l'exemple d'introduction.</p>"},{"location":"NSI1/S6/S6C1.html#les-textes","title":"Les textes","text":"<p>Les textes peuvent \u00eatre organis\u00e9s en paragraphes avec la balise <code>&lt;p&gt;</code>.</p> <p>Exemple</p> <p><pre><code>&lt;p&gt;HTML contient environ 140 balises qui fournissent au navigateur des indications sur \nle sens d'un \u00e9l\u00e9ment, son interpr\u00e9tation ou son affichage. Entre autres choses, les balises \npermettent de fournir des m\u00e9ta-donn\u00e9es pour le document HTML, de mettre en avant certaines \nphrases, d'ajouter des fichiers multim\u00e9dias ou de g\u00e9rer des formulaires en ligne.\n&lt;/p&gt;\n</code></pre> On peut \u00e9galement pr\u00e9senter du texte sous forme de listes ordonn\u00e9es: <pre><code>Les parties essentielles d'un document HTML:\n&lt;ol&gt;\n    &lt;li&gt;l'\u00e9l\u00e9ment html;&lt;/li&gt;\n    &lt;li&gt;l'\u00e9l\u00e9ment head;&lt;/li&gt;\n    &lt;li&gt;l'\u00e9l\u00e9ment body.&lt;/li&gt;\n&lt;/ol&gt;\n</code></pre></p> <p>\u00c0 faire</p> <p>Ajouter la liste ci-dessus \u00e0 l'exemple d'introduction, dans jsfiddle. Commentez le rendu.</p> <p>La pr\u00e9sentation peut se faire \u00e9galement sous forme de listes non ordonn\u00e9es: <pre><code>Les parties essentielles d'un document HTML:\n&lt;ul&gt;\n    &lt;li&gt;l'\u00e9l\u00e9ment html;&lt;/li&gt;\n    &lt;li&gt;l'\u00e9l\u00e9ment head;&lt;/li&gt;\n    &lt;li&gt;l'\u00e9l\u00e9ment body.&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre></p> <p>\u00c0 faire</p> <p>Modifier le code HTML sur jsfiddle de mani\u00e8re \u00e0 avoir une liste non ordonn\u00e9e. Commentez le rendu.</p>"},{"location":"NSI1/S6/S6C1.html#liens-et-ressources","title":"Liens et ressources","text":"<p>Une des caract\u00e9ristiques essentielles de HTML est de fournir des liens hypertextes. Ces derniers sont ins\u00e9r\u00e9s avec la balise <code>&lt;a&gt;</code> (ancre). Cette balise est utilis\u00e9e avec l'attribut <code>href</code> qui fournit l'adresse de la ressource.  </p> <pre><code>&lt;a href=\"https://www.w3schools.com/tags/tag_a.asp\"&gt;Lien vers W3schools.com&lt;/a&gt;\n</code></pre> <p>\u00c0 faire</p> <p>Ajouter un lien vers lien vers W3school \u00e0 votre page web.</p> <p>Parmi les ressources, on peut citer les images. On les ins\u00e8re dans un document HTML avec une balise auto-fermante <code>&lt;img /&gt;</code> \u00e0 qui on doit fournir deux attributs <code>src=\"nom_fichier.jpg\" alt=\"texte_alternatif\"</code>. </p> <p>Exemple </p> <p><pre><code>&lt;img src=\"img/html5-logo.png\" alt=\"logo\" /&gt;\n</code></pre> Rendu:  </p> Logo HTML 5 <p>\u00c0 faire</p> <p>Ajouter le logo de la fondation Mozilla \u00e0 votre page.</p> <p>Son adresse est la suivante: https://www.mozilla.org/media/protocol/img/logos/mozilla/black.40d1af88c248.svg</p>"},{"location":"NSI1/S6/S6C1.html#conseils-utilisation-de-balises-semantiques","title":"Conseils: utilisation de balises s\u00e9mantiques","text":"<p>HTML5 accentue encore plus l'objectif de bien structurer un document en y ajoutant de nouvelles balises (par rapport \u00e0 HTML4). Parmi ces nouvelles balises, on peut citer, entre autres: <code>header</code>, <code>nav</code>, <code>section</code>, <code>article</code>, <code>aside</code> et <code>footer</code>. Ces balises sont dites s\u00e9mantiques, c'est-\u00e0-dire qui ont du sens, ... par opposition \u00e0 d'anciennes balises g\u00e9n\u00e9riques comme <code>div</code> ou <code>span</code>.  </p> <p>Bien qu'il ne s'agisse pas d'une r\u00e8gle absolue, voici un exemple correct (au sens HTML5) de structure de document:  </p> Balises s\u00e9mantiques <p>Dans la mesure du possible, on r\u00e9servera la balise g\u00e9n\u00e9rique <code>div</code> pour des regroupements d'\u00e9l\u00e9ments n\u00e9cessitant un traitement CSS (voir ci-dessous) sp\u00e9cifique.</p>"},{"location":"NSI1/S6/S6C1.html#css","title":"CSS","text":""},{"location":"NSI1/S6/S6C1.html#quest-ce-que-le-css-et-comment-le-mettre-en-application","title":"Qu'est-ce que le CSS et comment le mettre en application?","text":"<p>Le langage CSS (Cascading Style Sheet) est un langage permettant de d\u00e9finir  la mise en forme des \u00e9l\u00e9ments HTML constituant une page web. Il est important de retenir: HTML est g\u00e8re le 'fond', CSS g\u00e8re la 'forme'. Il existe trois emplacements pour placer les r\u00e8gles de style CSS associ\u00e9es \u00e0 un document. </p>"},{"location":"NSI1/S6/S6C1.html#regles-de-style-en-ligne-a-eviter-absolument-","title":"R\u00e8gles de style en ligne - A EVITER ABSOLUMENT-","text":"<p>Il s'agit de d\u00e9finir une r\u00e8gle de style directement via l'attribut <code>style</code>d'un \u00e9l\u00e9ment. Sa syntaxe est la suivante:  </p> <p><code>&lt;tag style=\"definition_des_styles\"&gt;....&lt;/tag&gt;</code> o\u00f9 <code>definition_des_styles</code> est de la forme <code>propriete: valeur;</code>.   </p> <p>Exemple </p> <pre><code>&lt;p style=\"text-align: right; border: 2px solid red;\"&gt;Lorem ipsum dolor sit amet consectetur. &lt;br&gt;\n    adipisicing elit deleniti magni sequi ducimus ad similique quo beatae dolor tempora et cum. &lt;br&gt;\n    corporis enim earum eligendi unde itaque dicta, blanditiis aut consequuntur?\n&lt;/p&gt;\n</code></pre> <p>Attention</p> <p>Cette m\u00e9thode est \u00e0 d\u00e9conseiller franchement car elle rend le code HTML peu lisible et on m\u00e9lange la forme et le fond.</p> <p>\u00c0 faire</p> <p>Tester la mise en forme pr\u00e9c\u00e9dente en l'ajoutant \u00e0 votre page.</p>"},{"location":"NSI1/S6/S6C1.html#regles-de-style-interne-acceptable-","title":"R\u00e8gles de style interne - ACCEPTABLE-","text":"<p>Il s'agit de d\u00e9clarer les r\u00e8gles de style \u00e0 l'int\u00e9rieur d'une balise <code>&lt;style&gt;</code> de l'\u00e9l\u00e9ment <code>head</code> du document HTML. Les r\u00e8gles \u00e9tant \u00e9crites les unes en dessous des autres (la syntaxe d\u00e9taill\u00e9e sera vue dans le prochain paragraphe).   Exemple <pre><code>   &lt;!DOCTYPE html&gt;\n   &lt;html lang=\"fr\"&gt;\n   &lt;head&gt;\n         &lt;meta charset=\"UTF-8\"&gt;\n         &lt;title&gt;Document&lt;/title&gt;\n         &lt;style&gt;\np { text-align: right; border: 2px solid gray;\n}\n.remarque {color: red;}\n&lt;/style&gt;\n   &lt;/head&gt;\n   &lt;body&gt;\n      &lt;p&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit.&lt;br&gt; \n         Deleniti magni sequi ducimus &lt;span class=\"remarque\"&gt; similique dolor tempora&lt;/span&gt; et cum. &lt;br&gt;\n         corporis enim earum eligendi unde itaque \n         dicta, blanditiis aut consequuntur?\n      &lt;/p&gt;\n   &lt;/body&gt;\n   &lt;/html&gt;\n</code></pre></p> <p>\u00c0 faire</p> <p>Tester le code ci-dessus.</p> <p>Cette m\u00e9thode est acceptable mais elle pr\u00e9sente l'inconv\u00e9nient de m\u00e9langer le fond et la forme et surtout de ne pas permettre la r\u00e9utilisation des r\u00e8gles de style dans d'autres pages (\u00e0 moins de faire du copier-coller).</p>"},{"location":"NSI1/S6/S6C1.html#regles-de-style-dans-un-fichier-externe-a-privilegier-","title":"R\u00e8gles de style dans un fichier externe - A PRIVILEGIER-","text":"<p>Les r\u00e8gles de style sont d\u00e9finies dans un fichier texte externe, d'extension <code>.css</code>. La pr\u00e9sence de ce fichier doit \u00eatre signal\u00e9 au navigateur dans l'\u00e9l\u00e9ment <code>head</code>avec une balise <code>&lt;link&gt;</code>:  </p> <pre><code>&lt;head&gt;\n    ......\n    &lt;link rel=\"stylesheet\" href=\"style/fichier.css\" /&gt;\n&lt;/head&gt;\n</code></pre> <p>si on suppose que le fichier s'appelle <code>fichier.css</code> et qu'il se trouve dans le dossier <code>style</code>. On remarque au passage que la balise link est auto-fermante.  </p> <p>La syntaxe d'une r\u00e8gle de style CSS est la suivante:  </p> <pre><code>selecteur {\n    propriete1: valeur1;\n    propriete2: valeur2;\n    ...\n}\n</code></pre> <p>Le selecteur peut \u00eatre un tag HTML, l'identifiant d'un \u00e9l\u00e9ment pr\u00e9c\u00e9d\u00e9 du caract\u00e8re <code>#</code> (sans espace) ou le nom d'une classe pr\u00e9c\u00e9d\u00e9 du caract\u00e8re <code>.</code> (point). Exemple de <code>fichier.css</code> </p> <pre><code>p {\ntext-align: right;\nborder: 2px solid gray;\n}\n\n.remarque {\ncolor: red;\n}\n</code></pre> <p>On voit ici tout l'int\u00e9r\u00eat \u00e0 ajuster les attributs <code>class</code> et <code>id</code> des \u00e9l\u00e9ments HTML lors de la construction de la page (voir documentation sur W3Schools.com pour class et id).</p>"},{"location":"NSI1/S6/S6C1.html#quelques-proprietes-css","title":"Quelques propri\u00e9t\u00e9s CSS","text":"<p>Il n'est pas question questions de citer toutes les propri\u00e9t\u00e9s CSS (qu'on peut trouver sur W3Schools.com), mais quelques unes fr\u00e9quemment utilis\u00e9es.  </p> <ul> <li><code>font-size</code>: fixe la taille de la police;</li> <li><code>color</code>: fixe la couleur du texte;</li> <li><code>text-align</code>: d\u00e9finit l'alignement horizontal du texte;</li> <li><code>background-color</code>: couleur d'arri\u00e8re plan;</li> </ul>"},{"location":"NSI1/S6/S6C2.html","title":"INTERACTIONS CLIENT-SERVEUR: protocole HTTP","text":""},{"location":"NSI1/S6/S6C2.html#modele-client-serveur-et-protocole-http","title":"Mod\u00e8le client-serveur et protocole http.","text":"<p>D\u00e9finition</p> <p>On appelle interaction client-serveur un mode de communication entre un programme qualifi\u00e9 de client qui  envoie des requ\u00eates et un programme dit serveur qui y r\u00e9pond.  </p> <p>Dans le cas du Web, le client peut \u00eatre un navigateur (Google Chrome, Firefox, etc) et le serveur un programme tel que Apache, Nginx, etc. Le protocole utilis\u00e9 est HTTP.</p>"},{"location":"NSI1/S6/S6C2.html#les-outils-utilises","title":"Les outils utilis\u00e9s","text":"<p>On utilisera le navigateur Firefox avec sa console de d\u00e9veloppement (touche <code>F12</code>) c\u00f4t\u00e9 client. \u00c9videmment tout autre choix (Chrome, Brave, etc.) est tout aussi valable.  </p> <p>C\u00f4t\u00e9 serveur, on utilisera un programme l\u00e9ger \u00e9crit en Javascript (Node.js plus exactement). L'adresse de ce serveur not\u00e9 <code>xxx.xxx.xxx.xxx:8081</code> sera fournie par le professeur au cours de la s\u00e9ance.</p>"},{"location":"NSI1/S6/S6C2.html#analyse-dun-echange","title":"Analyse d'un \u00e9change","text":""},{"location":"NSI1/S6/S6C2.html#que-se-passe-t-il-apres-avoir-saisi-une-url","title":"Que se passe-t-il apr\u00e8s avoir saisi une URL?","text":"<p>\u00c0 faire</p> <p>Ouvrir l'URL http://xxx.xxx.xxx.xxx:8081/ dans Firefox ainsi que la console de d\u00e9veloppement.</p> <p></p> <p>Rappel</p> <p>L'URL est compos\u00e9e de la mani\u00e8re suivante: protocole://adresse-ou-nom/ressource. Le protocole est souvent HTTP (ou HTTPS); on \u00e9crit g\u00e9n\u00e9ralement un nom plut\u00f4t qu'une adresse (le DNS fait la conversion) et la ressource peut \u00eatre une page HTML, un image, une vid\u00e9o, un fichier de style ou JS etc. </p> <p>La partie haute de la console de d\u00e9veloppement liste les fichiers n\u00e9cessaires \u00e0 l'affichage de la page. </p> <p>\u00c0 faire</p> <p>Combien de requ\u00eates sont n\u00e9cessaires \u00e0 l'affichage de la page '/' ? Quels types de fichiers sont demand\u00e9s?</p> <p>L'acc\u00e8s \u00e0 une ressource se fait selon le protocole HTTP. Le d\u00e9tail de l'\u00e9change peut \u00eatre suivi dans la console de d\u00e9veloppement.</p> <p>En r\u00e9sum\u00e9</p> <p>Pour afficher une page web le navigateur (client) r\u00e9alise les op\u00e9rations suivantes:  </p> <ul> <li>ouverture d'une connection TCP \u00e0 destination du serveur;</li> <li>envoi d'un message HTTP (qui est lisible en version 1.1);</li> <li>lecture de la r\u00e9ponse du serveur;</li> <li>fermeture ou r\u00e9utilisation de la connection pour d'autres requ\u00eates. </li> </ul>"},{"location":"NSI1/S6/S6C2.html#envoi-dune-requete-par-le-client","title":"Envoi d'une requ\u00eate par le client","text":"<p>La deuxi\u00e8me partie de la console d\u00e9taille, entre autres, les requ\u00eates du client (navigateur) envoy\u00e9es au serveur. Une requ\u00eate HTTP est compos\u00e9e d'une premi\u00e8re ligne o\u00f9 figurent la m\u00e9thode, le chemin de la ressource et la version du protocole. Ensuite, on trouve plusieurs lignes d'ent\u00eate. </p> <p>... et dans notre cas: </p> <p>On peut avoir une signification de chaque ent\u00eate en cliquant sur le point d'interrogation associ\u00e9 (bouton Texte brut d\u00e9sactiv\u00e9) dans la console de d\u00e9veloppement.</p> <p>\u00c0 faire</p> <p>Quel est le chemin de la ressource associ\u00e9e \u00e0 la troisi\u00e8me requ\u00eate lors de l'affichage de la page  pr\u00e9c\u00e9dente?</p> <p></p> <p>La m\u00e9thode GET est utilis\u00e9e pour r\u00e9cup\u00e9rer une ressource. D'autres m\u00e9thodes existent, on pourra consulter cette page pour avoir une liste compl\u00e8te. On utilisera notamment la m\u00e9thode POST dans le prochain chapitre.</p>"},{"location":"NSI1/S6/S6C2.html#lecture-de-la-reponse-du-serveur","title":"Lecture de la r\u00e9ponse du serveur","text":"<p>La premi\u00e8re ligne contient la version du protocole, un code de retour et un message de retour. On trouve ensuite des ligne d'ent\u00eate comme pour les requ\u00eates.  </p> <p>... et dans notre cas:  </p> <p> </p> <p>On pourra trouver \u00e0 cette adresse, les codes de r\u00e9ponse du protocole HTTP.</p> <p>\u00c0 faire</p> <p>Saisir l'URL <code>http://xxx.xxx.xxx.xxx:8081/Exercice</code> puis commentez la r\u00e9ponse du serveur.</p>"},{"location":"NSI1/S6/S6C3.html","title":"INTERACTIONS CLIENT-SERVEUR: Transmission de param\u00e8tres","text":""},{"location":"NSI1/S6/S6C3.html#formulaire-dans-une-page-web","title":"Formulaire dans une page web","text":""},{"location":"NSI1/S6/S6C3.html#quest-ce-quun-formulaire","title":"Qu'est-ce qu'un formulaire?","text":"<p>Les formulaires HTML sont des objets permettant l'interaction entre un utilisateur et un site web ou une application. Gr\u00e2ce \u00e0 eux l'utilisateur d'envoyer des donn\u00e9es au site web. La plupart du temps, ces donn\u00e9es sont envoy\u00e9es \u00e0 des serveurs web mais la page peut aussi les intercepter et les utiliser elle-m\u00eame comme nous le verrons dans le premier exemple. Les formulaires utilisent divers composants graphiques comme:  </p> <ul> <li>des zones de saisie de texte;</li> <li>des cases \u00e0 cocher;</li> <li>des listes d\u00e9roulantes;</li> <li>des boutons;</li> <li>etc.</li> </ul> <p>L'\u00e9l\u00e9ment HTML utilis\u00e9 est l'\u00e9l\u00e9ment <code>&lt;form&gt; ... &lt;/form&gt;</code>. </p>"},{"location":"NSI1/S6/S6C3.html#mise-en-oeuvre-dun-premier-formulaire-html-syntaxe","title":"Mise en oeuvre d'un premier formulaire HTML: syntaxe","text":"<p>Le premier exemple choisi est celui d'un convertisseur de temp\u00e9rature des degr\u00e9s Celcius vers le Kelvin ou les degr\u00e9s Fahrenheit. Le fichier source est <code>convertisseur.html</code>.</p> <p>\u00c0 faire</p> <p>Ouvrir le fichier <code>convertisseur.html</code> dans Visual Studio Code afin de consulter le code source ET dans un navigateur.</p> <p>La saisie de la temp\u00e9rature est r\u00e9alis\u00e9e dans un formulaire. La portion de code concern\u00e9e est la suivante:  </p> <pre><code>&lt;form action=\"\"&gt;\n        &lt;label for=\"saisie\"&gt;Temp\u00e9rature en degr\u00e9 Celcius&lt;/label&gt;\n        &lt;input type=\"text\" name=\"valeur\" id=\"saisie\" value=\"\"&gt;       \n        &lt;div id=\"units\"&gt;\n            &lt;label for=\"unites\"&gt;Choisir une unit\u00e9&lt;/label&gt;\n            &lt;select name=\"temp\" id=\"unites\"&gt;\n                &lt;option value=\"\"&gt;--Choisir une unit\u00e9 de conversion--&lt;/option&gt;\n                &lt;option value=\"kelvin\"&gt;Kelvin&lt;/option&gt;\n                &lt;option value=\"fahrenheit\"&gt;Fahrenheit&lt;/option&gt;\n            &lt;/select&gt;\n        &lt;/div&gt;\n        &lt;input type=\"submit\" value=\"Convertir\"&gt;\n&lt;/form&gt;\n</code></pre> <p>La balise <code>form</code> comporte souvent un attribut <code>action</code> qui indique la ressource qui va traiter les donn\u00e9es du formulaire. Dans notre cas ce sera la page elle-m\u00eame, par le biais d'un script annexe.  </p> <p>Notre formulaire est compos\u00e9 des \u00e9l\u00e9ments suivants:  </p> <ul> <li>une zone de saisie de texte, rep\u00e9r\u00e9e par l'\u00e9l\u00e9ment <code>&lt;input type=\"text\" ...&gt;</code>;</li> <li>une liste d\u00e9roulante avec une option \u00e0 s\u00e9lectionner, rep\u00e9r\u00e9e par <code>&lt;select&gt; ... &lt;/select&gt;</code>;</li> <li>un bouton pour soumettre les donn\u00e9es, rep\u00e9r\u00e9 par <code>&lt;input type=\"submit\" ...&gt;</code>.</li> </ul> <p>Il est tr\u00e8s courant d'associer un label aux \u00e9l\u00e9ments d'un formulaire. La syntaxe est <code>&lt;label for=\"...\"&gt; ...&lt;/label&gt;</code>. La valeur de l'attribut <code>for</code> correspond \u00e0 la valeur de l'attribut <code>id</code> de l'\u00e9l\u00e9ment de formulaire associ\u00e9 (input, select, etc.).  </p> <p>Enfin, l'\u00e9l\u00e9ment <code>&lt;div&gt;</code> pr\u00e9sent ne correspond pas \u00e0 une entr\u00e9e du formulaire. C'est ici un \u00e9l\u00e9ment structurant dont l'identifiant sera utilis\u00e9 en CSS.  </p> <p>Une documentation int\u00e9ressantes est disponible sur le site de la MDN.</p>"},{"location":"NSI1/S6/S6C3.html#transmission-de-requetes-par-methode-get","title":"Transmission de requ\u00eates par m\u00e9thode GET","text":"<p>\u00c0 faire</p> <p>Ouvrir la page web situ\u00e9e \u00e0 http://xxx.xxx.xxx.xxx:8081/ dans Firefox, puis choisir \"Exemple 1 m\u00e9thode GET\". </p> <ol> <li>En utilisant la console de d\u00e9veloppement, rep\u00e9rer la portion de code correspondant au formulaire pr\u00e9sent sur cette page. Quelle est la principale diff\u00e9rence avec le formulaire de l'exemple pr\u00e9c\u00e9dent?</li> <li>Quitter l'Inspecteur et choisir R\u00e9seau.</li> <li>Compl\u00e9ter le formulaire et valider. </li> <li>Commentez. Observer notamment l'URL dans la barre d'adresse</li> </ol> <p>En utilisant la m\u00e9thode GET dans un formulaire, le navigateur est en mesure d'envoyer des informations vers un serveur. Il proc\u00e8de de la mani\u00e8re suivante:  </p> <ul> <li>pour chaque \u00e9l\u00e9ment graphique, formation d'un couple <code>param\u00e8tre=valeur</code> o\u00f9 <code>param\u00e8tre</code> est la cha\u00eene correspondant \u00e0 l'attribut <code>name</code> et <code>valeur</code> la valeur saisie ou s\u00e9lectionn\u00e9e (ou coch\u00e9e);</li> <li>formation d'une cha\u00eene de caract\u00e8res <code>param1=val1&amp;param2=val2&amp;...&amp;param_n=val_n</code>, les couples param\u00e8tre-valeur sont s\u00e9par\u00e9s par le caract\u00e8re <code>&amp;</code>;</li> <li>formation de l'url: <code>http://xxx.xxx.xxx.xxx/page_traitement?param1=val1&amp;param2=val2&amp;...&amp;param_n=val_n</code>.</li> </ul> <p>Dans la m\u00e9thode GET, les donn\u00e9es sont transmises au serveur DANS L'URL et EN CLAIR. Ce qui peut poser un gros probl\u00e8me de confidentialit\u00e9 (cas de mot de passe). Il faudra faire attention \u00e9galement au fait que l'URL a une taille limit\u00e9e.  </p>"},{"location":"NSI1/S6/S6C3.html#transmission-de-requetes-par-methode-post","title":"Transmission de requ\u00eates par m\u00e9thode POST","text":"<p>\u00c0 faire</p> <p>Ouvrir la page web situ\u00e9e \u00e0 http://xxx.xxx.xxx.xxx:8081/ dans Firefox, puis choisir \"Exemple 2 m\u00e9thode  POST\".</p> <ol> <li>Compl\u00e9ter le formulaire et valider.</li> <li>Les param\u00e8tres sont-ils pr\u00e9sents dans l'URL?</li> <li>Comment ont \u00e9t\u00e9 transmis les param\u00e8tres? Indication: voir le d\u00e9tail de la premi\u00e8re requ\u00eate dans la console de d\u00e9veloppement.</li> </ol> <p>Dans la m\u00e9thode POST, les param\u00e8tres sont pass\u00e9s dans le corps de la requ\u00eate. Ils ne sont plus visibles dans l'URL. Cette m\u00e9thode permet en outre, d'envoyer du contenu plus long.</p> Attention <p>Cela ne signifie pas qu'on n'a plus acc\u00e8s aux donn\u00e9es transmises. Voir cette capture de la console de d\u00e9veloppement de Chrome:  </p> <p></p>"},{"location":"NSI1/S6/S6C3.html#transmission-chiffree","title":"Transmission chiffr\u00e9e","text":"<p>Un gros probl\u00e8me avec le protocole HTTP est que celui-ci manipule des donn\u00e9es en clair et donc lisible de n'importe qui. C'est particuli\u00e8rement probl\u00e9matique dans le cas de donn\u00e9es confidentielles. Pour pallier \u00e0 cette insuffisance, on a recours (presque syst\u00e9matiquement maintenant, la majorit\u00e9 des serveurs l'impose) \u00e0 la version s\u00e9curis\u00e9e: HTTPS. Le <code>s</code> de https signifie <code>secured</code>.  Une fois l'identit\u00e9e du serveur confirm\u00e9e, l'\u00e9change se poursuit de mani\u00e8re chiffr\u00e9e.</p> <p>D'un point de vue pratique, on reconnait une connection s\u00e9curis\u00e9e par la pr\u00e9sence d'un cadenas \u00e0 c\u00f4t\u00e9 de l'URL. </p> <p>On peut aussi consulter les d\u00e9tails d'\u00e9changes pr\u00e9liminaires de certificats avec un outil en ligne de commande. </p>"},{"location":"NSI1/S6/S6E2.html","title":"IHM_1_Interaction_web_Exercices","text":"<p>Capacit\u00e9s </p> <ul> <li>Identifier les diff\u00e9rents composants graphiques permettant d\u2019interagir avec une application Web.</li> <li>Identifier les \u00e9v\u00e9nements que les fonctions associ\u00e9es aux diff\u00e9rents composants graphiques sont capables de traiter.</li> </ul> <p>Pour atteindre ces objectifs </p> <p>Il s\u2019agira:  d\u2019examiner le code HTML d\u2019une page comprenant des composants graphiques; * de distinguer ce qui rel\u00e8ve de la description des composants graphiques en HTML de leur comportement (r\u00e9action aux \u00e9v\u00e9nements*) programm\u00e9 par exemple en JavaScript.</p>"},{"location":"NSI1/S6/S6E2.html#qcm","title":"QCM","text":"<ol> <li> <p>Dans le code HTML les d\u00e9limiteurs tels que <code>&lt;body&gt;</code> et <code>&lt;/body&gt;</code> s\u2019appellent:  </p> <p>A. des bornes; B. des balises; C. des paragraphes; D. des liens.</p> </li> <li> <p>Dans une page HTML, lequel de ces codes permet la pr\u00e9sence d'un bouton qui appelle la fonction javascript <code>afficher_reponse()</code> lorsque l'utilisateur clique dessus ?  </p> <p>A. <code>&lt;a href=\"afficher_reponse()\"&gt;Cliquez ici&lt;/a&gt;</code> B. <code>&lt;button if_clicked=\"afficher_reponse()\"&gt;Cliquez ici&lt;/button&gt;</code> C. <code>&lt;button  value=\"Cliquez ici\"&gt;&lt;a&gt; afficher_reponse()&lt;/a&gt;&lt;/button&gt;</code> D. <code>&lt;button onclick=\"afficher_reponse()\"&gt;Cliquez ici&lt;/button&gt;</code></p> </li> <li> <p>On consid\u00e8re le formulaire ci-dessous : Quel est votre langage pr\u00e9f\u00e9r\u00e9 ? Python \u25a1 Java \u25a1 Php \u25a1 Quelle balise parmi les quatre suivantes a \u00e9t\u00e9 utilis\u00e9e pour les cases \u00e0 cocher ?     A. <code>&lt;input type=\"radio\"&gt;</code>     B. <code>&lt;input type=\"circle\"&gt;</code>     C. <code>&lt;input type=\"checkbox\"&gt;</code>     D. <code>&lt;input type=\"square\"&gt;</code></p> </li> <li> <p>On souhaite qu\u2019un menu apparaisse \u00e0 chaque fois que l\u2019utilisateur passe sa souris sur l\u2019image de banni\u00e8re du site. L\u2019attribut de la balise <code>img</code> dans lequel on doit mettre un code Javascript \u00e0 cet effet est :     A. <code>onclick</code>     B. <code>src</code>     C. <code>alt</code>     D. <code>onmouseover</code></p> </li> <li> <p>Quel est le nom de l\u2019\u00e9v\u00e9nement g\u00e9n\u00e9r\u00e9 lorsque l\u2019utilisateur clique sur un bouton de type button dans une page HTML ?     A. <code>action</code>     B. <code>mouse</code>     C. <code>submit</code>     D. <code>click</code></p> </li> <li> <p>Voici un extrait d'un document HTML <pre><code>&lt;body&gt;\n  .........\n    Clic !\n  &lt;/button&gt;\n  &lt;h1&gt;&lt;span id=\"valeur\"&gt;2000&lt;/span&gt;&lt;/h1&gt;\n&lt;/body&gt;\n&lt;html&gt;\n</code></pre> Quelle doit \u00eatre la ligne qui remplace les pointill\u00e9s pour obtenir un bouton dont l'appui d\u00e9clenche la fonction javascript <code>actionBouton()</code>?     A. <code>&lt;button click = \"actionBouton();\"&gt;</code>     B. <code>&lt;button onclick = \"actionBouton();\"&gt;</code>     C. <code>&lt;button onclick =&gt; \"actionBouton();\"</code>     D. <code>&lt;button&gt; onclick = \"actionBouton();\"</code></p> </li> <li> <p>Comment doit-on proc\u00e9der pour ins\u00e9rer des instructions en javascript dans un fichier html ?     A. Il suffit de mettre les instructions entre les balises  et      B. Il faut utiliser une balise <code>&lt;script&gt;</code>     C. Il faut les ins\u00e9rer dans le fichier CSS     D. Il est inutile de mettre des balises sp\u00e9ciales</p> </li> </ol>"},{"location":"NSI1/S6/S6E2.html#une-horloge-dans-une-page-web","title":"Une horloge dans une page web","text":"<ol> <li>Ouvrir la page <code>horloge.html</code> et examiner les codes sources disponibles. Quel est l'\u00e9l\u00e9ment graphique qui permet une interaction avec l'utilisateur? (donner la balise HTML)</li> <li>D\u00e9crire l'\u00e9v\u00e8nement qui provoque un changement sur la page.</li> <li>Cet \u00e9v\u00e8nement est-il g\u00e9r\u00e9 directement dans la page HTML? Dans la n\u00e9gative o\u00f9 est-il g\u00e9r\u00e9?</li> <li>Que r\u00e9alise cette portion de code du fichier <code>horloge.js</code>? <pre><code>cadre.addEventListener('mouseover', (event) =&gt; {\ndoc.style.visibility = \"visible\";\n});\n</code></pre></li> <li>M\u00eame question pour: <pre><code>cadre.addEventListener('mouseleave', (event) =&gt; {\ndoc.style.visibility = \"hidden\";\n});\n</code></pre></li> </ol>"},{"location":"NSI1/S6/S6E2.html#couleur-en-rgb","title":"Couleur en RGB","text":"<p>On souhaite afficher la couleur associ\u00e9e aux valeurs des composantes rouge, vert et bleue. Le r\u00e9sultat dans une page web aurait l'allure suivante: </p> <p>On fournit les codes sources suivants:  </p> <ul> <li><code>couleur.html</code>;</li> <li><code>couleur.css</code>;</li> <li> <p>deux fichiers javascript <code>script_couleur1.js</code> et <code>script_couleur2.js</code>.</p> </li> <li> <p>Lier le fichier de mise en forme CSS au code HTML.</p> </li> <li>Combien de composants graphiques ou widget en anglais permettant l'interaction, peut-on identifier sur la page <code>couleur.html</code>? Donner le nom de l'\u00e9l\u00e9ment HTML associ\u00e9 pour chacun d'eux.</li> <li>On souhaite afficher la couleur r\u00e9sultant du m\u00e9lange des composantes rouge bleue et verte dans un cadre pr\u00e9vu \u00e0 cet effet. On dispose pour cela de deux scripts \u00e9crits en Javascript et directement utilisable sans modification de leur code. En modifiant la page <code>couleur.html</code> proposer deux fa\u00e7ons de r\u00e9soudre le probl\u00e8me pos\u00e9. </li> </ul>"},{"location":"NSI1/S7/S7C1.html","title":"COURS 1","text":""},{"location":"NSI1/S7/S7C1.html#un-autre-type-construit-le-dictionnaire","title":"Un autre type construit: le dictionnaire","text":""},{"location":"NSI1/S7/S7C1.html#rappel-inconvenient-des-p-uplets","title":"Rappel: inconv\u00e9nient des p-uplets","text":"<p>Dans l'exemple du fichier cit\u00e9 ci-dessous, on a mod\u00e9liser l'image avec un p-uplet ayant pour composante sa largeur en pixel, sa hauteur en pixel et sa taille en kilo-octet.  </p> <p> </p> <p>Ainsi, soit le fichier \"dog.png\" qui a une largeur de 384 pixels, une hauteur de 576 pixels et dont la taille est de 243 ko, sera mod\u00e9lis\u00e9 par: </p> <pre><code>image = (384, 576, 243)\n</code></pre> <p>On a vu que cette solution n'est pas id\u00e9ale, car il fallait se souvenir de l'ordre dans lequel les entiers ont \u00e9t\u00e9 rentr\u00e9s !</p>"},{"location":"NSI1/S7/S7C1.html#la-solution-du-p-uplet-nomme","title":"La solution du p-uplet nomm\u00e9","text":"<p>Pour contourner le probl\u00e8me soulev\u00e9 pr\u00e9c\u00e9demment, une solution consiste \u00e0 utiliser des p-uplets nomm\u00e9s. Chaque composante du p-uplet se voit attribuer un nom (typiquement une cha\u00eene de caract\u00e8res) au lieu d'un index num\u00e9rique!  </p> <p>Python poss\u00e8de un type permettant de manipuler les p-uplets nomm\u00e9s: les <code>namedtuple</code> du module <code>collections</code>.  Cependant, et conform\u00e9ment au programme, en classe de 1re NSI, on utilisera des dictionnaires pour impl\u00e9menter des p-uplets nomm\u00e9s.</p>"},{"location":"NSI1/S7/S7C1.html#les-dictionnaires","title":"Les dictionnaires","text":""},{"location":"NSI1/S7/S7C1.html#construction-et-proprietes-des-dictionnaires","title":"Construction et propri\u00e9t\u00e9s des dictionnaires","text":"<p>Python poss\u00e8de une structure de donn\u00e9es tr\u00e8s importante: le dictionnaire. Contrairement aux tableaux ou aux tuples, les valeurs ne sont plus associ\u00e9es \u00e0 des index forc\u00e9ment num\u00e9riques mais \u00e0 des cl\u00e9s qui peuvent \u00eatre des nombres, des chaines de caract\u00e8res, des tuples.  On d\u00e9clare un dictionnaire en pla\u00e7ant ses paires cl\u00e9-valeur entre accolades et s\u00e9par\u00e9es par une virgule. La cl\u00e9 et la valeur \u00e9tant s\u00e9par\u00e9es par le caract\u00e8re <code>:</code>.  </p> <p>Ainsi, le probl\u00e8me du fichier image pr\u00e9c\u00e9dent peut \u00eatre mod\u00e9lis\u00e9 par:</p> <pre><code>image = {'nom':'dog.png', 'larg': 384, 'haut': 576, 'taille': 243}\nprint(\"Taille de l'image:\", image['taille'], \"ko\")\nprint(\"Hauteur:\", image['haut'], \"pixels\")\n</code></pre> <pre><code>Taille de l'image: 243 ko\nHauteur: 576 pixels\n</code></pre> <p>Autre exemple On peut \u00e9galement construire un dictionnaire \u00e0 partir d'un dictionnaire vide. La syntaxe est la suivante:</p> <pre><code>cyclones_reunion = {}\ncyclones_reunion[\"bejisa\"] = (2, 1, 2014)\ncyclones_reunion[\"dumile\"] = (3, 1, 2013)\ncyclones_reunion[\"dina\"] = (22, 1, 2002)\ncyclones_reunion[\"gamede\"] = (25, 2, 2007)\nprint(cyclones_reunion)\n</code></pre> <pre><code>{'bejisa': (2, 1, 2014), 'dumile': (3, 1, 2013), 'dina': (22, 1, 2002), 'gamede': (25, 2, 2007)}\n</code></pre> <p>Le nombre d'entr\u00e9es du dictionnaire est obtenu avec la fonction <code>len</code>.</p> <pre><code>len(cyclones_reunion)\n</code></pre> <pre><code>4\n</code></pre> <p>On acc\u00e8de \u00e0 la valeur associ\u00e9e \u00e0 une cl\u00e9 d'un dictionnaire <code>d</code> avec une construction du type <code>d[cl\u00e9]</code>. Si la cl\u00e9 n'existe pas, python l\u00e8vera une exception KeyError.</p> <pre><code>print(cyclones_reunion[\"dina\"])\n</code></pre> <pre><code>(22, 1, 2002)\n</code></pre> <p>Si la cl\u00e9 n'existe pas:  </p> <pre><code>print(cyclones_reunion[\"carlos\"])\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n&lt;ipython-input-9-0306c0a2304c&gt; in &lt;module&gt;()\n----&gt; 1 print(cyclones_reunion[\"carlos\"])\n\nKeyError: 'carlos'\n</code></pre> <p>Enfin, un dictionnaire n'est pas ordonn\u00e9. Les \u00e9l\u00e9ments ne sont pas forc\u00e9ment afich\u00e9s dans l'ordre de leur cr\u00e9ation.</p>"},{"location":"NSI1/S7/S7C1.html#parcours-dun-dictionnaire","title":"Parcours d'un dictionnaire","text":"<p>L'appartenance \u00e0 un dictionnaire (en r\u00e9alit\u00e9 aux cl\u00e9s d'un dictionnaire) se fait avec le mot cl\u00e9 <code>in</code>. Ainsi:</p> <pre><code>'dina' in cyclones_reunion.keys()\n</code></pre> <pre><code>True\n</code></pre> <pre><code>'carlos' in cyclones_reunion.keys()\n</code></pre> <pre><code>False\n</code></pre> <p>Le parcours d'un dictionnaire <code>d</code> peut se faire en it\u00e9rant avec une boucle <code>for</code> sur:  </p> <ul> <li>les cl\u00e9s  <pre><code>for cle in d.keys(): # souvent abr\u00e9g\u00e9 en `for cle in d`\n    ...\n</code></pre></li> <li>les valeurs <pre><code>for val in d.values():\n    ...\n</code></pre></li> <li>les couples (cl\u00e9,valeur) <pre><code>for cle,val in d.items():\n    ...\n</code></pre></li> </ul> <p>R\u00e9sum\u00e9: les types construits en 1re NSI</p> <p>Tableau On peut it\u00e9rer directement sur les \u00e9l\u00e9ments d'un tableau avec la construction du type <code>for element in  tableau:</code>. Pour remplir un tableau on peut utiliser une construction par compr\u00e9hension:  </p> <pre><code>tableau = [expr(x) for x in sequence]\n</code></pre> <p>p-uplet Les p-uplets sont impl\u00e9ment\u00e9s en python par le type <code>tuple</code>. Il s'agit d'un objet non mutable. La syntaxe  pour construire un p-uplet ayant N composantes, est:  </p> <pre><code>mon_objet = (comp1, comp2, ..., compN)\n</code></pre> <p>Les diff\u00e9rentes composantes sont accessibles par indexation, comme pour un tableau: <code>mon_objet[0]</code>,  <code>mob_objet[1]</code> etc. Le parcours est identique \u00e0 celui d'un tableau.  </p> <p>Dictionnaires Un dictionnaire est une structure regroupant des paires \"cl\u00e9:valeur\". En python, ces paires sont situ\u00e9es  entre accolades et s\u00e9par\u00e9es par une virgule.  </p> <pre><code>image = {'nom':'dog.png', 'larg': 384, 'haut': 576, 'taille': 243}\n</code></pre> <p>On peut it\u00e9rer sur les cl\u00e9s, les valeurs ou les paires cl\u00e9,valeur avec les m\u00e9thodes <code>keys()</code>, <code>values()</code>  ou <code>items()</code>.  </p> <p>p-uplets nomm\u00e9s En python, les p-uplets nomm\u00e9s sont impl\u00e9ment\u00e9s avec des dictionnaires.</p>"},{"location":"NSI1/S7/S7C2.html","title":"TABLES DE DONNEES","text":""},{"location":"NSI1/S7/S7C2.html#les-tableaux-suite-et-fin","title":"Les tableaux (suite et fin ?)","text":""},{"location":"NSI1/S7/S7C2.html#quest-ce-quun-tableau-de-tableaux","title":"Qu'est-ce qu'un tableau de tableaux?","text":"<p>Les \u00e9l\u00e9ments d'un tableau peuvent \u00eatre des entiers, des flottants, des chaines de caract\u00e8res, mais aussi ... des tableaux! Ainsi, l'\u00e9criture suivante est parfaitement valide:  </p> <pre><code>t = [[1, 2, 3, 4], [5, 6, 7, 8]]\n</code></pre> <p><code>t</code> est un tableau compos\u00e9 de deux tableaux de quatre entiers. Pour faciliter la compr\u00e9hension, on aussi saisir <code>t</code> de la mani\u00e8re suivante:</p> <pre><code>t = [[1, 2, 3, 4],\n     [5, 6, 7, 8]]\n</code></pre> <p>Cette pr\u00e9sentation met bien en \u00e9vidence une structure \u00e0 deux lignes et quatre colonnes. Un tel tableau, dont les lignes ont la m\u00eame taille, est appel\u00e9 une matrice.  </p> <p>Les tableaux de tableaux sont utilis\u00e9s, entre autres, pour les manipulations des donn\u00e9es tabul\u00e9es (voir ci-dessous) ou des images.</p>"},{"location":"NSI1/S7/S7C2.html#comment-acceder-aux-elements-dun-tableau-de-tableaux","title":"Comment acc\u00e9der aux \u00e9l\u00e9ments d'un tableau de tableaux?","text":"<p>On peut envisager un acc\u00e8s index\u00e9. Ce qui revient \u00e0 dire que l'acc\u00e8s \u00e0 un \u00e9l\u00e9ment du tableau <code>t[i][j]</code> se fera gr\u00e2ce \u00e0 deux index \\(i\\) et \\(j\\) qui repr\u00e9sentent respectivement le num\u00e9ro de la ligne et le num\u00e9ro de la colonne. Exemples</p> <pre><code>t = [[1, 2, 3, 4],\n     [5, 6, 7, 8]]\n#El\u00e9ment de la 2\u00e8me ligne, 3\u00e8me colonne --&gt; i=1, j=2\nprint(t[1][2])\n\n7\n</code></pre> <p>On peut aussi envisager de modifier la valeur situ\u00e9e \u00e0 la ligne \\(i\\) et \u00e0 la colonne \\(j\\).</p> <pre><code>#Modification de la valeur de la 1ere ligne, 4eme colonne --&gt; i=0, j=3\nt[0][3] = 10\nprint(t)\n\n[[1, 2, 3, 10], [5, 6, 7, 8]]\n</code></pre> \u00c0 faire <p>Exercice d'application directe Soit la matrice:</p> <pre><code>t = [[15, 17, 22],\n     [17, 25, 27],\n     [31, 33, 35]]\n</code></pre> <ul> <li>Que vaut <code>t[1][2]</code>?</li> <li>Que doit-on modifier pour avoir <code>[[15, 17, 22], [17, 25, 45], [31, 33, 35]]</code>?</li> </ul>"},{"location":"NSI1/S7/S7C2.html#comment-construire-un-tableau-de-tableaux-en-comprehension","title":"Comment construire un tableau de tableaux en compr\u00e9hension?","text":"<p>Pour construire un tableau <code>t</code> ayant \\(n\\) lignes et \\(p\\) colonnes initialis\u00e9 avec des z\u00e9ros par exemple, on peut proc\u00e9der comme suit:</p> <pre><code>n = 3\np = 4\n\nt = [[0]*p for i in range(n)]\n</code></pre> <p>Notation</p> <p>L'instruction <code>[0]*p</code> est \u00e9quivalente \u00e0 <code>[0] + [0] + ... + [0]</code> c'est \u00e0 dire <code>p</code> tableaux <code>[0]</code>) soit <code>[0,  0, ..., 0]</code> compos\u00e9 de <code>p</code> z\u00e9ros.</p> <p>On peut aussi une construction en compr\u00e9hension avec deux boucles <code>for</code>. </p> <p>Astuce affichage</p> <p>On peut utiliser une fonction <code>print_mat</code> pour afficher une matrice de mani\u00e8re harmonieuse.</p> <pre><code>def print_mat(mat):\n\"\"\" Affiche mat sous la forme d'une matrice\"\"\"\n    for ligne in mat:\n        print(ligne)\n\nn = 3\np = 5\nt = [[0 for j in range(p)] for i in range(n)]\nprint_mat(t)\n</code></pre> <pre><code>[0, 0, 0, 0, 0]\n[0, 0, 0, 0, 0]\n[0, 0, 0, 0, 0]\n</code></pre> <p>L'instruction <code>[0 for j in range(p)]</code> construit une ligne comportant <code>p</code> z\u00e9ros tandis que <code>for i in range(n)</code> r\u00e9p\u00e8te cette op\u00e9ration <code>n</code> fois.</p> \u00c0 faire <p>Une application Que vaut <code>t</code> apr\u00e8s l'instruction <code>t = [[i, i+1] for i in range(2)]</code>?</p>"},{"location":"NSI1/S7/S7C2.html#organisation-des-donnees-sous-forme-de-tables","title":"Organisation des donn\u00e9es sous forme de tables","text":""},{"location":"NSI1/S7/S7C2.html#reperes-historiques","title":"Rep\u00e8res historiques","text":"<p>Le compilateur fortran de l'IBM OS/360 supportait d\u00e8s 1972 des donn\u00e9es tabul\u00e9es, au format csv (comma-separated values). Source</p>"},{"location":"NSI1/S7/S7C2.html#quest-ce-quune-table-de-donnees","title":"Qu'est-ce qu'une table de donn\u00e9es?","text":"<p>Une table de donn\u00e9es est un arrangement de lignes et de colonnes. Les lignes ont divers synonymes: enregistrement, p-uplet, vecteur, etc.. Il en est de m\u00eame pour les colonnes: champ, descripteur, propri\u00e9t\u00e9, attribut, etc.  L'organisation des donn\u00e9es sous forme de table (on dit aussi sous forme tabul\u00e9e) est tr\u00e8s r\u00e9pandue.  </p> <p>Exemple: un fichier de notes de bac blanc (<code>Notes.csv</code>). Le fichier comporte 27 enregistrements ainsi que 3 champs ou descripteurs: <code>Nom</code>, <code>Points</code> et <code>Note</code>. En voici un aper\u00e7u:</p> Nom Points Note Adenor 27,5 16 Bautier 20,5 12 Bonmalais 26,5 15,5 <p>Remarque</p> <p>Dans des jeux de donn\u00e9es r\u00e9els, on a quelques fois d'avoir des champs vides. Il faudra, peut \u00eatre en tenir compte lors des traitements.</p> <p>Les donn\u00e9es tabul\u00e9es sont tr\u00e8s importantes en informatique: on les utilise dans de nombreux domaines (web, IA, calcul scientifique, etc.). </p>"},{"location":"NSI1/S7/S7C2.html#quelle-structure-de-donnees-pour-representer-une-table","title":"Quelle structure de donn\u00e9es pour  repr\u00e9senter une table ?","text":"<p>Les donn\u00e9es sont habituellement s\u00e9par\u00e9es des programmes qui les traitent, dans un fichier texte. On utilise souvent des fichiers au format csv (comma separated values). Chaque ligne de ce fichier correspond \u00e0 un enregistrement (p-uplet). Les diff\u00e9rents champs (attributs) \u00e9tant s\u00e9par\u00e9s par un d\u00e9limiteur (virgule, point-virgule, tabulation, etc.).  </p> <p>Remarque</p> <p>Dans le jeu de donn\u00e9es pr\u00e9c\u00e9dent, le s\u00e9parateur est le point-virgule.</p> <p>La librairie standard de python poss\u00e8de un module adapt\u00e9 \u00e0 la lecture (et \u00e0 l'\u00e9criture) de ce type de fichiers: le module csv.</p>"},{"location":"NSI1/S7/S7C2.html#importation-sous-forme-de-tableau-de-tableaux","title":"Importation sous forme de tableau de tableaux","text":"<p>On souhaite importer le fichier de notes pr\u00e9c\u00e9dent, sous la forme d'un tableau de tableaux. Une bonne pratique pour ouvrir le fichier et y r\u00e9aliser des op\u00e9rations consiste \u00e0 utiliser la structure suivante:</p> <p>\u00c0 conna\u00eetre</p> <pre><code>import csv\n\n\nwith open('Notes.csv', newline='', encoding='utf8') as f:\n    table = [ligne for ligne in csv.reader(f, delimiter=';')]\n</code></pre> <p>Utilisons cette fa\u00e7on de proc\u00e9der pour afficher les 3 premi\u00e8res lignes de cette table:</p> <pre><code>import csv\n\n\nwith open('Notes.csv', newline='', encoding='utf8') as f:\n    table = [ligne for ligne in csv.reader(f, delimiter=';')]\n\nfor i in range(3):\n    print(table[i])\n    print() # ins\u00e8re une ligne vide pour plus de lisibilit\u00e9\n</code></pre> <pre><code>['Nom', 'Points', 'Notes']\n\n['Adenor', '27,5', '16']\n\n['Bautier', '20,5', '12']\n</code></pre> <p>On remarque que la premi\u00e8re ligne apparait comme une ligne de donn\u00e9es, il va falloir en tenir compte (peut-\u00eatre l'ignorer) lors des traitements.</p> <p>Bilan</p> <p>Cette premi\u00e8re solution est tr\u00e8s simple \u00e0 mettre en oeuvre, cependant elle souffre d'un d\u00e9faut: on doit m\u00e9moriser l'ordre des attributs; </p> \u00c0 faire <p>Application directe </p> <p>Afficher les r\u00e9sultats de l'\u00e9l\u00e8ve <code>Lauret</code></p>"},{"location":"NSI1/S7/S7C2.html#importation-sous-forme-de-tableau-de-n-uplets-nommes","title":"Importation sous forme de tableau de n-uplets nomm\u00e9s","text":"<p>Pour \u00e9viter l'inconv\u00e9nient de la m\u00e9morisation de l'ordre des champs, on peut importer les donn\u00e9es tabul\u00e9es sous forme de tableau de p-uplets nomm\u00e9s. Un code python typique est le suivant:</p> <p>\u00c0 conna\u00eetre</p> <pre><code>import csv\n\n\nwith open('Notes.csv', newline='', encoding='utf8') as f:\n    table = [dict(ligne) for ligne in csv.DictReader(f, delimiter=';')]\n</code></pre> <p>Les premiers \u00e9l\u00e9ments affich\u00e9s confirment que l'on a bien un tableau de dictionnaire:</p> <pre><code>import csv\n\n\nwith open('Notes.csv', newline='', encoding='utf8') as f:\n    table = [dict(ligne) for ligne in csv.DictReader(f, delimiter=';')]\n\nfor i in range(3):\n    print(table[i])\n    print()\n</code></pre> <pre><code>{'Nom': 'Adenor', 'Points': '27,5', 'Notes': '16'}\n\n{'Nom': 'Bautier', 'Points': '20,5', 'Notes': '12'}\n\n{'Nom': 'Bonmalais', 'Points': '26,5', 'Notes': '15,5'}\n</code></pre> <p>On remarque que ce tableau ne contient plus la premi\u00e8re ligne. Cette derni\u00e8re a servi \u00e0 fournir les cl\u00e9s du dictionnaire cr\u00e9\u00e9. </p> <p>Remarque</p> <p>L'instruction <code>dict</code> apparaissant \u00e0 lors de la construction du tableau construit en compr\u00e9hension est n\u00e9cessaire avec les derni\u00e8res versions de python, afin d'avoir des \u00e9l\u00e9ments de type dictionnaire.</p>"},{"location":"NSI1/S7/S7E1.html","title":"EXERCICE 1","text":""},{"location":"NSI1/S7/S7E1.html#exercice-1-jeu-de-donnees-reel-tableau-de-tableaux","title":"Exercice 1 Jeu de donn\u00e9es r\u00e9el - tableau de tableaux","text":"<p>Lors de la cr\u00e9ation de la structure de donn\u00e9es associ\u00e9e \u00e0 un jeu de donn\u00e9es tabul\u00e9es, tous les champs enregistr\u00e9s sont de type chaine de caract\u00e8res (string). Cependant, il serait plus judicieux quelques fois, d'avoir des attributs de type num\u00e9rique (entiers ou flottants).</p> <p>Cet exercice pr\u00e9sente une situation de ce genre: on souhaite avoir les dates sous la forme d'un entier repr\u00e9sentant uniquement l'ann\u00e9e. Cherchons dans un premier temps les descripteurs concern\u00e9s.</p> <pre><code># Cellule \u00e0 ex\u00e9cuter\nimport csv\n\n\ndef import_table(f):\n\"\"\" Importe le fichier csv 'f' et renvoie un tableau de tableaux, dont\n    les \u00e9l\u00e9ments correspondent \u00e0 une ligne du fichier.\n    \"\"\"\n    with open(f, newline='', encoding='utf8') as f_ob:\n        return [ligne for ligne in csv.reader(f_ob, delimiter=';')]\n\nt = import_table('data/rapworld.csv')\n</code></pre> <pre><code>print(t[0])\n</code></pre> <p>\u00c0 faire</p> <p>Combien de descripteurs a-t-on dans ce jeu de donn\u00e9es ?</p> <p>Les champs d'index 3, 4, 6 et 7 repr\u00e9sentent des dates et sont des candidats \u00e0 nos traitements. On convient d'affecter \u00e0 ceux-ci la valeur <code>-1</code> (date invalide) s'ils sont vides.</p> <pre><code>def str_to_int(date):\n\"\"\" \n    Renvoie l'ann\u00e9e correspondant \u00e0 la date pass\u00e9e en param\u00e8tre, sous la forme d'un entier;\n    date: chaine (str)\n    \"\"\"\n    digits = ''\n    for i in range(4):\n        digits = digits + date[i]\n    assert 1950 &lt;= int(digits) &lt;= 2023\n    return int(digits)\n</code></pre> <pre><code>def modifier_date(t, idxcols):\n\"\"\" \n    Transforme en entier les dates rencontr\u00e9es dans les champs dont l'index \n    appartient \u00e0 idxcols. Cette fonction renvoie une nouvelle table, laissant\n    t inchang\u00e9.\n    t: tableau de tableaux\n    idxcols: tableau d'entiers repr\u00e9sentant l'index d'un descripteur\n    \"\"\"\n    tmodif = [None for i in range(len(t))] # va accueillir une copie de t\n    for i in range(len(t)):\n        tmodif[i] = [attribut for attribut in t[i]] # r\u00e9alise le copie de la i-\u00e8me ligne de t\n        if i &gt; 0: # on examine et modifie les dates \u00e0 partir de la ligne 1 (et pas la ligne 0!!)\n            for j in idxcols:\n                if t[i][j] == '': # date absente\n                    tmodif[i][j] = -1\n                else:\n                    tmodif[i][j] = str_to_int(t[i][j])\n    return tmodif\n</code></pre> <p>\u00c0 faire</p> <p>Que r\u00e9alise les instructions suivantes?</p> <pre><code>t2 = modifier_date(t, [3, 4, 6, 7])\n</code></pre> <pre><code>for i in range(1, len(t2)):\n    if t2[i][7] &gt; 0:\n        print(t2[i][0], t2[i][7])\n</code></pre> <p>\u00c0 faire</p> <p>Que r\u00e9alise les instructions suivantes?</p> <pre><code>for i in range(1, len(t2)):\n    if t2[i][3] &gt; 0 and t2[i][6] &gt; 0:\n        print(t2[i][0], t2[i][6]-t2[i][3], \" ans\")\n</code></pre>"},{"location":"NSI1/S8/C8C1P.html","title":"C8C1P","text":"<pre><code>def echanger(t, i, j):\n\"\"\"\n    Permute les valeurs situ\u00e9es aux index i et j d'un tableau t.\n    \"\"\"\n    tmp = t[i]\n    t[i] = t[j] # on \u00e9crase l'ancienne valeur \n    t[j] = tmp # l'ancienne valeur de t[i]\n</code></pre> <pre><code>def indice_min(t, i):\n\"\"\"\n    Recherche l'indice du plus petit \u00e9l\u00e9ment situ\u00e9s entre les indices i et la de fin du tableau t;\n    i: entier positif avec i &lt; len(t)\n    \"\"\"\n    valeur_mini, index_mini = t[i], i    \n    n = len(t)\n\n    for k in range(i+1, n):\n        if t[k] &lt; valeur_mini:\n            valeur_mini = t[k]\n            index_mini = k\n    return index_mini\n</code></pre> <pre><code>indice_min([-2002,3,5,-11,9,8,-10], 3)\n</code></pre> <pre><code>3\n</code></pre> <pre><code>def tri_selection(t):\n\"\"\"\n    Effectue un tri 'en place' du tableau t, par ordre croissant\n    \"\"\"\n    n = len(t)\n    for i in range(n-1):\n        j = indice_min(t, i) # recherche de l'indice du minimum\n        echanger(t, i, j) # permuter les valeurs\n</code></pre> <pre><code># TEST\nt = [5, 6, 1, 1, -15, 0, 4]\ntri_selection(t)\nassert t == [-15, 0, 1, 1, 4, 5, 6]\n</code></pre>"},{"location":"NSI1/S8/S8C1.html","title":"Tri par s\u00e9lection","text":""},{"location":"NSI1/S8/S8C1.html#principe","title":"Principe","text":"<p>Le tri par s\u00e9lection (selection sort en anglais) fait partie des algorithmes de tri les plus simples. Consulter l'animation situ\u00e9e \u00e0 cette adresse.  </p> <p>On commence par rechercher le plus petit \u00e9lement du tableau puis on l'\u00e9change avec le premier \u00e9lement. Ensuite, on cherche le deuxi\u00e8me plus petit \u00e9lement et on l'\u00e9change avec le deuxi\u00e8me \u00e9l\u00e9ment du tableau et ainsi de suite jusqu'\u00e0 ce que le tableau soit enti\u00e8rement tri\u00e9.  </p> <p>On peut repr\u00e9senter ces op\u00e9rations de mani\u00e8re sch\u00e9matique:  </p> <p></p> \u00c0 faire <p>Pour r\u00e9soudre le probl\u00e8me du tri par s\u00e9lection, on aura besoin de deux fonctions annexes: <code>index_minimum</code> et <code>echanger</code>. Les sp\u00e9cifications de ces fonctions sont les suivantes:  </p> <ul> <li><code>index_minimum(t, j)</code>: prend en param\u00e8tres un tableau d'\u00e9l\u00e9ments comparables (souvent des nombres) <code>t</code> et un entier <code>j</code>; renvoie l'index de l'\u00e9l\u00e9ment le plus petit trouv\u00e9 entre <code>j</code> et la fin du tableau;</li> <li><code>echanger(t, i, j)</code>: prend en param\u00e8tres un tableau <code>t</code> et permute les \u00e9l\u00e9ments situ\u00e9s aux index <code>i</code> et <code>j</code>.</li> </ul> <p>\u00c8crire ces deux fonctions.</p>"},{"location":"NSI1/S8/S8C1.html#algorithme-et-implementation","title":"Algorithme et impl\u00e9mentation","text":""},{"location":"NSI1/S8/S8C1.html#algorithme","title":"Algorithme","text":"<p>On peut formaliser l'algorithme du tri par s\u00e9lection avec le pseudo-code suivant:  </p> <p>Algorithme</p> <pre><code>Tri_selection(t)\nt: tableau de n \u00e9l\u00e9ments comparables (t[0..n-1])\nPour i allant de 0 \u00e0 n-2:\n    rechercher l'indice k du plus petit \u00e9l\u00e9ment de t[i..n-1]\n    \u00e9changer t[i] et t[k]\n</code></pre>"},{"location":"NSI1/S8/S8C1.html#implementation","title":"Impl\u00e9mentation","text":"<p>\u00c0 faire</p> <p>Appliquer cet algorithme \u00e0 la main sur le tableau <code>t = [3, 4, 1, 7, 2]</code>. Donner une impl\u00e9mentation possible en python de cet algorithme et tester.</p> <pre><code># TEST\nt = [5, 6, 1, 1, 15, 0, 4]\ntri_selection(t)\nassert t == [0, 1, 1, 4, 5, 6, 15]\n</code></pre>"},{"location":"NSI1/S8/S8C1.html#validite-de-lalgorithme","title":"Validit\u00e9 de l'algorithme","text":"<p>La situation au \\(i^{\u00e8me}\\) tour de boucle peut \u00eatre repr\u00e9sent\u00e9e de la mani\u00e8re suivante:  Tous les \u00e9l\u00e9ments d'indice compris entre 0 et \\(i-1\\) inclus sont tri\u00e9s ET ils sont tous inf\u00e9rieurs ou \u00e9gaux aux \u00e9l\u00e9ments de la partie non tri\u00e9e, entre \\(i\\) et \\(n-1\\). La preuve de cette proposition logique peut \u00eatre d\u00e9licate \u00e0 \u00e9tablir en classe de 1re. On dit que c'est un invariant pour l'algorithme <code>Tri_selection</code>.  </p> <p>D\u00e9finition</p> <p>Un invariant de boucle est un pr\u00e9dicat (proposition logique) qui est:  </p> <ul> <li>initialement vrai;</li> <li>vrai \u00e0 l'entr\u00e9e d'une it\u00e9ration ainsi qu'\u00e0 la sortie de celle-ci</li> </ul> <p>Trouver le bon invariant garantit que l'algorithme renvoie un r\u00e9sultat conforme aux sp\u00e9cifications et assurer ainsi sa correction partielle.  </p> <p>Dans le cas de l'algorithme du tri par s\u00e9lection, la terminaison est assur\u00e9e car il fait intervenir une boucle born\u00e9e (en r\u00e9alit\u00e9 deux ... le voyez-vous?).  </p> <p>La combinaison de la correction partielle et de la terminaison permet de conclure \u00e0 la correction totale de l'algorithme.</p> <p>Vocabulaire</p> <p>Le terme correction est \u00e0 prendre ici au sens correct. </p>"},{"location":"NSI1/S8/S8C1.html#complexite-en-temps","title":"Complexit\u00e9 en temps","text":"<p>Qu'est-ce que la complexit\u00e9 en temps ?</p> <p>Le co\u00fbt (en temps) ou complexit\u00e9 en temps de l'algorithme <code>Tri_selection</code> est li\u00e9 au nombre d\u2019op\u00e9rations \u00e9l\u00e9mentaires effectu\u00e9es pour trier une collection d\u2019\u00e9l\u00e9ments. Elle donne une id\u00e9e du temps d'ex\u00e9cution d'un programme impl\u00e9mentant cet algorithme.  </p> <p>La complexit\u00e9 est un crit\u00e8re majeur pour comparer les algorithmes entre eux. Remarque: on peut s'interesser aussi \u00e0 la complexit\u00e9 en espace m\u00e9moire</p> <p>La boucle pr\u00e9sente dans <code>tri_selection</code> est parcourue \\(n-1\\) fois. \u00c9valuons le nombre de comparaisons qu'elle effectue (\u00e0 travers l'appel de <code>index_minimum</code>).</p> <p>Pour \\(i=0\\), on effectue \\(n-1\\) comparaisons dans <code>index_minimum</code> . Pour \\(i=1\\), on effectue \\(n-2\\) comparaisons. \\(\\cdots\\) Pour \\(i=n-2\\), on effectue 1 comparaison.  </p> <p>Le nombre total de comparaisons est donc:  </p> \\[(n-1)+(n-2)+\\cdots +2+1\\] <p>Cette somme correspond \u00e0 la somme des termes cons\u00e9cutifs d'une suite arithm\u00e9tique, dont la valeur pour \\(n&gt;1\\) est donn\u00e9e par:</p> \\[\\dfrac{n}{2}\\times (n-1)=\\dfrac{1}{2}n^2-\\dfrac{1}{2}n\\] <p>Pour une taille \\(n\\) tr\u00e8s grande de l'entr\u00e9e, le terme en \\(n^2\\) devient pr\u00e9pond\u00e9rant. En d'autres termes, le nombre de comparaisons effectu\u00e9es, donc le temps d'ex\u00e9cution, est proportionnel \u00e0 \\(n^2\\).  </p> <p>On retiendra que le co\u00fbt en temps ou complexit\u00e9 temporelle du tri par s\u00e9lection est proportionnelle au carr\u00e9 de la taille de l'entr\u00e9e. On dit aussi que cet algorithme a une complexit\u00e9 temporelle quadratique.  </p> <p>\u00c0 retenir</p> <p>Le tri par s\u00e9lection (du minimum) consiste \u00e0 chercher le plus petit \u00e9l\u00e9ment de la partie de tableau non tri\u00e9e pour le mettre \u00e0 sa place d\u00e9finitive. Ce probl\u00e8me est r\u00e9solu habituellement par un algorithme faisant intervenir deux boucles born\u00e9es. La terminaison est donc assur\u00e9e. Un invariant de boucle permet de conclure \u00e0 sa correction partielle. La conjugaison de ces deux propri\u00e9t\u00e9s assure la correction totale de l'algorithme propos\u00e9. Cet algorithme a une complexit\u00e9 temporelle quadratique.</p>"},{"location":"NSI1/S8/S8C2.html","title":"Tri par insertion","text":""},{"location":"NSI1/S8/S8C2.html#principe","title":"Principe","text":"<p>Visionner la s\u00e9quence vid\u00e9o propos\u00e9e. Le tri par insertion est le tri effectu\u00e9 par le joueur de carte. En supposant que l'on maintienne une partie tri\u00e9e, on d\u00e9cale les cartes de cette partie, de mani\u00e8re \u00e0 placer la carte \u00e0 classer (voir video).  </p> <p>En informatique, on va tr\u00e8s souvent travailler avec un tableau et le parcourir de la gauche vers la droite, en maintenant la partie d\u00e9j\u00e0 tri\u00e9e sur sa gauche (voir lien wikipedia). Concr\u00e8tement, on va d\u00e9caler d'une case vers la droite tous les \u00e9l\u00e9ments d\u00e9j\u00e0 tri\u00e9s, qui sont plus grands que l'\u00e9l\u00e9ment \u00e0 classer, puis d\u00e9poser ce dernier dans la case lib\u00e9r\u00e9e.</p>"},{"location":"NSI1/S8/S8C2.html#algorithme","title":"Algorithme","text":"<p>Remarque</p> <p>La notation <code>t[0..i-1]</code> d\u00e9signe les \\(i\\) premiers \u00e9l\u00e9ments d'un tableau <code>t</code>, c'est-\u00e0-dire <code>t[0], t[1], ..., t[i-1]</code>.  </p> <pre><code>Algorithme Tri_insertion(t)\n---------------------------\nt: tableau de n \u00e9l\u00e9ments (t[0..n-1])\n\nPour i allant de 1 \u00e0 n-1:\n    'amener' t[i] \u00e0 sa place parmi t[0..i-1]\n</code></pre>"},{"location":"NSI1/S8/S8C2.html#implementation-en-python","title":"Impl\u00e9mentation en python","text":"<p>On commence par donner une r\u00e9alisation de <code>amener t[i] \u00e0 sa place parmi t[0..i-1]</code> en \u00e9crivant une fonction <code>placer(t, i)</code> qui am\u00e8ne l'\u00e9l\u00e9ment d'index \\(i\\) \u00e0 sa place parmi les \u00e9l\u00e9ments d'index 0 \u00e0 \\(i-1\\) d\u00e9j\u00e0 class\u00e9s.</p> <pre><code>def placer(t, i):\n\"\"\" am\u00e8ne t[i] \u00e0 sa place dans t[0..i-1] suppos\u00e9 tri\u00e9\"\"\"\n    cle = t[i] # \u00e9l\u00e9ment \u00e0 classer\n    j = i - 1\n    # d\u00e9calage des \u00e9l\u00e9ments du tableau \u00e0 droite, pour trouver la place de t[i]\n    while j &gt;= 0 and t[j] &gt; cle:\n        t[j+1] = t[j] # l'\u00e9l\u00e9ment d'index j est d\u00e9cal\u00e9 d'une case vers la droite\n        j = j - 1\n    # En sortie de boucle, l'\u00e9l\u00e9ment d'index j est inf\u00e9rieur \u00e0 cle,\n    # on ins\u00e8re donc cle juste apr\u00e8s j.\n    t[j+1] = cle\n</code></pre> <pre><code># TEST\nt = [-1, 2, 5, 12, 3, 0, 4]\nplacer(t, 4)\nt\n</code></pre> <pre><code>[-1, 2, 3, 5, 12, 0, 4]\n</code></pre> <p>\u00c0 faire</p> <p>Impl\u00e9menter le tri par insertion en python.</p> <pre><code>def insertion(t):\n    # compl\u00e9ter le code de la fonction insertion(t), sans oublier la sp\u00e9cification\n    pass\n</code></pre> <pre><code># Test\nt = [7, 2, -3, 5]\ninsertion(t)\nassert t == [-3, 2, 5, 7]\n</code></pre>"},{"location":"NSI1/S8/S8C2.html#validite-de-lalgorithme","title":"Validit\u00e9 de l'algorithme","text":"<p>L'algorithme <code>Tri_insertion</code> termine car il pr\u00e9sente une boucle born\u00e9e.  </p> <p>Remarque</p> <p>La boucle conditionnelle de la r\u00e9alisation <code>amener t[i] \u00e0 sa place parmi t[0..i-1]</code> termine, la quantit\u00e9 \\(j\\) est un variant de boucle.</p> <p>L'invariant de boucle est ici: </p> <p>Invariant</p> <p>\u00c0 la i-\u00e8me it\u00e9ration, le sous tableau <code>t[0..i-1]</code> est tri\u00e9.   </p> <p>De mani\u00e8re intuitive, on comprend qu'\u00e0 chaque tour de boucle on se rapproche de la solution recherch\u00e9e. On agrandit la zone tri\u00e9e de un \u00e9l\u00e9ment. Exhiber une telle propri\u00e9t\u00e9 (invariant de boucle) permet de conclure \u00e0 la correction partielle de l'algorithme.  </p> <p>La combinaison de la correction partielle avec la terminaison permet de conclure \u00e0 la correction totale de l'algorithme <code>Tri_insertion</code>.</p>"},{"location":"NSI1/S8/S8C2.html#efficacite-complexite-temporelle-de-lalgorithme","title":"Efficacit\u00e9: complexit\u00e9 temporelle de l'algorithme","text":"<p>Afin d'\u00e9valuer le co\u00fbt de l'algorithme dans le pire des cas, on doit s'int\u00e9resser aux nombre d'op\u00e9rations effectu\u00e9es, qui est ici li\u00e9 au nombre de d\u00e9calage avant de trouver la place de l'\u00e9l\u00e9ment \u00e0 classer. Le pire des cas se produit lorsque le tableau est class\u00e9 en sens inverse. Visualisons cela sur un tableau \u00e0 5 \u00e9l\u00e9ments, simple \u00e0 trier: <code>t = [5, 4, 3, 2, 1]</code>.  </p> <p> </p> <p>Le nombre de d\u00e9calage n\u00e9cessaire est: \\(1 + 2 + 3 + 4 = 10\\).</p> <p>On g\u00e9n\u00e9ralise sans peine: dans le pire des cas, pour un tableau de taille <code>n</code>, il faudra effectuer:</p> \\[ 1+2+\\cdots + (n-2) + (n-1)=\\dfrac{n}{2}\\times(n-1)\\] <p>d\u00e9calages. Comme pour le tri par s\u00e9lection, le co\u00fbt (on dit aussi complexit\u00e9) du tri par insertion dans le pire des cas est quadratique. On dit aussi que la complexit\u00e9 en temps est en \\(\\mathcal{O}(n^2)\\), \\(n\\) \u00e9tant la taille du tableau.</p> <p>Ce qu'il faut retenir</p> <p>Le tri par insertion consiste \u00e0 maintenir une partie d'un tableau tri\u00e9e et \u00e0 parcourir la partie non tri\u00e9e en mettant chaque \u00e9l\u00e9ment rencontr\u00e9 \u00e0 sa place  d\u00e9finitive dans la partie tri\u00e9e. Ce probl\u00e8me est r\u00e9solu habituellement par un algorithme faisant intervenir une boucle born\u00e9e et une boucle conditionnelle. La terminaison de la boucle born\u00e9e est  \u00e9vidente et celle de la boucle conditionelle facile \u00e0 montrer avec un variant de boucle. L'invariant de boucle \\(\\mathcal{I}\\): \u00c0 la i-\u00e8me it\u00e9ration, le sous tableau <code>t[0..i-1]</code> est tri\u00e9, permet de conclure \u00e0 sa correction partielle. La conjugaison de  ces deux propri\u00e9t\u00e9s assure la correction totale de l'algorithme propos\u00e9. Cet algorithme a une complexit\u00e9 temporelle quadratique.</p>"},{"location":"NSI1/S8/S8C3.html","title":"RECHERCHE DANS UN TABLEAU","text":""},{"location":"NSI1/S8/S8C3.html#introduction","title":"Introduction","text":"<p>Pour Thomas Cormen, tr\u00e8s grand professeur d'informatique, un algorithme est une proc\u00e9dure de calcul, bien d\u00e9finie, qui prend en entr\u00e9e une valeur ou un ensemble de valeurs, et qui donne en sortie une valeur ou un ensemble de valeurs. C'est un outil permettant de r\u00e9soudre un probl\u00e8me de calcul bien sp\u00e9cifi\u00e9. Un algorithme doit se terminer dans un temps raisonnable et doit r\u00e9soudre correctement le probl\u00e8me donn\u00e9. Ces deux propri\u00e9t\u00e9s sont respectivement nomm\u00e9es:  </p> <ul> <li>complexit\u00e9 (en temps)</li> <li>correction </li> </ul> <p>Cette premi\u00e8re le\u00e7on d'algorithmique sera orient\u00e9e vers la recherche (s\u00e9quentielle) d'un \u00e9l\u00e9ment dans un tableau.</p>"},{"location":"NSI1/S8/S8C3.html#parcours-sequentiel-dun-tableau","title":"Parcours s\u00e9quentiel d'un tableau","text":""},{"location":"NSI1/S8/S8C3.html#recherche-dune-occurence","title":"Recherche d'une occurence","text":"<p>Soit le probl\u00e8me suivant: \u00e9tant donn\u00e9 un tableau <code>t</code> de \\(n\\) \u00e9l\u00e9ments, \u00e9crire un algorithme qui permet de dire si un \u00e9l\u00e9ment \\(x\\) appartient \u00e0 ce tableau.   </p> <p>Le probl\u00e8me: \\(x\\) appartient-il au tableau ?  </p> <p>Les entr\u00e9es: un tableau <code>t</code> et un \u00e9l\u00e9ment <code>x</code>;  </p> <p>La sortie: une r\u00e9ponse vraie ou fausse (<code>True</code> ou <code>False</code>)  </p> <p>Une solution:  </p> <pre><code>fonction appartient(x, t):\n\nEntr\u00e9es:\n- t: tableau\n- x: \u00e9l\u00e9ment de m\u00eame type que les \u00e9l\u00e9ments du tableau t\nSortie: bool\u00e9en (r\u00e9ponse)\n\nVariable: n, entier naturel\n\nn = taille(t)\nPour i allant de 0 \u00e0 n-1 \n    Si t[i] = x  \n        Renvoyer Vrai  \nRenvoyer Faux\n</code></pre> <pre><code>#Impl\u00e9mentation en python\ndef appartient_v1(x, t):\n\"\"\"\n    renvoie un bool\u00e9en correspondant \u00e0 la pr\u00e9sence ou l'absence de x dans t;\n    t: tableau\n    x: \u00e9l\u00e9ment de m\u00eame type que les \u00e9l\u00e9ments de t\n    \"\"\"\n    n = len(t)\n    for i in range(n):\n        if t[i] == x:\n            return True\n    return False\n</code></pre> <pre><code>appartient_v1(-5, [5, 10, 15, 20])\n</code></pre> <pre><code>False\n</code></pre> <p>\u00c0 faire</p> <p>R\u00e9aliser l'impl\u00e9mentation en python en utilisant une boucle <code>while</code> plut\u00f4t qu'une boucle <code>for</code>.</p> <pre><code>def appartient_v1b(x, t):\n\"\"\"\n    renvoie un bool\u00e9en correspondant \u00e0 la pr\u00e9sence ou l'absence de x dans t;\n    t: tableau\n    x: \u00e9l\u00e9ment de m\u00eame type que les \u00e9l\u00e9ments de t\n    \"\"\"\n    pass\n</code></pre> <pre><code># TESTS - A DECOMMENTER\nappartient_v1b(-1, [5, 10, 15, 20])\n</code></pre> <p>Remarque</p> <p>On peut boucler sur \u00e9l\u00e9ments plut\u00f4t que les indices; cela nous dispense de la variable \\(n\\).</p> <pre><code>def appartient_v2(x, t):\n\"\"\"\n    renvoie un bool\u00e9en correspondant \u00e0 la pr\u00e9sence ou l'absence de x dans t;\n    t: tableau\n    x: \u00e9l\u00e9ment de m\u00eame type que les \u00e9l\u00e9ments de t\n    \"\"\"\n    for elt in t:\n        if elt == x:\n            return True\n    return False\n</code></pre>"},{"location":"NSI1/S8/S8C3.html#recherche-dun-extremum","title":"Recherche d'un extr\u00e9mum","text":"<p>Deuxi\u00e8me probl\u00e8me: \u00e9tant donn\u00e9 un tableau <code>t</code> de \\(n\\) \u00e9l\u00e9ments, \u00e9crire un algorithme qui permet de trouver le minimum parmi les \u00e9l\u00e9ments de ce tableau.   </p> <p>Le probl\u00e8me: quellle est la plus petite valeur du tableau ? </p> <pre><code>fonction minimum(t):\nEntr\u00e9e: un tableau t;  \nSortie: le plus petit \u00e9l\u00e9ment de t  \nVariables: \n    n, entier naturel\n    mini, m\u00eame type que les \u00e9l\u00e9ments de t\nPr\u00e9condition: t non vide\n\nn = taille(t)\nmini = t[0]\nPour i allant de 1 \u00e0 n-1:\n    Si t[i] &lt; mini\n        mini = t[i]\nRenvoyer mini\n</code></pre> <pre><code>def minimum(t):\n\"\"\"\n    Renvoie le plus petit \u00e9l\u00e9ment de t\n    \"\"\"\n    assert t != [], \"Erreur: tableau vide\"\n    n = len(t)\n    mini = t[0]\n    for i in range(1,n):\n        if t[i] &lt; mini:\n            mini = t[i]\n    return mini\n</code></pre> <pre><code>minimum([5, 10, -15, 20])\n</code></pre> <pre><code>minimum([0, 12])\n</code></pre> <p>Travail</p> <p>\u00c9crire et tester l'impl\u00e9mentation d'une fonction retournant l'\u00e9l\u00e9ment le plus grand de <code>t</code></p>"},{"location":"NSI1/S8/S8C3.html#calcul-dune-moyenne","title":"Calcul d'une moyenne","text":"<p>Troisi\u00e8me probl\u00e8me: \u00e9tant donn\u00e9 un tableau <code>t</code> de \\(n\\) \u00e9l\u00e9ments, \u00e9crire un algorithme qui permet de trouver la moyenne des \u00e9l\u00e9ments de ce tableau.   </p> <p>Le probl\u00e8me: quelle est la valeur moyenne des \u00e9l\u00e9ments du tableau ?</p> <pre><code>fonction moyenne(t):\nEntr\u00e9e: un tableau t de flottants;  \nSortie: la moyenne de tous les \u00e9l\u00e9ments de t  \nVariables: \n    n, entier naturel\n    somme, flottant\nPr\u00e9condition: t non vide\n\nn = taille(t)\nsomme = 0\nPour i allant de 0 \u00e0 n-1:\n    somme = somme + t[i]\nRenvoyer somme / n\n</code></pre> <p>\u00c0 faire</p> <p>Impl\u00e9menter cet algorithme en python.</p> <pre><code>def moyenne(t):\n\"\"\"\n    Renvoie la moyenne des \u00e9l\u00e9ments d'un tableau t non vide;\n    \"\"\"\n    pass\n</code></pre> <pre><code># TEST - A EXECUTER\n#moyenne([5.5, 10.0, 15.0, 19.5])\n</code></pre>"},{"location":"NSI1/S8/S8C3.html#efficacite-des-algorithmes","title":"Efficacit\u00e9 des algorithmes","text":"<p>En informatique, la question de la performance des algorithmes est centrale. D'une mani\u00e8re g\u00e9n\u00e9rale, le traitement d'une certaine quantit\u00e9 de donn\u00e9es requiert un temps d'xecution li\u00e9 \u00e0 cette quantit\u00e9. Ainsi dans nos exemples o\u00f9 \\(n\\) est la taille du tableau d'entr\u00e9e, la boucle est parcourue:</p> <ul> <li>\\(n\\) fois dans le pire des cas (si x n'appartient pas au tableau) dans le probl\u00e8me 1</li> <li>\\(n-1\\) fois dans le probl\u00e8me 2;</li> <li>\\(n\\) fois dans le probl\u00e8me 3;  </li> </ul> <p>Le temps d'ex\u00e9cution sera li\u00e9 au nombre d'op\u00e9rations effectu\u00e9es, qui d\u00e9pend ici de la taille de l'entr\u00e9e \\(n\\), plus exactement proportionnel \u00e0 \\(n\\) (ou \\(n-1\\)). On dit que la complexit\u00e9 en temps de ces algorithmes est lin\u00e9aire.  </p> <p>Remarque: il n'est pas question de rechercher de mani\u00e8re exacte le temps d'ex\u00e9cution mais plut\u00f4t d'avoir une estimation.</p>"},{"location":"NSI1/S8/S8C4.html","title":"LA RECHERCHE DICHOTOMIQUE","text":""},{"location":"NSI1/S8/S8C4.html#principe","title":"Principe","text":"<p>On souhaite rechercher une valeur \\(x\\) dans un tableau \\(t\\) tri\u00e9 (par ordre croissant pour se fixer les id\u00e9es). L'id\u00e9e principale est de comparer \\(x\\) avec la valeur situ\u00e9e au milieu du tableau:</p> <pre><code> g                  m                  d\n+-----------------+----+----------------+\n|    ....         |t[m]|    ....        |\n+-----------------+----+----------------+\n</code></pre> <ul> <li>si elle est plus petite, il suffit de restreindre la recherche dans la partie gauche du tableau;</li> <li>sinon, on la restreint \u00e0 la partie droite de \\(t\\).</li> <li>ou alors on a trouv\u00e9 \\(x\\)</li> </ul> <p>En r\u00e9p\u00e9tant ce proc\u00e9d\u00e9 on divise la zone de recherche par deux \u00e0 chaque fois. On peut alors repr\u00e9senter la situation avec le sch\u00e9ma ci-dessous. Il s'agit d'une application du principe diviser pour r\u00e9gner qui sera vu en terminale.  </p> <pre><code> 0              g        d             n-1\n+--------------+----------+--------------+\n| \u00e9l\u00e9ments &lt; x |  ....    | \u00e9l\u00e9ments &gt; x | \n+--------------+----------+--------------+\n</code></pre>"},{"location":"NSI1/S8/S8C4.html#algorithme","title":"Algorithme","text":"<p>Pseudo-code de l'algorithme de recherche dichotomique  </p> <pre><code>-------------------------------------\nAlgorithme recherche_dichotomique\n-------------------------------------\n    Entr\u00e9es: \n        tableau t de taille n; \n        x \u00e9l\u00e9ment \u00e0 rechercher, de m\u00eame type que les \u00e9l\u00e9ments de t\n    Renvoie index de x ou rien si non trouv\u00e9.\n    Pr\u00e9-condition: t tri\u00e9\n\n    Variables: g, d et m des index rep\u00e9rant les \"bords\" du tableau et le milieu respectivement\n\nFixer g \u00e0 0 et d \u00e0 n-1\nTant que g &lt;= d\n    calculer index m du milieu du tableau [g..d]\n    Si t[m] = x\n        Renvoyer m\n    Sinon si x &gt; t[m]\n        g = m + 1\n    Sinon si x &lt; t[m]\n        d = m - 1\nRenvoyer non trouv\u00e9\n</code></pre>"},{"location":"NSI1/S8/S8C4.html#implementation-en-python","title":"Impl\u00e9mentation en python","text":"<pre><code># Fonction \u00e0 utiliser pour v\u00e9rifier qu'un tableau est tri\u00e9\ndef est_trie(t):\n\"\"\"\n    V\u00e9rifie si un tableau t est tri\u00e9 et renvoie un bool\u00e9en comme r\u00e9ponse\n    \"\"\"\n    return all(t[i] &lt;= t[i + 1] for i in range(len(t) - 1))\n</code></pre> <p>\u00c0 faire</p> <p>Impl\u00e9menter l'algorithme de la recherche dichotomique en python, en compl\u00e9tant le code ci-dessous.</p> <pre><code># RECHERCHE DICHOTOMIQUE\n\ndef recherche_dichotomique(x, t):\n\"\"\"\n    Renvoie la position de x dans le tableau t tri\u00e9; None si non trouv\u00e9\n    Pr\u00e9condition: t tri\u00e9\n    \"\"\"\n    assert est_trie(t), \"Erreur: tableau non tri\u00e9\"\n\n    g = 0 # index gauche\n    d = len(t) - 1 # index droit\n    # A compl\u00e9ter\n</code></pre> <p>Initialement, <code>g = 0</code> et <code>d = len(t) - 1</code>. On calcule l'index central \\(m\\) du tableau en effectuant une division enti\u00e8re. Ensuite on compare \\(x\\) \u00e0 <code>t[m]</code>. Suivant le r\u00e9sultat de la comparaison, on ajuste la borne gauche \\(g\\) ou droite \\(d\\) de la zone de recherche.  </p> <p>Si <code>x == t[m]</code> , on a trouv\u00e9 \\(x\\) et on renvoie son index.  </p> <p>Il se peut que l'on sorte de la boucle <code>while</code> (si <code>g &gt; d</code>, c'est dire que la zone de recherche est vide), dans ce cas, on signale l'absence de \\(x\\) en renvoyant <code>None</code>.</p>"},{"location":"NSI1/S8/S8C4.html#terminaison-de-lalgorithme","title":"Terminaison de l'algorithme","text":"<p>Lorsqu'un programme contient une boucle <code>while</code> il est suceptible de diverger (on dit aussi qu'il peut entrer dans une boucle infinie). Pour montrer l'arr\u00eat de la boucle, on utilise une technique de raisonnement appel\u00e9 technique du variant de boucle. Il s'agit de trouver parmi les \u00e9l\u00e9ments du programme une quantit\u00e9:  </p> <ul> <li>enti\u00e8re;</li> <li>positive;</li> <li>qui d\u00e9croit strictement \u00e0 chaque tour de boucle.  </li> </ul> <p>Si on peut exhiber un variant de boucle, l'algorithme termine.</p> g d m t[m] d-g trouv\u00e9 ? Initialisation Fin it\u00e9ration 1 Fin it\u00e9ration 2 Fin it\u00e9ration 3 <p>\u00c0 faire</p> <p>Soit <code>t = [1,7,8,9,12,15,15,22,30,31]</code>. On recherche \\(x=15\\) dans <code>t</code>.  Compl\u00e9ter le tableau ci-dessus et conclure.</p>"},{"location":"NSI1/S8/S8C5.html","title":"Algorithmes gloutons","text":"<p>Source</p> <p>Ce cours est fortement inspir\u00e9 du travail du professeur de NSI G. Lassus (lyc\u00e9e F. Mauriac).</p> <p>en anglais : greedy algorithms</p> <p></p> <p>Un algorithme est qualifi\u00e9 de \u00abglouton\u00bb si le probl\u00e8me qu'il essaie de r\u00e9soudre est d\u00e9compos\u00e9 en une succession de probl\u00e8mes identiques pour lesquels l'algorithme va chercher une solution optimale.  </p> <p>La question (presque philosophique) est : lorsqu'on fait \u00e0 chaque \u00e9tape le meilleur choix possible, est-ce que la solution finale \u00e0 laquelle on arrive est la meilleure possible ?  </p> <p>Est-ce que faire le meilleur choix \u00e0 chaque \u00e9tape nous assure le meilleur choix global ?</p>"},{"location":"NSI1/S8/S8C5.html#1-exemples-dalgorithmes-gloutons","title":"1. Exemples d'algorithmes gloutons","text":""},{"location":"NSI1/S8/S8C5.html#11-un-plus-court-chemin","title":"1.1 Un plus court chemin ?","text":"<ul> <li>Vous partez du point O.</li> <li>Vous devez avoir atteint le plus rapidement possible tous les points A, B, C, D, E, F.</li> <li>L'ordre de parcours des points n'est pas important.</li> </ul> <p>La philosophie de l'algorithme glouton implique qu'\u00e0 chaque \u00e9tape, vous allez vous diriger vers le point le plus proche.</p> <p>Quel est alors le parcours final ?</p>"},{"location":"NSI1/S8/S8C5.html#solution","title":"solution","text":"<p>Voil\u00e0 ce que donnerait l'algorithme glouton :</p> <p></p>"},{"location":"NSI1/S8/S8C5.html#remarque","title":"Remarque","text":"<p>Ce chemin est-il optimal ? NON</p> <p>Celui ci-dessous est meilleur :</p> <p></p>"},{"location":"NSI1/S8/S8C5.html#12-remplir-un-rectangle-avec-des-carres","title":"1.2 Remplir un rectangle avec des carr\u00e9s","text":"<p>(d'apr\u00e8s S.Tummarello et E.Buonocore) </p> <p>On consid\u00e8re un rectangle de dimension 11 sur 13 (figure 0). On veut remplir ce rectangle avec le minimum de carr\u00e9s.</p> <p></p> <p>Un algorithme glouton va chercher \u00e0 positionner d'abord le plus grand carr\u00e9 possible (figure 1).</p> <p>C'est une strat\u00e9gie efficace (8 carr\u00e9s n\u00e9cessaires), mais qui n'est pas optimale : la figure 2 pr\u00e9sente un pavage avec seulement 6 carr\u00e9s.</p> <p>Est-ce qu'un algorithme glouton va toujours passer \u00e0 c\u00f4t\u00e9 de la solution optimale ? Non ! Il arrive aussi qu'il donne la solution optimale. Changeons le rectangle initial en un rectangle de 10 sur 15 :</p> <p></p> <p>Dans cette situation, l'algorithme glouton nous am\u00e8ne \u00e0 la solution optimale.</p>"},{"location":"NSI1/S8/S8C5.html#13-conclusion","title":"1.3 Conclusion","text":"<p>Des paragraphes pr\u00e9c\u00e9dents, on peut retenir:  </p> <p>\u00e0 retenir</p> <p>Un algorithme glouton est une m\u00e9thode rapide et souvent efficace, mais qui ne garantit pas l'optimalit\u00e9 de la solution trouv\u00e9e.  </p> <p>La succession de meilleurs choix LOCAUX va nous amener \u00e0 une bonne solution GLOBALE, mais ne nous garantit pas d'arriver \u00e0 la solution optimale.</p>"},{"location":"NSI1/S8/S8C5.html#2-le-probleme-du-rendu-de-monnaie","title":"2. Le probl\u00e8me du rendu de monnaie","text":"<p>Nous allons travailler avec des pi\u00e8ces (ou billets) de 1, 2, 5, 10, 20, 50, 100, 200 euros.</p> <p>L'objectif est de cr\u00e9er un programme renvoyant, pour une somme <code>somme_a_rendre</code> entr\u00e9e en param\u00e8tre, la combinaison utilisant un minimum de pi\u00e8ces ou de billets pour fabriquer la somme <code>somme_a_rendre</code>.</p> <p>Par exemple, lorsque vous payez avec 20 \u20ac un objet co\u00fbtant 11 \u20ac, vous pr\u00e9f\u00e9rez qu'on vous rende vos 9 \u20ac de monnaie par \\(9= 5 + 2+2\\) plut\u00f4t que par \\(9=2+2+2+1+1+1\\)</p> <p>La r\u00e9solution de ce probl\u00e8me peut se faire de mani\u00e8re gloutonne : \u00e0 chaque \u00e9tape, vous allez essayer de rendre la plus grosse pi\u00e8ce (ou billet) possible.</p>"},{"location":"NSI1/S8/S8C5.html#21-solution-du-probleme","title":"2.1 Solution du probl\u00e8me","text":"<p>Pour r\u00e9soudre ce probl\u00e8me, on utilisera les listes de python. Leur utilisation est tr\u00e8s similaire \u00e0 celle des tableaux (en r\u00e9alit\u00e9 Python ne dispose pas de type tableau, tel que nous le voyons depuis le d\u00e9but de l'ann\u00e9e).  </p> <p>\u00c0 savoir</p> <p>Une liste de python se d\u00e9clare comme un tableau, avec des crochets: <pre><code>maliste = []\n</code></pre> On peut ins\u00e9rer un \u00e9l\u00e9ment dans une liste avec la m\u00e9thode <code>append</code>: <pre><code>maliste.append(10)\nprint(maliste)\n&gt;&gt;&gt; [10]\n</code></pre></p> ### Lancer assert rendu(13) == [10, 2, 1]bksl-nlassert rendu(58) == [50, 5, 2, 1]bksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>PIECES = [1, 2, 5, 10, 20, 50, 100, 200]bksl-nlbksl-nldef rendu(somme):bksl-nl    \"\"\"bksl-nl    Renvoie une \"liste\" contenant les pieces \u00e0 utiliser pour formerbksl-nl    somme.bksl-nl    \"\"\"bksl-nl    listepy-undpieces = []bksl-nl    i = len(PIECES) - 1bksl-nl    # \u00c0 compl\u00e9terbksl-nlbksl-nl    return listepy-undpiecesbksl-nlPIECES = [1, 2, 5, 10, 20, 50, 100, 200]bksl-nlbksl-nldef rendu(somme):bksl-nl    \"\"\"bksl-nl    Renvoie une \"liste\" contenant les pieces \u00e0 utiliser pour formerbksl-nl    somme.bksl-nl    \"\"\"bksl-nl    listepy-undpieces = []bksl-nl    i = len(PIECES) - 1bksl-nl    while somme &gt; 0:bksl-nl        if somme &gt;= PIECES[i]:bksl-nl            somme = somme - PIECES[i]bksl-nl            listepy-undpieces.append(PIECES[i])bksl-nl        else:bksl-nl            i = i - 1bksl-nl    return listepy-undpiecesbksl-nlbksl-nlprint(rendu(58))bksl-nl</p> <p>A</p> <p>Z</p>"},{"location":"NSI1/S8/S8C5.html#22-une-solution-optimale","title":"2.2 Une solution optimale ?","text":"<p>\u00c0 faire</p> <p>Imaginons qu'il n'y ait plus de pi\u00e8ces de 10 et 5 euros \ud83e\udd22. Faites fonctionner votre algorithme pour la somme de 63 euros.</p> <p>Damned ! Mais ce n'est pas une solution optimale ! <code>[20, 20, 20, 2, 1]</code> serait bien mieux.</p> <p>Moralit\u00e9</p> <p>Lors d'un rendu de monnaie, l'algorithme glouton n'est optimal que sous certaines conditions, ce qui est un peu d\u00e9cevant. Un syst\u00e8me de monnaie qui rend l'algorithme glouton optimal est dit canonique. Il est difficile de caract\u00e9riser math\u00e9matiquement si un syst\u00e8me de monnaie est canonique ou pas.</p>"},{"location":"NSI1/S8/S8C5.html#3-le-probleme-du-sac-a-dos-knapsack-problem","title":"3. Le probl\u00e8me du sac \u00e0 dos (Knapsack Problem)","text":"<p>Le probl\u00e8me est celui-ci : vous diposez d'un sac d'une contenance limit\u00e9e (sur le dessin ci-dessus, 15kg) et vous souhaitez maximiser la valeur totale des objets que vous mettez dans votre sac. Evidemment, la somme de leur masse ne doit pas d\u00e9passer 15 kg.</p> <p>Ce probl\u00e8me (de la cat\u00e9gorie des probl\u00e8me dits d'analyse combinatoire), malgr\u00e9 sa simplicit\u00e9 est un probl\u00e8me majeur d'optimisation.</p> <p>Actuellement</p> <ul> <li>On sait trouver LA meilleure solution, mais en explorant toutes les combinaisons une par une. Cette m\u00e9thode par force brute est inapplicable si beaucoup d'objets sont en jeu;</li> <li>On sait facilement trouver une bonne solution, mais pas forc\u00e9ment la meilleure, par exemple en adoptant une strat\u00e9gie gloutonne;</li> <li>On ne sait pas trouver facilement (en temps polynomial) la meilleure solution. Si vous y arrivez, 1 Million de $ sont pour vous.</li> </ul>"},{"location":"NSI1/S8/S8C5.html#petite-aide-technique-avant-de-commencer","title":"Petite aide technique avant de commencer","text":"<p>Supposons qu'on dispose d'une liste \u00a0<code>mylist = [[\"A\",3], [\"B\",2], [\"C\",8]]</code>.</p> <p>Comment classer les \u00e9l\u00e9ments de cette liste par leur deuxi\u00e8me \u00e9l\u00e9ment ???</p> <p>Nous allons proc\u00e9der en 2 temps :</p> <ul> <li>cr\u00e9ation d'une fonction qui renvoie le deuxi\u00e8me \u00e9l\u00e9ment d'un objet liste</li> <li>tri de la liste gr\u00e2ce \u00e0 cette fonction</li> </ul> <pre><code>mylist = [[\"A\",3], [\"B\",2], [\"C\",8]]\n\ndef ledeuxieme(k) :\n    return k[1]\n\nsimpsons = ['Bart', 'Lisa', 'Maggie']\nledeuxieme(simpsons)\n&gt;&gt;&gt; 'Lisa'\n\nmynewlist = sorted(mylist, key=ledeuxieme, reverse=True)\nprint(mynewlist)\n&gt;&gt;&gt; [['C', 8], ['A', 3], ['B', 2]]\n</code></pre>"},{"location":"NSI1/S8/S8C5.html#retour-sur-le-probleme-du-sac-a-dos","title":"Retour sur le probl\u00e8me du sac \u00e0 dos","text":"<p>On consid\u00e8re un sac de 40 kg et les objets suivants :</p> objet A B C D E F masse 13 12 8 10 14 18 valeur 700 500 200 300 600 800 <p>Quels objets faut-il prendre ?</p> <p>strat\u00e9gie gloutonne :</p> <ul> <li>on va classer les objets dans l'ordre d\u00e9croissant de leur rapport \\(\\mathrm{\\dfrac{valeur}{masse}}\\). Ainsi le premier \u00e9l\u00e9ment de la liste sera celui ayant le rapport \\(\\mathrm{\\dfrac{valeur}{masse}}\\) le plus \u00e9lev\u00e9.</li> <li>on prend le premier \u00e9l\u00e9ment de la liste, puis le deuxi\u00e8me, etc., tant que le sac peut encore les contenir.</li> </ul> ### Lancer obj = [[\"A\",13,700], bksl-nl      [\"B\",12,500], bksl-nl      [\"C\",8,200], bksl-nl      [\"D\",10,300],bksl-nl      [\"E\", 14,600],bksl-nl      [\"F\",18,800]]bksl-nlbksl-nlassert kp(obj, 40, 0) == ['A', 'F', 'C']bksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>def ratio(objet):bksl-nl    \"\"\" bksl-nl    Renvoie le rapport prix/poids d'un objet de type [\"nom\", poids, prix]bksl-nl    \"\"\"bksl-nlbksl-nl    nom, poids, prix = objetbksl-nl    # Rmq: 'nom' n'est jamais utilis\u00e9 ici, il est d'usage d'utiliser la bksl-nl    # construction suivante: py-und, poids, prix = objet. py-und est souventbksl-nl    # qualifi\u00e9 de variable jetable.  bksl-nl    return prix / poidsbksl-nlbksl-nlbksl-nldef kp(objets, poidspy-undmax, poidspy-undsac):bksl-nl    \"\"\"bksl-nl    Renvoie la liste de nom des objets pris dans 'objets' etbksl-nl    satisfaisant \u00e0 la condition poids total &lt; 'poidspy-undmax'bksl-nl    \"\"\"bksl-nl    # Code \u00e0 compl\u00e9terbksl-nl    butin = []bksl-nl    objetspy-undtries = sorted(objets, key=ratio, reverse=True)bksl-nlbksl-nl    for nom, poids, prix in objetspy-undtries:bksl-nl        if ... :bksl-nl            butin.append(...)bksl-nl            poidspy-undsac += ...bksl-nlbksl-nl    return butinbksl-nlbksl-nldef ratio(objet):bksl-nl    \"\"\" bksl-nl    Renvoie le rapport prix/poids d'un objet de type [\"nom\", poids, prix]bksl-nl    \"\"\"bksl-nlbksl-nl    nom, poids, prix = objetbksl-nl    # Rmq: 'nom' n'est jamais utilis\u00e9 ici, il est d'usage d'utiliser la bksl-nl    # construction suivante: py-und, poids, prix = objet  en python.bksl-nl    return prix / poidsbksl-nlbksl-nlbksl-nldef kp(objets, poidspy-undmax, poidspy-undsac):bksl-nl    \"\"\"bksl-nl    Renvoie la liste de nom des objets pris dans 'objets' etbksl-nl    satisfaisant \u00e0 la condition poids total &lt; 'poidspy-undmax'bksl-nl    \"\"\"bksl-nl    # Code \u00e0 compl\u00e9terbksl-nl    butin = []bksl-nl    objetspy-undtries = sorted(objets, key=ratio, reverse=True)bksl-nlbksl-nl    for nom, poids, prix in objetspy-undtries:bksl-nl        if poids + poidspy-undsac &lt;= poidspy-undmax:bksl-nl            butin.append(nom)bksl-nl            poidspy-undsac += poidsbksl-nlbksl-nl    return butinbksl-nlbksl-nl</p> <p>A</p>"},{"location":"NSI1/S8/S8C5.html#commentaires","title":"Commentaires","text":"<p>La construction <code>nom, poids, prix = objet</code> alors que <code>objet</code> est une liste de python de type <code>['A', 10, 300]</code> est appel\u00e9e d\u00e9ballage de la liste (en anglais list unpacking). Elle est totalement \u00e9quivalente \u00e0:  </p> <pre><code>nom = objet[0]\npoids = objet[1]\nprix = objet[2]\n</code></pre> <p>L'utilisation du param\u00e8tre <code>reverse=True</code> dans l'appel de <code>sorted</code> permet un tri par ordre d\u00e9croissant.</p> <p>Z</p>"},{"location":"NSI1/S8/S8C5.html#question-toujours-la-meme","title":"Question  (toujours la m\u00eame)","text":"<p>L'algorithme glouton nous a-t-il donn\u00e9 la solution optimale ? Nous allons pour cela avoir recours \u00e0 la force brute pour tester toutes les combinaisons possibles.</p>"},{"location":"NSI1/S8/S8C5.html#force-brute","title":"Force brute","text":"<ul> <li>Il faut cr\u00e9er une liste de mots binaires qui vont correspondre \u00e0 chaque combinaison. Par exemple, <code>101001</code> signifiera qu'on prend les objets A, C et F (0 on ne prend pas l'objet, 1 on le prend). Cette liste est de taille \\(2^n\\), o\u00f9 \\(n\\) est le nombre d'objets. C'est cela qui pose probl\u00e8me : avec 80 objets, on obtient une liste \u00e0 traiter qui contient plus de \\(10^{24}\\) objets, soit de l'ordre de grandeur du nombre d'\u00e9toiles dans l'Univers observable, ou de gouttes d'eau dans la mer, ou du nombre de grains de sables au Sahara... https://fr.wikipedia.org/wiki/Ordres_de_grandeur_de_nombres.</li> <li>Une fois cette liste \u00e9tablie, il suffit de parcourir chaque \u00e9l\u00e9ment et de calculer le poids total et la valeur totale correspondante. Si le poids total d\u00e9passe le poids autoris\u00e9, on met la valeur \u00e0 0 car cette combinaison ne nous int\u00e9resse pas.</li> <li>Il ne reste qu'\u00e0 chercher la valeur maximale et regarder la combinaison \u00e0 laquelle elle correspond.</li> </ul> <p>\u00c0 faire</p> <p>Ex\u00e9cuter le script ci-dessous mettant en oeuvre une m\u00e9thode de brute force. Dans ce script, La liste <code>combinaisons</code> contient bien toutes les mots possibles sur 6 bits. Pensez \u00e0 afficher la solution.</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p># Deux fonctions utiles \u00e0 la r\u00e9solution du pb KP par brute forcebksl-nlbksl-nldef generer(n):bksl-nl    \"\"\"bksl-nl    Renvoie une liste de TOUTES les combinaisons binaires possible de 0 \u00e0 2^n -1bksl-nl    \"\"\"bksl-nl    liste = [None] py-str 2py-strpy-strnbksl-nl    for i in range(2py-strpy-strn):bksl-nl        k = bin(i)[2:] # conversion en binaire avec la fonction python 'bin',bksl-nl        # en prenant soin d'enlever le '0b' en t\u00eate.bksl-nl        s = '0' py-str (n - len(k)) + k # Astuce permettant d'ajouter le nb de 0 correct en t\u00eatebksl-nl        liste[i] = sbksl-nl    return listebksl-nlbksl-nldef combinaisonspy-undpossibles(listepy-undobjets, combinaison, poidspy-undmax):bksl-nl    \"\"\"bksl-nl    Renvoie la liste des combinaisons d'objets possibles ainsi que la liste de poids associ\u00e9e, bksl-nl    compte tenu de la contrainte poidspy-undmaxbksl-nl    \"\"\"bksl-nl    bksl-nl    v, p = [], [] # deux variables contenant le r\u00e9sultat    bksl-nl    for k in combinaison: # On boucle sur toutes les combinaisons fourniesbksl-nl        poidspy-undcomb, valeur = 0, 0bksl-nl        # On examine les objets de cette combinaison kbksl-nl        for i in range(len(listepy-undobjets)): bksl-nl            if k[i] == '1': # Si le i-\u00e8me objet est choisi ...bksl-nl                nom, poidspy-undi, valeurpy-undi = listepy-undobjets[i] # on r\u00e9cup\u00e8re ses caract\u00e9ristiques:bksl-nl                poidspy-undcomb = poidspy-undcomb + poidspy-undi # poids et ...bksl-nl                valeur = valeur + valeurpy-undi # ...valeur !  bksl-nl        if poidspy-undcomb &gt; poidspy-undmax :bksl-nl            valeur = 0 # la contrainte n'est pas respect\u00e9e, cette combinaison est \u00e0 rejeterbksl-nl        v.append(valeur)bksl-nl        p.append(poidspy-undcomb)bksl-nl    return v, pbksl-nlbksl-nl#################### Knapsack par bruteforce ###########################################bksl-nlOBJETS =[[\"A\",13,700], bksl-nl      [\"B\",12,500], bksl-nl      [\"C\",8,200], bksl-nl      [\"D\",10,300],bksl-nl      [\"E\", 14,600],bksl-nl      [\"F\",18,800]]bksl-nlPOIDSpy-undMAX = 40bksl-nlbksl-nlcombinaisons = generer(len(OBJETS)) # On g\u00e9n\u00e8re TOUTES les combinaisonsbksl-nlvaleurs, poids = combinaisonspy-undpossibles(OBJETS, combinaisons, POIDSpy-undMAX) # on retient cellesbksl-nl# qui respectent la contrainte POIDSpy-undMAX.bksl-nlbksl-nlvaleurpy-undmaxi = max(valeurs)bksl-nlindicepy-undmaxi = valeurs.index(valeurpy-undmaxi)bksl-nlbksl-nlsolution = combinaisons[indicepy-undmaxi]bksl-nlpoidspy-undsolution = poids[indicepy-undmaxi]bksl-nlprint(solution, poidspy-undsolution)bksl-nl</p> <p>A</p> <p>Z</p> <p>La force brute a mis en \u00e9vidence une combinaison meilleure que celle donn\u00e9e par l'algorithme glouton. Par contre, la force brute est inenvisageable pour si le nombre d'objets est grand, alors que la strat\u00e9gie gloutonne reste tr\u00e8s rapide.</p>"},{"location":"NSI1/S8/S8C5.html#conclusion","title":"Conclusion","text":"<p>Le mot de la fin</p> <p>La strat\u00e9gie gloutonne donne tr\u00e8s rapidement des solutions satisfaisantes mais pas forc\u00e9ment optimales. Pour beaucoup de probl\u00e8mes (dont le probl\u00e8me du sac \u00e0 dos), la recherche d'une solution optimale sans passer par la force brute semble impossible (mais n'est pas d\u00e9montr\u00e9e). Dans ce cas-l\u00e0, la strat\u00e9gie gloutonne peut \u00eatre employ\u00e9e pour avoir vite et bien une solution convenable, m\u00eame si peut-\u00eatre non optimale.</p>"},{"location":"NSI1/S8/S8C6.html","title":"L\u2019algorithme des k plus proches voisins","text":""},{"location":"NSI1/S8/S8C6.html#introduction-principe","title":"Introduction - principe","text":"<p>L\u2019algorithme des k plus proches voisins (knn en anglais pour k nearest neighbors) appartient \u00e0 la famille des algorithmes d\u2019apprentissage automatique (en anglais machine learning). L\u2019apprentissage automatique peut \u00eatre vu comme l\u2019extraction de connaissances \u00e0 partir de donn\u00e9es. Les champs d\u2019application sont tr\u00e8s vastes (recommandations ou publicit\u00e9s cibl\u00e9s, identification de caract\u00e8res manuscrits, d\u00e9tection d\u2019activit\u00e9s frauduleuses dans des transactions bancaires, lutte anti-spam etc.)</p> <p>L\u2019algorithme a besoin d\u2019un ensemble de donn\u00e9es \\(\\mathcal{E}\\). Chacune de ces donn\u00e9es est caract\u00e9ris\u00e9e par sa cat\u00e9gorie, on dit aussi sa classe. Il s\u2019agit d\u2019associer une donn\u00e9e nouvelle \\(u\\), n\u2019appartenant pas \u00e0 \\(\\mathcal{E}\\)  \u00e0 une cat\u00e9gorie en se basant sur la cat\u00e9gorie majoritaire chez ses \\(k\\)  plus proches voisins, \\(k\\)  \u00e9tant un entier positif.  </p> <p>D\u00e9crit de cette fa\u00e7on, il s\u2019agit ici d\u2019un probl\u00e8me de classification. Pour r\u00e9aliser cet objectif, on a besoin d\u2019une fonction qui donne la distance entre deux donn\u00e9es.</p>"},{"location":"NSI1/S8/S8C6.html#principe","title":"Principe","text":"<p>On calcule les distances entre la donn\u00e9e \\(u\\) et chaque donn\u00e9e appartenant \u00e0 \\(\\mathcal{E}\\) \u00e0 l\u2019aide de la fonction distance. On retient les \\(k\\) donn\u00e9es du jeu de donn\u00e9es \\(\\mathcal{E}\\) les plus proches de \\(u\\).</p> <p>On attribue \u00e0 \\(u\\) la cat\u00e9gorie majoritaire chez les \\(k\\) donn\u00e9es les plus proches.</p>"},{"location":"NSI1/S8/S8C6.html#vers-lalgorithme-k-nn-comprendre-un-probleme-de-classification","title":"Vers l\u2019algorithme k-nn: comprendre un probl\u00e8me de classification","text":""},{"location":"NSI1/S8/S8C6.html#presentation-dun-exemple","title":"Pr\u00e9sentation d\u2019un exemple","text":"<p>L\u2019ensemble \\(\\mathcal{E}\\) des donn\u00e9es est pr\u00e9sent dans le fichier csv <code>personnages.csv</code>.  </p> <p>Description du jeu de donn\u00e9es</p> <p>Ce fichier contient le nom des personnages d\u2019un jeu fictif. Chaque personnage a des caract\u00e9ristiques propres (force, courage) et appartient \u00e0 l\u2019une des cat\u00e9gorie Fantassin ou Chevalier.  </p> <p>Commen\u00e7ons par donner un aper\u00e7u du contenu du fichier puis une repr\u00e9sentation graphique de ces donn\u00e9es.</p> <pre><code>import csv\nimport matplotlib.pyplot as plt\n\n\ndossier = './'\n\nf = open(dossier + 'personnages.csv', newline='', encoding='utf8')\npersonnages = [dict(row) for row in csv.DictReader(f, delimiter=';')]\n#Contenu\nfor i in range(4):\n    print(personnages[i])\n#Repr\u00e9sentation graphique\nfigure, axes = plt.subplots(figsize=(6, 6))\naxes.scatter([float(p['Force']) for p in personnages if p['Type'] == 'Fantassin'], \\\n             [float(p['Courage']) for p in personnages if p['Type'] == 'Fantassin'], \\\n             color='g', label='Fantassin')\naxes.scatter([float(p['Force']) for p in personnages if p['Type'] == 'Chevalier'], \\\n             [float(p['Courage']) for p in personnages if p['Type'] == 'Chevalier'], \\\n             color='r', label='Chevalier')\naxes.set_xlabel('Force')\naxes.set_ylabel('Courage')\naxes.set_title('Caract\u00e9ristiques des personnages')\naxes.legend(loc='upper center')\nplt.grid()\n</code></pre> <pre><code>{'Nom': 'Clark', 'Force': '2', 'Courage': '12', 'Type': 'Chevalier'}\n{'Nom': 'Martheen', 'Force': '15', 'Courage': '19', 'Type': 'Chevalier'}\n{'Nom': 'Mulen', 'Force': '2', 'Courage': '5', 'Type': 'Chevalier'}\n{'Nom': 'Louly', 'Force': '15', 'Courage': '18', 'Type': 'Chevalier'}\n</code></pre> <p></p> <p>Supposons maintenant que l\u2019on ait un nouveau personnage de <code>Force = 12</code> et <code>Courage = 12.5</code>. Pla\u00e7ons le sur le graphique en ex\u00e9cutant le code de la cellule suivante. \u00c0 partir du type de ses \\(k=5\\) voisins les plus proches, essayons de pr\u00e9voir son type. Le probl\u00e8me des distances sera r\u00e9solu en utilisant le cercle gris sur la figure.</p> <pre><code>figure, axes = plt.subplots(figsize=(6, 6))\naxes.scatter([float(p['Force']) for p in personnages if p['Type'] == 'Fantassin'], \\\n             [float(p['Courage']) for p in personnages if p['Type'] == 'Fantassin'], \\\n             color='g', label='Fantassin')\naxes.scatter([float(p['Force']) for p in personnages if p['Type'] == 'Chevalier'], \\\n             [float(p['Courage']) for p in personnages if p['Type'] == 'Chevalier'], \\\n             color='r', label='Chevalier')\naxes.scatter([12], [12.5], color='black', label='Inconnu')\ncercle = plt.Circle((12, 12.5), 3.4,fill=False, edgecolor='gray')\naxes.set_aspect(1)\naxes.add_artist(cercle)\naxes.set_xlabel('Force')\naxes.set_ylabel('Courage')\naxes.set_title('Caract\u00e9ristiques des personnages')\naxes.legend(loc='upper center')\nplt.grid()\n</code></pre> <p></p> <p>Parmi les 5 plus proches voisins du personnage inconnu, 4 sont des fantassins et 1 est un chevalier. Il est probable que l\u2019inconnu soit un fantassin. La valeur de \\(k\\) a \u00e9t\u00e9 donn\u00e9e de mani\u00e8re arbitraire.</p>"},{"location":"NSI1/S8/S8C6.html#exercice-dapplication-directe","title":"Exercice d\u2019application directe","text":"<p>Soit un personnage avec les caract\u00e9ristiques suivantes: <code>Force = 5</code> et <code>Courage = 12.5</code>. On choisit une valeur \\(k=4\\).</p> <pre><code>figure, axes = plt.subplots(figsize=(6, 6))\naxes.scatter([float(p['Force']) for p in personnages if p['Type'] == 'Fantassin'], \\\n             [float(p['Courage']) for p in personnages if p['Type'] == 'Fantassin'], \\\n             color='g', label='Fantassin')\naxes.scatter([float(p['Force']) for p in personnages if p['Type'] == 'Chevalier'], \\\n             [float(p['Courage']) for p in personnages if p['Type'] == 'Chevalier'], \\\n             color='r', label='Chevalier')\naxes.scatter([5], [12.5], color='black', label='Inconnu')\ncercle = plt.Circle((5, 12.5), 4.1,fill=False, edgecolor='gray')\naxes.set_aspect(1)\naxes.add_artist(cercle)\naxes.set_xlabel('Force')\naxes.set_ylabel('Courage')\naxes.set_title('Caract\u00e9ristiques des personnages')\naxes.legend(loc='upper center')\nplt.grid()\n</code></pre> <p></p> <p>\u00c0 faire</p> <ul> <li>Quel est le type du personnage inconnu? Quel est le probl\u00e8me ?</li> <li>Donner une valeur de \\(k\\) qui permette de donner une r\u00e9ponse?</li> <li>Donner pour cette valeur de \\(k\\), le type du personnage.</li> </ul>"},{"location":"NSI1/S8/S8C6.html#lalgorithme-k-nn-en-action-cas-simple","title":"L\u2019algorithme k-nn en action: cas simple","text":""},{"location":"NSI1/S8/S8C6.html#connaitre-le-jeu-de-donnees","title":"Conna\u00eetre le jeu de donn\u00e9es","text":"<p>On utilise un jeu de donn\u00e9es classique: les iris de Fisher. Les donn\u00e9es sont regroup\u00e9es dans le fichier <code>iris.csv</code> dans le dossier courant. Pour chaque entr\u00e9e nous avons :</p> <ul> <li>la longueur des s\u00e9pales (en cm);</li> <li>la largeur des s\u00e9pales (en cm);</li> <li>la longueur des p\u00e9tales (en cm);</li> <li>la largeur des p\u00e9tales (en cm);</li> <li>l\u2019esp\u00e8ce d\u2019iris : Iris Setosa, Iris Virginica ou Iris Versicolor (cat\u00e9gorie ou classe)</li> </ul> <p>Il est toujours int\u00e9ressant, dans un premier temps, de connaitre la structure de son jeu de donn\u00e9es. On en profitera pour en donner une repr\u00e9sentation graphique.</p> <pre><code>import csv\n\n\nf = open(dossier + 'iris.csv', newline='', encoding='utf8')\ntabiris = [dict(row) for row in csv.DictReader(f, delimiter=',')]\n\nprint(len(tabiris))\nfor i in range(5):\n    print(tabiris[i])\n</code></pre> <pre><code>150\n{'sepal.length': '5.1', 'sepal.width': '3.5', 'petal.length': '1.4', 'petal.width': '.2', 'variety': 'Setosa'}\n{'sepal.length': '4.9', 'sepal.width': '3', 'petal.length': '1.4', 'petal.width': '.2', 'variety': 'Setosa'}\n{'sepal.length': '4.7', 'sepal.width': '3.2', 'petal.length': '1.3', 'petal.width': '.2', 'variety': 'Setosa'}\n{'sepal.length': '4.6', 'sepal.width': '3.1', 'petal.length': '1.5', 'petal.width': '.2', 'variety': 'Setosa'}\n{'sepal.length': '5', 'sepal.width': '3.6', 'petal.length': '1.4', 'petal.width': '.2', 'variety': 'Setosa'}\n</code></pre> <p>Repr\u00e9sentons graphiquement <code>petal.width</code> en fonction de <code>petal.length</code>.</p> <pre><code>#Conversion des longueurs en flottant - utile pour la suite\nfor ligne in tabiris:\n    ligne['sepal.length'] = float(ligne['sepal.length'])\n    ligne['sepal.width'] = float(ligne['sepal.width'])\n    ligne['petal.length'] = float(ligne['petal.length'])\n    ligne['petal.width'] = float(ligne['petal.width'])\n#Cr\u00e9ation du graphique    \nfigure, axes = plt.subplots(figsize=(11, 11))\naxes.set_ylim(-1, 3)\n\naxes.scatter([p['petal.length'] for p in tabiris if p['variety'] == 'Setosa'], \\\n             [p['petal.width'] for p in tabiris if p['variety'] == 'Setosa'], color='g', label='setosa')\naxes.scatter([p['petal.length'] for p in tabiris if p['variety'] == 'Virginica'], \\\n             [p['petal.width'] for p in tabiris if p['variety'] == 'Virginica'], color='r', label='virginica')\naxes.scatter([p['petal.length'] for p in tabiris if p['variety'] == 'Versicolor'], \\\n             [p['petal.width'] for p in tabiris if p['variety'] == 'Versicolor'], color='b', label='versicolor')\naxes.set_title('Les iris de Fisher')\naxes.set_xlabel('petal.length')\naxes.set_ylabel('petal.width')\naxes.legend(loc='upper left')\naxes.grid()\n</code></pre> <p></p>"},{"location":"NSI1/S8/S8C6.html#calcul-de-distance","title":"Calcul de distance","text":"<p>On utilisera ici \u00e0 la distance euclidienne. </p> <p>Rappel</p> <p>Soient deux points \\(A(x_1,x_2)\\) et \\(B(x^\u2032_1,x^\u2032_2)\\) du plan, la distance \\(d(A,B)\\) est:</p> <p>\\(d(A,B)=\\sqrt{(x_1\u2212x^\u2032_1)^2+(x_2\u2212x^\u2032_2)^2}\\)</p> <p>Dans l\u2019impl\u00e9mentation en python ci-apr\u00e8s, les coordonn\u00e9es sont transmises \u00e0 la fonction <code>dist</code> dans un tableau. </p> <p>Remarque</p> <p>On peut g\u00e9n\u00e9raliser la d\u00e9finition de la distance \\(d(A,B)\\) dans le plan \u00e0 un espace de dimension \\(n\\). Soient par exemple \\(A(x_1,x_2,\\cdots,x_n)\\) et \\(B(x^{'}_1,x^{'}_2,\\cdots ,x^{'}_n)\\), on a alors:</p> <p>\\(d(A,B)=\\sqrt{(x_1\u2212x^{'}_1)^2+(x_2\u2212x^{'}_2)^2+\\cdots +(x_n\u2212x^{'}_n)^2}\\)</p> <pre><code>import math\n\n\ndef dist(coordA, coordB):\n\"\"\"\n    Retourne un flottant positif correspondant \u00e0 la distance entre A et B;\n    coordA, coordB : tableaux de flottants correspondant aux coordonn\u00e9es de ces points\n    \"\"\"\n    s = 0.0\n    for i in range(len(coordA)):\n        s += (coordA[i] - coordB[i]) ** 2\n    return math.sqrt(s)\n</code></pre>"},{"location":"NSI1/S8/S8C6.html#application","title":"Application","text":"<p>\u00c0 faire</p> <p>Calculer la distance entre les deux iris suivantes:</p> <ul> <li>iris A: petal_length = 1.5 et petal_width = 0.2</li> <li>iris B: petal_length = 4.7 et petal_width = 1.4</li> </ul>"},{"location":"NSI1/S8/S8C6.html#recherche-des-k-plus-proches-voisins","title":"Recherche des k plus proches voisins","text":"<p>On dispose d\u2019une iris dont on connait les caract\u00e9ristiques: <code>petal.length = 2.5</code> et <code>petal.width = 0.75</code>. Il s\u2019agit de rechercher d\u2019abord ses plus proches voisins. On peut, dans un premier temps, essayer de situer graphiquement cette iris.</p> <pre><code>figure, axes = plt.subplots(figsize=(11, 11))\naxes.set_ylim(-1, 3)\n\naxes.scatter([p['petal.length'] for p in tabiris if p['variety'] == 'Setosa'], \\\n             [p['petal.width'] for p in tabiris if p['variety'] == 'Setosa'], color='g', label='setosa')\naxes.scatter([p['petal.length'] for p in tabiris if p['variety'] == 'Virginica'], \\\n             [p['petal.width'] for p in tabiris if p['variety'] == 'Virginica'], color='r', label='virginica')\naxes.scatter([p['petal.length'] for p in tabiris if p['variety'] == 'Versicolor'], \\\n             [p['petal.width'] for p in tabiris if p['variety'] == 'Versicolor'], color='b', label='versicolor')\naxes.scatter([2.5], [0.75], color='black', label='Inconnu')\ncercle = plt.Circle((5, 12.5), 4.1,fill=False, edgecolor='gray')\naxes.set_aspect(1)\naxes.add_artist(cercle)\naxes.set_title('Les iris de Fisher')\naxes.set_xlabel('petal.length')\naxes.set_ylabel('petal.width')\naxes.legend(loc='upper left')\naxes.grid()\n</code></pre> <p></p> <p>Il est difficile de donner une r\u00e9ponse! Pour se prononcer, on va rechercher la cat\u00e9gorie des \\(k=5\\) plus proches voisins de notre iris inconnue.</p> <p>\u00c0 faire</p> <p>Expliquer ce que r\u00e9alise la boucle <code>for</code> de la fonction <code>knn(data, X, k)</code> qui prend en argument un tableau de donn\u00e9es <code>data</code>, un tableau de coordonn\u00e9es <code>X</code> de notre iris inconnue et un entier <code>k</code>.</p> <p>Expliquer les lignes:</p> <pre><code>tdist.sort(key=plusproche)\nreturn tdist[:k]\n</code></pre> <pre><code>def knn(data, X, k):\n\"\"\"\n    Renvoie un tableau contenant les \u00e9l\u00e9ments du jeu de donn\u00e9es data associ\u00e9s avec leur distance avec X. \n    Ce tableau ne contiendra que les k premiers \u00e9l\u00e9ments plus proches de X.\n    data: tableau de dictionnaires contenant les caract\u00e9ristiques des donn\u00e9es;\n    X: tableau de flottants, correspondant aux coordonn\u00e9es de l'\u00e9l\u00e9ment inconnu X dont \n    on cherche la cat\u00e9gorie.\n    k: entier positif (correspond au nombre de voisins \u00e0 consid\u00e9rer)\n    \"\"\"\n\n    tdist = [None] * len(data)#cr\u00e9ation d'un tableau qui stockera les caract\u00e9ristiques des iris ainsi\n    #que leur distance avec X, dans un dictionnaire.\n    j = 0#un compteur\n    for iris in data:\n        c_iris = [iris['petal.length'], iris['petal.width']]\n        tdist[j] = {'petal.length': iris['petal.length'],\n                   'petal.width': iris['petal.width'],\n                   'variety': iris['variety'],\n                   'dist_X': dist(c_iris, X)}\n        j = j + 1\n    #fonction qui retourne la valeur de la cl\u00e9 'dist_X' d'un dictionnaire\n    def plusproche(x):\n        return x['dist_X']\n\n    tdist.sort(key=plusproche)\n    return tdist[:k]\n</code></pre>"},{"location":"NSI1/S8/S8C6.html#prediction-de-la-categorie","title":"Pr\u00e9diction de la categorie","text":"<p>Il s\u2019agit maintenant de d\u00e9terminer la cat\u00e9gorie d\u2019une iris en utilisant les fonctions d\u00e9j\u00e0 \u00e9crites.</p> <pre><code>def categorie(data, X, k):\n\"\"\"\n    \"\"\"\n    t = knn(data, X, k)\n    return [iris['variety'] for iris in t]\n</code></pre> <pre><code>categorie(tabiris, [2.5, 0.755], 5)\n</code></pre> <pre><code>['Versicolor', 'Setosa', 'Setosa', 'Versicolor', 'Versicolor']\n</code></pre> <p>L\u2019iris inconnue du paragraphe pr\u00e9c\u00e9dent est probablement du type <code>Versicolor</code>.</p>"},{"location":"NSI1/S8/pr3.html","title":"Mini projet 1","text":"<p>Dans ce projet vous allez cr\u00e9er un programme permettant de jouer au jeu du pendu.</p> <p>Voici une vid\u00e9o qui va vous permettre de comprendre ce qui est attendu :</p> <p>https://www.youtube.com/watch?v=99bOICGsEME</p> <p>Vous avez \u00e0 votre disposition :</p> <ul> <li> <p>un fichier texte contenant une liste de mot (contient un peu plus de 800 mots), vous pouvez le t\u00e9l\u00e9charger ici</p> </li> <li> <p>une fonction Python vous permettant de dessiner le pendu (voir ci-dessous)</p> </li> </ul> <pre><code>def dessinPendu(nb):\n    tab=[\n\"\"\"\n       +-------+\n       |\n       |\n       |\n       |\n       |\n    ==============\n    \"\"\",\n\"\"\"\n       +-------+\n       |       |\n       |       O\n       |\n       |\n       |\n    ==============\n    \"\"\"\n        ,\n\"\"\"\n       +-------+\n       |       |\n       |       O\n       |       |\n       |\n       |\n    ==============\n    \"\"\",\n\"\"\"\n       +-------+\n       |       |\n       |       O\n       |      -|\n       |\n       |\n    ==============\n    \"\"\",\n\"\"\"\n       +-------+\n       |       |\n       |       O\n       |      -|-\n       |\n       |\n    ==============\n    \"\"\",\n\"\"\"\n       +-------+\n       |       |\n       |       O\n       |      -|-\n       |      |\n       |\n    ==============\n    \"\"\",\n\"\"\"\n       +-------+\n       |       |\n       |       O\n       |      -|-\n       |      | |\n       |\n    ==============\n    \"\"\"\n    ]\n    return tab[nb]\n</code></pre> <p>Pour information les \"triples guillemets\" \"\"\" permettent de d\u00e9limiter une cha\u00eene de caract\u00e8res situ\u00e9e sur plusieurs lignes (cha\u00eene de caract\u00e8res multi-lignes).</p> <p>Je vous laisse le soin d'\u00e9tudier cette fonction dessinPendu afin de comprendre par vous m\u00eame son principe de fonctionnement.</p> <p>S'il vous manque des \u00e9l\u00e9ments, n'h\u00e9sitez pas \u00e0 faire des recherches sur le web, notamment dans la documentation Python.</p>"},{"location":"NSITerm/ALGO/C10A1.html","title":"Algorithmes gloutons","text":"<p>D\u00e9finition</p> <p>Ce sont des algorithmes dans lesquels l'objectif est de trouver une solution optimale en faisant des choix locaux jamais remis en cause.  </p> <p>Au cours de la construction de la solution, l\u2019algorithme r\u00e9sout une partie du probl\u00e8me puis se focalise ensuite sur le sous-probl\u00e8me restant \u00e0 r\u00e9soudre.</p>"},{"location":"NSITerm/ALGO/C10A1.html#exemple-1-rendu-de-monnaie-1ere-nsi","title":"Exemple 1: rendu de monnaie (1\u00e8re NSI)","text":""},{"location":"NSITerm/ALGO/C10A1.html#le-probleme","title":"Le probl\u00e8me","text":"<p>Supposons un commer\u00e7ant devant rendre de la monnaie \u00e0 l'un de ses clients. Il souhaite le faire en utilisant le moins possible de pi\u00e8ces/billets. on suppose qu'il dispose d'une r\u00e9serve de pi\u00e8ces/billets ... suffisamment importante.</p>"},{"location":"NSITerm/ALGO/C10A1.html#formalisation","title":"Formalisation","text":"<p>Consid\u00e9rons un ensemble de \\(n\\) pi\u00e8ces de monnaie de valeurs \\(v_1 &lt; v_2 &lt; \\cdots &lt; v_n\\) ,  avec \\(v_1 = 1\\). On suppose que ce syst\u00e8me est canonique c'est-\u00e0-dire qu'un algorithme glouton va pouvoir donner une solution optimale au probl\u00e8me du rendu de monnaie (pour les courageux, lire cette r\u00e9f\u00e9rence ).  </p> <p>On note le syst\u00e8me de pi\u00e8ces \\(S_n = \\{v_1, \\cdots, v_{n\u22121}\\}\\). D\u00e9signons par \\(s\\) une somme \u00e0 rendre avec le minimum de pi\u00e8ces de \\(S_n\\). L\u2019algorithme glouton s\u00e9lectionne la plus grande valeur \\(v_n\\) et la compare \u00e0 \\(s\\).  </p> <ul> <li>Si \\(s &lt; v_n\\), la pi\u00e8ce de valeur \\(v_n\\) ne peut pas \u00eatre utilis\u00e9e. On reprend l\u2019algorithme avec le syst\u00e8me de pi\u00e8ces \\(S_{n\u22121}\\) ;</li> <li>Si \\(s \u2a7e v_n\\), la pi\u00e8ce \\(v_n\\) peut \u00eatre utilis\u00e9e une premi\u00e8re fois. Ce qui fait une premi\u00e8re pi\u00e8ce \u00e0 comptabiliser, de valeur \\(v_n\\), la somme restant \u00e0 rendre \u00e9tant alors \\(s \u2212 v_n\\) .</li> </ul> <p>L\u2019algorithme continue avec la m\u00eame syst\u00e8me de pi\u00e8ces \\(S_n\\) et cette nouvelle somme \u00e0 rendre \\(s \u2212 v_n\\). L\u2019algorithme est ainsi r\u00e9p\u00e9t\u00e9 jusqu\u2019\u00e0 obtenir une somme \u00e0 rendre nulle.  </p> <p>\u00c0 faire</p> <p>Proposer un algorithme it\u00e9ratif r\u00e9pondant au probl\u00e8me pos\u00e9. Donner une impl\u00e9mentation en python.</p> <p>En guise d'entra\u00eenement, on pourra aussi r\u00e9fl\u00e9chir \u00e0 une version r\u00e9cursive de ce probl\u00e8me.  </p> \u00c0 faire <p>Le syst\u00e8me mon\u00e9taire utilis\u00e9 est de la forme <code>valeurs = [100, 50, 20, 10, 5, 2, 1]</code>. On suppose que les pi\u00e8ces et les billets sont disponibles sans limitation. On cherche \u00e0 donner la liste des valeurs \u00e0 rendre pour une somme donn\u00e9e en argument. Compl\u00e9ter le code Python ci-dessous de la fonction <code>rendu_glouton</code> qui impl\u00e9mente cet algorithme et renvoie la liste des pi\u00e8ces \u00e0 rendre.  </p> <pre><code>valeurs = [100, 50, 20, 10, 5, 2, 1]\ndef rendu_glouton(a_rendre, rang):\nif a_rendre == 0:\n    return ...\nv = valeurs[rang]\nif v &lt;= ...:\n    return ... + rendu_glouton(a_rendre - v, rang)\nelse:\n    return rendu_glouton(a_rendre, ...)\n</code></pre>"},{"location":"NSITerm/ALGO/C10A1.html#exemple-2-coloration-de-graphe","title":"Exemple 2: coloration de graphe","text":""},{"location":"NSITerm/ALGO/C10A1.html#le-probleme_1","title":"Le probl\u00e8me","text":"<p>Est possible de colorier la carte de France en respectant les contraintes suivantes ?  </p> <ul> <li>utiliser un minimum de couleurs ;</li> <li>faire en sorte que deux r\u00e9gions limitrophes (ayant une fronti\u00e8re commune) soient colori\u00e9es de deux couleurs diff\u00e9rentes.</li> </ul> <p>La figure ci-contre utilise 12 couleurs, une par r\u00e9gion ; on peut faire mieux. Il y a des solutions optimales \u00e0 4 couleurs, d'autres qui s'en approchent.</p>"},{"location":"NSITerm/ALGO/C10A1.html#formalisation_1","title":"Formalisation","text":"<p>La France sera repr\u00e9sent\u00e9 par un graphe non orient\u00e9 dont les sommets seront les noms de r\u00e9gions et les ar\u00eates correspondront au caract\u00e8re limitrophe ou non de deux r\u00e9gions.  </p> \u00c9tiquette Identifiant R\u00e9gion 0 BRE Bretagne 1 PLO Pays de Loire 2 NAQ Nouvelle Aquitaine 3 OCC Occitanie 4 PAC Provence-Alpes-C\u00f4te d'Azur 5 ARA Auvergne-Rh\u00f4ne-Alpes 6 BFC Bourgogne Franche-Comt\u00e9 7 CVL Centre-Val de Loire 8 IDF \u00cele de France 9 GES Grand-Est 10 HDF Hauts-de-France 11 NOR Normandie"},{"location":"NSITerm/ALGO/C10A1.html#travail-a-realiser","title":"Travail \u00e0 r\u00e9aliser","text":""},{"location":"NSITerm/ALGO/C10A1.html#partie-1","title":"Partie 1","text":"<p>1) Repr\u00e9sentez sur votre copie le graphe correspondant \u00e0 la carte \"R\u00e9gions de France\" en utilisant les identifiants pour les sommets.  </p> <p>2) Une des possibilit\u00e9s pour repr\u00e9senter un graphe <code>G</code> en machine est d'utiliser ce qu'on appelle une matrice d'adjacence. Dans ce type de repr\u00e9sentation, les sommets sont ordonn\u00e9s et consid\u00e9r\u00e9s comme \u00e9tiquet\u00e9s par des entiers allant de \\(0\\) \u00e0 \\(n-1\\) , o\u00f9 est \\(n\\) l'ordre du graphe. Quel est l'ordre du graphe \u00ab R\u00e9gions de France \u00bb ?</p> <p>3) \u00c9crire en python une fonction <code>voisins</code> telle que <code>voisins(M, k)</code> renvoie une liste contenant les voisins du sommet <code>k</code> dans le graphe mod\u00e9lis\u00e9 par la matrice d'adjacence <code>M</code>.</p> <p>4) On peut \u00e9galement mod\u00e9liser, en Python, un graphe gr\u00e2ce \u00e0 un dictionnaire contenant pour chaque cl\u00e9 (un sommet) la valeur associ\u00e9e : une liste de ses voisins, sans se soucier de l'ordre. En consid\u00e9rant le graphe repr\u00e9sent\u00e9 ci-dessous, donner un dictionnaire Python mod\u00e9lisant ce graphe avec un dictionnaire de listes de voisins.</p> <p></p> <p>5) \u00c9crire en python une fonction <code>voisins</code> telle que <code>voisins(G, k)</code> renvoie une liste contenant les voisins du sommet <code>k</code> dans le graphe qui est mod\u00e9lis\u00e9 par le dictionnaire <code>G</code> de listes de voisins.</p>"},{"location":"NSITerm/ALGO/C10A1.html#partie-2","title":"Partie 2","text":"<p>Une premi\u00e8re approche pour colorer le graphe est de prendre ses sommets les uns apr\u00e8s les autres afin de leur affecter une couleur, tout en veillant \u00e0 ce que deux sommets adjacents n'aient jamais la m\u00eame couleur : c'est l'algorithme de coloration s\u00e9quentielle. Nous mod\u00e9liserons le graphe avec un dictionnaire Python en listes de voisins. On propose le code ci-dessous qui utilise la fonction voisins programm\u00e9e \u00e0 la question pr\u00e9c\u00e9dente :</p> <pre><code>def coloration(G) :\n\"\"\"Renvoie une coloration du graphe G\"\"\"\n    # version s\u00e9quentielle, limit\u00e9e \u00e0 6 couleurs\n\n    couleur = ['Rouge', 'Bleu', 'Vert', 'Jaune', 'Noir', 'Blanc']\n    coloration_sommets = {s_i: None for s_i in G}\n    for s_i in G:\n        couleurs_voisins_s_i = [coloration_sommets[s_j] for s_j in voisins(G, s_i)]\n        k = 0\n        while couleur[k] in couleurs_voisins_s_i:\n            k = k + 1\n        coloration_sommets[s_i] = couleur[k]\n    return coloration_sommets\n</code></pre> <p>1) \u00c0 Quelle famille d'algorithme appartient le code ci-dessus ?</p> <p>2) Donner les couleurs que va attribuer ce code \u00e0 chaque sommet si l'on consid\u00e8re le graphe ci-dessus. On consid\u00e8re que la boucle principale va envisager les sommets dans l'ordre lexicographique : tout d'abord A, puis B, puis C ...</p> <pre><code>\n</code></pre>"},{"location":"NSITerm/ALGO/C10A2.html","title":"Alignement de s\u00e9quences   (D'apr\u00e8s le cours de Fr\u00e9d\u00e9ric Juinier)","text":"<p>Ce cours est mis \u00e0 disposition selon les termes de la Licence Creative Commons Attribution - Pas d'Utilisation Commerciale - Partage dans les M\u00eames Conditions 4.0 International.</p> <p></p> <p>Sources et cr\u00e9dits pour ce cours</p> <p>Pour pr\u00e9parer ce cours, j'ai utilis\u00e9 :</p> <ul> <li>le manuel NSI chez Ellipses de Balabonski, Conchon, Filli\u00e2tre, Nguyen dont est tir\u00e9 l'exemple du rendu de monnaie.</li> <li>le livre part 3 : greedy algorithms and dynamic programming de Tim Roughgarden dont est tir\u00e9e la comparaison entre les m\u00e9thodes de conception d'algorithme programmation dynamique et Diviser Pour R\u00e9gner.</li> <li>le cours de mon coll\u00e8gue Pierre Duclosson pour l'exemple du triangle de nombres</li> </ul>"},{"location":"NSITerm/ALGO/C10A2.html#un-probleme-doptimisation","title":"Un probl\u00e8me d'optimisation","text":"<p>Point de cours 7 :  probl\u00e8me de l'alignement de s\u00e9quences</p> <p>Les progr\u00e8s dans la connaissance du code g\u00e9n\u00e9tique sont l'une des avanc\u00e9es majeures de la biologie au vingti\u00e8me si\u00e8cle. On sait qu'un brin d'ADN est constitu\u00e9 de s\u00e9quences de nucl\u00e9otides  choisis parmi l'Ad\u00e9nine (cod\u00e9e A), la Thymine(cod\u00e9e T), la Cytosine (cod\u00e9e C) et la Guanine (cod\u00e9e G). On peut donc mod\u00e9liser une s\u00e9quence g\u00e9n\u00e9tique d'ADN par une cha\u00eene de caract\u00e8res pris dans l'alphabet {A, C, G, T}. </p> <p>Rapidement, l'informatique et la biologie se sont rencontr\u00e9es pour constituer la  bio-informatique. Le probl\u00e8me de l'alignement de s\u00e9quences est fondamental en bio-informatique, il consiste \u00e0 determiner la proximit\u00e9 de deux s\u00e9quences g\u00e9n\u00e9tiques. Les motivations sont nombreuses :</p> <ul> <li>Si on peut rapprocher une s\u00e9quence g\u00e9n\u00e9tique d'un g\u00e9nome complexe comme celui de l'homme d'une s\u00e9quence d'un g\u00e9nome mieux connu, comme celui de la souris, on pourra faire des conjectures sur le r\u00f4le jou\u00e9 par cette s\u00e9quence.</li> <li>Si on peut rapprocher des s\u00e9quences  g\u00e9n\u00e9tiques extraites  de deux esp\u00e8ces A et B, on peut conjecturer  qu'elles descendent d'un anc\u00eatre commun et reconstituer des arbres phylog\u00e9n\u00e9tiques.</li> <li>etc ...</li> </ul> <p>Pour mesurer la proximit\u00e9 entre deux s\u00e9quences g\u00e9n\u00e9tiques, on les mod\u00e9lise d'abord comme des cha\u00eenes de caract\u00e8res pris dans un alphabet. Ensuite on d\u00e9finit pr\u00e9cis\u00e9ment ce qu'est un alignement possible entre deux s\u00e9quences. Puis on associe \u00e0 chaque alignement un score. Enfin on d\u00e9termine sur l'ensemble des alignements possibles le score maximal et un alignement le r\u00e9alisant. L'algorithme propos\u00e9 par Needleman et Wunsch en 1970, d\u00e9termine un alignement global optimal de deux cha\u00eenes de caract\u00e8res et constitue   le premier exemple historique d'application de la programmation dynamique en bio-informatique. L'objet de cette partie est la pr\u00e9sentation d'une version simplifi\u00e9e de cet algorithme.</p> <p>D\u00e9finition de l'alignement de s\u00e9quences</p> <p>\u00c9tant donn\u00e9 deux s\u00e9quences g\u00e9n\u00e9tiques repr\u00e9sent\u00e9es par les cha\u00eenes de caract\u00e8res, un alignement de ces deux s\u00e9quences est une fa\u00e7on de faire correspondre les caract\u00e8res de la premi\u00e8re avec ceux de la seconde en ins\u00e9rant \u00e9ventuellement des trous. Un alignement doit respecter deux contraintes :</p> <ul> <li>on doit utiliser tous les caract\u00e8res de chaque s\u00e9quence et dans le m\u00eame ordre</li> <li>on ne peut pas avoir de correspondance entre deux trous.</li> </ul> <p>Par la suite, on note '_' un trou et on parle de s\u00e9quence \u00e9tendue pour d\u00e9signer la s\u00e9quence o\u00f9 on a ins\u00e9r\u00e9 (ou pas) des trous.</p> <p>Exemple 1 : des alignements</p> <p>On prend pour s\u00e9quence 1 : 'ACCCGT'  et pour s\u00e9quence 2 :  'ACCGA'. </p> <ul> <li> <p>un alignement possible  avec un trou :</p> S\u00e9quence 1 \u00e9tendue A C C C G T S\u00e9quence 2 \u00e9tendue A C C _ G A </li> <li> <p>un alignement impossible  car l'ordre des caract\u00e8res a \u00e9t\u00e9 modifi\u00e9 pour la s\u00e9quence 2 :</p> S\u00e9quence 1 \u00e9tendue A C C C G T S\u00e9quence 2 \u00e9tendue A C G _ C A </li> <li> <p>un alignement impossible  car deux trous correspondent :</p> S\u00e9quence 1 \u00e9tendue A C C _ G G T S\u00e9quence 2 \u00e9tendue A C C _ _ G A </li> <li> <p>un autre alignement possible  avec un trou :</p> S\u00e9quence 1 \u00e9tendue A C C C G T S\u00e9quence 2 \u00e9tendue A C _ C G A </li> <li> <p>un alignement possible  avec trois trous :</p> S\u00e9quence 1 \u00e9tendue A C C C G _ T S\u00e9quence 2 \u00e9tendue A C _ C G A _ </li> </ul> <p>Score de Needleman-Wunsch</p> <p>Une fois qu'on a d\u00e9fini un alignement, on lui associe un score. Nous adopterons les m\u00eames conventions que dans le manuel NSI de Balabonski, Conchon, Filli\u00e2tre, Nguyen, plus simples que dans l'algorithme de Needleman-Wunsch :</p> <ul> <li>l'alignement de deux caract\u00e8res identiques donne un point</li> <li>l'alignement de deux caract\u00e8res diff\u00e9rents, ce qui inclut l'alignement avec un trou '_', enl\u00e8ve un point</li> </ul> <p>Le score maximal parmi tous les alignements possibles de deux s\u00e9quences est leur score de Needleman-Wunsch.  Le nombre d'alignements possibles cro\u00eet exponentiellement avec les longueurs des s\u00e9quences donc une  recherche exhaustive par force-brute n'est applicable que pour des entr\u00e9es de petite taille. Comme pour les probl\u00e8mes du rendu de monnaie et de la somme maximale dans un triangle,  on va chercher une r\u00e9solution  plus efficace avec une m\u00e9thode de  programmation dynamique.</p> <p>Exemple 2 : calculs de scores</p> <p>On reprend  l'exemple 1 avec pour s\u00e9quence 1 : 'ACCCGT'  et pour s\u00e9quence 2 :  'ACCGA'.</p> <ul> <li> <p>un premier alignement avec son calcul de score :</p> S\u00e9quence 1 \u00e9tendue A C C C G T S\u00e9quence 2 \u00e9tendue A C C _ G A Points 1 1 1 \\(-1\\) 1 \\(-1\\) <p>Le score de cet alignement est de 2.</p> </li> <li> <p>un autre alignement  avec son calcul de score :</p> S\u00e9quence 1 \u00e9tendue A C C C G T S\u00e9quence 2 \u00e9tendue A C _ C G A Points 1 1 \\(-1\\) 1 1 \\(-1\\) <p>Le score de cet alignement est aussi de 2.</p> </li> <li> <p>un alignement possible  avec deux trous :</p> S\u00e9quence 1 \u00e9tendue A C C C G _ T S\u00e9quence 2 \u00e9tendue A C _ C G A _ Points 1 1 \\(-1\\) 1 1 \\(-1\\) \\(-1\\) <p>Le score de cet alignement est de 1.</p> </li> </ul> <p>Le score maximal parmi tous les alignements possibles de 'ACCCGT' et 'ACCGA' est \\(4-2=2\\) car leur plus longue sous-s\u00e9quence commune est 'ACCG' de longueur \\(4\\), donc un alignement rapporte au plus 4 points et dans ce cas deux caract\u00e8res de la s\u00e9quence la plus longue 'ACCCGT' correspondent \u00e0 un trou avec une p\u00e9nalit\u00e9 de \\(2\\) points.</p> <p>Exercice 9</p> <p>On consid\u00e8re les s\u00e9quences 'AGTACG' et 'ACATAG'.  </p> <p>Question 1</p> \u00c9nonc\u00e9Solution <p>Calculer le score d'un alignement de 'AGTACG' et 'ACATAG' sans trous ins\u00e9r\u00e9s.</p> S\u00e9quence 1 \u00e9tendue A G T A C G S\u00e9quence 2 \u00e9tendue A C A T A G Points 1 \\(-1\\) \\(-1\\) \\(-1\\) \\(-1\\) 1 <p>Le score de cet alignement est de \\(2-4=-2\\).</p> <p>Question 2</p> \u00c9nonc\u00e9Solution <p>On consid\u00e8re l'alignement ci-dessous :</p> S\u00e9quence 1 \u00e9tendue A G T _ A C G S\u00e9quence 2 \u00e9tendue A C A T A _ G <p>Calculer le score de cet alignement.</p> S\u00e9quence 1 \u00e9tendue A G T _ A C G S\u00e9quence 2 \u00e9tendue A C A T A _ G Points 1 \\(-1\\) \\(-1\\) \\(-1\\) 1 \\(-1\\) 1 <p>Le score de cet alignement est de \\(3-4=-1\\).</p> <p>Question 3</p> \u00c9nonc\u00e9Solution <p>Proposer un alignement avec un trou ins\u00e9r\u00e9 dans chaque s\u00e9quence dont le score est sup\u00e9rieur au pr\u00e9c\u00e9dent.</p> S\u00e9quence 1 \u00e9tendue A G _ T A C G S\u00e9quence 2 \u00e9tendue A C A T A _ G Points 1 \\(-1\\) \\(-1\\) 1 1 \\(-1\\) 1 <p>Le score de cet alignement est de \\(4-3=1\\).</p> <p>Question 4</p> \u00c9nonc\u00e9Solution <p>Quel est le score de Needleman-Wunsch des s\u00e9quences 'AGTACG' et 'ACATAG' ?  Justifier.</p> <ul> <li>Le seul alignement de \\(6\\) caract\u00e8res est celui sans trous dont le score, calcul\u00e9 en question 1, est de \\(-2\\).</li> <li>Un alignement de \\(7\\) caract\u00e8res est obtenu en ins\u00e9rant un trou dans chaque s\u00e9quence. Le nombre maximum de caract\u00e8res correspondants est celui de la  plus longue sous-s\u00e9quence commune \u00e0 'AGTACG' et 'ACATAG', qui est 'ATAG'. Le score d'un tel alignement est de \\(4-3=1\\) car on a \\(4\\) caract\u00e8res correspondants et \\(3\\) caract\u00e8res diff\u00e9rents.</li> <li>Un alignement de \\(n \\geqslant 8\\) caract\u00e8res ou plus ne peut faire mieux qu'un score de \\(4 - (n - 4) = 8  - n \\leqslant 0\\) car le nombre maximum de  caract\u00e8res correspondants est \\(4\\), celui de la plus longue sous-s\u00e9quence commune.</li> </ul> <p>Le score de Needleman-Wunsch des s\u00e9quences 'AGTACG' et 'ACATAG'  est donc 1.</p>"},{"location":"NSITerm/ALGO/C10A2.html#resolution-du-probleme-de-lalignement-de-sequences-par-programmation-dynamique","title":"R\u00e9solution du probl\u00e8me de l'alignement de s\u00e9quences par programmation dynamique","text":"<p>Point de cours 8 : sous-structure optimale et solution r\u00e9cursive par programmation dynamique</p> <p>On consid\u00e8re la s\u00e9quence 1  'GTTAACC' et la s\u00e9quence 2   'CGTAAC'.</p> <p>Supposons qu'on dispose d'un alignement de ces deux s\u00e9quences dont le score est maximal et examinons la derni\u00e8re colonne de  cet alignement.  Trois cas sont possibles :</p> <ul> <li> <p>Premier cas :   Les derniers caract\u00e8res 'C' et 'C' des deux s\u00e9quences sont align\u00e9s, on marque un point et on doit aligner ensuite les pr\u00e9fixes  'GTTAAC' et 'CGTAA' des deux s\u00e9quences.</p> S\u00e9quence Premi\u00e8res colonnes Derni\u00e8re colonne S\u00e9quence 1 \u00e9tendue 'GTTAAC' + trous 'C' S\u00e9quence 2 \u00e9tendue 'CGTAA'  + trous 'C' </li> <li> <p>Deuxi\u00e8me cas :  Le 'C' final de la s\u00e9quence 1 est align\u00e9 avec un trou '_', on perd un point et on doit aligner le pr\u00e9fixe 'GTTAAC' de la s\u00e9quence 1 avec la s\u00e9quence 2 compl\u00e8te 'CGTAAC'.</p> S\u00e9quence Premi\u00e8res colonnes Derni\u00e8re colonne S\u00e9quence 1 \u00e9tendue 'GTTAAC' + trous 'C' S\u00e9quence 2 \u00e9tendue 'CGTAAC'  + trous '_' </li> <li> <p>Troisi\u00e8me cas :  Le 'C' final de la s\u00e9quence 2 est align\u00e9 avec un trou '_', on perd un point et on doit aligner la s\u00e9quence 1 compl\u00e8te 'GTTAACC' avec le pr\u00e9fixe 'CGTAA' de la s\u00e9quence 2.</p> S\u00e9quence Premi\u00e8res colonnes Derni\u00e8re colonne S\u00e9quence 1 \u00e9tendue 'GTTAACC' + trous '_' S\u00e9quence 2 \u00e9tendue 'CGTAA'  + trous 'C' </li> </ul> <p>Dans chaque cas on se ram\u00e8ne au calcul du score d'un alignement entre deux s\u00e9quences qui sont des pr\u00e9fixes des s\u00e9quences initiales. On peut d\u00e9montrer par l'absurde comme pour le probl\u00e8me de la somme maximale dans un triangle que ce score est forc\u00e9ment maximal pour ce sous-probl\u00e8me, sinon on pourrait obtenir un meilleur score pour l'alignement global des s\u00e9quences. De plus dans chaque cas, au moins une des longueurs des deux s\u00e9quences du sous-probl\u00e8me, est inf\u00e9rieure \u00e0 la longueur de la s\u00e9quence dont elle est extraite.</p> <p>Ainsi une solution au probl\u00e8me de l'alignement de s\u00e9quences peut s'obtenir \u00e0 partir de solutions \u00e0 des sous-probl\u00e8mes similaires et plus petits.  Cette sous-structure optimale est caract\u00e9ristique de la possibilit\u00e9 d'une r\u00e9solution par programmation dynamique (\u00c9tape 1).</p> <p>Si on note S le score maximal pour l'alignement des deux s\u00e9quences, S1 celui du sous-probl\u00e8me du premier cas, S2 celui du sous-probl\u00e8me du second cas et S3 celui du sous-probl\u00e8me du troisi\u00e8me cas, alors on a  la relation de r\u00e9currence (\u00c9tape 2) : </p> <ul> <li>S = max(1 + S1, \\(-1\\) + S2, \\(-1\\) + S3)   si dans le premier cas, les caract\u00e8res se correspondent dans la derni\u00e8re colonne</li> <li>ou S = max(\\(-1\\) + S1, \\(-1\\) + S2, \\(-1\\) + S3)   si dans le premier cas, les caract\u00e8res  ne se correspondent pas dans la derni\u00e8re colonne</li> </ul> <p>En appelant r\u00e9cursivement cette relation de r\u00e9currence pour le probl\u00e8me global, on r\u00e9sout des sous-probl\u00e8mes plus petits et on converge vers un des cas de base o\u00f9 l'une au moins des deux s\u00e9quences est vide.</p> <p>Formalisation</p> <p>Soit <code>seq1</code> une s\u00e9quence de longueur <code>n</code> et <code>seq2</code> une s\u00e9quence de longueur <code>m</code>.</p> <p>Pour tous les indices entiers \\(i \\in [1;n]\\) et \\(j \\in [1;m]\\), on note \\(s(i, j)\\) le score maximal pour un alignement entre le pr\u00e9fixe <code>seq1[:i]</code> de <code>seq1</code> de longueur \\(i\\) et le pr\u00e9fixe <code>seq2[:j]</code> de <code>seq2</code> de longueur \\(j\\). Le i-ieme caract\u00e8re de <code>seq1</code> est <code>seq1[i-1]</code> (car les caract\u00e8res sont index\u00e9s \u00e0 partir de 0) et  le j-ieme caract\u00e8re de <code>seq2</code> est <code>seq2[j-1]</code>. La  relation de r\u00e9currence \u00e9tablie pr\u00e9c\u00e9demment s'\u00e9crit alors :</p> <ul> <li>\\(s(i, j) = max(1 + s(i-1, j-1), -1 + s(i,j - 1), -1 + s(i - 1,j))\\) si  <code>seq1[i-1]== seq2[i-1]</code> </li> <li>\\(s(i, j) = max(-1 + s(i-1, j-1), -1 + s(i,j - 1), -1 + s(i - 1,j))\\) sinon</li> </ul> <p>Les cas de base sont ceux o\u00f9 l'un des pr\u00e9fixes  est vide, avec $i = 0 $ ou \\(j = 0\\) :</p> <ul> <li>si \\(i = 0\\) et \\(j = 0\\) alors les deux pr\u00e9fixes  sont vides et \\(s(0, 0) = 0\\)</li> <li>sinon si \\(i = 0\\) et $ j \\in [1; n]$ alors \\(s(0, j) = -j\\) car le pr\u00e9fixe <code>seq2[:j]</code>  de longueur \\(j\\) doit \u00eatre align\u00e9 avec  <code>seq1[:0]</code> qui est vide, donc  les \\(j\\) caract\u00e8res de <code>seq2[:j]</code> sont tous align\u00e9s avec des trous ce qui donne un score de \\(-j\\)</li> <li>sinon si \\(i  \\in [1; n]\\) et $ j = 0$ alors \\(s(i, 0) = -i\\) car le pr\u00e9fixe <code>seq1[:i]</code>  de longueur \\(i\\) doit \u00eatre align\u00e9 avec  <code>seq2[:0]</code> qui est vide, donc  les \\(i\\) caract\u00e8res de <code>seq1[:i]</code> sont tous align\u00e9s avec des trous ce qui donne un score de \\(-i\\)</li> </ul> <p>Exercice 10</p> <p>\ud83d\udcbb Saisir ses r\u00e9ponses sur Capytale</p> <p>Question 1</p> \u00c9nonc\u00e9Solution <ol> <li>Compl\u00e9ter  le code de la fonction <code>meilleur_score_rec</code> pour impl\u00e9menter l'algorithme r\u00e9cursif de r\u00e9solution du probl\u00e8me de l'alignement de s\u00e9quences par programmation dynamique.</li> <li>Construire l'arbre d'appels r\u00e9cursifs de <code>s(2, 2)</code> o\u00f9 <code>s</code> est  la fonction auxiliaire r\u00e9cursive de calcul de score maximal pour deux s\u00e9quences de longueur 2 ?  Fort de l'exp\u00e9rience des probl\u00e8mes de <code>rendu de monnaie</code>, quelle situation retrouve-t-on ?</li> </ol> <p>### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder def meilleurpy-undscorepy-undrec(seq1, seq2):bksl-nl    \"\"\"bksl-nl    Prend en param\u00e8tres deux chaines de caract\u00e8res seq1 et seq2bksl-nl    Renvoie le meilleur score d'alignementbksl-nl    \"\"\"bksl-nl    bksl-nl    def s(i, j):bksl-nl        \"\"\"Fonction r\u00e9cursive auxiliairebksl-nl        Calcule et renvoie score[i][j]bksl-nl        \"\"\"bksl-nl        if i == 0:bksl-nl            if j == 0:bksl-nl                return ...bksl-nl            else:bksl-nl                return  ...bksl-nl        elif j == 0:bksl-nl             return ...bksl-nl        else:bksl-nl            # premier sous-probl\u00e8me : alignement des derniers caract\u00e8res des pr\u00e9fixes seq1[:i] et seq2[:j]bksl-nl            s1 = ...bksl-nl            # second sous-probl\u00e8me : le dernier caract\u00e8re de seq1[:i]  est align\u00e9 avec un troubksl-nl            s2 =  ...bksl-nl            # troisi\u00e8me sous-probl\u00e8me  : le dernier caract\u00e8re de seq1[:j]  est align\u00e9 avec un troubksl-nl            s3 =  ...bksl-nl            # formule de r\u00e9currence pour le calcul de score[i][j]bksl-nl            # sous-cas o\u00f9 les derniers caract\u00e8res sont identiques dans le premier sous-probl\u00e8mebksl-nl            if seq1[i - 1] == seq2[j - 1]:bksl-nl                return ...bksl-nl            # sous-cas o\u00f9 les derniers caract\u00e8res sont diff\u00e9rentsbksl-nl            else:bksl-nl                return  ...bksl-nl    bksl-nl    bksl-nl    n = len(seq1)bksl-nl    m = len(seq2)bksl-nl    return s(n, m)bksl-nlbksl-nldef testpy-undmeilleurpy-undscorepy-undrec():bksl-nl    assert meilleurpy-undscorepy-undrec('AGTC', 'ACTG') == 0bksl-nl    assert meilleurpy-undscorepy-undrec('GTT', 'CGTT') == 2bksl-nl    print(\"tests r\u00e9ussis\")bksl-nl    bksl-nl#testpy-undmeilleurpy-undscorepy-undrec()bksl-nl</p> <p>A</p> <p>Z</p> <ol> <li> <p>Code  :</p> <pre><code>def meilleur_score_rec(seq1, seq2):\n\"\"\"\n    Prend en param\u00e8tres deux chaines de caract\u00e8res seq1 et seq2\n    Renvoie le meilleur score d'alignement\n    \"\"\"\n\n    def s(i, j):\n\"\"\"Fonction r\u00e9cursive auxiliaire\n        Calcule et renvoie score[i][j]\n        \"\"\"\n        if i == 0:\n            if j == 0:\n                return 0\n            else:\n                return  -j\n        elif j == 0:\n            return -i\n        else:\n            # premier sous-probl\u00e8me : alignement des derniers caract\u00e8res des pr\u00e9fixes seq1[:i] et seq2[:j]\n            s1 = s(i - 1, j - 1)\n            # second sous-probl\u00e8me : le dernier caract\u00e8re de seq1[:i]  est align\u00e9 avec un trou\n            s2 =  s(i, j - 1)\n            # troisi\u00e8me sous-probl\u00e8me  : le dernier caract\u00e8re de seq1[:j]  est align\u00e9 avec un trou\n            s3 =  s(i - 1, j)\n            # formule de r\u00e9currence pour le calcul de score[i][j]\n            # sous-cas o\u00f9 les derniers caract\u00e8res sont identiques dans le premier sous-probl\u00e8me\n            if seq1[i - 1] == seq2[j - 1]:\n                return max(1 + s1, -1 + s2, -1 + s3)\n            # sous-cas o\u00f9 les derniers caract\u00e8res sont diff\u00e9rents\n            else:\n                return  max(-1 + s1, -1 + s2, -1 + s3)    \n\n    n = len(seq1)\n    m = len(seq2)\n    return s(n, m)\n\ndef test_meilleur_score_rec():\n    assert meilleur_score_rec('AGTACG', 'ACATAG') == 1\n    assert meilleur_score_rec('GTTAACC', 'CGTAAC') == 2\n    print(\"tests r\u00e9ussis\")\n</code></pre> </li> <li> <p>L'arbre d'appels r\u00e9cursifs de <code>s(2, 2)</code>  fait appara\u00eetre de nombreux calculs redondants comme pour les probl\u00e8mes de rendu de monnaie et de somme maximale dans un triangle.</p> <p></p> </li> </ol> <p>On peut estimer que le nombre d'appels r\u00e9cursifs va cro\u00eetre de fa\u00e7opn exponentielle  avec les tailles \\(n\\) et \\(m\\)  des s\u00e9quences car chaque appel engendre au moins deux nouveaux appels r\u00e9cursifs sur une profondeur \u00e9gale \u00e0 la taille maximale des deux s\u00e9quences.  Une impl\u00e9mentation na\u00efve de la solution r\u00e9cursive par programmation dynamique aura une complexit\u00e9 exponentielle, ce qui n'est pas mieux que pour une solution par force brute.</p> <p>Question 2</p> \u00c9nonc\u00e9Solution <ol> <li>Si on r\u00e9sout le probl\u00e8me d'alignement pour des s\u00e9quences de longueur \\(n\\) et \\(m\\) en calculant <code>s(n,m)</code>, quel  nombre de sous-probl\u00e8mes  <code>s(i,j)</code> faut-il r\u00e9soudre avec \\(i \\in [0;n]\\) et \\(j \\in [0;m]\\) ?</li> <li>Quelle technique utilis\u00e9e pour les probl\u00e8mes de rendu de monnaie et de somme maximale dans un triangle permet d'\u00e9viter les calculs redondants et de calculer une seule fois les solutions des sous-probl\u00e8mes ?</li> <li>Compl\u00e9ter le code ci-dessous avec cette technique.  On a choisi d'initialiser toutes les cases du tableau de m\u00e9morisation <code>score</code> avec <code>-inf</code> c'est une valeur impossible pour un  score maximal, ainsi on peut distinguer les sous-probl\u00e8mes qui n'ont pas d\u00e9j\u00e0 \u00e9t\u00e9 r\u00e9solus comme ceux o\u00f9 <code>score[i][j] == -inf</code>.</li> </ol> <p>### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder from math import infbksl-nlbksl-nldef meilleurpy-undscorepy-undrecpy-undmemo(seq1, seq2):bksl-nl    \"\"\"bksl-nl    Prend en param\u00e8tres deux chaines de caract\u00e8res seq1 et seq2bksl-nl    Renvoie le meilleur score d'alignementbksl-nl    \"\"\"bksl-nl    bksl-nl    def s(i, j):bksl-nl        \"\"\"Fonction r\u00e9cursive auxiliairebksl-nl        Calcule et renvoie score[i][j]bksl-nl        \"\"\"bksl-nl        if score[i][j] == -inf:     bksl-nl            # cas de basebksl-nl            if i == 0:bksl-nl                if j == 0:bksl-nl                    score[i][j] = ...bksl-nl                else:bksl-nl                    score[i][j] = ...bksl-nl            elif j == 0:bksl-nl                 score[i][j] = ...bksl-nl            else:bksl-nl                # premier sous-probl\u00e8me : alignement des derniers caract\u00e8res des pr\u00e9fixes seq1[:i] et seq2[:j]bksl-nl                s1 = ...bksl-nl                # second sous-probl\u00e8me : le dernier caract\u00e8re de seq1[:i]  est align\u00e9 avec un troubksl-nl                s2 =  ...bksl-nl                # troisi\u00e8me sous-probl\u00e8me  : le dernier caract\u00e8re de seq1[:j]  est align\u00e9 avec un troubksl-nl                s3 =  ...bksl-nl                # formule de r\u00e9currence pour le calcul de score[i][j]bksl-nl                # sous-cas o\u00f9 les derniers caract\u00e8res sont identiques dans le premier sous-probl\u00e8mebksl-nl                if seq1[i - 1] == seq2[j - 1]:bksl-nl                    score[i][j] = ...bksl-nl                # sous-cas o\u00f9 les derniers caract\u00e8res sont diff\u00e9rentsbksl-nl                else:bksl-nl                    score[i][j] = ...bksl-nl        return score[i][j]bksl-nl    bksl-nl    bksl-nl    n = len(seq1)bksl-nl    m = len(seq2)bksl-nl    # tableau de m\u00e9moisationbksl-nl    # score[i][j] est le meilleur score d'alignement de seq1[:i] et seq2[:j]bksl-nl    score = [[-inf for j in range(m + 1)] for i in range(n + 1)]bksl-nl    return s(n, m)bksl-nlbksl-nldef testpy-undmeilleurpy-undscorepy-undrecpy-undmemo():bksl-nl    assert meilleurpy-undscorepy-undrecpy-undmemo('AGTACG', 'ACATAG') == 1bksl-nl    assert meilleurpy-undscorepy-undrecpy-undmemo('GTTAACC', 'CGTAAC') == 2bksl-nl    assert meilleurpy-undscorepy-undrecpy-undmemo('GTAGTAAACGTTCACC', 'CGGTCAGTAAC') == -1bksl-nl    print(\"tests r\u00e9ussis\")bksl-nl    bksl-nltestpy-undmeilleurpy-undscorepy-undrecpy-undmemo()bksl-nl</p> <p>A</p> <p>Z</p> <ol> <li>Le nombre de sous-probl\u00e8mes \\(s(i,j)\\)  \u00e0 r\u00e9soudre avec \\(i \\in [0;n]\\) et \\(j \\in [0;m]\\) est \\((n + 1) \\times (m +1)\\).</li> <li>La complexit\u00e9 de l'impl\u00e9mentation  na\u00efve  de la solution r\u00e9cursive par programmation dynamique a une complexit\u00e9 exponentielle par rapport aux tailles \\(n\\) et \\(m\\) des s\u00e9quences, alors que le nombre de sous-probl\u00e8mes est polynomial. La technique de m\u00e9mo\u00efsation  consiste \u00e0 enregistrer dans une structure (tableau ou dictionnaire) la solution de chaque sous-probl\u00e8me une fois qu'elle est calcul\u00e9e et d'aller la lire dans cette structure (il faut que la lecture soit en temps constant) quand on en a besoin.</li> <li> <p>Code : </p> <pre><code>from math import inf\n\ndef meilleur_score_rec_memo(seq1, seq2):\n\"\"\"\n    Prend en param\u00e8tres deux chaines de caract\u00e8res seq1 et seq2\n    Renvoie le meilleur score d'alignement\n    \"\"\"\n\n    def s(i, j):\n\"\"\"Fonction r\u00e9cursive auxiliaire\n        Calcule et renvoie score[i][j]\n        \"\"\"\n        if score[i][j] == -inf:     \n            # cas de base\n            if i == 0:\n                if j == 0:\n                    score[i][j] = 0\n                else:\n                    score[i][j] = -j\n            elif j == 0:\n                score[i][j] = -i\n            else:\n                # premier sous-probl\u00e8me : alignement des derniers caract\u00e8res des pr\u00e9fixes seq1[:i] et seq2[:j]\n                s1 = s(i - 1, j - 1)\n                # second sous-probl\u00e8me : le dernier caract\u00e8re de seq1[:i]  est align\u00e9 avec un trou\n                s2 =  s(i, j - 1)\n                # troisi\u00e8me sous-probl\u00e8me  : le dernier caract\u00e8re de seq1[:j]  est align\u00e9 avec un trou\n                s3 =  s(i - 1, j)\n                # formule de r\u00e9currence pour le calcul de score[i][j]\n                # sous-cas o\u00f9 les derniers caract\u00e8res sont identiques dans le premier sous-probl\u00e8me\n                if seq1[i - 1] == seq2[j - 1]:\n                    score[i][j] = max(1 + s1, -1 + s2, -1 + s3)\n                # sous-cas o\u00f9 les derniers caract\u00e8res sont diff\u00e9rents\n                else:\n                    score[i][j] = max(-1 + s1, -1 + s2, -1 + s3)\n        return score[i][j]\n\n\n    n = len(seq1)\n    m = len(seq2)\n    # tableau de m\u00e9moisation\n    # score[i][j] est le meilleur score d'alignement de seq1[:i] et seq2[:j]\n    score = [[-inf for j in range(m + 1)] for i in range(n + 1)]\n    return s(n, m)\n\ndef test_meilleur_score_rec_memo():\n    assert meilleur_score_rec_memo('AGTACG', 'ACATAG') == 1\n    assert meilleur_score_rec_memo('GTTAACC', 'CGTAAC') == 2\n    assert meilleur_score_rec_memo('GTAGTAAACGTTCACC', 'CGGTCAGTAAC') == -1\n    print(\"tests r\u00e9ussis\")\n</code></pre> </li> </ol>"},{"location":"NSITerm/ALGO/C10A2.html#resolution-iterative-par-programmation-dynamique","title":"R\u00e9solution it\u00e9rative par programmation dynamique","text":"<p>Exercice 11</p> <p>\ud83d\udcbb Saisir ses r\u00e9ponses sur Capytale</p> <p>Question 1</p> <p>On reprend l'exemple  de l'exercice 9 avec le calcul du score maximal d'alignment pour la s\u00e9quence  <code>seq1</code> = 'AGTACG' et la s\u00e9quence <code>seq2</code>= 'ACATAG'.</p> <p>Formalisation</p> <p>On consid\u00e8re un tableau <code>score</code> \u00e0 deux dimensions tel que pour  tous \\(i \\in [0;6]\\) et \\(j \\in [0;6]\\),  <code>score[i][j]</code> est  le score maximal d'alignement des pr\u00e9fixes <code>seq1[:i]</code> et <code>seq2[:j]</code>.</p> <p>La relation de r\u00e9currence \u00e9tablie dans le Point de cours 8 peut se reformuler ainsi :</p> <ul> <li><code>score[i][j] = max(1 + score[i-1][j-1], -1 + score[i][j - 1], -1 + score[i - 1][j])</code> si  <code>seq1[i-1]== seq2[i-1]</code> </li> <li><code>score[i][j] = max(-1 + score[i-1][j-1], -1 + score[i][j - 1], -1 + score[i - 1][j])</code> sinon</li> </ul> <p>Les cas de base sont ceux o\u00f9 l'un des pr\u00e9fixes  est vide, avec <code>i == 0</code> ou  <code>j == 0</code> :</p> <ul> <li>si <code>i == 0</code> et <code>j == 0</code> alors les deux pr\u00e9fixes  sont vides et <code>score[0][0] =  0</code></li> <li>sinon si <code>i == 0</code> et  <code>j &gt;= 1</code> alors <code>score[0][j] = -j</code> </li> <li>sinon si <code>i &gt;= 1</code> et  <code>j == 0</code>  alors <code>score[i][0] = -i</code></li> </ul> <p> </p> \u00c9nonc\u00e9Solution <p>Le score maximal d'alignement des s\u00e9quences <code>seq1</code> et <code>seq2</code>  sera contenu dans <code>score[6][6]</code>. Pour le calculer on va proc\u00e9der du bas (les plus petits sous-probl\u00e8mes) vers le haut (le probl\u00e8me global) en progressant par index <code>i</code> de ligne et <code>j</code> de colonne  croissants. </p> <p>C'est la version it\u00e9rative de r\u00e9solution du probl\u00e8me d'alignement de s\u00e9quences par programmation dynamique.</p> <p>Recopier et compl\u00e9ter le tableau ci-dessous.</p> 'A' 'C' 'A' 'T' 'A' 'G' i/j 0 1 2 3 4 5 6 0 0 \\(-1\\) \\(-2\\) \\(-3\\) \\(-4\\) \\(-5\\) \\(-6\\) 'A' 1 \\(-1\\) 'G' 2 \\(-2\\) 'T' 3 \\(-3\\) 'A' 4 \\(-4\\) 'C' 5 \\(-5\\) 'G' 6 \\(-6\\) 'A' 'C' 'A' 'T' 'A' 'G' i/j 0 1 2 3 4 5 6 0 0 \\(-1\\) \\(-2\\) \\(-3\\) \\(-4\\) \\(-5\\) \\(-6\\) 'A' 1 \\(-1\\) 1 0 \\(-1\\) \\(-2\\) \\(-3\\) \\(-4\\) 'G' 2 \\(-2\\) 0 0 \\(_1\\) \\(-2\\) \\(-3\\) \\(-2\\) 'T' 3 \\(-3\\) \\(-1\\) \\(-1\\) \\(-1\\) 0 \\(-1\\) \\(-2\\) 'A' 4 \\(-4\\) \\(-2\\) \\(-2\\) 0 \\(-1\\) 1 0 'C' 5 \\(-5\\) \\(-3\\) \\(-1\\) \\(-1\\) \\(-1\\) 0 \\(-1\\) 'G' 6 \\(-6\\) \\(-4\\) \\(-2\\) \\(-2\\) \\(-2\\) \\(-1\\) 1 <p>On retrouve que le score maximal d'alignement de la s\u00e9quence  <code>seq1</code> = 'AGTACG' et la s\u00e9quence <code>seq2</code>= 'ACATAG' est 1.</p> <p>Question 2</p> \u00c9nonc\u00e9Solution <p>Compl\u00e9ter le code ci-dessous qui impl\u00e9mente cette m\u00e9thode it\u00e9rative de r\u00e9solution par programmation dynamique.  Les solutions des sous-probl\u00e8mes sont m\u00e9moris\u00e9es dans un tableau  <code>score</code> \u00e0 deux dimensions.</p> <p>### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder def meilleurpy-undscorepy-unditer(seq1, seq2):bksl-nl    \"\"\"bksl-nl    Prend en param\u00e8tres deux chaines de caract\u00e8res seq1 et seq2bksl-nl    Renvoie le meilleur score d'alignementbksl-nl    \"\"\"bksl-nl    n = len(seq1)bksl-nl    m = len(seq2)bksl-nl    # score[i][j] est le meilleur score d'alignement de seq1[:i] et seq2[:j]bksl-nl    score = [[0 for j in range(m + 1)] for i in range(n + 1)]bksl-nl    for i in range(n + 1):bksl-nl        score[i][0] = ...bksl-nl    for j in range(m + 1):bksl-nl        score[0][j] = ...bksl-nl    for i in range(1, n + 1):bksl-nl        for j in range(1, m + 1):            bksl-nl            # premier sous-probl\u00e8me : alignement des derniers caract\u00e8res des pr\u00e9fixes seq1[:i] et seq2[:j]bksl-nl            s1 = ...bksl-nl            # second sous-probl\u00e8me : le dernier caract\u00e8re de seq1[:i]  est align\u00e9 avec un troubksl-nl            s2 =  ...bksl-nl            # troisi\u00e8me sous-probl\u00e8me  : le dernier caract\u00e8re de seq1[:j]  est align\u00e9 avec un troubksl-nl            s3 =  ...bksl-nl            # formule de r\u00e9currence pour le calcul de score[i][j]bksl-nl            # sous-cas o\u00f9 les derniers caract\u00e8res sont identiques dans le premier sous-probl\u00e8mebksl-nl            if seq1[i - 1] == seq2[j - 1]:bksl-nl                score[i][j] = ...bksl-nl            # sous-cas o\u00f9 les derniers caract\u00e8res sont diff\u00e9rentsbksl-nl            else:bksl-nl                score[i][j] = ...bksl-nl    # le score de Needle-Wunsch de seq1 et seq2 est la valeur de la derni\u00e8re cas du tableaubksl-nl    return score[n][m]bksl-nlbksl-nldef testpy-undmeilleurpy-undscorepy-unditer():bksl-nl    assert meilleurpy-undscorepy-unditer('AGTACG', 'ACATAG') == 1bksl-nl    assert meilleurpy-undscorepy-unditer('GTTAACC', 'CGTAAC') == 2bksl-nl    print(\"tests r\u00e9ussis\")bksl-nl</p> <p>A</p> <p>Z</p> <pre><code>def meilleur_score_iter(seq1, seq2):\n\"\"\"\n    Prend en param\u00e8tres deux chaines de caract\u00e8res seq1 et seq2\n    Renvoie le meilleur score d'alignement\n    \"\"\"\n    n = len(seq1)\n    m = len(seq2)\n    # score[i][j] est le meilleur score d'alignement de seq1[:i] et seq2[:j]\n    score = [[0 for j in range(m + 1)] for i in range(n + 1)]\n    for i in range(n + 1):\n        score[i][0] = -i\n    for j in range(m + 1):\n        score[0][j] = -j\n    for i in range(1, n + 1):\n        for j in range(1, m + 1):            \n            # premier sous-probl\u00e8me : alignement des derniers caract\u00e8res des pr\u00e9fixes seq1[:i] et seq2[:j]\n            s1 = score[i - 1][j - 1]\n            # second sous-probl\u00e8me : le dernier caract\u00e8re de seq1[:i]  est align\u00e9 avec un trou\n            s2 =  score[i][j - 1]\n            # troisi\u00e8me sous-probl\u00e8me  : le dernier caract\u00e8re de seq1[:j]  est align\u00e9 avec un trou\n            s3 =  score[i - 1][j]\n            # formule de r\u00e9currence pour le calcul de score[i][j]\n            # sous-cas o\u00f9 les derniers caract\u00e8res sont identiques dans le premier sous-probl\u00e8me\n            if seq1[i - 1] == seq2[j - 1]:\n                score[i][j] = max(1 + s1, -1 + s2, -1 + s3)\n            # sous-cas o\u00f9 les derniers caract\u00e8res sont diff\u00e9rents\n            else:\n                score[i][j] = max(-1 + s1, -1 + s2, -1 + s3)\n    # le score de Needle-Wunsch de seq1 et seq2 est la valeur de la derni\u00e8re cas du tableau\n    return score[n][m]\n\ndef test_meilleur_score_iter():\n    assert meilleur_score_iter('AGTACG', 'ACATAG') == 1\n    assert meilleur_score_iter('GTTAACC', 'CGTAAC') == 2\n    print(\"tests r\u00e9ussis\")\n</code></pre>"},{"location":"NSITerm/ALGO/C10A2.html#reconstruction-dune-alignement-optimal","title":"Reconstruction d'une alignement optimal","text":"<p>Exercice 12</p> <p>\ud83d\udcbb Saisir ses r\u00e9ponses sur Capytale</p> <p>Dans cet exercice, on met en oeuvre l'\u00e9tape 3 caract\u00e9ristique de la programmation dynamique : la construction d'un alignement de deux s\u00e9quences qui   r\u00e9alise un score maximal.</p> <p>Comme pour le probl\u00e8me de la somme dans un triangle, on remplit d'abord le tableau <code>score</code> \u00e0 deux dimensions             pour tous les sous-probl\u00e8mes <code>score[i][j]</code>. Pour cela, on proc\u00e8de par programmation dynamique it\u00e9rativement ou r\u00e9cursivement avec m\u00e9mo\u00efsation, comme dans les exercices 10 et 11. Une fois le tableau rempli on le parcourt du haut (<code>i</code> \u00e9gal \u00e0 <code>n</code> et <code>j</code> \u00e9gal \u00e0 <code>m</code>) vers le bas  (les cas de bases avec <code>i</code> ou <code>j</code> \u00e9gal \u00e0 0). On  tient \u00e0 jour une liste <code>alignement</code> de deux cha\u00eenes de caract\u00e8res avec <code>alignement[0]</code> pour l'alignement de la s\u00e9quence <code>seq1</code> et <code>alignement[1]</code> pour l'alignement de la s\u00e9quence <code>seq2</code>.</p> <p>Question 1</p> \u00c9nonc\u00e9Solution <p>Compl\u00e9ter le code de <code>meilleur_alignement_iter</code> qui prend en param\u00e8tres deux s\u00e9quences sous forme de cha\u00eenes de caract\u00e8res et qui renvoie un couple avec le score maximal d'alignement et un alignement  le r\u00e9alisant, qui est une liste de deux cha\u00eenes de caract\u00e8res.</p> <p>### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder def meilleurpy-undalignementpy-unditer(seq1, seq2):bksl-nl    \"\"\"bksl-nl    Prend en param\u00e8tres deux chaines de caract\u00e8res seq1 et seq2bksl-nl    Renvoie un couple le score maximal d'alignement et un alignementbksl-nl    le r\u00e9alisant qui est une liste de deux cha\u00eenes de caract\u00e8resbksl-nl    \"\"\"bksl-nl    # ---------------------------------------------------- #bksl-nl    # Calcul du score maximal par prog dynamique          #bksl-nl    #  on remplit le tableau score du bas vers le haut     #bksl-nl    #  on parcourt les sous-probl\u00e8mes par index croissants #bksl-nl    # ---------------------------------------------------- #bksl-nl    n = len(seq1)bksl-nl    m = len(seq2)bksl-nl    # score[i][j] est le meilleur score d'alignement de seq1[:i] et seq2[:j]bksl-nl    score = [[0 for j in range(m + 1)] for i in range(n + 1)]bksl-nl    for i in range(n + 1):bksl-nl        score[i][0] = -ibksl-nl    for j in range(m + 1):bksl-nl        score[0][j] = -jbksl-nl    for i in range(1, n + 1):bksl-nl        for j in range(1, m + 1):            bksl-nl            # premier sous-probl\u00e8me : alignement des derniers caract\u00e8res des pr\u00e9fixes seq1[:i] et seq2[:j]bksl-nl            s1 = ...bksl-nl            # second sous-probl\u00e8me : le dernier caract\u00e8re de seq1[:i]  est align\u00e9 avec un troubksl-nl            s2 =  ...bksl-nl            # troisi\u00e8me sous-probl\u00e8me  : le dernier caract\u00e8re de seq1[:j]  est align\u00e9 avec un troubksl-nl            s3 =  ...bksl-nl            # formule de r\u00e9currence pour le calcul de score[i][j]bksl-nl            # sous-cas o\u00f9 les derniers caract\u00e8res sont identiques dans le premier sous-probl\u00e8mebksl-nl            if seq1[i - 1] == seq2[j - 1]:bksl-nl                score[i][j] = ...bksl-nl            # sous-cas o\u00f9 les derniers caract\u00e8res sont diff\u00e9rentsbksl-nl            else:bksl-nl                score[i][j] = ...bksl-nl    # le score de Needle-Wunsch de seq1 et seq2 est la valeur de la derni\u00e8re cas du tableaubksl-nl    # index du sous-probl\u00e8me : i index de ligne et j index de colonnebksl-nl    i, j = n, mbksl-nl    s = score[i][j]bksl-nl    # ----------------------------------------------- #bksl-nl    # Reconstruction d'un alignement de score maximal #bksl-nl    # On redescend du haut vers le bas                #bksl-nl    # On parcourt les choix successifs  \u00e0 rebours     #bksl-nl    # Jusqu'\u00e0 ce que i ou j soit nul (cas de base)    #bksl-nl    # ----------------------------------------------- #bksl-nl    bksl-nl    # alignement[0] est un alignement optimal pour seq1bksl-nl    # alignement[1] est un alignement optimal pour seq2bksl-nl    alignement = ['', '']    bksl-nl    while i != 0 and j != 0:bksl-nl        s1 = score[i - 1][j - 1]bksl-nl        s2 = score[i][j - 1]bksl-nl        s3 =  score[i - 1][j]bksl-nl        # \u00e0 compl\u00e9terbksl-nl        ...bksl-nl    # si i diff\u00e9rent de 0 on aligne seq1[:i] avec i py-str 'py-und' bksl-nl    if i != 0:bksl-nl        alignement[0] = ...bksl-nl        alignement[1] = ...bksl-nl    # si j diff\u00e9rent de 0 on aligne j py-str 'py-und'  avec seq2[:j]bksl-nl    if j != 0:bksl-nl        alignement[0] = ...bksl-nl        alignement[1] = ...bksl-nl    return (score[n][m], alignement)bksl-nl        bksl-nlbksl-nldef testpy-undmeilleurpy-undalignementpy-unditer():bksl-nl    assert meilleurpy-undalignementpy-unditer('GTTAACC', 'CGTAAC') == (2, ['py-undGTTAACC', 'CGpy-undTAApy-undC'])bksl-nl    assert meilleurpy-undalignementpy-unditer('AGTACG', 'ACATAG') == (1, ['Apy-undGTACG', 'ACATApy-undG'])bksl-nl    print(\"tests r\u00e9ussis\")bksl-nl    bksl-nlbksl-nl</p> <p>A</p> <p>Z</p> <pre><code>def meilleur_alignement_iter(seq1, seq2):\n\"\"\"\n    Prend en param\u00e8tres deux chaines de caract\u00e8res seq1 et seq2\n    Renvoie un couple avec le score maximal d'alignement et un alignement\n    le r\u00e9alisant qui est une liste de deux cha\u00eenes de caract\u00e8res\n    \"\"\"\n    # ---------------------------------------------------- #\n    # Calcul du score maximal par prog dynamique          #\n    #  on remplit le tableau score du bas vers le haut     #\n    #  on parcourt les sous-probl\u00e8mes par index croissants #\n    # ---------------------------------------------------- #\n    n = len(seq1)\n    m = len(seq2)\n    # score[i][j] est le meilleur score d'alignement de seq1[:i] et seq2[:j]\n    score = [[0 for j in range(m + 1)] for i in range(n + 1)]\n    for i in range(n + 1):\n        score[i][0] = -i\n    for j in range(m + 1):\n        score[0][j] = -j\n    for i in range(1, n + 1):\n        for j in range(1, m + 1):            \n            # premier sous-probl\u00e8me : alignement des derniers caract\u00e8res des pr\u00e9fixes seq1[:i] et seq2[:j]\n            s1 = score[i - 1][j - 1]\n            # second sous-probl\u00e8me : le dernier caract\u00e8re de seq1[:i]  est align\u00e9 avec un trou\n            s2 =  score[i][j - 1]\n            # troisi\u00e8me sous-probl\u00e8me  : le dernier caract\u00e8re de seq1[:j]  est align\u00e9 avec un trou\n            s3 =  score[i - 1][j]\n            # formule de r\u00e9currence pour le calcul de score[i][j]\n            # sous-cas o\u00f9 les derniers caract\u00e8res sont identiques dans le premier sous-probl\u00e8me\n            if seq1[i - 1] == seq2[j - 1]:\n                score[i][j] = max(1 + s1, -1 + s2, -1 + s3)\n            # sous-cas o\u00f9 les derniers caract\u00e8res sont diff\u00e9rents\n            else:\n                score[i][j] = max(-1 + s1, -1 + s2, -1 + s3)\n    # le score de Needle-Wunsch de seq1 et seq2 est la valeur de la derni\u00e8re cas du tableau\n    # index du sous-probl\u00e8me : i index de ligne et j index de colonne\n    i, j = n, m\n    s = score[i][j]\n    # ----------------------------------------------- #\n    # Reconstruction d'un alignement de score maximal #\n    # On redescend du haut vers le bas                #\n    # On parcourt les choix successifs  \u00e0 rebours     #\n    # Jusqu'\u00e0 ce que i ou j soit nul (cas de base)    #\n    # ----------------------------------------------- #\n\n    # alignement[0] est un alignement optimal pour seq1\n    # alignement[1] est un alignement optimal pour seq2\n    alignement = ['', '']    \n    while i != 0 and j != 0:\n        s1 = score[i - 1][j - 1]\n        s2 = score[i][j - 1]\n        s3 =  score[i - 1][j]\n        if seq1[i - 1] == seq2[j - 1]:\n            d = 1\n        else:\n            d = -1\n        maxi = max(d + s1, -1 + s2, -1 + s3)\n        if maxi == d + s1:\n            alignement[0] = seq1[i - 1] + alignement[0]\n            alignement[1] =  seq2[j - 1] + alignement[1]\n            i = i - 1\n            j = j - 1\n        elif maxi == -1 + s2:            \n            alignement[0] = '_' + alignement[0]\n            alignement[1] =  seq2[j - 1] + alignement[1]\n            j = j - 1\n        else:\n            alignement[0] = seq1[i - 1] + alignement[0]\n            alignement[1] =  '_'  + alignement[1]\n            i = i - 1\n    # si i diff\u00e9rent de 0 on aligne seq1[:i] avec i * '_' \n    if i != 0:\n        alignement[0] = seq1[:i]  + alignement[0]\n        alignement[1] = i * '_' + alignement[1]\n    # si j diff\u00e9rent de 0 on aligne j * '_'  avec seq2[:j]\n    if j != 0:\n        alignement[0] = j * '_'   + alignement[0]\n        alignement[1] = seq2[:j] + alignement[1]\n    return (score[n][m], alignement)\n\n\ndef test_meilleur_alignement_iter():\n    assert meilleur_alignement_iter('GTTAACC', 'CGTAAC') == (2, ['_GTTAACC', 'CG_TAA_C'])\n    assert meilleur_alignement_iter('AGTACG', 'ACATAG') == (1, ['A_GTACG', 'ACATA_G'])\n    print(\"tests r\u00e9ussis\")\n</code></pre>"},{"location":"NSITerm/ALGO/C10C1.html","title":"DIVISER POUR REGNER","text":""},{"location":"NSITerm/ALGO/C10C1.html#lapproche-diviser-pour-regner","title":"L'approche diviser pour r\u00e9gner","text":"<p>L'id\u00e9e est de s\u00e9parer le probl\u00e8me initial en plusieurs probl\u00e8mes semblables mais ayant une taille plus petite, puis de r\u00e9soudre (de fa\u00e7on r\u00e9cursive) ces probl\u00e8mes et enfin de combiner les solutions obtenues pour obtenir la solution du probl\u00e8me initial.  </p> <p>Il y aura donc trois \u00e9tapes essentielles:  </p> <ul> <li>diviser le probl\u00e8me en probl\u00e8mes plus petits;</li> <li>r\u00e9gner en r\u00e9solvant de mani\u00e8re r\u00e9cursive les probl\u00e8mes plus petits;</li> <li>combiner (on dit aussi fusionner) les solutions des sous-probl\u00e8mes pour obtenir la solution du probl\u00e8me initial.</li> </ul>"},{"location":"NSITerm/ALGO/C10C1.html#application-1-la-recherche-dichotomique","title":"Application 1: la recherche dichotomique","text":""},{"location":"NSITerm/ALGO/C10C1.html#le-probleme","title":"Le probl\u00e8me","text":"<p>Rappel du probl\u00e8me de 1re NSI: il s'agit de d\u00e9terminer si une valeur <code>v</code> appartient \u00e0 un tableau <code>t</code> tri\u00e9. Ce probl\u00e8me a \u00e9t\u00e9 r\u00e9solu de mani\u00e8re it\u00e9rative (voir cours 1re sur github). Adoptons une approche diviser pour r\u00e9gner.</p> <p>Diviser Comme le tableau est tri\u00e9, on peut le \"couper\" en deux pour y effectuer la recherche. Si on travaille avec des indices <code>g</code> et <code>d</code>, le milieu se situe \u00e0 \\(m=\\dfrac{g+d}{2}\\).  </p> <p>R\u00e9gner Il s'agit d'effectuer la recherche dans une partie du tableau qui est de taille plus petite que le tableau original.  </p> <p>Combiner Lors d'une recherche, si <code>v</code> est trouv\u00e9, on renvoie son indice. Dans le cas d'un tableau vide, on renvoie <code>None</code>.</p> <p>Illustration de la situation apr\u00e8s quelques appels r\u00e9cursifs</p> <pre><code> __________________________________________\n|               |             |             |\n|  \u00e9l\u00e9ments &lt; v | ........... | \u00e9l\u00e9ments &gt; v|\n|__________________________________________ |\n ^               ^           ^               \n |               |           |\n 0               g           d\n</code></pre>"},{"location":"NSITerm/ALGO/C10C1.html#une-solution","title":"Une solution","text":"<pre><code>def chercher(t, v, g, d):\n\"\"\"\n    Recherche l'index de v dans le tableau t, entre g et d; renvoie None si non trouv\u00e9.\n    t: tableau\n    v: valeur \u00e0 chercher\n    g, d: index (entiers naturels)\n    \"\"\"\n    if g &gt; d: \n        return None\n    m = (g + d) // 2\n    if v &gt; t[m]:\n        return chercher(t, v, m+1, d)\n    if v &lt; t[m]:\n        return chercher(t, v, g, m-1)\n    else:\n        return m        \n</code></pre> <pre><code>def recherche_dichotomique(t, v):\n\"\"\"\n    renvoie l'index de v dans t si trouv\u00e9, None sinon\n    \"\"\"\n    return chercher(t, v, 0, len(t)-1)\n</code></pre> <pre><code># Exemple d'appel\nt = [1,7,8,9,12,15,15,22,30,31]\nprint(recherche_dichotomique(t, 15))\nprint(recherche_dichotomique(t, 25))\n</code></pre> <pre><code>5\nNone\n</code></pre> <p>Remarque</p> <p>Le programme termine car on peut exhiber un variant \\(d-g\\). Il s'agit d'une grandeur enti\u00e8re, strictement positive et qui d\u00e9croit \u00e0 chaque appel r\u00e9cursif (voir illustration ci-dessus).</p>"},{"location":"NSITerm/ALGO/C10C1.html#application-2-le-tri-fusion-voir-tp-1","title":"Application 2: le tri fusion (voir TP 1)","text":""},{"location":"NSITerm/ALGO/C10C1.html#le-probleme-initial","title":"Le probl\u00e8me initial","text":"<p>Il s'agit de trier une liste cha\u00een\u00e9e d'entiers, par ordre croissant. Plusieurs m\u00e9thodes de tri peuvent \u00eatre envisag\u00e9es (tri par s\u00e9lection, tri par insertion). On choisit ici une approche diviser pour r\u00e9gner. La liste sont des instances de la classe <code>Cell</code> vue au premier trimestre.</p> <pre><code>class Cell:\n\"\"\" Classe cellule pour liste chain\u00e9e\"\"\"\n\n    def __init__(self, v, s):\n        self.val = v\n        self.suiv = s\n</code></pre> <pre><code># Exemple\nlst1 = Cell(2, Cell(10, Cell(5, Cell(-4, Cell(0, Cell(1, None))))))\n</code></pre>"},{"location":"NSITerm/ALGO/C10C1.html#approche-diviser-pour-regner","title":"Approche diviser pour r\u00e9gner","text":""},{"location":"NSITerm/ALGO/C10C1.html#diviser","title":"Diviser","text":"<p>Il s'agit dans un premier temps de \"couper\" la liste originale en deux listes de taille \u00e9gale (ou presque dans le cas d'un nombre impair d'\u00e9l\u00e9ments). Il existe plusieurs fa\u00e7on de r\u00e9soudre ce probl\u00e8me (voir TP 1), on pr\u00e9sente ici une version ne n\u00e9cessitant pas de calcul de taille de liste au pr\u00e9alable.</p> <pre><code>def couper_liste_v2(l):\n\"\"\"\n    coupe l en deux parties (\u00e9gales si la longueur de l est paire).\n    renvoie deux listes chain\u00e9es l1 et l2\n    \"\"\"\n    l1, l2 = None, None\n    while l: # boucle tant qu'on a au moins 1 element        \n        if l.suiv is not None: # On en a au moins 2 !\n            val1, val2 = l.val, l.suiv.val            \n            l1, l2 = Cell(val1, l1), Cell(val2, l2)\n            l = l.suiv.suiv\n        else: # il n'en reste qu'un seul !\n            val1 = l.val            \n            l1 = Cell(val1, l1)\n            l = None\n    return l1, l2\n</code></pre>"},{"location":"NSITerm/ALGO/C10C1.html#regner","title":"R\u00e9gner","text":"<p>Apr\u00e8s avoir r\u00e9duit les listes \u00e0 un \u00e9l\u00e9ment, il devient facile de les trier: une liste \u00e0 un \u00e9l\u00e9ment est forc\u00e9ment tri\u00e9e !</p>"},{"location":"NSITerm/ALGO/C10C1.html#combiner","title":"Combiner","text":"<p>Il s'agit maintenant de \"fusionner\" les solutions des sous probl\u00e8mes. Concr\u00e8tement, on \u00e9crit une fonction <code>fusion</code> qui prend deux listes en param\u00e8tres et qui renvoie une liste, tri\u00e9e par ordre croissant.</p> <pre><code>def fusion(l1, l2):\n\"\"\"\n    renvoie une liste contenant les \u00e9l\u00e9ments de l1 et de l2, tri\u00e9s par ordre croissant.\n    \"\"\"\n    if l1 is None: return l2\n    if l2 is None: return l1\n    if l1.val &lt; l2.val:\n        return Cell(l1.val, fusion(l1.suiv, l2))\n    else:\n        return Cell(l2.val, fusion(l1, l2.suiv))\n</code></pre> <p>L'impl\u00e9mentation de l'algorithme du tri fusion, utilisant une approche diviser pour r\u00e9gner en python, s'\u00e9crit alors:</p> <pre><code>def tri_fusion(lst):\n\"\"\"\n    \"\"\"\n    # Cas de base: liste contenant 1 \u00e9l\u00e9ment\n    if lst.suiv is None:\n        return lst\n    # Cas r\u00e9cursif\n    partie_1, partie_2 = couper_liste_v2(lst) # diviser\n    return fusion(tri_fusion(partie_1), tri_fusion(partie_2)) # r\u00e9gner - combiner\n</code></pre>"},{"location":"NSITerm/ALGO/C10C1.html#illustration","title":"Illustration","text":""},{"location":"NSITerm/ALGO/C10C1.html#efficacite","title":"Efficacit\u00e9","text":"<p>Voici les relev\u00e9s effectu\u00e9s sur des listes de tailles diff\u00e9rentes, tri\u00e9es soit avec l'algorithme du tri s\u00e9lection soit avec le tri fusion.  </p> Taille Tri s\u00e9lection Tri fusion 1000 0.06 s 0.01 s 2000 0.13 s 0.03 s 4000 0.44 s 0.05 8000 1.78 0.11 s 16000 6.79 0.29 s <p>Il appara\u00eet clairement que le tri fusion est nettement plus performant que le tri s\u00e9lection lorsque la taille du probl\u00e8me augmente. Une \u00e9tude approfondie de cet algorithme montre que sa complexit\u00e9 en temps est \\(\\mathcal{O}(n\\log{}n)\\).</p>"},{"location":"NSITerm/ALGO/C10C2.html","title":"ALGORITHMES SUR LES GRAPHES","text":""},{"location":"NSITerm/ALGO/C10C2.html#parcours-en-profondeur-dabord","title":"Parcours en profondeur d'abord","text":""},{"location":"NSITerm/ALGO/C10C2.html#reperes-historiques","title":"Rep\u00e8res historiques","text":"<p>Le premier algorithme de parcours de graphe est \u00e0 rapprocher de l'exploration d'un labyrinthe. Il a une origine historique qui remonte \u00e0 l'antiquit\u00e9: Th\u00e9s\u00e9e et le Minotaure. D'apr\u00e8s l'Ing\u00e9nieur Tr\u00e9meaux, pour sortir d'un labyrinthe avec un fil d'Ariane, il faut:  </p> <ul> <li>ne pas prendre deux fois un couloir dans le m\u00eame sens, et ...</li> <li>devant un couloir d\u00e9j\u00e0 visit\u00e9, rembobiner un peu la pelote de fil jusqu\u2019au premier carrefour o\u00f9 d\u00e9bobiner devient possible.  </li> </ul> <p> </p>"},{"location":"NSITerm/ALGO/C10C2.html#le-parcours-en-profondeur","title":"Le parcours en profondeur","text":"<p>Les deux id\u00e9es avanc\u00e9es au paragraphe pr\u00e9c\u00e9dent sont \u00e0 la base d'un algorithme fondamental pour le parcours des graphes: le parcours en profondeur d'abord ou Depth-first search (DFS) en anglais. </p> <p>\u00c0 savoir</p> <p>Le parcours en profondeur s'applique \u00e0 n'importe quel graphe et permet de trouver tous les sommets joignables depuis un sommet de d\u00e9part. En d'autres termes, il permet de dire s'il existe un chemin entre deux sommets.  </p> <p>Dans sa forme la plus classique, il s'agit d'un algorithme r\u00e9cursif tr\u00e8s simple:</p> <pre><code>------------------------------------\nAlgorithme parcours_p(g, s, deja_vu)\n------------------------------------\nEntr\u00e9es\n    g: graphe\n    s: sommet\n    deja_vu: dictionnaire de bool\u00e9en caract\u00e9risant le statut d'un sommet.\nD\u00e9but\n    marquer s comme 'visit\u00e9'\n    Pour chaque sommet v adjacent \u00e0 s:\n        Si v n'est pas marqu\u00e9:\n            parcours_p(g, v, deja_vu)\n        Fin Si\n    Fin Pour\nFin\n</code></pre> <p>\u00c0 faire</p> <p>Impl\u00e9menter cet algorithme en python.  On utilisera l'interface de la classe <code>GrapheOriente</code> du chapitre XIII graphes, notamment pour avoir les voisins d'un sommet <code>s</code>. </p> <pre><code>from graphes import *\n</code></pre> <pre><code>def parcours_p(g, s, deja_vu):\n\"\"\"\n    parcours r\u00e9cursivement, en profondeur, le graphe g, depuis le sommet s.\n    g: graphe\n    s: sommet\n    deja_vu: dictionnaire de bool\u00e9en caract\u00e9risant le statut d'un sommet\n            (d\u00e9j\u00e0 visit\u00e9 ou non).\n    \"\"\"\n    deja_vu[s] = True\n    # A compl\u00e9ter\n</code></pre> <p>On peut ais\u00e9ment utiliser la fonction <code>parcours_p</code> pour savoir s'il existe un chemin entre deux sommets donn\u00e9s.</p> <pre><code>def existe_chemin(g, s1, s2):\n\"\"\"\n    renvoie un bool\u00e9en correspondant \u00e0 l'existence ou non d'un chemin entre s1 et s2.\n    g: graphe\n    s1, s2: sommets\n    \"\"\"\n    deja_vu = dict()\n    # A compl\u00e9ter\n</code></pre> <p>\u00c0 faire</p> <p>Soit le graphe suivant  </p> <p></p> <p>Existe-t-il un chemin entre D et C? entre A et E? entre E et G? Pour r\u00e9pondre \u00e0 ces questions, on demande:</p> <ul> <li>de construire le graphe avec la classe <code>GrapheOriente</code> cit\u00e9 pr\u00e9c\u00e9demment;</li> <li>d'appeler la fonction <code>existe_chemin</code>.</li> </ul> <pre><code># \u00c0 compl\u00e9ter\n\ng = GrapheOriente(...)\n# Ajout des arcs\n</code></pre> <pre><code># TEST\nexiste_chemin(g, 'D', 'C')\n</code></pre> <pre><code>True\n</code></pre> <pre><code># TEST\nexiste_chemin(g, 'E', 'G')\n</code></pre> <pre><code>False\n</code></pre>"},{"location":"NSITerm/ALGO/C10C2.html#parcours-en-largeur-dabord","title":"Parcours en largeur d'abord","text":"<p>Le parcours en profondeur permet de trouver un chemin entre deux sommets \\(u\\) et \\(v\\) (s'il existe) mais ne garantit pas que celui-ci soit le plus court. Si on a besoin de la distance entre deux sommets, il faut utiliser un parcours en largeur d'abord (en anglais Breadth-first search ou BFS).  </p> <p>Etant donn\u00e9 un graphe <code>g = (S, A)</code>, l'algorithme du parcours en largeur permet de d\u00e9couvrir tous les sommets accessibles depuis un sommet de d\u00e9part <code>s</code>. Dans sa forme la plus g\u00e9n\u00e9rale, il permet en outre, de trouver la distance d'un sommet avec <code>s</code> et de d\u00e9terminer les relations anc\u00eatre-descendant.</p> <pre><code>---------------------------\nAlgorithme parcours_l(g, s)\n---------------------------\nEntr\u00e9es:\n    g: graphe\n    s: sommet de d\u00e9part\nVariables:\n    dist, pred: dictionnaire\n    F: file\n\nD\u00e9but\n    Initialiser une file vide F\n    Pour chaque sommets u de g:\n        dist[u] = infini\n        u n'a aucun pr\u00e9d\u00e9cesseur\n    Fin Pour\n\n    dist[s] = 0\n    Enfiler(F, s)\n    Tant que F n'est pas vide:\n        u = Defiler(F)\n        Pour chaque voisin v de u:\n            Si dist[v] == infini:\n                dist[v] = dist[u] + 1\n                pred[v] = u\n                Enfiler(F, v)\n            Fin Si\n        Fin Pour\n    Fin Tant que\nFin\n</code></pre> <p>D\u00e9roulement de l'agorithme sur le graphe ci-apr\u00e8s o\u00f9 le sommet de d\u00e9part est <code>s</code>. Le code des couleurs est le suivant:  </p> <ul> <li>blanc (avec le symbole \\(\\infty\\)): sommet non d\u00e9couvert;</li> <li>gris: sommet d\u00e9j\u00e0 d\u00e9couvert mais dont la liste des voisins n'est pas enti\u00e8rement examin\u00e9e;</li> <li>noir: sommet dont la liste des voisins a \u00e9t\u00e9 enti\u00e8rement examin\u00e9e.</li> </ul> <p>On remarque que la file ne contient que des sommets gris.</p> <p>Attention</p> <p>Dans le sch\u00e9ma propos\u00e9, on enfile par la droite et on d\u00e9file par la gauche.</p> <p></p> <p>Sch\u00e9ma extrait du Cormen - Algorithmique, page 551, 3\u00e8me \u00e9dition (fran\u00e7aise) 2010</p> <p>\u00c0 faire</p> <p>D\u00e9rouler cet algorithme \u00e0 la main sur le graphe ci-apr\u00e8s, avec d\u00e9part au sommet <code>B</code>.</p> <p></p> <p>\u00c0 faire</p> <p>Compl\u00e9ter l'impl\u00e9mentation en python de cet algorithme. Ne pas h\u00e9siter \u00e0 consulter la documentation du module <code>Queue</code> de Python.</p> <pre><code>from queue import Queue\n\n\ndef parcours_l(g, s):\n\"\"\"\n    Impl\u00e9mentation du parcours en largeur du graphe g depuis le sommet s.\n    \"\"\"\n    F = Queue()\n    dist = dict()\n    pred = dict()\n    for u in g.sommets():\n        dist[u] = float('inf')\n        pred[u] = None\n    dist[s] = 0\n    F.put(s)\n    # A compl\u00e9ter\n    ...\n    return dist, pred\n</code></pre> <pre><code># TEST\n# Graphe 1\ng1 = Graphe(['A', 'B', 'C', 'D', 'E', 'F', 'G'])\ng1.ajouter_arete('A', 'B')\ng1.ajouter_arete('B', 'C')\ng1.ajouter_arete('C', 'E')\ng1.ajouter_arete('E', 'B')\ng1.ajouter_arete('A', 'D')\ng1.ajouter_arete('D', 'E')\ng1.ajouter_arete('C', 'F')\ng1.ajouter_arete('G', 'C')\n\nparcours_l(g1, 'A')\n</code></pre>"},{"location":"NSITerm/ALGO/C10C2.html#application-detection-de-cycle-dans-un-graphe-non-oriente","title":"Application: d\u00e9tection de cycle dans un graphe non orient\u00e9","text":"<p>Le parcours en profondeur permet de d\u00e9tecter la pr\u00e9sence de cycle dans un graphe. On \u00e9tudie ici le cas d'un graphe non orient\u00e9, le cas d'un graphe orient\u00e9 sera trait\u00e9 en exercice.  </p> <p>Pr\u00e9cision</p> <p>Le graphe comporte un cycle si on traite un sommet voisin qui a d\u00e9j\u00e0 \u00e9t\u00e9 rencontr\u00e9 et qui n'est pas le parent du sommet en cours d'exploration.</p> <p>On reprend le code du parcours en profondeur en:</p> <ul> <li>y ajoutant un dictionnaire <code>parent</code> qui garde une trace du parent de chaque sommet;</li> <li>renvoyant <code>True</code> si un cycle a \u00e9t\u00e9 d\u00e9tect\u00e9, <code>False</code> sinon.</li> </ul> <pre><code>def parcours_p2(g, s, deja_vu, parent):\n\"\"\"\n    renvoie un bool\u00e9en suivant qu'un cycle ait \u00e9t\u00e9 d\u00e9tect\u00e9 ou non dans le graphe g.\n    deja_vu: dictionnaire de sommets d\u00e9j\u00e0 rencontr\u00e9s\n    parent: dictionnaire qui stocke le parent (valeur) d'un sommet (cl\u00e9) \n    \"\"\"\n    deja_vu[s] = True\n    for v in g.voisins(s):        \n        if v not in deja_vu:\n            parent[v] = s\n            if parcours_p2(g, v, deja_vu, parent):\n                return True\n        elif v != parent[s]: # Qu'en est-il d'un sommet d\u00e9j\u00e0 rencontr\u00e9? si c'est le parent, on passe ...\n            return True\n    return False\n</code></pre> <p>Une fonction <code>detection_cycle</code> permet de mener une recherche \u00e0 partir de n'importe quel sommet.</p> <pre><code>def detection_cycle(g):    \n    for s in g.sommets():\n        deja_vu = dict()\n        parent = dict()\n        if parcours_p2(g, s, deja_vu, parent):\n            return True\n    return False\n</code></pre> <p>Exemples</p> <p> </p> <pre><code># Graphe 1\ng1 = Graphe(['A', 'B', 'C', 'D', 'E', 'F', 'G'])\ng1.ajouter_arete('A', 'B')\ng1.ajouter_arete('B', 'C')\ng1.ajouter_arete('C', 'E')\ng1.ajouter_arete('E', 'B')\ng1.ajouter_arete('A', 'D')\ng1.ajouter_arete('D', 'E')\ng1.ajouter_arete('C', 'F')\ng1.ajouter_arete('G', 'C')\n\n#Graphe2\ng2 = Graphe(['A', 'B', 'C', 'D', 'E', 'K', 'G'])\ng2.ajouter_arete('A', 'B')\ng2.ajouter_arete('A', 'G')\ng2.ajouter_arete('A', 'K')\ng2.ajouter_arete('B', 'E')\ng2.ajouter_arete('B', 'C')\ng2.ajouter_arete('A', 'D')\n</code></pre> <p>Les graphes <code>g1</code> et <code>g2</code> comportent-ils des cycles ? Appliquer \"\u00e0 la main\" l'algorithme de d\u00e9tection sur g1. V\u00e9rifier le r\u00e9sultat dans une cellule Jupyter.</p> <pre><code>detection_cycle(g1)\n</code></pre> <pre><code>detection_cycle(g2)\n</code></pre>"},{"location":"NSITerm/ALGO/C10C2.html#references","title":"R\u00e9f\u00e9rences","text":"<ul> <li>Num\u00e9rique et sciences informatiques - Balabonski, Conchon &amp; al. - \u00e9d. ellipses</li> <li>Algorithmique - CLRS - \u00e9d. Dunod</li> <li>Site de David Roche : https://pixees.fr/informatiquelycee/n_site/nsi_term_algo_graphe.html</li> </ul>"},{"location":"NSITerm/ALGO/C10C3.html","title":"Recherche textuelle","text":""},{"location":"NSITerm/ALGO/C10C3.html#recherche-naive","title":"Recherche na\u00efve","text":"<p>\u00c0 faire</p> <p>\u00c0pr\u00e8s avoir visionn\u00e9 l'animation propos\u00e9e, donner un algorithme qui permet une recherche na\u00efve d'un <code>motif</code> dans une cha\u00eene <code>texte</code>, renvoyant une liste des indices de co\u00efncidence.  </p> <p></p> <p>Proposer une impl\u00e9mentation en python et discuter de l'efficacit\u00e9 de l'algorithme.</p> <pre><code>Algorithme Recherche_naive\n\nEntr\u00e9es: texte de longueur n, motif de longueur m (cha\u00eenes de caract\u00e8res)\nSortie: liste des indices de co\u00efncidence de motif dans texte\n\nVariables: trouve bool\u00e9en, indice liste\n\nindice &lt;- liste vide\nPour i allant de 0 \u00e0 n-m\n    trouve = VRAI\n    Pour j allant de 0 \u00e0 m-1\n        si texte[i+j] != motif[j]\n            trouve = FAUX\n            Quitter la boucle\n    si trouve = VRAI\n        Sauvegarder i dans indice\nRenvoyer indice\n</code></pre> <p>Dans le pire des cas (probablement rare), on fera \\((n-m+1)\\times m\\) comparaisons de caract\u00e8res, soit une complexit\u00e9 temporelle en \\(\\mathcal{O}(nm)\\).</p> <pre><code>def recherche_naive(texte, motif):\n\"\"\" renvoie la liste des indices d'occurrence de motif dans texte\"\"\"\n\n    indice = []\n    n, m = len(texte), len(motif)\n    for i in range(n-m+1):\n        trouve = True\n        for j in range(m):\n            if texte[i+j] != motif[j]:\n                trouve = False\n                break\n        if trouve:\n            indice.append(i)\n    return indice\n</code></pre> <pre><code>recherche_naive(\"abracadabra\", \"bra\")\n</code></pre> <pre><code>[1, 8]\n</code></pre>"},{"location":"NSITerm/ALGO/C10C3.html#amelioration-algorithme-de-boyer-moore-horspool","title":"Am\u00e9lioration: algorithme de Boyer Moore Horspool","text":"<p>L'algorithme na\u00eff a pour d\u00e9faut de tester la pr\u00e9sence du motif pour tous les d\u00e9calage \\(i\\) possibles. </p> <p>\u00c0 faire</p> <p>Observer l'animation relative \u00e0 l'algorithme de Boyer Moore Horspool. </p> <p>Quelle am\u00e9lioration essentielle est apport\u00e9e? Proposer une fonction qui permet de calculer le d\u00e9calage am\u00e9lior\u00e9.</p> <p>Dans ce cas, l'efficacit\u00e9 est am\u00e9lior\u00e9e: on effectue moins de tests. Cela est d\u00fb au fait que le d\u00e9calage n'est plus forc\u00e9ment de 1.  </p> <p>On note par ailleurs, que la recherche de correspondance:  </p> <ul> <li>se fait de la droite vers la gauche;</li> <li>fait intervenir une table de d\u00e9calage (dite table de Horspool) qui donne du d\u00e9calage \u00e0 appliquer au motif lors d'une discordance.</li> </ul> <p>L'algorithme de construction de la table de Horspool est le suivant:  </p> <pre><code>+-------------------------+\n|Algorithme table_decalage|\n+-------------------------+\nEntr\u00e9e: 'motif', cha\u00eene de caract\u00e8re\nSortie: dictionnaire 'table' (tableau associatif) ayant des paires (caract\u00e8re: d\u00e9calage)\n\n    Initialiser tous les \u00e9l\u00e9ments du tableau avec la longueur m du motif\n    Pour i allant de 0 \u00e0 m-2:\n        table[i] = m - 1 - i\n    Renvoyer table\n</code></pre> <p>L'impl\u00e9mentation en python ne pose aucune difficult\u00e9, de m\u00eame que le test associ\u00e9.</p> <pre><code>def decalage(motif):\n\"\"\"\n    Construit la table de Horspool correspondant \u00e0 'motif'.\n    \"\"\"\n    # Habituellement cette table est index\u00e9e par les caract\u00e8res de l'alphabet utilis\u00e9.\n    # On peut commencer \u00e0 partir du code ASCII 32 (caract\u00e8res imprimables)\n    m = len(motif)\n    table_decalage = {chr(i): m for i in range(32, 256)}\n    for i in range(len(motif) - 1):\n        table_decalage[motif[i]] = len(motif) - 1 - i\n    return table_decalage\n</code></pre> <pre><code>for caractere, decalage_ in decalage(\"banane\").items():\n    if caractere in \"banane\":\n        print(caractere, decalage_)\nprint('x', decalage('banane')['x'])\n</code></pre> <pre><code>a 2\nb 5\ne 6\nn 1\nx 6\n</code></pre> <p>L'algorithme de Boyer Moore Horspool peut \u00eatre d\u00e9crit avec le pseudo code suivant:  </p> <p><pre><code>+-----------------------------------+\n| Algorithme de Boyer Moore Horspool|\n+-----------------------------------+\nEntr\u00e9es: texte, motif\nSortie: liste des indices de co\u00efncidence\n\n    table &lt;- table de d\u00e9calage de Horspool de motif /* pr\u00e9traitement */\n    indices &lt;- liste vide\n    m &lt;- longueur de motif\n    n &lt;- longueur de texte\n    i &lt;- m-1 /* index pointant la fin du motif */\n    Tant que i &lt;= n-1\n        k &lt;- 0 /* nombre de caract\u00e8res co\u00efncidents */\n        Tant que k &lt;= m-1 ET motif[m-1-k] = texte[i-k]\n            k &lt;- k+1\n        Si k = m /* Co\u00efncidence */\n            Sauvegarder i-m+1 dans indices\n            i &lt;- i+1\n        Sinon\n            i &lt;- i + table[texte[i]]\n    Renvoyer indices\n</code></pre> L'impl\u00e9mentation en python ne pose pas de probl\u00e8me particulier.        </p> <p>\u00c0 faire</p> <p>Impl\u00e9menter cet algorithme en python. Tester en cherchant la cha\u00eene <code>Julien tremblait</code> dans <code>le rouge et le noir</code> de Stendhal. Discuter des performances.</p> <pre><code>def bmh(texte, motif):\n    table = decalage(motif)\n    indices = []\n    m, n = len(motif), len(texte)\n    i = m-1\n    # \u00c0 compl\u00e9ter\n</code></pre> <pre><code>bmh(\"abracadabra\", \"bra\")\n</code></pre> <pre><code>[1, 8]\n</code></pre> <pre><code>fichier = open('LeRougeEtLeNoir.txt','r')\nstendhal = fichier.read()\nfichier.close()\nstendhal = stendhal.replace('\\n', ' ')\n</code></pre> <pre><code># Discussion\n</code></pre>"},{"location":"NSITerm/ALGO/C10C3.html#algorithme-de-boyer-moore","title":"Algorithme de Boyer-Moore","text":""},{"location":"NSITerm/ALGO/C10C4.html","title":"Introduction","text":"<p>Histoire</p> <p>La programmation dynamique est un concept algorithmique introduit au d\u00e9but des ann\u00e9es 1950 par le math\u00e9maticien am\u00e9ricain Richard Bellman.  </p> <p>Comme la m\u00e9thode \u00ab diviser pour r\u00e9gner\u00bb, elle consiste \u00e0 d\u00e9composer un probl\u00e8me difficile en sous-probl\u00e8mes plus simples \u00e0 r\u00e9soudre et \u00e0 les utiliser pour trouver la meilleure solution au probl\u00e8me initial.  </p> <p>La principale diff\u00e9rence entre ces deux approches est l'usage de la m\u00e9mo\u00efsation, c'est-\u00e0-dire l'enregistrement des valeurs interm\u00e9diaires des sous-probl\u00e8mes dans un cache pour \u00e9viter qu'ils ne soient calcul\u00e9s plusieurs fois. </p>"},{"location":"NSITerm/ALGO/C10C4.html#retour-sur-la-suite-de-fibonacci","title":"Retour sur la suite de Fibonacci","text":"<p>Au chapitre I on a rencontr\u00e9 cette suite:  </p> <p>la suite de Fibonacci d\u00e9finie par :</p> <ul> <li>\\(F_0 = 0\\)</li> <li>\\(F_1 = 1\\)</li> <li>\\(\\forall n \\in \\mathbb{N}, F_{n+2} = F_{n+1}+F_n\\)</li> </ul> <p>On avait alors choisit de r\u00e9soudre ce probl\u00e8me avec une approche r\u00e9cursive na\u00efve ayant des performances tr\u00e8s mauvaises. La faute aux nombreux calculs redondants.  </p> <p></p>"},{"location":"NSITerm/ALGO/C10C4.html#programmation-dynamique","title":"Programmation dynamique","text":""},{"location":"NSITerm/ALGO/C10C4.html#approche-top-down","title":"Approche Top-Down","text":"<p>La premi\u00e8re approche que nous utiliserons est l'approche Top-down. On part des sous probl\u00e8mes les plus grands vers les plus petits. L'id\u00e9e est similaire \u00e0 l'approche na\u00efve \u00e0 une diff\u00e9rence fondamentale pr\u00e8s: on sauve les solutions des sous probl\u00e8mes rencontr\u00e9s. Cela nous permet de calculer chaque sous probl\u00e8me exactement une fois.</p> <p></p>"},{"location":"NSITerm/ALGO/C10C4.html#algorithme","title":"Algorithme","text":"<p>Le choix est fait ici d'initialiser le cache servant \u00e0 accueillir les valeurs de la m\u00e9mo\u00efsation dans <code>fibo</code> puis d'appeler <code>TopDown_fibo</code>.</p> <pre><code>+-------------------------------------------------------+\n|              Algorithme fibo                          |\n+-------------------------------------------------------+\nEntree: \n    n: entier naturel\nSortie:\n    Le n-i\u00e8me terme de la suite Fibonacci\n\n    tab &lt;- tableau de n + 1 \u00e9l\u00e9ments, initialis\u00e9s \u00e0 z\u00e9ro\n\n    Renvoyer TopDown_fibo(n, tab)\n\n+-----------------------------------------------------------------+\n|         Algorithme TopDown_fibo                                 |\n+-----------------------------------------------------------------+\nEntr\u00e9es:\n    n: entier naturel\n    tab: tableau de n + 1 \u00e9l\u00e9ments pour la memo\u00efsation\nSortie:\n    Le n-i\u00e8me terme de la suite Fibonacci position n\n\n    Si n = 0 ou n = 1\n        Renvoyer n\n\n    Si tab[n] != 0:\n        Renvoyer tab[n]\n\n    tab[n] &lt;- TopDown_fibo(n - 1, tab) + TopDown_fibo(n - 2, tab)\n\n    Renvoyer tab[n]\n</code></pre>"},{"location":"NSITerm/ALGO/C10C4.html#approche-bottom-up","title":"Approche Bottom-Up","text":"<p>On commence par calculer les sous probl\u00e8mes plus petits pour aller vers les sous probl\u00e8mes plus grands.</p> <pre><code>+----------------------------------------+\n|  Algorithme BottomUp_fibo              |\n+----------------------------------------+\nEntr\u00e9es:\n    n: entier naturel\nSortie:\n    Le n-i\u00e8me terme de la suite Fibonacci\n\n    Si n = 0 ou n = 1\n        Renvoyer n\n\n    a &lt;- 0\n    b &lt;- 1\n\n    Pour i allant de 2 \u00e0 n\n        temp &lt;- a + b\n        a &lt;- b\n        b &lt;- temp\n\n    Renvoyer b\n</code></pre> <p>\u00c0 faire</p> <p>Impl\u00e9menter ces algorithmes en python</p>"},{"location":"NSITerm/ALGO/C10C4.html#un-exemple-en-detail-le-rendu-de-monnaie","title":"Un exemple en d\u00e9tail: le rendu de monnaie","text":"<p>On l'a vu en activit\u00e9 la strat\u00e9gie gloutonne, bien qu'int\u00e9ressante, ne donne pas toujours une solution optimale, notamment si le syst\u00e8me de pi\u00e8ces n'est canonique.  </p> <p>Essayons un autre algorithme, r\u00e9cursif, qui donnerait la solution optimale quelque soit le syst\u00e8me mon\u00e9taire utilis\u00e9. Le cas de base est trivial.  </p> <ul> <li>Si la somme \u00e0 rendre est nulle, aucune pi\u00e8ce n'est n\u00e9cessaire.</li> <li>Sinon, on consid\u00e8re chaque pi\u00e8ce \\(p\\) et on calcule r\u00e9cursivement le nombre de pi\u00e8ces minimal pour rendre \\((somme-p)\\)</li> </ul> <p>Comme exemple, supposons le syst\u00e8me form\u00e9 de <code>pieces = [1, 4, 5]</code> et la somme \u00e0 atteindre: 13.</p> <p></p> <p>Formalisation</p> <p>L'id\u00e9e est la suivante : pour rendre la somme \\(n\\) de fa\u00e7on optimale il faut rendre une pi\u00e8ce \\(p\\) et la somme \\(n-p\\) de fa\u00e7on optimale. Pour cela, il faut tester toutes les pi\u00e8ces \\(p\\) possibles et prendre celle qui minimise le nombre de pi\u00e8ces pour rendre pour la somme \\(n-p\\).</p> <p>Une solution r\u00e9cursive pourrait \u00eatre:  </p> <ul> <li><code>rendu(pieces, 0) = 0</code></li> <li><code>rendu(pieces, somme) = min(1 + rendu(pieces, somme - p))</code> avec \\(p\\in pieces\\) lorsque cela est possible.</li> </ul> <p>L'impl\u00e9mentation pourrait \u00eatre:</p> <pre><code>def rendu(pieces, somme):\n\"\"\"\n    Renvoie le nombre de pieces minimal 'nb_piece' n\u00e9cessaire pour former 'somme'\n    \"\"\"\n    # Cas de base\n    if somme == 0:\n        return 0\n    else:\n        nb_piece = somme\n        for p in pieces:\n            if p &lt;= somme: # on peut prendre la pi\u00e8ces\n                nb_piece = min(nb_pieces, 1 + rendu(pieces, somme-p))\n        return nb_piece\n</code></pre> <pre><code>rendu([1,2,5,10, 20], 30)\n</code></pre> <pre><code>2\n</code></pre> <p>Probl\u00e8me</p> <p>Les performances de ce code sont \u00e9pouvantables. Le probl\u00e8me vient des nombreux appels r\u00e9cursifs avec les m\u00eames param\u00e8tres.  Les sous probl\u00e8mes se chevauchent.</p> <p>Essayons la programmation dynamique, o\u00f9 une id\u00e9e forte est la m\u00e9mo\u00efsation. On calcule une fois chaque sous probl\u00e8me et on sauvegarde le r\u00e9sultat dans un tableau.</p>"},{"location":"NSITerm/ALGO/C10C4.html#approche-top-down_1","title":"Approche Top-Down","text":"<p>On part des probl\u00e8mes plus grands vers des probl\u00e8mes plus petits.</p> <pre><code>def rendu(pieces, s):\n\"\"\"Version r\u00e9cursive avec m\u00e9mo\u00efsation\"\"\"\n    memo = [None] * (s + 1) # intialisation du tableau avec des None \n    return rendu_topdown(pieces, s, memo)\n\ndef rendu_topdown(pieces, s, memo):\n    if memo[s] is not None: # si on a d\u00e9j\u00e0 calcul\u00e9 le nombre optimal de pi\u00e8ces pour rendre la somme s\n        return memo[s]      # on le renvoie directement\n    elif s == 0:\n        memo[s] = 0\n        return 0\n    else:\n        nb_pieces = s     # nb_pieces = 1 + 1 + ... + 1 dans le pire des cas\n        for p in pieces:\n            if p &lt;= s:   # inutile de tester une pi\u00e8ce dont la valeur d\u00e9passe la somme s \u00e0 rendre\n                nb_pieces = min(nb_pieces, 1 + rendu_topdown(pieces, s-p, memo))\n        memo[s] = nb_pieces\n        return nb_pieces\n</code></pre> <p>Tests</p> <p>Tester les performances de cette impl\u00e9mentation. Puis, donner une impl\u00e9mentation utilisant un dictionnaire plut\u00f4t qu'un tableau.</p>"},{"location":"NSITerm/ALGO/C10C4.html#approche-bottom-up_1","title":"Approche bottom-up","text":"### Lancer assert rendupy-undbottomup([1, 2, 5, 10, 20], 100) == 5bksl-nlassert rendupy-undbottomup([1, 2], 100) == 50bksl-nl Valider 4/4 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>def rendupy-undbottomup(pieces, somme):bksl-nl    \"\"\"bksl-nl    Renvoie le nombre de pieces minimal 'nbpy-undpiece' n\u00e9cessaire pour former 'somme'bksl-nl    \"\"\"bksl-nl    nbpy-undpiece = [0] py-str (somme+1) # initialisation du cachebksl-nl    for n in range(1, somme+1): # on effectue le calcul de tous les ss pb jusqu'\u00e0 sommebksl-nl        nbpy-undpiece[n] = nbksl-nl        for p in pieces:bksl-nl            if p &lt;= n:bksl-nl                nbpy-undpiece[n] = min(..., ...)bksl-nl    return nbpy-undpiece[somme]bksl-nldef rendupy-undbottomup(pieces, somme):bksl-nl    \"\"\"bksl-nl    Renvoie le nombre de pieces minimal 'nbpy-undpiece' n\u00e9cessaire pour former 'somme'bksl-nl    \"\"\"bksl-nl    nbpy-undpiece = [0] py-str (somme+1) # initialisation du cachebksl-nl    for n in range(1, somme+1): # on effectue le calcul de tous les ss pb jusqu'\u00e0 sommebksl-nl        nbpy-undpiece[n] = nbksl-nl        for p in pieces:bksl-nl            if p &lt;= n:bksl-nl                nbpy-undpiece[n] = min(nbpy-undpiece[n], 1 + nbpy-undpiece[n-p])bksl-nl    return nbpy-undpiece[somme]bksl-nl</p> <p>A</p> <p>Commentaires </p> <p>Le syst\u00e8me est compos\u00e9 de pi\u00e8ces \\(\\left[1,\\cdots p_i, \\cdots ,p_{max}\\right]\\).  </p> <p>On part de l'hypoth\u00e8se o\u00f9 on sait rendre de fa\u00e7on optimale toutes les valeurs strictement inf\u00e9rieures \u00e0 <code>somme</code>. Pour rendre <code>somme</code>, il faut au moins une pi\u00e8ce, \u00e0 prendre parmi les pi\u00e8ces disponibles du syst\u00e8me mon\u00e9taire. Une fois cette pi\u00e8ce choisie, la somme restante est inf\u00e9rieure (strictement) \u00e0 <code>somme</code>, donc on sait la rendre de fa\u00e7on optimale. Il suffit d'essayer toutes possibilit\u00e9s parmi les pi\u00e8ces du syst\u00e8me propos\u00e9:  </p> <p>\\(nb\\_ piece[somme]=1+min(nb\\_piece[somme-p_i]\\) pour \\(p_i\\in \\left[1\\cdots p_{max}\\right]\\)</p> <p>Z</p> <p>\u00c0 faire *** </p> <p>Par ailleurs, il serait int\u00e9ressant d'avoir en plus les pi\u00e8ces choisies. Sauriez-vous relever ce d\u00e9fi ?</p> <pre><code>Monnaie = [1,2,5,10,20,50,100,200,500]\ndico = {}\n\ndef rendudynamique2(s) :\n    if s in dico.keys():\n        return dico[s]\n    elif s == 0 :\n        dico[s] = 0\n        return 0\n    else:\n        L = []\n        for m in Monnaie :\n            if m &lt;= s :\n                if s-m in dico.keys() :\n                    N = 1 + dico[s-m]\n                else :\n                    N = 1 + rendudynamique2( s - m )\n                L.append(N)\n            else :\n                break\n    val = min(L)\n    dico[s] = val\n    return val\n</code></pre> <pre><code>rendudynamique2(383)\n</code></pre> <pre><code>7\n</code></pre> <p>On introduit un second tableau qui contient pour chaque somme la solution optimale</p> <pre><code>def rendudynamique1(pieces, somme):\n\"\"\"\n    Renvoie le nombre de pieces minimal 'nb_piece' n\u00e9cessaire pour former 'somme'\n    \"\"\"\n    nb_piece = [0] * (somme+1) # initialisation du cache\n    solution = [[]] * (somme+1) # liste pour la solution\n    for n in range(1, somme+1): # on effectue le calcul de tous les ss pb de 1 jusqu'\u00e0 somme\n        nb_piece[n] = n\n        solution[n] = [1] * n\n        for p in pieces:\n            if p &lt;= n and nb_piece[n] &gt; 1+nb_piece[n-p]:\n                nb_piece[n] = 1+nb_piece[n-p]\n                solution[n] = [c for c in solution[n-p]] + [p]\n    return solution[somme]\n</code></pre> <pre><code>rendudynamique1([1,2,5,10,20,50,100,200,500], 50)\n</code></pre> <pre><code>[50]\n</code></pre> <pre><code>def rendu(pieces, somme):\n\"\"\"\n    Renvoie le nombre de pieces minimal 'nb_piece' n\u00e9cessaire pour former 'somme'\n    \"\"\"\n    nb_piece = [0] * (somme+1) # initialisation du cache\n    solution = [0] * somme\n    for n in range(1, somme+1): # on effectue le calcul de tous les ss pb jusqu'\u00e0 somme\n        nb_piece[n] = n\n        #solution[n] = [1] * n\n        for i, p in enumerate(pieces):\n            if p &lt;= n and nb_piece[n] &gt; 1+nb_piece[n-p]:\n                nb_piece[n] = 1+nb_piece[n-p]\n                #solution[n] = solution[n-p].copy()\n                #solution[n].append(p)\n                solution[n-1] = i\n    return nb_piece, solution\n</code></pre> <pre><code>_, sol = rendu([1,2,3], 4)\n</code></pre> <pre><code>n = 4\nd = [1,2,3]\n</code></pre> <pre><code>while n &gt; 0:\n    print(sol[n-1])\n    n = n - d[sol[n-1]]\n</code></pre> <pre><code>0\n2\n</code></pre> <pre><code>sol\n</code></pre> <pre><code>[0, 0, 1, 2, 0]\n</code></pre> <pre><code>\n</code></pre>"},{"location":"NSITerm/ALGO/C10E2.html","title":"Algorithmique des graphes - Exercices","text":"<p>Donn\u00e9es</p> <p>Ces donn\u00e9es sont valables pour toute la fiche. Ne pas oublier d'ex\u00e9cuter les deux cellules de code associ\u00e9es.</p> <p> </p> <pre><code>from graphes import Graphe, GrapheOriente\n\n\ng1 = Graphe(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'])\ng1.ajouter_arete('A', 'B')\ng1.ajouter_arete('B', 'C')\ng1.ajouter_arete('C', 'E')\ng1.ajouter_arete('E', 'I')\ng1.ajouter_arete('I', 'H')\ng1.ajouter_arete('H', 'F')\ng1.ajouter_arete('F', 'A')\ng1.ajouter_arete('G', 'B')\ng1.ajouter_arete('G', 'F')\ng1.ajouter_arete('G', 'I')\ng1.ajouter_arete('D', 'B')\ng1.ajouter_arete('D', 'I')\n\ng2 = GrapheOriente([0, 1, 2, 3])\ng2.ajouter_arc(0, 1)\ng2.ajouter_arc(1, 2)\ng2.ajouter_arc(0, 3)\ng2.ajouter_arc(3, 1)\n\ng3 = GrapheOriente(['A', 'B', 'C', 'D'])\ng3.ajouter_arc('A', 'B')\ng3.ajouter_arc('A', 'D')\ng3.ajouter_arc('B', 'C')\ng3.ajouter_arc('D', 'C')\n</code></pre> <pre><code>from queue import Queue\n\n\ndef parcours_l(g, s):\n\"\"\"\n    Parcours en largeur un graphe g \u00e0 partir d'un sommet s.\n    \"\"\"\n    F = Queue()\n    dist = dict()\n    pred = dict()\n    for u in g.sommets():\n        dist[u] = float('inf')\n        pred[u] = None\n    dist[s] = 0\n    F.put(s)\n    # A compl\u00e9ter\n    while not F.empty():\n        u = F.get()\n        for v in g.voisins(u):\n            if dist[v] == float('inf'):\n                dist[v] = dist[u] + 1\n                pred[v] = u\n                F.put(v)\n    return dist, pred\n</code></pre>"},{"location":"NSITerm/ALGO/C10E2.html#appliquer-un-algorithme","title":"Appliquer un algorithme *","text":"<p>1. Appliquer l'algorithme de parcours en largeur sur le graphe <code>g1</code>, \u00e0 partir du sommet <code>H</code>. Donner les sommets rencontr\u00e9s ainsi que leur distance.</p> <pre><code>\n</code></pre> <p>2. Appliquer l'algorithme de parcours en profondeur sur le graphe <code>g2</code>. Ce graphe comporte-t-il un cycle ?</p> <pre><code>def parcours_p2(g, s, deja_vu, parent):\n\"\"\"\n    renvoie un bool\u00e9en suivant qu'un cycle ait \u00e9t\u00e9 d\u00e9tect\u00e9 ou non dans le graphe g.\n    deja_vu: dictionnaire de sommets d\u00e9j\u00e0 rencontr\u00e9s\n    parent: dictionnaire qui stocke le parent (valeur) d'un sommet (cl\u00e9) \n    \"\"\"\n    deja_vu[s] = True\n    for v in g.voisins(s):        \n        if v not in deja_vu:\n            parent[v] = s\n            if parcours_p2(g, v, deja_vu, parent):\n                return True\n        elif v != parent[s]: # Qu'en est-il d'un sommet d\u00e9j\u00e0 rencontr\u00e9? si c'est le parent, on passe ...\n            return True\n    return False\n\ndef detection_cycle(g):    \n    for s in g.sommets():\n        deja_vu = dict()\n        parent = dict()\n        if parcours_p2(g, s, deja_vu, parent):\n            return True\n    return False\n</code></pre>"},{"location":"NSITerm/ALGO/C10E2.html#afficher-un-chemin","title":"Afficher un chemin **","text":"<p>Construire le chemin allant d'un sommet origine <code>orig</code> \u00e0 un sommet <code>s</code> est facile \u00e0 partir d'un dictionnaire des pr\u00e9d\u00e9cesseurs <code>pred</code>. En effet, <code>pred[s]</code> permet de retrouver son p\u00e8re, <code>pred[pred[s]]</code> son grand p\u00e8re et ainsi de suite jusqu'\u00e0 <code>orig</code> o\u00f9 on s'arr\u00eate (son p\u00e8re est <code>None</code>). Dans la version de l'algorithme de parcours en largeur du cours, <code>pred</code> est construit au fur et \u00e0 mesure de l'exploration du graphe. Pour le parcours en profondeur, on modifie l\u00e9g\u00e8rement le code en transformant le dictionnaire <code>deja_vu</code> en <code>pred</code>. Voir le code ci-apr\u00e8s.</p> <pre><code>def parcours_p(g, pred, orig, s):\n\"\"\"\n    parcours r\u00e9cursivement, en profondeur, le graphe g, depuis le sommet s.\n    g: graphe\n    orig, s: sommets\n    pred: dictionnaire dont la cl\u00e9 est un sommet et la valeur est son pr\u00e9d\u00e9cesseur (p\u00e8re)\n    \"\"\"\n    pred[s] = orig\n    for v in g.voisins(s):\n        if v not in pred:\n            parcours_p(g, pred, s, v)\n</code></pre> <ol> <li>Compl\u00e9ter la fonction <code>affiche_chemin</code> ci-apr\u00e8s, qui prend en param\u00e8tres un graphe, un sommet de d\u00e9part <code>u</code> , un sommet d'arriv\u00e9e <code>v</code> et qui renvoie un le chemin menant de <code>u</code> \u00e0 <code>v</code> sous la forme d'une liste python.</li> </ol> <pre><code>def affiche_chemin(g, u, v):\n\"\"\"\n    g: graphe\n    u, v: sommets de d\u00e9part et d'arriv\u00e9e respectivement\n    \"\"\"\n    pred = dict()\n    parcours_p(g, pred, None, u)\n    if v not in pred:\n        return None\n    chemin = [] # contient le chemin existant entre u et v\n    s_fin = v # sommet d'arriv\u00e9e\n    # A compl\u00e9ter\n</code></pre> <ol> <li>Afficher le chemin menant de <code>A</code> \u00e0 <code>I</code>. Quelle est la longueur (nombre d'ar\u00eate) de ce chemin?</li> </ol> <pre><code>affiche_chemin(g1, 'A', 'I')\n</code></pre> <ol> <li>Le chemin trouv\u00e9 pr\u00e9c\u00e9demment est-il le plus court? Justifier la r\u00e9ponse en utilisant un parcours en largeur.</li> </ol>"},{"location":"NSITerm/ALGO/C10E2.html#detection-de-cycle-dans-un-graphe-oriente","title":"D\u00e9tection de cycle dans un graphe orient\u00e9 ***","text":""},{"location":"NSITerm/ALGO/C10E2.html#premiere-idee","title":"Premi\u00e8re id\u00e9e","text":"<p>Une premi\u00e8re id\u00e9e consiste \u00e0 modifier l\u00e9g\u00e8rement la fonction de parcours en profondeur de mani\u00e8re \u00e0 renvoyer un bool\u00e9en qui sera \u00e0 <code>True</code> si on tombe sur un sommet d\u00e9j\u00e0 visit\u00e9.</p> <pre><code>def parcours_p2(g, s, deja_vu):\n\"\"\"\n    parcours r\u00e9cursivement, en profondeur, le graphe G, depuis le sommet s.\n    g: graphe\n    s: sommet\n    deja_vu: dictionnaire de bool\u00e9en caract\u00e9risant le statut d'un sommet\n            (d\u00e9j\u00e0 visit\u00e9 ou non).\n    \"\"\"\n    if deja_vu[s]:\n        return True\n    deja_vu[s] = True\n    for v in g.voisins(s):\n        if parcours_p2(g, v, deja_vu):\n            return True\n    return False\n</code></pre> <p>On \u00e9crit une fonction de d\u00e9tection de cycle.</p> <pre><code>def detect_cycle(g, s):\n    d = dict()\n    # \u00e0 l'origine aucun sommet n'est visit\u00e9\n    for v in g.sommets():\n        d[v] = None\n    return parcours_p2(g, s, d)\n</code></pre> <pre><code>detect_cycle(g2, 3)\n</code></pre> <pre><code>False\n</code></pre> <pre><code>detect_cycle(g3, 'A')\n</code></pre> <pre><code>True\n</code></pre> <p>Donner une explication \u00e0 ces r\u00e9sultats.</p>"},{"location":"NSITerm/ALGO/C10E2.html#une-solution","title":"Une solution","text":"<p>En fait, il faut distinguer les sommets d\u00e9j\u00e0 vus: ceux dont l'exploration est en cours et ceux dont l'exploration est termin\u00e9e.  Une fa\u00e7on commune de r\u00e9aliser la distinction entre les sommets est de les \"colorier\":  </p> <ul> <li>un sommet non explor\u00e9 est BLANC;</li> <li>un sommet en cours d'exploration est GRIS;</li> <li>un sommet dont l'exploration est termin\u00e9e est NOIR.</li> </ul> <p>On va modifier quelque peu la fonction parcours en profondeur: le dictionnaire <code>deja_vu</code> sera renomm\u00e9 en <code>couleur</code>. Lors de la visite d'un sommet <code>s</code>:  </p> <ul> <li>si <code>couleur[s]</code> est GRIS, on a d\u00e9couvert un cycle (on renvoie <code>True</code>);</li> <li>si <code>couleur[s]</code> est NOIR, l'exploration est termin\u00e9e, il n'y a pas de cycle (on renvoie <code>False</code>);</li> </ul> <p>Si on passe ces deux tests, <code>s</code> est forc\u00e9ment BLANC, on va donc:  </p> <ul> <li>le colorier en GRIS;</li> <li>visiter r\u00e9cursivement tous ses voisins;</li> <li>le colorier en NOIR lorsque tous ses voisins auront \u00e9t\u00e9 explor\u00e9s et indiquer qu'aucun cycle n'a \u00e9t\u00e9 trouv\u00e9</li> </ul> <p>Coder la fonction <code>parcours_p</code> selon l'algorithme qui vient d'\u00eatre expos\u00e9. Puis tester avec la fonction <code>detect_cycle</code> propos\u00e9e.</p> <pre><code>def parcours_p(g, s, couleur):\n\"\"\"\n    \"\"\"\n    pass\n</code></pre> <pre><code>def detect_cycle(g, s):\n    coul = dict()\n    # \u00e0 l'origine aucun sommet n'est visit\u00e9 et sont tous BLANCS\n    for v in g.sommets():\n        coul[v] = 'BLANC'\n    return parcours_p(g, s, coul)\n</code></pre> <pre><code># TESTS - A EXECUTER\nassert detect_cycle(g2, 3) == False\nassert detect_cycle(g3, 'A') == False\nprint(\"Tout semble OK\")\n</code></pre>"},{"location":"NSITerm/ALGO/C10TP1.html","title":"Quelques op\u00e9rations sur les listes cha\u00een\u00e9es","text":""},{"location":"NSITerm/ALGO/C10TP1.html#comment-couper-une-liste-en-deux","title":"Comment couper une liste en deux ?","text":"<pre><code>class Cell:\n\"\"\" Classe cellule pour liste chain\u00e9e\"\"\"\n\n    def __init__(self, v, s):\n        self.val = v\n        self.suiv = s\n\nlst1 = Cell(10, Cell(5, Cell(-4, Cell(0, Cell(1, None)))))\nlst2 = Cell(2, lst1)\n</code></pre> <pre><code># TESTS - Visualiser avec pythontutor\nlst1 = Cell(10, Cell(5, Cell(-4, Cell(0, Cell(1, None)))))\nlst2 = Cell(2, lst1)\n</code></pre>"},{"location":"NSITerm/ALGO/C10TP1.html#proposition-1","title":"Proposition 1","text":"<p>Id\u00e9e:  </p> <ul> <li>trouver la taille \\(n\\) de la liste originale;  </li> <li>mettre ses \\(\\left\\lfloor \\dfrac{n}{2}\\right\\rfloor\\) premiers \u00e9l\u00e9ments dans une premi\u00e8re liste et les autres dans une seconde liste.</li> </ul> <pre><code>def taille(l):\n\"\"\" Renvoie la taille d'une liste l non vide\"\"\"\n\n    if l.suiv is None:\n        return 1\n    else:\n        return 1 + taille(l.suiv)\n</code></pre> <pre><code>print(taille(lst2))\n</code></pre> <pre><code>6\n</code></pre> <pre><code>def couper_liste_v1(l):\n\"\"\"\n    coupe la liste l en deux parties (\u00e9gales si la longueur de l est paire).\n    renvoie deux listes chain\u00e9es l1 et l2\n    \"\"\"\n    l1, l2 = None, None\n    t = taille(l)\n    nb_element = 0\n    while l is not None:\n        if nb_element &lt; t // 2:\n            l1 = Cell(l.val, l1)\n        else:\n            l2 = Cell(l.val, l2)\n        nb_element += 1\n        l = l.suiv\n    return l1, l2\n</code></pre> <pre><code>def afficher_liste(l):\n    while l is not None:\n        print(l.val, ' --&gt; ', end='')\n        l = l.suiv\n    print('None')\n</code></pre> <pre><code># TESTS\nl1, l2 = couper_liste_v1(lst2)\nafficher_liste(lst2)\nafficher_liste(l1)\nafficher_liste(l2)\n</code></pre> <pre><code>2  --&gt; 10  --&gt; 5  --&gt; -4  --&gt; 0  --&gt; 1  --&gt; None\n5  --&gt; 10  --&gt; 2  --&gt; None\n1  --&gt; 0  --&gt; -4  --&gt; None\n</code></pre>"},{"location":"NSITerm/ALGO/C10TP1.html#proposition-2","title":"Proposition 2","text":"<p>Id\u00e9e:  </p> <ul> <li>prendre deux \u00e9l\u00e9ments de la liste originale (si possible);</li> <li>disposer un \u00e9l\u00e9ment dans <code>l1</code> et l'autre dans <code>l2</code></li> </ul> <p>\u00c0 faire</p> <p>Compl\u00e9ter le code suivant.</p> <pre><code>def couper_liste_v2(l):\n\"\"\"\n    coupe l en deux parties (\u00e9gales si la longueur de l est paire).\n    renvoie deux listes chain\u00e9es l1 et l2\n    \"\"\"\n    l1, l2 = None, None\n    while l: # boucle tant qu'on a au moins 1 element dans l        \n        if l.suiv is not None: # On en a au moins 2 !\n            val1, val2 = ..., ...            \n            l1, l2 = Cell(..., ...), Cell(..., ...)\n            l = l.suiv.suiv\n        else: # il n'en reste qu'un seul !\n            val1 = l.val            \n            l1 = Cell(val1, l1)\n            l = None\n    return l1, l2\n</code></pre> <pre><code># TESTS\nl1, l2 = couper_liste_v2(lst1)\nafficher_liste(lst1)\nafficher_liste(l1)\nafficher_liste(l2)\n</code></pre> <pre><code>10  --&gt; 5  --&gt; -4  --&gt; 0  --&gt; 1  --&gt; None\n1  --&gt; -4  --&gt; 10  --&gt; None\n0  --&gt; 5  --&gt; None\n</code></pre>"},{"location":"NSITerm/ALGO/C10TP1.html#proposition-3-beaucoup-plus-tordue","title":"Proposition 3 (beaucoup plus tordue \ud83e\udd2e)","text":"<p>Id\u00e9e:  </p> <p>On parcours la liste originale et on place la valeur lue une fois dans <code>l1</code>, une fois dans <code>l2</code>.</p> <pre><code>def couper_liste_v3(l):\n    l1, l2 = None, None\n    while l is not None:\n        temp = l1\n        l1 = Cell(l.val, l2)\n        l2 = temp\n        l = l.suiv\n    return l1, l2\n</code></pre> <p>\u00c0 faire</p> <p>V\u00e9rifier la bonne compr\u00e9hension du code pr\u00e9c\u00e9dent sur pythontutor</p>"},{"location":"NSITerm/ALGO/C10TP1.html#comment-fusionner-deux-listes","title":"Comment fusionner deux listes ?","text":"<p>On souhaite \u00e9crire une fonction <code>fusion</code> qui prend en param\u00e8tre deux listes cha\u00een\u00e9es <code>l1</code> et <code>l2</code> (que l'on suppose tri\u00e9es par ordre croissant) et qui renvoie une liste cha\u00een\u00e9e contenant tous les \u00e9l\u00e9ments de <code>l1</code> et <code>l2</code> tri\u00e9s par ordre croissant.</p> <p>\u00c0 faire</p> <p>Compl\u00e9ter le code de la fonction <code>fusion</code></p> <pre><code>def fusion(l1, l2):\n\"\"\" Fusionne r\u00e9cursivement l1 et l2\"\"\"\n    if l1 is None: return l2\n    if l2 is None: return l1\n    if l1.val &lt; l2.val:\n        return Cell(l1.val, ...)\n    else:\n        return Cell(l2.val, ...)\n</code></pre> <pre><code># TESTS\nx = Cell(3, Cell(8, Cell(13, Cell(17, None))))\ny = Cell(-2, Cell(1, Cell(7, Cell(11, None))))\nafficher_liste(x)\nafficher_liste(y)\nliste_finale = fusion(x, y)\nafficher_liste(liste_finale)\n</code></pre> <pre><code>3  --&gt; 8  --&gt; 13  --&gt; 17  --&gt; None\n-2  --&gt; 1  --&gt; 7  --&gt; 11  --&gt; None\n-2  --&gt; 1  --&gt; 3  --&gt; 7  --&gt; 8  --&gt; 11  --&gt; 13  --&gt; 17  --&gt; None\n</code></pre>"},{"location":"NSITerm/ALGO/C10TP1.html#comment-trier-une-liste","title":"Comment trier une liste ?","text":""},{"location":"NSITerm/ALGO/C10TP1.html#exemple-du-tri-fusion","title":"Exemple du tri fusion","text":"<p>En utilisant les r\u00e9sultats pr\u00e9c\u00e9dents, \u00e9crire une fonction <code>tri_fusion</code> qui prend en param\u00e8tre une liste cha\u00een\u00e9e et qui renvoie une nouvelle liste cha\u00een\u00e9e tri\u00e9e.</p> <p>\u00c0 faire</p> <p>Compl\u00e9ter le code de la fonction <code>tri_fusion</code></p> <pre><code>def tri_fusion(lst):\n\"\"\" R\u00e9alise le tri de lst selon le paradigme diviser pour r\u00e9gner\"\"\"\n    # Cas de base: liste contenant 1 \u00e9l\u00e9ment\n    if lst.suiv is None:\n        return lst\n    # Cas r\u00e9cursif\n    partie_1, partie_2 = ... # diviser\n    return fusion(..., ...) # r\u00e9gner - combiner\n</code></pre> <pre><code># TESTS\nafficher_liste(lst1)\nafficher_liste(tri_fusion(lst1))\n</code></pre> <pre><code>10  --&gt; 5  --&gt; -4  --&gt; 0  --&gt; 1  --&gt; None\n-4  --&gt; 0  --&gt; 1  --&gt; 5  --&gt; 10  --&gt; None\n</code></pre>"},{"location":"NSITerm/ALGO/C10TP2.html","title":"TP 2 - TOMBER R2D2","text":""},{"location":"NSITerm/ALGO/C10TP2.html#le-probleme-a-resoudre","title":"Le probl\u00e8me \u00e0 r\u00e9soudre","text":"<p>On souhaite faire tomber R2D2 ! On peut remarquer qu'il s'agit en fait d'effectuer une rotation d'un quart de tour (ou 90\u00b0) d'une image carr\u00e9e, par exemple de 512 pixels sur 512 pixels. </p>"},{"location":"NSITerm/ALGO/C10TP2.html#principe-algorithme","title":"Principe - Algorithme","text":"<p>Le principe de l\u2019algorithme est illustr\u00e9 par la figure ci-dessous (o\u00f9 on effectue une rotation \u00e0 gauche). Il suit les trois phases de l\u2019approche \u00ab diviser pour r\u00e9gner \u00bb:  </p> <ol> <li>Diviser : l\u2019image est d\u00e9coup\u00e9e en quatre zones, par exemple nomm\u00e9es A, B, C et D.</li> <li>R\u00e9soudre (r\u00e9gner): chaque zone est tourn\u00e9e de 90\u00b0 par un appel r\u00e9cursif.</li> <li>Combiner : on place les zones tourn\u00e9es \u00e0 leur emplacement final, en d'autres termes, on effectue une permutation circulaire des quatre zones.</li> </ol> <p></p>"},{"location":"NSITerm/ALGO/C10TP2.html#modeliser-limage-comme-un-tableau-de-pixel","title":"Mod\u00e9liser l'image comme un tableau de pixel","text":"<pre><code>from PIL import Image\n\n\nim = Image.open(\"R2D2.png\")\nlargeur, hauteur = im.size\npix = im.load()\n</code></pre> <pre><code>largeur\n</code></pre> <pre><code>512\n</code></pre> <p><code>pix</code> est une instance de la classe <code>PixelAccess</code> du module <code>Image</code> de la librairie <code>PIL</code>. Cet objet peut \u00eatre vu comme un tableau de pixels. Ces derniers \u00e9tant des n-uplets des composantes Rouge, Vert et Bleu. Pour modifier un pixel aux coordon\u00e9es <code>x, y</code> on effectue l'affectation: <code>pix[x, y] = c</code> o\u00f9 <code>c</code> est un triplet repr\u00e9sentant une couleur.</p> <pre><code># Permet de visualier l'image avec le programme par d\u00e9faut\nim.show()\n</code></pre>"},{"location":"NSITerm/ALGO/C10TP2.html#resolution","title":"R\u00e9solution","text":"<p>On suppose pour simplifer que l'image est carr\u00e9e <code>(t x t)</code>o\u00f9 <code>t</code> est sa taille et correspond \u00e0 une puissance de 2. La proc\u00e9dure de r\u00e9solution est la suivante:  </p> <ul> <li>on d\u00e9coupe l'image en 4 et on effectue r\u00e9cursivement une rotation de 90\u00b0 (\u00e0 droite pour R2D2) de chacun des 4 morceaux dont le coin sup\u00e9rieur gauche est situ\u00e9 respectivement aux coordonn\u00e9es <code>(x, y)</code>, <code>(x+t, y)</code>, <code>(x, y+t)</code> et <code>(x+t, y+t)</code>;</li> <li>on d\u00e9place chacun des morceaux pr\u00e9c\u00e9dent vers leur position finale (permutation circulaire dans le sens horaire).</li> </ul> <p>On peut visualiser ces diverses op\u00e9rations sur le sch\u00e9ma ci-dessous </p> <p>La r\u00e9solution s'appuiera essentiellement sur une fonction auxiliaire (dont on trouvera la signature ci-dessous): <code>rotation_aux</code>.</p> <pre><code>def rotation_aux(px, coord, t):\n\"\"\" D\u00e9coupe une image en quatre et effectue la rotation de chacun des morceaux.\n    Puis, effectue une permutation circulaire des quadrants.\n    px: \"tableau de pixels\" (type PixelAcess);\n    coord: coordonn\u00e9es du coin sup\u00e9rieur gauche de l'image (tuple);\n    t: taille de l'image (int).\n    \"\"\"\n    x0, y0 = coord\n    # D\u00e9coupage et rotation \n    # \u00c0 compl\u00e9ter\n\n    # D\u00e9placement des morceaux\n    # \u00c0 compl\u00e9ter\n</code></pre> <p>\u00c0 faire</p> <p>Apr\u00e8s avoir compl\u00e9ter la fonction auxiliaire ci-dessus, tester votre code en r\u00e9alisant l'appel <code>tomber_R2D2(\"R2D2.png\")</code>.</p> <pre><code>from PIL import Image\n\n\ndef tomber_R2D2(img):\n\"\"\" \n    Tourne l'image 'img' d'1/4 de tour dans le sens des aiguilles d'une montre et l'affiche\n    img: nom de fichier image\n    \"\"\"\n\n    im = Image.open(img) # Utilisation de la libririe PIL pour plus de commodit\u00e9s\n    larg, haut = im.size\n    if larg == haut and larg &amp; (larg-1) == 0: # on v\u00e9rifie que l'image est carr\u00e9e et\n        # que sa taille est une puissance de 2\n        pix = im.load()\n        rotation_aux(pix, (0, 0), larg)\n        im.show()\n</code></pre> <pre><code>tomber_R2D2(\"R2D2.png\")\n</code></pre>"},{"location":"NSITerm/ALGO/C10TP3.html","title":"TP 3: Labyrinthe","text":"<p>\u00c0 partir d\u2019une grille rectangulaire \\(p \\times q\\) on obtient un labyrinthe en ajoutant un certain nombre de murs pour s\u00e9parer deux cases voisines. On convient en outre que ce labyrinthe est entour\u00e9 de murs sur toute sa p\u00e9riph\u00e9rie, de sorte qu\u2019il n\u2019est pas possible de sortir de la grille. La case situ\u00e9e en haut \u00e0 gauche, de coordonn\u00e9es (0, 0), est la case de d\u00e9part, celle situ\u00e9e en bas \u00e0 droite, de coordonn\u00e9es \\((p \u2212 1, q \u2212 1)\\), celle d\u2019arriv\u00e9e. Nous supposerons que tous ces labyrinthes ont une solution, \u00e0 savoir un chemin reliant le d\u00e9part \u00e0 l\u2019arriv\u00e9e.</p> <p></p>"},{"location":"NSITerm/ALGO/C10TP3.html#parcours-de-labyrinthe","title":"Parcours de labyrinthe","text":"<p>V\u00e9rifier la pr\u00e9sence du fichier <code>laby.py</code> dans le r\u00e9pertoire de votre notebook. Votre travail doit commencer par l'importation : <code>from laby import *</code>.</p> <p>Vous pouvez en consulter le contenu mais ce n\u2019est pas n\u00e9cessaire. Ce fichier contient la d\u00e9finition d\u2019une classe <code>Labyrinthe</code>. On obtient un labyrinthe en cr\u00e9ant une instance de cette classe ; deux arguments doivent \u00eatre donn\u00e9s : le nombre de lignes et le nombre de colonnes. Une fois cr\u00e9\u00e9, un labyrinthe peut \u00eatre visualis\u00e9 gr\u00e2ce \u00e0 la m\u00e9thode <code>show()</code>.</p> <pre><code>from laby import *\n</code></pre> <pre><code>lab = Labyrinthe(10, 15)\n</code></pre> <p>Comme vous pouvez le constater, \u00e0 sa cr\u00e9ation un labyrinthe est constitu\u00e9 de \\(p\\times q\\) cases toutes s\u00e9par\u00e9es par des murs. Plus pr\u00e9cis\u00e9ment, \u00e0 sa cr\u00e9ation un labyrinthe poss\u00e8de trois attributs :</p> <ul> <li><code>self.p</code> est le nombre de lignes;</li> <li><code>self.q</code> est le nombre de colonnes;</li> <li><code>self.tab</code> est un tableau de \\(p\\) lignes et \\(q\\) colonnes contenant des cases. Ces derni\u00e8res poss\u00e8dent quatre attributs <code>N, E, S, W</code> initialement \u00e9gaux \u00e0 <code>False</code>, qui indiquent la pr\u00e9sence ou non d\u2019un passage dans la direction correspondante.</li> </ul> <p>Par exemple, pour le labyrinthe repr\u00e9sent\u00e9 figure 1, la case de d\u00e9part est <code>self.tab[0][0]</code> et ses attributs valent :</p> <pre><code>self.tab[0][0].N = False\nself.tab[0][0].S = True\nself.tab[0][0].E = True\nself.tab[0][0].W = False\n</code></pre> <p>La m\u00e9thode create permet de percer un certain nombre de murs pour cr\u00e9er un labyrinthe fonctionnel :</p> <pre><code>lab.create()\nlab.show()\n</code></pre> <p></p>"},{"location":"NSITerm/ALGO/C10TP3.html#recherche-dune-solution","title":"Recherche d\u2019une solution","text":"<p>Maintenant que le labyrinthe est cr\u00e9\u00e9, nous allons nous int\u00e9resser \u00e0 la mani\u00e8re d\u2019en sortir. La d\u00e9marche que nous allons suivre pour sortir du labyrinthe s\u2019apparente \u00e0 celle de Th\u00e9s\u00e9e dans l\u2019antre du Minotaure : utiliser un fil d\u2019Ariane pour garder trace du chemin, et un morceau de craie pour marquer les cases d\u00e9j\u00e0 explor\u00e9es.  </p> <p>Principe</p> <p>Le principe de l\u2019algorithme est le suivant:  </p> <ul> <li>lorsqu\u2019on arrive sur une case, celle-ci est marqu\u00e9e puis on se rend sur l\u2019une de ses voisines non encore marqu\u00e9e.</li> <li>Lorsqu\u2019il n\u2019en existe pas, on revient sur nos pas en rembobinant le fil d\u2019Ariane jusqu\u2019\u00e0 la derni\u00e8re intersection poss\u00e9dant une branche non encore explor\u00e9e. </li> </ul> <p>Cette d\u00e9marche porte le nom de parcours en profondeur car chaque route est explor\u00e9e dans son entier avant d\u2019en explorer une nouvelle.</p>"},{"location":"NSITerm/ALGO/C10TP3.html#question-1","title":"Question 1.","text":"<p>Pour marquer les cases explor\u00e9es, on utilise un tableau <code>dejavu</code> de taille \\(p \\times q\\) contenant initialement la valeur <code>False</code> dans chacune de ses cases. Marquer une case revient \u00e0 faire passer cette valeur \u00e0 <code>True</code>.</p> <p>Le fil d\u2019Ariane sera repr\u00e9sent\u00e9 par une pile. Avancer dans le labyrinthe revient \u00e0 empiler les coordonn\u00e9es \\((i, j)\\) des cases parcourues ; revenir sur ses pas revient \u00e0 supprimer le sommet de la pile.</p> <p>\u00c0 faire</p> <p>\u00c0 l\u2019aide de ces deux indications, r\u00e9diger une fonction <code>explorer</code> qui prend en argument un labyrinthe et qui renvoie une pile contenant les cases \u00e0 parcourir pour relier le d\u00e9part \u00e0 l\u2019arriv\u00e9e. On utilisera la classe <code>Pile</code> fournie par le module <code>laby</code>, qui poss\u00e8de les m\u00e9thodes <code>empty</code>, <code>push</code> et <code>pop</code>.</p> <p>Remarque</p> <p>Pour pouvoir visualiser la solution trouv\u00e9e, la m\u00e9thode <code>show</code> de la classe <code>Labyrinthe</code> poss\u00e8de un argument optionnel qui, lorsqu\u2019il est pr\u00e9sent et \u00e9gal \u00e0 une pile de cases, affiche le chemin que cette pile d\u00e9crit. Ainsi, si <code>p</code> est la pile que vous a renvoy\u00e9e votre fonction <code>explorer</code>, vous pourrez v\u00e9rifier que votre solution est correcte en \u00e9crivant :  </p> <pre><code>lab.show(p)\n</code></pre> <pre><code>def explorer(lab):\n\"\"\" Explore le labyrinthe lab et renvoie une pile contenant le chemin jusqu'\u00e0 la sortie\"\"\"\n    chemin = Pile()\n    dejavu = [[False for j in range(lab.q)] for i in range(lab.p)]\n    chemin.push((0, 0)) # case de d\u00e9part\n    dejavu[0][0] = True\n    while not dejavu[lab.p-1][lab.q-1]:\n        # \u00c0 compl\u00e9ter        \n    return chemin\n</code></pre> <pre><code>solution = explorer(lab)\nlab.show(solution)\n</code></pre> <p></p>"},{"location":"NSITerm/ALGO/C10TP3.html#generation-de-labyrinthes","title":"G\u00e9n\u00e9ration de labyrinthes","text":"<p>Nous allons maintenant nous int\u00e9resser \u00e0 la g\u00e9n\u00e9ration \u00ab al\u00e9atoire \u00bb de labyrinthes. Il n\u2019existe pas de solution canonique \u00e0 ce probl\u00e8me, aussi allons nous nous restreindre \u00e0 la cr\u00e9ation de labyrinthes dits parfaits, c\u2019est \u00e0 dire lorsque deux cases quelconques peuvent toujours \u00eatre reli\u00e9es par un unique chemin.</p> <p></p> <p>La m\u00e9thode que nous allons mettre en \u0153uvre consiste \u00e0 commencer par un labyrinthe dont toutes les cases sont isol\u00e9es par des murs.  </p> <p>Une case est choisie arbitrairement et marqu\u00e9e comme \u00e9tant \u00ab visit\u00e9e \u00bb. On d\u00e9termine ensuite quelles sont les cases voisines et non visit\u00e9es, on en choisit une au hasard que l\u2019on marque comme ayant \u00e9t\u00e9 visit\u00e9e, et on ouvre le mur les s\u00e9parant.  </p> <p>On recommence ensuite avec la nouvelle case. Lorsqu\u2019il n\u2019y a plus de case voisine non visit\u00e9e, on revient \u00e0 la case pr\u00e9c\u00e9dente.</p> <p>Lorsqu\u2019on est revenu \u00e0 la case de d\u00e9part et qu\u2019il n\u2019y a plus de possibilit\u00e9, le labyrinthe est termin\u00e9.</p> <p>On observera que cette d\u00e9marche est tr\u00e8s voisine de la recherche d\u2019une solution que nous avons mis en \u0153uvre \u00e0 la question pr\u00e9c\u00e9dente : on utilise un tableau <code>dejavu</code> pour marquer les cases visit\u00e9es, et le parcours est g\u00e9r\u00e9 par une pile.</p>"},{"location":"NSITerm/ALGO/C10TP3.html#question-2","title":"Question 2","text":"<p>\u00c0 faire</p> <p>R\u00e9diger une fonction <code>creation1(lab)</code> qui prend en argument un labyrinthe dont toutes les parois sont ferm\u00e9es et qui en ouvre un certain nombre jusqu\u2019\u00e0 obtenir un labyrinthe parfait.</p> <p>Abattre une paroi</p> <p>On prendra garde au fait que pour ouvrir une paroi, il faut l'abattre des deux c\u00f4t\u00e9s. Par exemple, pour ouvrir la paroi situ\u00e9e entre les cases \\((i, j)\\) et \\((i + 1, j)\\) il faudra faire passer les deux valeurs <code>lab.tab[i][j].S</code> et <code>lab.tab[i+1][j].N</code> \u00e0 <code>True</code>.</p> <pre><code>from random import randint, choice\n\ndef voisins(lab, visite, i, j):\n\"\"\" Renvoie une liste des voisins non marqu\u00e9s d'une case i, j\"\"\"\n    v = dict()\n    if j &lt; lab.q - 1 and not visite[i][j+1]:\n        v['E'] = ('W', i, j+1)\n    if i &gt; 0 and not visite[i-1][j]:\n        v['N'] = ('S', i-1, j)\n    if j &gt; 0 and not visite[i][j-1]:\n        v['W'] = ('E', i, j-1)\n    if i &lt; (lab.p - 1) and not visite[i+1][j]:\n        v['S'] = ('N', i+1, j)\n    return v\n\ndef creation_lab(lab):\n    p = Pile()\n    dejavu = [[False for j in range(lab.q)] for i in range(lab.p)]\n    i, j = randint(0, lab.p-1), randint(0, lab.q-1)\n    p.push((i, j))\n    dejavu[i][j] = True # Choix d'une case i, j arbitraire comme d\u00e9part\n\n    while not p.empty():\n        # \u00c0 compl\u00e9ter\n</code></pre> <pre><code>lab = Labyrinthe(15, 18)\nlab.create()\ncreation_lab(lab)\nlab.show()\nsol = explorer(lab)\nlab.show(sol)\n</code></pre>"},{"location":"NSITerm/ALGO/C10TP3.html#question-3","title":"Question 3 (****)","text":"<p>D\u00e9duire de la question pr\u00e9c\u00e9dente le nombre de murs internes (ferm\u00e9s) dans un labyrinthe parfait de taille \\(p \\times q\\).</p>"},{"location":"NSITerm/ALGO/C11TD1.html","title":"Le programme du sous tableau maximal","text":""},{"location":"NSITerm/ALGO/C11TD1.html#un-exemple-dapplication","title":"Un exemple d'application","text":""},{"location":"NSITerm/ALGO/C11TD1.html#quand-acheter-et-quand-vendre-pour-maximiser-le-profit","title":"Quand acheter et quand vendre pour maximiser le profit?","text":""},{"location":"NSITerm/ALGO/C11TD1.html#modelisation","title":"Mod\u00e9lisation","text":"<p>On souhaite trouver un sous tableau maximal issu d'un sous tableau <code>A[g..d]</code>. On adopte l'approche diviser pour r\u00e9gner en divisant ce tableau en deux sous tableaux de taille sensiblement \u00e9gale <code>A[g..m]</code> et <code>A[m+1..d]</code>.  </p> <p></p> <p>Un sous tableau maximal peut se situer enti\u00e8rement dans la partie gauche <code>A[g..m]</code>, ou enti\u00e8rement dans la partie de droite <code>A[m+1..d]</code> ou ...  </p> <p> </p> <p>... \u00e0 cheval sur ces deux parties !  </p> <p>La recherche d'un sous tableau maximal peut se faire de mani\u00e8re r\u00e9cursive dans les parties gauches et droite. C'est une instance plus petite du m\u00eame probl\u00e8me initial. On cherche ensuite un sous tableau maximal \u00e0 cheval sur les parties gauche et droite (qui n'est pas une instance du probl\u00e8me initial). Enfin, on prendra le sous tableau ayant la plus grande somme des trois calcul\u00e9s pr\u00e9c\u00e9demment.</p>"},{"location":"NSITerm/ALGO/C11TD1.html#algorithmes","title":"Algorithmes","text":"<p>Tr\u00e8s fortement inspir\u00e9 de cet ouvrage de r\u00e9f\u00e9rence - chapitre 4, page 68.</p>"},{"location":"NSITerm/ALGO/C11TD1.html#sous-tableau-maximal-situe-au-milieu","title":"Sous tableau maximal situ\u00e9 au milieu","text":"<p>Il suffit de trouver deux sous-tableaux maximaux de la forme <code>A[i..m]</code> et <code>A[m+1..j]</code> puis de les combiner.  </p> <p>ALGORITHME 1</p> <pre><code>Algorithme ss_tab_milieu(A, g, m, d)\nEntr\u00e9es: \n    A: tableau d'entiers relatifs;\n    g, m, d: index de tableau, entiers naturels\nSortie:\n    les index d'un sous tableau maximal, ainsi que la somme maximale associ\u00e9e.\n\ns_gauche = - infini\ns = 0\nPour i allant de m \u00e0 g (en d\u00e9croissant)\n    s = s + A[i]\n    Si s &gt; s_gauche:\n        s_gauche = s\n        idx_gauche = i\ns_droite = - infini\ns = 0\nPour j allant de m+1 \u00e0 d\n    s = s + A[j]\n    Si s &gt; s_droite:\n        s_droite = s\n        idx_droite = j\nRenvoyer idx_gauche, idx_droite, s_gauche+s_droite\n</code></pre>"},{"location":"NSITerm/ALGO/C11TD1.html#sous-tableau-maximal","title":"Sous tableau maximal","text":"<p>ALGORITHME 2</p> <pre><code>Algorithme ss_tab_maximal(A, g, d)\nEntr\u00e9es: \n    A: tableau d'entiers relatifs;\n    g, d: index extr\u00eames d'un tableau, entiers naturels\nSortie:\n    les index d'un sous tableau maximal, ainsi que la somme maximale associ\u00e9e.\n\nSi d = g\n    Renvoyer g, d, A[d]\nSinon\n    m = partie enti\u00e8re inf\u00e9rieure de (g+d) / 2\n    idx_i_gauche, idx_j_gauche, s_gauche = ss_tab_maximal(A, g, m)\n    idx_i_droite, idx_j_droite, s_droite = ss_tab_maximal(A, m+1, d)\n    idx_i_milieu, idx_j_milieu, s_milieu = ss_tab_milieu(A, g, m, d)\n\n    Si s_gauche &gt;= s_droite ET s_gauche &gt;= s_milieu\n        Renvoyer idx_i_gauche, idx_j_gauche, s_gauche\n    Sinon Si s_droite &gt;= s_gauche ET s_droite &gt;= s_milieu\n        Renvoyer idx_i_droite, idx_j_droite, s_droite\n    Sinon\n        Renvoyer idx_i_milieu, idx_j_milieu, s_milieu\n</code></pre>"},{"location":"NSITerm/ALGO/C11TD1.html#analyse-simplifiee-du-cout-des-algorithmes","title":"Analyse simplifi\u00e9e du co\u00fbt des algorithmes","text":"<p>Soit \\(n\\) la taille du tableau d'entr\u00e9e. L'algorithme de recherche de sous tableau au milieu a clairement une complexit\u00e9 temporelle en \\(\\mathcal{O}(n)\\). En effet, les deux boucles Pour permettent de parcourir tout le tableau <code>A</code>.  </p> <p>Pour le deuxi\u00e8me algorithme, le cas de base prend un temps constant. Pour le cas r\u00e9cursif et pour un tableau de taille \\(n\\), on doit r\u00e9soudre:  </p> <ul> <li>2 probl\u00e8mes de taille \\(n/2\\);</li> <li>le probl\u00e8me de recherche du sous tableau au milieu</li> </ul> <p>plus des op\u00e9rations \u00e0 co\u00fbt constant. De ce fait, r\u00e9soudre un probl\u00e8me de taille \\(n\\) prendra un temps:  </p> \\[T(n)=2T(n/2) + \\mathcal{O}(n)\\] <p>Il existe un th\u00e9or\u00e8me (th\u00e9or\u00e8me g\u00e9n\u00e9ral) premettant de r\u00e9soudre cette \u00e9quation de r\u00e9currence. On admettra ici la solution:  </p> \\[T(n)=\\mathcal{O}(n\\log_2 n)\\] <p>Remarque</p> <p>Ce co\u00fbt est nettement meilleur que le co\u00fbt quadratique de l'algorithme na\u00eff (brute force) rencontr\u00e9 dans le sujet de bac blanc 2021.</p>"},{"location":"NSITerm/ALGO/C11TD1.html#travail-a-faire","title":"Travail \u00e0 faire","text":"<p>\u00c0 faire</p> <p>Impl\u00e9menter ces deux algorithmes en Python. Tester (notamment avec l'exemple du bac blanc, que l'on peut retrouver \u00e0 cette adresse).</p>"},{"location":"NSITerm/ARSE/C14C1.html","title":"S\u00e9curisation des communications","text":"<p>Vocabulaire</p> <p>Un rapide survol de quelques termes utilis\u00e9s dans ce cours.  </p> <ul> <li>Chiffrement: op\u00e9ration qui consiste \u00e0 transformer un texte clair en cryptogramme;</li> <li>Cl\u00e9: dans un syst\u00e8me de chiffrement, elle correspond \u00e0 un nombre, un mot, une phrase, etc. qui permet,  gr\u00e2ce \u00e0 l'algorithme de chiffrement, de chiffrer ou de d\u00e9chiffrer un message;</li> <li>Cryptogramme: message \u00e9crit avec un syst\u00e8me de chiffrement;</li> <li>D\u00e9chiffrement: op\u00e9ration inverse du chiffrement.</li> </ul>"},{"location":"NSITerm/ARSE/C14C1.html#reperes-historiques","title":"Rep\u00e8res historiques","text":"<ul> <li>Vers 1900 av. JC, un scribe \u00e9gyptien emploie des hi\u00e9roglyphes non conformes \u00e0 la langue correcte dans une inscription. </li> <li>60-50 av. JC, Jules C\u00e9sar emploie une substitution simple avec l'alphabet normal.</li> <li>En 1585, Blaise de Vigen\u00e8re pr\u00e9sente un tableau appel\u00e9 \u00e0 tort \"carr\u00e9 de Vigen\u00e8re\".</li> <li>En 1854, Charles Babbage casse le chiffre de Vigen\u00e8re.</li> <li>1933-1945, utilisation de la machine Enigma dont le chiffre est cass\u00e9 avec des machines par une \u00e9quipe men\u00e9e par Alan Turing.</li> <li>1976 apparition de l'algorithme DES.</li> <li>1977 apparition de l'algorithme RSA (Rivest Shamir Adleman) qui deviendra un standard.</li> <li>2000 Algorithme Rijndael (contraction du nom des deux auteurs) dont une version devient le standard AES utilis\u00e9 actuellement. </li> </ul>"},{"location":"NSITerm/ARSE/C14C1.html#chiffrement-symetrique","title":"Chiffrement sym\u00e9trique","text":""},{"location":"NSITerm/ARSE/C14C1.html#principe","title":"Principe","text":"<p>Une premi\u00e8re m\u00e9thode de chiffrement d'un message est le chiffrement sym\u00e9trique. De mani\u00e8re formelle, on doit disposer de trois algorithmes:  </p> <ul> <li>un algorithme de g\u00e9n\u00e9ration de cl\u00e9s qui renvoie une cl\u00e9 secr\u00e8te <code>k</code>;</li> <li>un algorithme de chiffrement <code>chiffrement(m, k)</code> qui prend en param\u00e8tres un message en clair <code>m</code>, une cl\u00e9 de chiffrement <code>k</code> et qui renvoit en sortie un message chiffr\u00e9 <code>c</code>.</li> <li>un algorithme de d\u00e9chiffrement <code>dechiffrement(c, k)</code> qui prend en param\u00e8tres un message chiffr\u00e9 <code>c</code>, une cl\u00e9 de chiffrement <code>k</code> et qui renvoie le message en clair <code>m</code>.</li> </ul> <p>Le terme sym\u00e9trique vient du fait que la m\u00eame cl\u00e9 est utilis\u00e9e le chiffrer et d\u00e9chiffrer le message.</p> <p>Analogie</p> <p>Une analogie courante au chiffrement sym\u00e9trique est l'utilisation d'un coffre fort: Bob et Alice peuvent s'\u00e9changer des messages de mani\u00e8re s\u00e9curis\u00e9e en les pla\u00e7ant dans un coffre fort, dont ils ont chacun une cl\u00e9 (identique).</p> <p></p> <p>Remarque</p> <p>Pour \u00eatre s\u00fbr, des conditions sur la cl\u00e9 doivent \u00eatre respect\u00e9es: elle doit \u00eatre aussi longue que le texte, totalement al\u00e9atoire et \u00eatre utilis\u00e9e qu'une fois.</p>"},{"location":"NSITerm/ARSE/C14C1.html#un-exemple-naif-le-chiffre-de-cesar","title":"Un exemple na\u00eff: le chiffre de C\u00e9sar","text":"<p>Le chiffrement de C\u00e9sar est un chiffrement sym\u00e9trique.</p> <pre><code>k = 10 # la cl\u00e9 secr\u00e8te\n\nalphab = {chr(i + 65): chr((i+k)%26 + 65) for i in range(26)}\nprint(alphab)\n</code></pre> <pre><code>{'A': 'K', 'B': 'L', 'C': 'M', 'D': 'N', 'E': 'O', 'F': 'P', 'G': 'Q', 'H': 'R', 'I': 'S', 'J': 'T', 'K': 'U', 'L': 'V', 'M': 'W', 'N': 'X', 'O': 'Y', 'P': 'Z', 'Q': 'A', 'R': 'B', 'S': 'C', 'T': 'D', 'U': 'E', 'V': 'F', 'W': 'G', 'X': 'H', 'Y': 'I', 'Z': 'J'}\n</code></pre> <pre><code>def chiffrement(m, k):\n    alphab = {chr(i + 65): chr((i+k)%26 + 65) for i in range(26)}\n    return \"\".join([alphab.get(c, c) for c in m])\n</code></pre> <p>Syntaxe python</p> <p>L'aide sur la m\u00e9thode <code>get</code> des dictionnaires en python et la m\u00e9thode de cha\u00eene <code>join</code>, fournit:</p> <pre><code>&gt;&gt;&gt; help(dict.get)\nHelp on method_descriptor:\n\nget(self, key, default=None, /)\nReturn the value for key if key is in the dictionary, else default.\n\n&gt;&gt;&gt; help(str.join)\njoin(self, iterable, /)\nConcatenate any number of strings.\n\nThe string whose method is called is inserted in between each given string.\nThe result is returned as a new string.\n\nExample: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'\n</code></pre> <pre><code>c = chiffrement(\"MESSSAGE, HEY!!\", 3)\nprint(c)\n</code></pre> <pre><code>PHVVVDJH, KHB!!\n</code></pre> <p>\u00c0 faire</p> <p>\u00c9crire la fonction de d\u00e9chiffrement et tester.</p> <pre><code>def d_s(s, k):\n    pass\n</code></pre>"},{"location":"NSITerm/ARSE/C14C1.html#autre-exemple-utilisation-de-la-fonction-xor","title":"Autre exemple: utilisation de la fonction xor","text":"<p>Lorsque le message est mis sous forme binaire (code ascii par exemple), la fonction logique XOR (vue en 1re) peut \u00eatre utilis\u00e9e pour le chiffrement. Elle poss\u00e8de une propri\u00e9t\u00e9 remarquable: elle est r\u00e9versible. Autrement dit:   </p> <p>Si \\(A\\oplus B = C\\) alors \\(A\\oplus C = B\\) et \\(B\\oplus C = A\\)</p> <p>Python</p> <p>L'op\u00e9rateur ou exclusif en python se note <code>^</code>. Ainsi, \\(A\\oplus B\\) s'\u00e9crira <code>A ^ B</code>.</p> <pre><code>def chiffrement_xor(m, k):\n    n = len(m)# longueur du message\n    l = len(k)# longueur de la cl\u00e9\n\n    res = [0] * n # le r\u00e9sultat\n    j = 0\n    for i in range(n):\n        res[i] = ord(m[i]) ^ ord(k[j])\n        j = (j + 1) % l # la cl\u00e9 utilis\u00e9e est peut \u00eatre plus petite que m ?\n    return ''.join([chr(c) for c in res])\n</code></pre> <pre><code>m = 'BONJOUR, COMMENT ALLEZ-VOUS'\nk = 'communication chiffree'\nchiffrement_xor(m, k)\n</code></pre> <pre><code>'! #\\':;;OA7&amp;\"#e-&lt;I\\'*&gt; ?N9\"8&amp;'\n</code></pre> <pre><code>chiffrement_xor(\"\"\"! #\\':;;OA7&amp;\"#e-&lt;I\\'*&gt; ?N9\"8&amp;\"\"\", 'communication chiffree')\n</code></pre> <pre><code>'BONJOUR, COMMENT ALLEZ-VOUS'\n</code></pre>"},{"location":"NSITerm/ARSE/C14C1.html#difficulte-de-mise-en-oeuvre","title":"Difficult\u00e9 de mise en oeuvre","text":"<p>La premi\u00e8re difficult\u00e9 que pr\u00e9sente ce syst\u00e8me est la longueur et le nombre des cl\u00e9s n\u00e9cessaires, (avec le probl\u00e8me de leurs transmissions au correspondant, de leur stockage durable, accessible et secret, de leur identification). On travaille en effet souvent avec plusieurs correspondants, ayant chacun plusieurs jeux de cl\u00e9s en commun.</p> <p>Ensuite g\u00e9n\u00e9rer des cl\u00e9s r\u00e9ellement al\u00e9atoires n\u00e9cessite des moyens complexes.</p> <p>Enfin garantir l'utilisation unique de chaque cl\u00e9, m\u00eame \u00e0 des ann\u00e9es d'intervalle, pose des probl\u00e8mes d'organisation importants : \u00e0 d\u00e9faut, la s\u00e9curit\u00e9 du syst\u00e8me peut \u00eatre compromise.</p> <p>Voir wikipedia</p>"},{"location":"NSITerm/ARSE/C14C1.html#exemple-de-chiffrement-symetrique","title":"Exemple de chiffrement sym\u00e9trique","text":"<p>Il existe deux principales techniques de chiffrement sym\u00e9trique:</p> <ul> <li>le chiffrement par flot dont les principaux repr\u00e9sentatnts sont ChaCha20 ou RCA;</li> <li>le chiffrement par bloc avec notamment AES ou DES qui est osol\u00e8te.</li> </ul>"},{"location":"NSITerm/ARSE/C14C1.html#chiffrement-asymetrique","title":"Chiffrement asym\u00e9trique","text":"<p>Le chiffrement sym\u00e9trique souffre d'un grave probl\u00e8me: celui de la transmission de la cl\u00e9 secr\u00e8te sur un canal non s\u00e9curis\u00e9. Ce probl\u00e8me a \u00e9t\u00e9 r\u00e9solu en 1976 par W. Diffie &amp; M. Hellman: il s'agit du chiffrement \u00e0 cl\u00e9 publique, qui est un chiffrement asym\u00e9trique.</p> <p>Analogie</p> <p>Une analogie courante est celle de la bo\u00eete aux lettres postale: n'importe qui peut envoyer un message \u00e0 Bob (\u00e0 condition d'avoir son adresse ... cl\u00e9 publique) mais Bob sera le seul \u00e0 pouvoir r\u00e9cup\u00e9rer et lire le message car il est le seul \u00e0 disposer de la cl\u00e9 de la bo\u00eete (cl\u00e9 priv\u00e9e).</p> <p></p> <p>Dans un chiffrement asym\u00e9trique, on dispose de trois algorithmes:</p> <ul> <li>un algorithme de g\u00e9n\u00e9ration d'une paire de cl\u00e9 (<code>pk</code>, <code>sk</code>) pour respectivement public key et secret key; <code>pk</code> est diffus\u00e9 \u00e0 tout le monde alors que <code>sk</code> reste la propri\u00e9t\u00e9 exclusive de Bob;</li> <li>un algorithme de chiffrement qui prend en entr\u00e9e <code>m</code> ainsi que la cl\u00e9 public <code>pk</code> et qui renvoie le message chiffr\u00e9 <code>c</code>;</li> <li>un algorithme de d\u00e9chiffrement qui prend en entr\u00e9e le message chiffr\u00e9 <code>c</code> ainsi que la cl\u00e9 secr\u00e8te <code>sk</code> et qui renvoie le message d\u00e9chiffr\u00e9 <code>m</code>.</li> </ul>"},{"location":"NSITerm/ARSE/C14C1.html#exemples","title":"Exemples","text":""},{"location":"NSITerm/ARSE/C14C1.html#chiffrement-rsa","title":"Chiffrement RSA","text":"<p>Il s'agit d'un des syst\u00e8mes les plus utilis\u00e9s. Il a \u00e9t\u00e9 invent\u00e9 en 1978 par Rivest, Shamir et Adleman. Il repose sur des propri\u00e9t\u00e9s de l'arithm\u00e9tique modulaire (voir le lien pr\u00e9c\u00e9dent, notamment pour les \u00e9l\u00e8ves suivant l'option math expertes).</p>"},{"location":"NSITerm/ARSE/C14C1.html#chiffrement-diffie-hellman","title":"Chiffrement Diffie Hellman","text":"<p>Il s'agit de permettre la cr\u00e9ation d'une cl\u00e9 secr\u00e8te sans avoir \u00e0 la faire circuler sur le r\u00e9seau. On fait souvent l'analogie avec des pots de peinture.</p> <p></p>"},{"location":"NSITerm/ARSE/C14C1.html#securiser-une-communication","title":"S\u00e9curiser une communication","text":"<p>Que signifie connexion s\u00e9curis\u00e9e?</p> <p>On associe ces termes \u00e0 HTTPS. HTTPS est un alias pour HTTP + TLS. TLS est un protocole signifiant Transport Layer Security . TLS permet de s\u00e9curiser les communications (entre autres le protocole HTTP) en garantissant 3 propri\u00e9t\u00e9s:</p> <ul> <li>la confidentialit\u00e9;</li> <li>l'authenticit\u00e9;</li> <li>l'int\u00e9grit\u00e9 (s'assurer de la non alteration d'un message lors de son parcours sur le reseau)</li> </ul> <p>En premier lieu, on doit avoir un certains nombre d'\u00e9tapes appel\u00e9 TLS Handshake, avant d'\u00e9tablir une connexion s\u00e9curis\u00e9e:</p> <ul> <li>Message Hello du client : le client envoie un message d'accueil du client contenant la version du protocole, le hasard du client et une liste de suites de chiffrement.</li> <li>Le serveur g\u00e9n\u00e8re le secret principal : \u00e0 ce stade, le serveur a re\u00e7u les param\u00e8tres et les suites de chiffrement al\u00e9atoires du client.</li> <li> <p>Serveur hello et \u00ab Fini \u00bb: le message serveur hello comprend:</p> <ul> <li>le certificat du serveur;</li> <li>la signature num\u00e9rique;</li> <li>le nombre serveur al\u00e9atoire;</li> <li>la suite de chiffrement choisie.</li> </ul> <p>Comme il poss\u00e8de d\u00e9j\u00e0 le secret ma\u00eetre, il envoie \u00e9galement un message \u00ab Fini \u00bb.</p> </li> <li> <p>\u00c9tapes finales et message client \u00ab Fini \u00bb: le client v\u00e9rifie la signature et le certificat, g\u00e9n\u00e8re le secret ma\u00eetre et envoie le message \u00ab Fini \u00bb.</p> </li> <li>Chiffrement sym\u00e9trique s\u00e9curis\u00e9 effectu\u00e9</li> </ul> <p>Voir vid\u00e9o</p> <p>Pour les plus curieux</p> <p>Il existe une chaine Youtube tr\u00e8s bien faite pour la vulgarisation du chiffrement: L'informateur</p>"},{"location":"NSITerm/ARSE/C14TP1.html","title":"TP - Espionner les communications entre Bob et Alice","text":"<p>Bob et Alice communiquent en utilisant un chiffrement construit en 1974, mais qui n'a \u00e9t\u00e9 publi\u00e9 qu'en 1978. Il permet \u00e0 deux parties de se mettre d'accord sur un secret en commun par l'\u00e9change de messages, et sans que ces partis n'aient pr\u00e9alablement de secret commun.</p>"},{"location":"NSITerm/ARSE/C14TP1.html#la-technique","title":"La technique","text":"<p>Supposons qu'Alice et Bob veulent communiquer en utilisant une cl\u00e9 secr\u00e8te commune. Pour \u00e9tablir cette cl\u00e9, Bob envoie \u00e0 Alice un message qui consiste en un tr\u00e8s grand nombre de puzzles, chacun assez petit pour qu'Alice puisse le r\u00e9soudre par attaque par force brute. Les puzzles sont de la forme d'un message chiffr\u00e9 avec une cl\u00e9 inconnue, donc la cl\u00e9 est assez courte.</p> <p>Bob envoie tous les messages \u00e0 Alice. Elle en s\u00e9lectionne un au hasard et le r\u00e9sout par force brute. Le message chiffr\u00e9 contient un identificateur (du choix d'Alice) et une cl\u00e9 secr\u00e8te, dite cl\u00e9 de session. Alice renvoie l'identificateur \u00e0 Bob, qui sait alors \u00e9galement quelle est la cl\u00e9 de session.</p>"},{"location":"NSITerm/ARSE/C14TP1.html#exemple","title":"Exemple","text":"<p>Voici un exemple de message (pas encore chiffr\u00e9) pouvant \u00eatre g\u00e9n\u00e9r\u00e9 par Bob :</p> <p>identi\ufb01cateur : 135674 \u2013 cl\u00e9 : <code>fQ98c~m{)*e9+G!-</code> identi\ufb01cateur : 426891 \u2013 cl\u00e9 : <code>VMQ&gt;Dm2|uyFU8$z\\\\</code> identi\ufb01cateur : 734562 \u2013 cl\u00e9 : <code>H\\\\&gt;hq]D/x.K\\\\-Ov}</code> identi\ufb01cateur : 924252 \u2013 cl\u00e9 : <code>nSV)ayafjvzA9zXz</code></p> <p>Ce message est constitu\u00e9 d'un indentificateur num\u00e9rique et d'une cl\u00e9 compos\u00e9e de 16 caract\u00e8res. </p> <p>Ce fichier sera chiffr\u00e9 en utilisant le chiffrement XOR, avec une cl\u00e9 diff\u00e9rente pour chaque ligne.  </p> <p>Dans notre exemple ...</p> <p>La cl\u00e9 devra \u00eatre assez courte pour que le d\u00e9chiffrement d'une ligne ne soit pas trop long.</p> <p>Voici un extrait du \ufb01chier chi\ufb00r\u00e9 qui sera transmis sur le r\u00e9seau :</p> <p>47 96 83 70 114 111 49 101 24 90 72 94 135 113 82 136 96 120 65 92 70 136 31 120 106 102 31 60 116 125 76 ... 40 42 89 117 45 21 93 145 104 66 98 143 77 100 135 31 82 90 40 37 107 83 82 139 6 11 52 62 88 30 94 117 ... 139 68 120 21 82 102 27 6 56 50 123 23 77 113 41 106 66 141 123 124 76 104 45 17 91 20 3 32 117 124 98 67 ... 127 4 14 48 89 143 43 129 130 110 23 11 102 121 131 104 102 95 105 21 70 148 128 146 132 40 73 41 4 87 81 93 ... 66 </p> <p>Alice choisira une ligne au hasard dans ce \ufb01chier. Ensuite, elle d\u00e9chiffrera cette ligne en testant toutes les cl\u00e9s possibles.  Admettons qu\u2019elle choisisse et d\u00e9chiffre la ligne suivante :  </p> <p>identi\ufb01cateur : <code>924252</code>\u2013 cl\u00e9 : <code>nSV)ayafjvzA9zXz</code> </p> <p>Alice transmettra en clair <code>924252</code> sur le r\u00e9seau \u00e0 destination de Bob. Il saura alors que la cl\u00e9 de session \u00e0 utiliser sera <code>nSV)ayafjvzA9zXz</code>. Alice et Bob communiquerons alors avec cette cl\u00e9 lors de leurs prochains \u00e9changes.  </p> <p>Le pirate \u00c8ve, a la t\u00e2che plus difficile. Il ne sait pas quel puzzle a \u00e9t\u00e9 r\u00e9solu. La meilleure strat\u00e9gie pour \u00c8ve est de r\u00e9soudre tous les puzzles, ce qui est beaucoup plus co\u00fbteux pour lui que pour Alice. </p>"},{"location":"NSITerm/ARSE/C14TP1.html#generation-du-fichier-identifiantscles-par-bob","title":"G\u00e9n\u00e9ration du fichier identifiants/cl\u00e9s par Bob.","text":"<p>Mission 1</p> <p>Cr\u00e9er une fonction <code>gene_cle</code> qui :</p> <ul> <li>prend en param\u00e8tre un entier <code>n</code>;</li> <li>renvoie une cl\u00e9 qui sera une cha\u00eene de caract\u00e8re de longueur <code>n</code> compos\u00e9e de caract\u00e8res al\u00e9atoires dont les codes ASCII sont entre 33 et 126.</li> </ul> <p>On rappelle que les codes UTF-8 et ASCII sont identiques, ainsi pour vous aider voici un lien vers une table ASCII.</p> <p>On pourra utiliser la fonction <code>randint</code> de Python dont la documention est disponible ici</p> <pre><code>from random import randint\n\ndef gene_cle(n : int) -&gt; str:\n    # Votre code ici.\n    pass\n</code></pre> <pre><code># Test.\n\ngene_cle(16)\n</code></pre> <p>Mission 2</p> <p>Cr\u00e9er une fonction <code>gene_dico_cles</code> qui :</p> <ul> <li>prend en param\u00e8tre un entier <code>nombre_lignes</code> et un entier <code>taille_cle</code>;</li> <li>renvoie un dictionnaire contentant <code>nombre_lignes</code> \u00e9l\u00e9ments. Les cl\u00e9s de ce dictionnaire seront des identificateurs, c'est-\u00e0-dire des nombres al\u00e9atoires qui seront uniques. Les valeurs seront des cl\u00e9s de longueurs <code>taille_cle</code> comme vu pr\u00e9c\u00e9dement.</li> </ul> <p>Pour obtenir des identifiants uniques, vous pourrez utiliser la fonction <code>sample</code> de python.  Vers la documentation de sample.</p> <pre><code>from random import sample\n\ndef gene_dico_cles(nombre_lignes : int, taille_cle : int) -&gt; dict:\n    # Votre code ici.\n    pass\n</code></pre> <pre><code># Test.\n\nprint(gene_dico_cles(10,16))\n</code></pre> <p>Mission 3</p> <p>Compl\u00e9ter le code ci-dessous de fa\u00e7on \u00e0 obtenir un fichier similaire \u00e0 celui de l'exemple. On souhaite obtenir un fichier de 100 lignes avec des cl\u00e9s de longueur 16.</p> <pre><code>dico_cle = gene_dico_cles(...)\n\nwith open(\"fichier_cles.txt\", \"w\",encoding=\"UTF-8\") as fichier:\n    for ident in dico_cle:\n        # Votre code ici\n        pass    \n</code></pre> <p>Indication</p> <p>Une fois la cellule pr\u00e9c\u00e9dente ex\u00e9cut\u00e9e, ouvrez le fichier <code>fichier_cles.txt</code>, cr\u00e9\u00e9 dans le r\u00e9pertoire courant, pour v\u00e9rifier son contenu</p> <p>Mission 4</p> <p>Compl\u00e9ter le code ci-dessous de fa\u00e7on \u00e0 \u00e9crire dans le fichier <code>fichier_cles_chiffre.txt</code>. La fonction <code>chiffrer_fichier</code> aura :</p> <ul> <li>en param\u00e8tre la taille de la cl\u00e9 utilis\u00e9e pour chiffrer chaque ligne. Attention, la cl\u00e9 doit \u00eatre diff\u00e9rente pour chaque ligne; Important : La cl\u00e9 sera compos\u00e9e de lettres en majuscule.</li> <li>pas de sortie, le fichier <code>fichier_cles_chiffre.txt</code> sera enregistr\u00e9 dans le m\u00eame dossier.</li> </ul> <p>En pr\u00e9ambule</p> <p>Ex\u00e9cuter la cellule suivante fournissant les fonctions de chriffrement et de d\u00e9chiffrement XOR.</p> <pre><code># Cette cellule ne doit pas \u00eatre modifi\u00e9e.\n\n# Fonctions de chiffrement de type XOR\n# La fonction c(message,cle) permet de chiffrer un message avec une cl\u00e9 en utilisant le chiffrement XOR. \n# Le retour sera une cha\u00eene de caract\u00e8re constitu\u00e9e des codes UTF-8 des caract\u00e8res chiffr\u00e9s.\n\n# La fonction d(message,cle) permet de d\u00e9chiffrer un message avec une cl\u00e9 en utilisant le chiffrement XOR. \n# En entr\u00e9e, message est une cha\u00eene de caract\u00e8re constitu\u00e9e des codes UTF-8 des caract\u00e8res chiffr\u00e9s.\n# Le retour sera une cha\u00eene de caract\u00e8re constitu\u00e9e des codes UTF-8 des caract\u00e8res chiffr\u00e9s.\n\n\ndef texte_2_UTF(texte : str)-&gt;list:\n    tab_codes_UTF = []\n    for c in texte:\n        tab_codes_UTF.append(ord(c))\n    return tab_codes_UTF\n\nassert texte_2_UTF(\"MESSAGE\") == [77, 69, 83, 83, 65, 71, 69]\n\n# Python peut effectuer l'op\u00e9ration XOR directement avec les entiers, il n'est \n# donc pas nescessaire de convertir en binaire le message\n# L'op\u00e9rateur XOR s'effectue avec ^ en python\n\ndef c(message,cle):\n    # Conversion des textes en codes UTF-8\n    message_clair = texte_2_UTF(message)    \n    tab_cle_initial = texte_2_UTF(cle)\n    tab_cle = []\n    n,m = len(message_clair),len(tab_cle_initial)\n    # R\u00e9p\u00e8te la cl\u00e9 autant de fois que nescessaire\n    for i in range(n):\n        tab_cle.append(tab_cle_initial[i%m])\n    message_chiffre = [] \n    # Effectue le XOR entre le message et la cl\u00e9.   \n    for i in range(n):\n        message_chiffre.append(message_clair[i] ^ tab_cle[i])\n    texte_chiffre = ''\n    for c in message_chiffre:\n        texte_chiffre += str(c)+' '\n    return texte_chiffre\n\n\ndef d(message_chiffre,cle):\n    # Conversion des textes en codes UTF-8\n    message_chiffre = message_chiffre.split()\n    tab_cle_initial = texte_2_UTF(cle)\n    tab_cle = []\n    n,m = len(message_chiffre),len(tab_cle_initial)\n    # R\u00e9p\u00e8te la cl\u00e9 autant de fois que nescessaire\n    for i in range(n):\n        tab_cle.append(tab_cle_initial[i%m])\n    message_clair = [] \n    # Effectue le XOR entre le message et la cl\u00e9.   \n    for i in range(n):\n        message_clair.append(int(message_chiffre[i]) ^ tab_cle[i])\n    texte_dechiffre = ''\n    for c in message_clair:\n        texte_dechiffre += chr(c)\n    return texte_dechiffre\n</code></pre> <pre><code>def chiffrer_fichier(taille_cle : int):\n    with open(\"fichier_cles.txt\", \"r\",encoding=\"UTF-8\") as fichier1, open(\"fichier_cles_chiffre.txt\", \"w\",encoding=\"UTF-8\") as fichier2:\n        for ligne in fichier1:\n            # Votre code ici.\n            pass\n</code></pre> <pre><code>chiffrer_fichier(4)\n# Ouvrez le fichier \"fichier_cles_chiffre.txt\" pour v\u00e9rifier le bon fonctionnement de votre code.\n</code></pre>"},{"location":"NSITerm/ARSE/C14TP1.html#dechiffrement-dune-ligne-par-alice","title":"D\u00e9chiffrement d'une ligne par Alice","text":"<p>Dans cette partie, Alice choisit une ligne au hasard. Elle va ensuite la d\u00e9chiffrer par force brute. On supposera qu'elle conna\u00eet la taille de la cl\u00e9 utilis\u00e9e par Bob (4 dans notre exemple).</p> <p>Une fois qu'elle l'aura d\u00e9chiffr\u00e9e, elle enverra \u00e0 Bob l'identificateur pour qu'il sache quelle cl\u00e9 de chiffrement sera utilis\u00e9e pour leurs prochains \u00e9changes. </p> <p>Mission 5</p> <p>Compl\u00e9ter le code ci-dessous de fa\u00e7on \u00e0 lire le fichier <code>fichier_cles_chiffre.txt</code>. La liste <code>toutes_lignes</code> contiendra chaque lignes du fichier. La variable <code>ligne_selectionne</code> contiendra une de ces lignes choisie au hasard.</p> <pre><code>with open(\"fichier_cles_chiffre.txt\", \"r\", encoding=\"UTF-8\") as fichier:\n    # \u00c0 compl\u00e9ter.\n    toutes_lignes = [...]    \n    i = randint(0, ...)\n    ligne_selectionnee = ...\n\nprint(ligne_selectionnee)\n</code></pre> <p>Mission 6</p> <p>Compl\u00e9ter le code ci-dessous.</p> <p>La fonction <code>dechiffrer_force_brute</code>:</p> <ul> <li>prend en param\u00e8tre <code>ligne</code> qui est une chaine de caract\u00e8re (la ligne \u00e0 d\u00e9chiffrer) et <code>taille_cle</code> un entier qui repr\u00e9sente la taille de la cl\u00e9 utilis\u00e9e par Bob;</li> <li>en sortie la fonction renvoie la ligne d\u00e9chiffr\u00e9e (lisible en clair).</li> </ul> <p>Indice</p> <p>La fonction saura que la cl\u00e9 est bonne si un terme connu est lisible en clair.</p> <pre><code>from itertools import product\nfrom string import ascii_uppercase\n\ndef dechiffrer_force_brute(ligne,taille_cle):\n    # liste_cles contient toutes les cl\u00e9s possibles\n    liste_cles = [''.join(x) for x in product(ascii_uppercase, repeat=taille_cle)]\n    # Votre code ici.\n    pass\n</code></pre> <p>R\u00e9flexion</p> <p>Testez votre code et voyez le temps nescessaire pour d\u00e9chiffrer une ligne...</p> <pre><code>%%time\ndechiffrer_force_brute(ligne_selectionnee, 4)\n</code></pre> <p>Mission 7</p> <p>En admettant que le temps pour le d\u00e9chiffrement soit le m\u00eame pour chaque ligne. Combien de temps faudrait-il \u00e0 un attaquant pour d\u00e9chiffrer le fichier en entier si il contient 100 lignes ?</p> <p>R\u00e9ponse:</p>"},{"location":"NSITerm/ARSE/C14TP1.html#la-bataille-finale","title":"La bataille finale ...","text":"<p>\ud83d\ude09 D\u00e9sol\u00e9 pour celui qui y verra un message subliminal ... Fallait bien que \u00e7a arrive une fois en deux ans \ud83e\udd23</p> <p>Alice transmet l'identificateur : 328192</p> <p>Puis le message :</p> <p>43 6 83 73 49 23 46 63 17 72 1 85 119 123 34 57 17 67 74 94 126 29 46 35 149 78 10 23 123 43 42 57 22 16 71 85 42 90 60 52 1 1 3 73 58 53 34 35 69 26 67 78 38 90 41 48 149 68 68 90 46 123 53 63 9 6 79 87 126 22 42 39 19 79 16 21 123 23 39 112 19 12 79 94 126 12 42 35 1 1 8 94 123 43 39 41 22 67 66 94 45 90 34 62 0 85 23 21 123 20 191 112 17 22 6 79 59 90 59 35 29 84 18 94 40 123 35 62 69 0 67 27 51 21 34 52 28 85 72 27 54 52 40 112 4 14 79 21 126 33 97 127 92 124 68 117 62 46 52 63 73 67 66 94 126 20 42 35 20 82 72 27 56 62 53 112 6 11 67 86 55 20 60 113 22 6 5 73 60 62 40 36 75 67 99 79 126 23 46 63 17 72 1 85 117 123 5 63 8 14 67 27 48 147 44 35 29 76 5 85 56 50 35 62 75 67 108 28 55 20 57 62 3 84 1 27 55 62 53 112 8 12 84 79 45 84 111 28 19 72 23 27 53 52 40 124 69 14 73 85 126 27 34 56 82 9 1 79 123 55 35 112 2 2 84 220 49 20 111 48 17 66 11 86 43 55 47 36 69 22 72 94 126 10 42 37 27 85 1 27 63 58 40 35 0 79 6 75 55 31 43 34 82 67 22 78 53 40 102 35 66 10 75 75 44 19 34 48 28 85 68 72 46 41 102 60 0 67 85 90 60 22 42 120 94 1 14 94 123 40 51 57 22 67 74 94 45 90 34 62 0 85 23 23 123 55 35 35 69 14 73 73 42 9 111 52 6 1 8 94 46 41 102 36 0 17 84 82 42 21 38 35 23 15 </p> <p>On sait que la taille de la cl\u00e9 de chiffrage du message est de 4.</p> <p>Enfin</p> <p>Vous \u00eates enfin Eve (Eavedropper), l'espion mal intentionn\u00e9e.  </p> <p>Vous avez intercept\u00e9 le fichier chiffr\u00e9 envoy\u00e9 par Bob. Il se nomme <code>[HACKED]fichier_cles_chiffre.txt</code>. Il contient les identificateurs et les cl\u00e9s. Mais il est chiffr\u00e9 ! Vous savez aussi que l'identifiant choisit par Alice est 328192. \u00c0 vous de casser le code et de trouver le message envoy\u00e9 par Alice !  </p> <p>Trouvez aussi la r\u00e9f\u00e9rence cach\u00e9e dans ce message pour gagner le respect de tous !</p> <pre><code># Lecture du fichier \"[HACKED]fichier_cles_chiffre.txt\"\n\n# Votre code ici.\n</code></pre> <pre><code># D\u00e9cryptage du fichier \"[HACKED]fichier_cles_chiffre.txt\" .\n\n%%time\n# Votre code ici.\n</code></pre> <pre><code># D\u00e9cryptage du message.\n# Votre code ici.\n</code></pre> <p>A quoi ce message fait-il r\u00e9f\u00e9rence ? R\u00e9ponse:</p>"},{"location":"NSITerm/ARSE/C15C1.html","title":"Syst\u00e8mes sur puce","text":"<p>Source</p> <p>Cours de G. Lassus - Lyc\u00e9e F. Mauriac</p> <p></p> <p>pr\u00e9ambule : cours de Premi\u00e8re sur l'architecture Von Neumann</p>"},{"location":"NSITerm/ARSE/C15C1.html#1-loi-de-moore-et-miniaturisation-progressive","title":"1. Loi de Moore et miniaturisation progressive","text":""},{"location":"NSITerm/ARSE/C15C1.html#11-la-loi-de-moore","title":"1.1 La Loi de Moore","text":"<p>En 1965, Gordon Moore postule que le nombre de transistors pr\u00e9sents sur une puce de microprocesseur doublera tous les deux ans.</p> <p>Cette pr\u00e9diction s'est r\u00e9v\u00e9l\u00e9e \u00e9tonnamment juste (\u00e0 quelques approximations pr\u00e8s) et les \u00e9quipements \u00e9lectroniques n'ont depuis jamais cess\u00e9 de devenir toujours plus performants / miniatures / \u00e9conomes en \u00e9nergie.</p> <p></p>"},{"location":"NSITerm/ARSE/C15C1.html#12-evolution-de-la-taille-des-ordinateurs","title":"1.2  \u00c9volution de la taille des ordinateurs","text":""},{"location":"NSITerm/ARSE/C15C1.html#121-ibm-650-le-premier-ordinateur-fabrique-en-serie-1955","title":"1.2.1 IBM 650, le premier ordinateur fabriqu\u00e9 en s\u00e9rie (1955)","text":"<p>Cet ordinateur n'a pas encore de transistors mais des tubes \u00e0 vide.</p>"},{"location":"NSITerm/ARSE/C15C1.html#122-ibm-7090-le-premier-ordinateur-a-transistors-1959","title":"1.2.2 IBM 7090, le premier ordinateur \u00e0 transistors (1959)","text":"<p>Le transistor</p> <p>Le transistor est un composant \u00e9lectronique essentiel : il permet de laisser (ou non) passer un courant \u00e9lectrique. </p>"},{"location":"NSITerm/ARSE/C15C1.html#123-le-role-crucial-de-la-taille-des-transistors","title":"1.2.3 Le r\u00f4le crucial de la taille des transistors","text":"<p>Ainsi que l'avait pr\u00e9dit Moore, c'est la progression du nombre de transistors gravables sur le processeur qui guidera pendant des ann\u00e9es l'\u00e9volution de l'informatique :</p> <p></p>"},{"location":"NSITerm/ARSE/C15C1.html#2-composition-dun-pc-actuel","title":"2. Composition d'un pc actuel","text":"<p>Chaque composant a un r\u00f4le sp\u00e9cifique. Ils communiquent entre eux par des bus de diff\u00e9rentes vitesses. Chaque composant est rempla\u00e7able, et il est possible d'ajouter de nouveaux composants sur la carte m\u00e8re qui poss\u00e8de des slots d'extension.</p>"},{"location":"NSITerm/ARSE/C15C1.html#3-tout-un-pc-sur-une-seule-puce-les-soc","title":"3. Tout un pc sur une seule puce : les SoC","text":""},{"location":"NSITerm/ARSE/C15C1.html#31-lintegration-de-composants-differents-au-sein-dune-meme-puce","title":"3.1 L'int\u00e9gration de composants diff\u00e9rents au sein d'une m\u00eame puce","text":"<p>Le principe d'un syst\u00e8me sur puce ou System On a Chip (SoC) est d'int\u00e9grer au sein d'une puce unique un ensemble de composants habituellement physiquement dissoci\u00e9s dans un ordinateur classique (ordinateur de bureau ou ordinateur portable).</p> <p>On peut retrouver ainsi au sein d'une m\u00eame puce :</p> <ul> <li>le microprocesseur (CPU)</li> <li>la carte graphique (GPU)</li> <li>la m\u00e9moire RAM</li> </ul> <p>+ \u00e9ventuellement des composants de communication (WiFi, Bluetooth...)</p> <p>Avantages et inconv\u00e9nients d'un SoC </p> <p> Avantages</p> <ul> <li>moindre consommation \u00e9lectrique</li> <li>moindre encombrement</li> <li>pas besoin de refroidissement</li> <li>meilleure s\u00e9curit\u00e9 (vue globale sur la s\u00e9curit\u00e9 qui n'est plus d\u00e9pendante d'une multitude de composants)</li> <li>moindre co\u00fbt (forte automisation du processus, gros volumes de production)</li> </ul> <p> Inconv\u00e9nients</p> <ul> <li>Impossibilit\u00e9 de choisir ind\u00e9pendamment ses composants</li> <li>Pas de mise \u00e0 jour possible / remplacement / ajout d'un composant</li> <li>La panne d'un seul composant entra\u00eene la panne totale du SoC</li> </ul>"},{"location":"NSITerm/ARSE/C15C1.html#32-exemple-a15-bionic","title":"3.2 Exemple : A15 Bionic","text":"<p>Observons par exemple la puce Apple A15 Bionic, qui \u00e9quipe les iPhone 13. Cette puce est fabriqu\u00e9e par TSMC.</p> <p></p> <p></p> <p>Cette puce contient :</p> <ul> <li>15 milliards de transistors (grav\u00e9s \u00e0 5 nm)</li> <li>un processeur central \u00e0 6 c\u0153urs (2 c\u0153urs hautes performances + 4 c\u0153urs plus \u00e9conomes en \u00e9nergie)</li> <li>un GPU (processeur d\u00e9di\u00e9 uniquement au calcul du rendu graphique) de 5 c\u0153urs.</li> <li>une puce d\u00e9di\u00e9e au Machine Learning (Neural Engine)</li> </ul>"},{"location":"NSITerm/ARSE/C15C1.html#4-des-puces-dediees-a-des-taches-specifiques","title":"4. Des puces d\u00e9di\u00e9es \u00e0 des t\u00e2ches sp\u00e9cifiques","text":"<p>L'int\u00e9gration dans un SoC n'est pas totale : il reste des puces d\u00e9di\u00e9es \u00e0 des t\u00e2ches tr\u00e8s sp\u00e9cifiques qui ne sont pas forc\u00e9ment int\u00e9gr\u00e9es dans le SoC.</p>"},{"location":"NSITerm/ARSE/C15C1.html#41-au-sein-dun-telephone","title":"4.1 Au sein d'un t\u00e9l\u00e9phone","text":"<p>Ainsi, d'apr\u00e8s le site iFixit, on peut retrouver ceci dans l'iPhone Pro 13, au c\u00f4t\u00e9 de la puce A15 \u00e9voqu\u00e9e plus haut :</p> <p> </p> <p>On voit que (par exemple) qu'il existe une puce sp\u00e9cifique pour g\u00e9rer l'audio, une puce sp\u00e9cifique pour le module WiFi, une puce sp\u00e9cifique pour le module Modem 5G...</p>"},{"location":"NSITerm/ARSE/C15C1.html#42-en-electronique-grand-public","title":"4.2 En \u00e9lectronique \u00abgrand public\u00bb","text":"<p>Ce composant (pouvant \u00eatre utilis\u00e9 dans un montage personnel, sur un Arduino par exemple) ne sert qu'\u00e0 faire des calculs cryptographiques.</p>"},{"location":"NSITerm/ARSE/C15C1.html#43-un-principe-general","title":"4.3 Un principe g\u00e9n\u00e9ral","text":"<p>Il est important de comprendre que certains processeurs sont optimis\u00e9s pour un certains types de calcul. C'est le cas par exemple d'une carte graphique, qui excelle dans le calcul de rendus de polygones.</p> <p>On s'est aper\u00e7u que cette aptitude \u00e0 faire des calculs \u00abb\u00eates et r\u00e9p\u00e9titifs\u00bb \u00e9tait parfaite pour faire les calculs math\u00e9matiques (inutiles) n\u00e9cessaires au minage des cryptomonnaies. Les cartes graphiques ont donc \u00e9t\u00e9 d\u00e9tourn\u00e9es de leur usage originel, \u00e0 cause de la sp\u00e9cificit\u00e9 de l'impl\u00e9mentation de leur puce.</p> <p>De m\u00eame, les calculs sur les r\u00e9seaux de neurones (essentiels en IA) n\u00e9cessitent une grande rapidit\u00e9 dans les multiplications de matrices. Pour cette raison, Apple a int\u00e9gr\u00e9 directement dans son SoC A15 une puce sp\u00e9calis\u00e9e dans ces calculs (voir plus haut).</p>"},{"location":"NSITerm/ARSE/C15C1.html#44-conclusion","title":"4.4 Conclusion","text":"<p>L'orientation actuelle de l'\u00e9lectronique est donc \u00e0 la fois :</p> <ul> <li>une int\u00e9gration toujours plus grande dans des SoC multi-t\u00e2ches.</li> <li>des puces toujours plus sp\u00e9cifiques qui excellent dans un domaine particulier.</li> </ul>"},{"location":"NSITerm/ARSE/C15C1.html#5-exercice","title":"5. Exercice","text":"<p>Exercice (Polyn\u00e9sie 2021)</p> \u00c9nonc\u00e9Correction <p>Un constructeur automobile int\u00e8gre \u00e0 ses v\u00e9hicules des syst\u00e8mes embarqu\u00e9s, comme par exemple un syst\u00e8me de guidage par satellites (GPS), un syst\u00e8me de freinage antiblocage (ABS)... </p> <p>Ces dispositifs utilisent des syst\u00e8mes sur puces (SoC : System on a Chip).</p> <p>Citer deux avantages \u00e0 utiliser ces syst\u00e8mes sur puces plut\u00f4t qu'une architecture classique d'ordinateur.</p> Bibliographie / Sitographie <ul> <li>Num\u00e9rique et Sciences Informatiques, Terminale, T. BALABONSKI, S. CONCHON, J.-C. FILLIATRE, K. NGUYEN, \u00e9ditions ELLIPSES.</li> <li>Pr\u00e9pabac NSI, Terminale, G.CONNAN, V.PETROV, G.ROZSAVOLGYI, L.SIGNAC, \u00e9ditions HATIER.</li> <li>https://fr.wikipedia.org/wiki/Loi_de_Moore</li> <li>https://blog.iakaa.com/lordinateur-fete-ses-60-ans/</li> <li>https://www.thewindowsclub.com/history-of-computers</li> <li>https://perso-etis.ensea.fr//lorandel/M2_SoC/s1.pdf</li> <li>https://www.hawkpointtechnologies.com/about/blog/computer-components</li> <li>https://www.tremplin-numerique.org/apple-a15-vs-a14-quoi-de-neuf-dans-la-puce-de-liphone-13</li> <li>https://www.distrelec.be/fr/cryptoprocesseur-breakout-atecc608a-sparkfun-electronics-dev-18077/p/30241877</li> </ul>"},{"location":"NSITerm/ARSE/C7C1.html","title":"Gestion des ressources par un SE","text":""},{"location":"NSITerm/ARSE/C7C1.html#programme","title":"Programme","text":"Contenus Capacit\u00e9s attendues Commentaires Gestion des processus et des ressources par un syst\u00e8me d\u2019exploitation. D\u00e9crire la cr\u00e9ation d\u2019un processus, l\u2019ordonnancement de plusieurs processus par le syst\u00e8me. Mettre en \u00e9vidence le risque de l\u2019interblocage (deadlock). \u00c0 l\u2019aide d\u2019outils standard, il s\u2019agit d\u2019observer les processus actifs ou en attente sur une machine. Une pr\u00e9sentation d\u00e9branch\u00e9e de l\u2019interblocage peut \u00eatre propos\u00e9e."},{"location":"NSITerm/ARSE/C7C1.html#le-systeme-dexploitation","title":"Le syst\u00e8me d'exploitation","text":"<p>La t\u00e2che principale d'un syst\u00e8me d'exploitation est de servir d'interm\u00e9diaire entre les applications utilisateurs et le mat\u00e9riel.</p> <p>Le diagramme ci-dessous d\u00e9taille quelque peu ce r\u00f4le d'interm\u00e9diaire. </p> <p>Les syst\u00e8mes d'exploitation les plus courants sont: Linux, Microsoft Windows, MacOS, android, etc.</p>"},{"location":"NSITerm/ARSE/C7C1.html#du-programme-au-processus","title":"Du programme au processus","text":"<p>C'est au processeur que revient la t\u00e2che d'ex\u00e9cuter les instructions des programmes. </p> <p>Programme</p> <p>Un programme est une suite d'instructions statique, g\u00e9n\u00e9ralement stock\u00e9e sous forme de fichier ex\u00e9cutable, sur le disque.</p> <p>Lors de la lanc\u00e9e d'un programme, le noyau du syst\u00e8me d'exploitation (kernel en anglais) lui alloue des ressources mat\u00e9rielles (m\u00e9moire, temps processeur, etc). Cette instance du programme qui s'ex\u00e9cute s'appelle un processus.</p> <p>\u00c0 retenir</p> <p>Un processus est un programme en cours d'ex\u00e9cution. C'est une entit\u00e9 dynamique contrairement au fichier stock\u00e9 sur le disque.</p> <p>Les processus peuvent \u00eatre cr\u00e9\u00e9s par le syst\u00e8me (pilotes entr\u00e9es/sorties, sauvegarde, d\u00e9mons, etc.) ou par l'utilisateur en lan\u00e7ant ses applications.</p>"},{"location":"NSITerm/ARSE/C7C1.html#ordonnancement-des-processus","title":"Ordonnancement des processus","text":"<p>Un processus ne peut \u00e0 lui seul monopoliser le processeur qui doit \u00eatre partag\u00e9 dans le temps. C'est \u00e0 l'ordonnanceur (scheduler en anglais) que revient cette t\u00e2che.  </p> <p>Chaque processus va donc alterner entre des \u00e9tats d'ex\u00e9cution et des \"\u00e9tats d'attente\". Pr\u00e9cisons ces divers \u00e9tats: </p> <p>Un processus dans un \u00e9tat pr\u00eat ou en ex\u00e9cution est un processus actif. </p> <p>Le passage d'un \u00e9tat en ex\u00e9cution \u00e0 l'\u00e9tat pr\u00eat d'un processus, au bout d'un certain temps et dont l'origine est le noyau, s'appelle une pr\u00e9emption.  </p> <p>Un processus termin\u00e9 mais non d\u00e9truit est appel\u00e9 processus zombie.  </p> <p>Enfin, un processus en ex\u00e9cution est parfois qualifi\u00e9 d'\u00e9lu.  </p> <p>Un exemple simplifi\u00e9 d'ordonnancement avec 3 processus.</p> <pre><code>from IPython.core.display import HTML\n\n# Peer Tube Sciences Technologies\nHTML('&lt;iframe title=\"exemple_ordonnancement\" width=\"560\" height=\"315\" src=\"https://tube-sciences-technologies.apps.education.fr/videos/embed/0623b160-c14b-4435-a900-d7a547c3329c?start=1s\" frameborder=\"0\" allowfullscreen=\"\" sandbox=\"allow-same-origin allow-scripts allow-popups\"&gt;&lt;/iframe&gt;')\n</code></pre>"},{"location":"NSITerm/ARSE/C7C1.html#inspecter-les-processus-dune-machine","title":"Inspecter les processus d'une machine","text":"<p>Tous les syst\u00e8mes d'exploitation fournissent des outils qui permettent de visualiser les processus tournant sur une machine. Le syst\u00e8me Linux fournit: <code>ps</code> pour process status. Cette commande supporte de nombreuses options (voir <code>man ps</code>). Parmi les plus courantes: </p> <ul> <li><code>ps -eF</code> qui liste tous les processus en proc\u00e9dant \u00e0 un affichage \u00e9tendu sur plusieurs colonnes;</li> <li><code>ps -u xxxx</code> o\u00f9 <code>xxxx</code> est un nom d'utilisateur: liste tous les processus initi\u00e9s par l'utilisateur <code>xxxx</code>.</li> </ul> <p>Malheureusement l'affichage de cette commande n'est pas rafraichi. De ce fait, on lui pr\u00e9f\u00e8re souvent la commande <code>top</code> qui fournit des informations d\u00e9taill\u00e9es, en temps r\u00e9el:</p> <p></p> <p>Quelques commandes int\u00e9ressantes de <code>top</code>:</p> <ul> <li><code>h</code> : affiche l'aide</li> <li><code>M</code> : trie la liste par ordre d\u00e9croissant d'occupation m\u00e9moire. Pratique pour rep\u00e9rer les processus trop gourmands</li> <li><code>P</code> : trie la liste par ordre d\u00e9croissant d'occupation processeur</li> <li><code>i</code> : filtre les processus inactifs. Cela ne montre que ceux qui travaillent r\u00e9ellement.</li> <li><code>k</code> : permet de tuer un processus - \u00e0 condition d'en \u00eatre le propri\u00e9taire. Essayez de tuer init ...</li> <li><code>V</code> : permet d'avoir la vue arborescente sur les processus.</li> <li><code>q</code> : permet de quitter top</li> </ul>"},{"location":"NSITerm/ARSE/C7C1.html#creer-des-processus","title":"Cr\u00e9er des processus","text":""},{"location":"NSITerm/ARSE/C7C1.html#comment-cree-t-on-des-processus","title":"Comment cr\u00e9\u00e9-t-on des processus ?","text":"<p>La cr\u00e9ation de processus est une op\u00e9ration privil\u00e9gi\u00e9e, r\u00e9alis\u00e9e par le syst\u00e8me et notamment au d\u00e9marrage. L'utilisateur peut \u00e9galement \u00eatre \u00e0 l'origine d'une cr\u00e9ation de processus en lan\u00e7ant des applications. </p> <p>On peut \u00e9galement cr\u00e9er des processus par programmation. Sur les syst\u00e8mes UNIX, on utilise la primitive <code>fork</code>. Cette fonction permet \u00e0 un processus de donner naissance \u00e0 un nouveau processus qui est sa copie conforme, par exemple en vue de r\u00e9aliser un second traitement parall\u00e8lement au premier (voir la page Wikipedia correspondante).</p> <p>Le cr\u00e9ateur d'un nouveau processus est appel\u00e9 le p\u00e8re et le nouveau processus le fils. Chaque processus actif est identifi\u00e9 par un nombre, le Process IDentifier ou PID. </p> <p>En cas de succ\u00e8s, <code>fork</code> renvoie le PID du fils dans le processus p\u00e8re et <code>0</code> dans le processus fils.  </p> <p>Enfin, on peut conna\u00eetre l'identit\u00e9 du p\u00e8re d'un processus gr\u00e2ce au Parent Process IDentifier ou PPID.</p> <p>Au d\u00e9marrage d'un syst\u00e8me Linux, le premier processus lanc\u00e9 est <code>init</code>, ayant pour PID <code>1</code>.</p>"},{"location":"NSITerm/ARSE/C7C1.html#exemple-avec-python","title":"Exemple avec python","text":"<p>Jupyter Notebook</p> <p>L'ex\u00e9cution du programme ci-dessous plante le noyau <code>IPython</code> de Jupyter. On saisira le script dans un fichier (par exemple <code>processus.py</code>) et on le lancera dans un interpr\u00e9teur de commande avec <code>python3 processus.py</code>.</p> <pre><code>import os\nimport time\n\npid_pere = os.getpid()\npid_nouveau_proc = os.fork()\n# Si fork r\u00e9ussit, on r\u00e9cup\u00e8re et teste sa valeur de retour\n# pour savoir dans quel processus on se trouve\nif pid_nouveau_proc == 0: # Fils\n    print('[Fils]&gt; mon PID est ', os.getpid(), '. Celui de mon pere est ', pid_pere)\n    time.sleep(5)\nelse: # P\u00e8re\n    print('[Pere]&gt; mon PID est ', pid_pere, '. Celui de mon fils est ', pid_nouveau_proc)\n    time.sleep(10)\n</code></pre> <p>On obtient les r\u00e9sultats suivants:</p> <p></p> <p>Avec la commande <code>ps</code> on retrouve les deux processus initi\u00e9s par le script, avec des PID en accord avec l'affichage du script. On note par ailleurs que les deux processus sont dans un \u00e9tat bloqu\u00e9 (<code>S+</code> voir <code>man ps</code>).</p>"},{"location":"NSITerm/ARSE/C7C1.html#communiquer-avec-les-processus","title":"Communiquer avec les processus","text":"<p>Les processus peuvent \u00eatre destinataires de signaux provenant du syst\u00e8me d'exploitation ou d'autres processus.  </p> <p>Un processus envoie un signal \u00e0 un autre processus en appelant la primitive syst\u00e8me <code>kill</code>. Dans un shell, on utilisera la commande: <code>kill -numero_de_signal pid_de_processus</code>.</p>"},{"location":"NSITerm/ARSE/C7C1.html#quelques-signaux-courants","title":"Quelques signaux courants","text":"Num\u00e9ro signal Nom du signal \u00c9v\u00e9nement associ\u00e9 2 SIGINT Interruption du clavier (frappe de \u00ab CTRL C \u00bb) 9 SIGKILL Terminaison forc\u00e9e du processus 15 SIGTERM Terminaison du processus 20 SIGTSTP Caract\u00e8re \u00ab susp \u00bb frapp\u00e9 depuis le clavier (frappe de \u00ab CTRL Z \u00bb) 17 SIGCHLD Processus fils termin\u00e9"},{"location":"NSITerm/ARSE/C7C1.html#exemple","title":"Exemple","text":"<p>On souhaite tuer le processus <code>firefox</code> et ses fils (sachant que <code>ps</code> donne ici dans l'ordre <code>PPID,PID,CMD</code>.</p> <p></p>"},{"location":"NSITerm/ARSE/C7C1.html#risque-dinterblocage","title":"Risque d'interblocage","text":"<p>Consid\u00e9rons deux processus \\(\\mathcal{P}_1\\) et \\(\\mathcal{P}_2\\) ont tous les besoin de deux ressources, \\(\\mathcal{R}_1\\) et \\(\\mathcal{R}_2\\). Chaque processus bloque une ressource et doit attendre d\u2019avoir acc\u00e8s \u00e0 la seconde pour se terminer et les lib\u00e9rer.</p> <p></p> <p>Aucun des deux processus ne pourra avancer. C\u2019est l\u2019interblocage (ou deadlock en anglais) . Sans une intervention, co\u00fbteuse, du syst\u00e8me, la situation est fig\u00e9e.</p> <p>Un interblocage correspond \u00e0 une situation o\u00f9 les processus s'attendent mutuellement.</p>"},{"location":"NSITerm/ARSE/C7E1.html","title":"Gestion des ressources par un SE - Exercices","text":"<p>Sources</p> <p>Cette fiche d'exercices provient du travail de David Roche, enseignant de NSI en Haute-Savoie et disponible sur son site personnel.</p>"},{"location":"NSITerm/ARSE/C7E1.html#exercice-1","title":"Exercice 1","text":"<p>D'apr\u00e8s le sujet du bac NSI 2021</p> <p>1) La commande <code>ps</code> suivie \u00e9ventuellement de diverses options permet de lister les processus actifs ou en attente sur une machine. Sur une machine \u00e9quip\u00e9e du syst\u00e8me d\u2019exploitation GNU/Linux, la commande <code>ps -aef</code> permet d\u2019obtenir la sortie suivante (extrait) :  </p> <p></p> <p>a) Quelle est la particularit\u00e9 de l\u2019utilisateur root?</p> <p>b) Quel est le processus parent du processus ayant pour <code>PID 3383</code>?</p> <p>Dans un bureau d\u2019architectes, on dispose de certaines ressources qui ne peuvent \u00eatre utilis\u00e9es simultan\u00e9ment par plus d\u2019un processus, comme l\u2019imprimante, la table tra\u00e7ante, le modem. Chaque programme, lorsqu\u2019il s\u2019ex\u00e9cute, demande l\u2019allocation des ressources qui lui sont n\u00e9cessaires. Lorsqu\u2019il a fini de s\u2019ex\u00e9cuter, il lib\u00e8re ses ressources.</p> <p></p> <p>2) On appelle \\(\\mathcal{P}_1\\), \\(\\mathcal{P}_2\\) et \\(\\mathcal{P}_3\\) les processus associ\u00e9s respectivement aux programmes 1, 2 et 3.</p> <p>a) Justifier qu'une situation d'interblocage peut se produire.</p> <p>b) Modifier l'ordre des instructions du programme 3 pour qu'une telle situation ne puisse pas se produire.</p>"},{"location":"NSITerm/ARSE/C7E1.html#exercice-2","title":"Exercice 2","text":"<p>D'apr\u00e8s le sujet du bac NSI 2021</p> <p>Partie A</p> <p>Cette partie est un questionnaire \u00e0 choix multiples (QCM). Pour chacune des questions, une seule des quatre r\u00e9ponses est exacte. Le candidat indiquera sur sa copie le num\u00e9ro de la question et la lettre correspondant \u00e0 la r\u00e9ponse exacte. Aucune justification n\u2019est demand\u00e9e. Une r\u00e9ponse fausse ou une absence de r\u00e9ponse n\u2019enl\u00e8ve aucun point.</p> <p>1) Parmi les commandes ci-dessous, laquelle permet d\u2019afficher les processus en cours d\u2019ex\u00e9cution ?</p> <pre><code>    a. dir\n    b. ps\n    c. man\n    d. ls\n</code></pre> <p>2) Quelle abr\u00e9viation d\u00e9signe l\u2019identifiant d\u2019un processus dans un syst\u00e8me d\u2019exploitation de type UNIX ?  </p> <pre><code>    a. PIX\n    b. SIG\n    c. PID\n    d. SID\n</code></pre> <p>3) Comment s\u2019appelle la gestion du partage du processeur entre diff\u00e9rents processus ?</p> <pre><code>    a. L\u2019interblocage\n    b. L\u2019ordonnancement\n    c. La planification\n    d. La priorisation\n</code></pre> <p>4) Quelle commande permet d\u2019interrompre un processus dans un syst\u00e8me d\u2019exploitation de type UNIX ?</p> <pre><code>    a. stop\n    b. interrupt\n    c. end\n    d. kill\n</code></pre> <p>Partie B</p> <p>1) Un processeur choisit \u00e0 chaque cycle d\u2019ex\u00e9cution le processus qui doit \u00eatre ex\u00e9cut\u00e9. Le tableau ci-dessous donne pour trois processus P1, P2, P3 :</p> <ul> <li>la dur\u00e9e d\u2019ex\u00e9cution (en nombre de cycles),</li> <li>l\u2019instant d\u2019arriv\u00e9e sur le processeur (exprim\u00e9 en nombre de cycles \u00e0 partir de 0),</li> <li>le num\u00e9ro de priorit\u00e9.</li> </ul> <p>Le num\u00e9ro de priorit\u00e9 est d\u2019autant plus petit que la priorit\u00e9 est grande. On suppose qu\u2019\u00e0 chaque instant, c\u2019est le processus qui a le plus petit num\u00e9ro de priorit\u00e9 qui est ex\u00e9cut\u00e9, ce qui peut provoquer la suspension d\u2019un autre processus, lequel reprendra lorsqu\u2019il sera le plus prioritaire.</p> <p></p> <p>Reproduire le tableau ci-dessous sur la copie et indiquer dans chacune des cases le processus ex\u00e9cut\u00e9 \u00e0 chaque cycle.</p> <p></p> <p>2) On suppose maintenant que les trois processus pr\u00e9c\u00e9dents s\u2019ex\u00e9cutent et utilisent une ou plusieurs ressources parmi R1, R2 et R3. Parmi les sc\u00e9narios suivants, lequel provoque un interblocage ? Justifier.</p> <p></p>"},{"location":"NSITerm/ARSE/C9C1.html","title":"Protocoles de routage","text":"<p>Concernant ce cours</p> <p>Ce cours a \u00e9t\u00e9 \u00e9crit par M. Roche de l'acad\u00e9mie de Grenoble. Il a diffus\u00e9 ce document sous la licence Common Creative Zero. Seules quelques modifications mineures, des reformulations essentiellement, ont \u00e9t\u00e9 apport\u00e9es ici. - B. DARID - nov. 2021 -</p>"},{"location":"NSITerm/ARSE/C9C1.html#routage-des-paquets","title":"Routage des paquets","text":"<p>Pour bien suivre ce cours, il est n\u00e9cessaire de maitriser les bases sur les r\u00e9seaux (r\u00e9seau local, adresse IP, adresse r\u00e9seau...) N'h\u00e9sitez pas \u00e0 vous replonger dans le cours de premi\u00e8re si n\u00e9cessaire.</p> <p>Les r\u00e9seaux locaux peuvent \u00eatre reli\u00e9s entre eux par l'interm\u00e9diaire de routeurs. Il ne faut jamais perdre de vue qu'Internet r\u00e9sulte de l'interconnexion de r\u00e9seaux par des routeurs.</p> <p></p> <p>Nous avons sur ce sch\u00e9ma les \u00e9l\u00e9ments suivants :</p> <ul> <li>15 ordinateurs : M1 \u00e0 M15</li> <li>6 commutateurs (ou switchs en anglais) : R1 \u00e0 R6</li> <li>8 routeurs : A, B, C, D, E, F, G et H</li> </ul> <p>Comme nous l'avons d\u00e9j\u00e0 dit ci-dessus, un routeur permet de relier ensemble plusieurs r\u00e9seaux locaux. Un routeur est compos\u00e9 d\u2019un nombre plus ou moins important d\u2019interfaces r\u00e9seau ou cartes r\u00e9seau. Les routeurs les plus simples que l\u2019on puisse rencontrer permettent de relier ensemble deux r\u00e9seaux. Ils poss\u00e8dent alors 2 interfaces r\u00e9seau. Il existe cependant des routeurs capables de relier ensemble une dizaine de r\u00e9seaux.  </p> <p>N'importe quel ordinateur peut jouer le r\u00f4le de routeur, \u00e0 partir du moment o\u00f9 il poss\u00e8de au moins 2 interfaces r\u00e9seau. On peut rencontrer aussi (souvent) des machines d\u00e9di\u00e9es comme par exemple celle ci-dessous de marque CISCO.</p> <p></p> <p>Revenons maintenant \u00e0 l\u2019analyse de notre sch\u00e9ma:</p> <p>Nous avons 6 r\u00e9seaux locaux, chaque r\u00e9seau local poss\u00e8de son propre commutateur.</p> <p>Les ordinateurs M1, M2 et M3 appartiennent au r\u00e9seau local 1. Les ordinateurs M4, M5 et M6 appartiennent au r\u00e9seau local 2. Nous pouvons synth\u00e9tiser tout cela comme suit :</p> <ul> <li>r\u00e9seau local 1 : M1, M2 et M3</li> <li>r\u00e9seau local 2 : M4, M5 et M6</li> <li>r\u00e9seau local 3 : M7 et M8</li> <li>r\u00e9seau local 4 : M9 et M10</li> <li>r\u00e9seau local 5 : M11 et M12</li> <li>r\u00e9seau local 6 : M13, M14 et M15</li> </ul> <p>Les paragraphes suivants pr\u00e9sentent quelques exemples de communications entre 2 ordinateurs.</p>"},{"location":"NSITerm/ARSE/C9C1.html#m1-veut-communiquer-avec-m3","title":"M1 veut communiquer avec M3","text":"<p>Le paquet est envoy\u00e9 de M1 vers le commutateur R1. R1 constate que M3 se trouve bien dans le r\u00e9seau local 1, le paquet est donc envoy\u00e9 directement vers M3. On peut r\u00e9sumer le trajet du paquet par :</p> <p>\\(\\mathrm{M1\\longrightarrow R1\\longrightarrow M3}\\)</p>"},{"location":"NSITerm/ARSE/C9C1.html#m1-veut-communiquer-avec-m6","title":"M1 veut communiquer avec M6","text":"<p>Le paquet est envoy\u00e9 de M1 vers le commutateur R1. R1 constate que M6 n\u2019est pas sur le r\u00e9seau local 1, il envoie donc le paquet vers le routeur A. Le routeur A n'est pas connect\u00e9 directement au r\u00e9seau local R2 (r\u00e9seau local auquel appartient M6), mais il sait que le routeur B est connect\u00e9 au r\u00e9seau local 2. Le routeur A envoie le paquet vers le routeur B. Le routeur B est connect\u00e9 au r\u00e9seau local 2, il envoie le paquet au commutateur R2. Le commutateur R2 envoie le paquet \u00e0 la machine M6.</p> <p>\\(\\mathrm{M1 \\longrightarrow R1 \\longrightarrow Routeur\\ A \\longrightarrow Routeur\\ B \\longrightarrow R2 \\longrightarrow M6}\\)</p>"},{"location":"NSITerm/ARSE/C9C1.html#m1-veut-communiquer-avec-m9","title":"M1 veut communiquer avec M9","text":"<p>\\(\\mathrm{M1 \\longrightarrow R1 \\longrightarrow Routeur\\ A \\longrightarrow Routeur\\ B \\longrightarrow Routeur\\ D \\longrightarrow Routeur\\ E \\longrightarrow R4 \\longrightarrow M9}\\)</p> <p>On constate que le chemin donn\u00e9 ci-dessus n\u2019est pas l\u2019unique possibilit\u00e9, en effet on aurait pu aussi avoir :</p> <p>\\(\\mathrm{M1\\ \\longrightarrow R1 \\longrightarrow Routeur A \\longrightarrow Routeur\\ H \\longrightarrow Routeur\\ F \\longrightarrow Routeur\\ E \\longrightarrow R4 \\longrightarrow M9}\\)</p> <p>Il est tr\u00e8s important de bien comprendre qu\u2019il existe souvent plusieurs chemins possibles pour relier 2 ordinateurs.</p>"},{"location":"NSITerm/ARSE/C9C1.html#m13-veut-communiquer-avec-m9","title":"M13 veut communiquer avec M9","text":"<p>Nous pouvons avoir: \\(\\mathrm{M13 \\longrightarrow R6 \\longrightarrow Routeur\\ G \\longrightarrow Routeur\\ F \\longrightarrow Routeur\\ E \\longrightarrow R4 \\longrightarrow M9}\\) ou encore: \\(\\mathrm{M13 \\longrightarrow R6 \\longrightarrow Routeur\\ G \\longrightarrow Routeur\\ F \\longrightarrow Routeur\\ H \\longrightarrow Routeur\\ C \\longrightarrow Routeur\\ D \\longrightarrow Routeur\\ E \\longrightarrow R4 \\longrightarrow M9}\\)</p> <p>On pourrait penser que le chemin \\(\\mathrm{Routeur\\ F \\longrightarrow Routeur\\ E}\\) est plus rapide et donc pr\u00e9f\u00e9rable au chemin \\(\\mathrm{Routeur\\ F \\longrightarrow Routeur\\ H}\\). Cela est sans doute vrai, mais imaginez qu\u2019il y ait un probl\u00e8me technique entre le Routeur F et le Routeur E, l\u2019existence du chemin \\(\\mathrm{Routeur\\ F \\longrightarrow Routeur\\ H}\\) permettra tout de m\u00eame d\u2019\u00e9tablir une communication entre M13 et M9.</p>"},{"location":"NSITerm/ARSE/C9C1.html#comment-les-commutateurs-ou-les-routeurs-procedent-pour-amener-les-paquets-a-bon-port","title":"Comment les commutateurs ou les routeurs proc\u00e8dent pour amener les paquets \u00e0 bon port?","text":"<p>Nous avons vu l'ann\u00e9e derni\u00e8re que 2 machines appartenant au m\u00eame r\u00e9seau local doivent avoir la m\u00eame adresse r\u00e9seau. Dans le sch\u00e9ma ci-dessus les machines M1 et M4 n'ont pas la m\u00eame adresse r\u00e9seau (elles n'appartiennent pas au m\u00eame r\u00e9seau local). Si M1 cherche \u00e0 entrer en communication avec M4, le commutateur R1 va constater que M4 n'appartient pas au r\u00e9seau local, gr\u00e2ce \u00e0 son adresse IP. Il va envoyer le paquet de donn\u00e9es vers le routeur A. Cela sera alors au routeur A de g\u00e9rer le probl\u00e8me: comment atteindre M4 ?</p> <p>Chaque routeur poss\u00e8de une table de routage.  </p> <p>Indication</p> <p>Une table de routage peut \u00eatre vue comme un tableau qui va contenir des informations permettant au routeur d'envoyer le paquet de donn\u00e9es dans la bonne direction.</p> <p>Soit le sch\u00e9ma suivant :</p> <p></p> <p>Sur le sch\u00e9ma ci-dessus, le choix des adresses IP des machines est tout \u00e0 fait arbitraire. En revanche, vous pouvez v\u00e9rifier que tout est coh\u00e9rent: adresses machines avec adresses r\u00e9seaux. Les adresses r\u00e9seaux sont not\u00e9es \u00e0 c\u00f4t\u00e9 des diff\u00e9rents commutateurs. Par exemple le commutateur R1 est utilis\u00e9 dans le r\u00e9seau d'adresse <code>172.168.0.0/16</code> .</p> <p>Nous avons deux routeurs:</p> <ul> <li>le routeur A qui poss\u00e8de 3 interfaces r\u00e9seau que l'on nomme eth0, eth1 et eth2 (les adresses IP li\u00e9es \u00e0 ces interfaces r\u00e9seau sont <code>172.168.255.254/16</code> -eth0-, <code>172.169.255.254/16</code> -eth2- et <code>192.168.7.1/24</code> -eth1-;</li> <li>le routeur G qui poss\u00e8de 2 interfaces r\u00e9seau que l'on nomme eth0 et eth1 (les adresses IP li\u00e9es \u00e0 ces interfaces r\u00e9seau sont <code>10.255.255.254/8</code> -eth0- et <code>192.168.7.2/24</code> -eth1-).</li> </ul> <p>Les informations pr\u00e9sentes dans la table de routage de A sont:</p> <ul> <li>le routeur A est directement reli\u00e9 au r\u00e9seau <code>172.168.0.0/16</code> par l'interm\u00e9diaire de son interface <code>eth0</code>;</li> <li>le routeur A est directement reli\u00e9 au r\u00e9seau <code>172.169.0.0/16</code> par l'interm\u00e9diaire de son interface <code>eth2</code>;</li> <li>le routeur A est directement reli\u00e9 au r\u00e9seau <code>192.168.7.0/24</code> par l'interm\u00e9diaire de son interface <code>eth1</code> (le r\u00e9seau <code>192.168.7.0/24</code> est un peu particulier car il est uniquement compos\u00e9 des routeurs A et G)</li> <li>le routeur A n'est pas directement reli\u00e9 au r\u00e9seau <code>10.0.0.0/8</code> mais par contre il sait que les paquets \u00e0 destination de ce r\u00e9seau doivent \u00eatre envoy\u00e9 \u00e0 la machine d'adresse IP <code>192.168.7.2/24</code> (c'est \u00e0 dire le routeur G qui lui est directement reli\u00e9 au r\u00e9seau <code>10.0.0.0/8</code>)</li> </ul> <p>On peut r\u00e9sumer tout cela avec le tableau suivant qui est une table de routage simplifi\u00e9e de A:</p> r\u00e9seau moyen de l'atteindre m\u00e9trique 172.168.0.0/16 eth0 0 192.168.7.0/24 eth1 0 172.169.0.0/16 eth2 0 10.0.0.0/8 192.168.7.2/24 1 <p>M\u00e9trique</p> <p>Dans un protocole de routage, la m\u00e9trique est une mesure de la distance qui s\u00e9pare un routeur d'un r\u00e9seau de destination. Elle peut correspondre:  </p> <ul> <li>au nombre de sauts IP n\u00e9cessaires pour atteindre le r\u00e9seau destination, comme dans RIP;</li> <li>\u00e0 un co\u00fbt num\u00e9rique qui d\u00e9pend de la bande passante des liens franchis, comme dans OSPF;</li> <li>au r\u00e9sultat d'un calcul plus complexe, qui tient compte de la charge, du d\u00e9lai, du MTU, etc.  </li> </ul> <p>Source: wikipedia</p> <p>M\u00eame si dans les v\u00e9ritables tables de routage on utilise exclusivement les adresses IP, on pourra, dans le cadre de ce cours, utiliser les noms \u00e0 la place des adresses IP. On dira pour le sch\u00e9ma ci-dessus que:  </p> <ul> <li>M1, M2 et M3 appartiennent au r\u00e9seau R1;</li> <li>M4, M5 et M6 appartiennent au r\u00e9seau R2;</li> <li>M7 et M8 appartiennent au r\u00e9seau R3.</li> </ul> <p>On aura alors la table de routage \u00e9crit de cette fa\u00e7on :</p> r\u00e9seau moyen de l'atteindre m\u00e9trique r\u00e9seau R1 eth0 0 r\u00e9seau routeur G eth1 0 r\u00e9seau R3 eth2 0 r\u00e9seau  R2 routeur G 1 <p>On peut traduire ce tableau par :</p> <ul> <li>pour atteindre le r\u00e9seau R1, on doit sortir du routeur par eth0 (le r\u00e9seau R1 est directement reli\u00e9 au routeur A)</li> <li>pour atteindre le routeur G, on doit sortir du routeur par eth1 (le routeur G est directement reli\u00e9 au routeur A)</li> <li>pour atteindre le r\u00e9seau R3, on doit sortir du routeur par eth2 (le r\u00e9seau R3 est directement reli\u00e9 au routeur A)</li> <li>pour atteindre le r\u00e9seau R2, on doit envoyer le paquet de donn\u00e9es vers le routeur G qui saura quoi faire avec (le r\u00e9seau R2 n'est pas directement reli\u00e9 au routeur A)</li> </ul> <p>Dans des r\u00e9seaux tr\u00e8s complexes, chaque routeur aura une table de routage qui comportera de tr\u00e8s nombreuses lignes (des dizaines voir des centaines...). En effet chaque routeur devra savoir vers quelle interface r\u00e9seau il faudra envoyer un paquet afin qu'il puisse atteindre sa destination.  </p> <p>On peut trouver dans une table de routage plusieurs lignes pour une m\u00eame destination. Il peut en effet, \u00e0 partir d'un routeur donn\u00e9, exister plusieurs chemins possibles pour atteindre la destination. Dans le cas o\u00f9 il existe plusieurs chemins possibles pour atteindre une m\u00eame destination, le routeur va choisir le chemin le plus court. Pour choisir ce chemin le plus court, le routeur va utiliser la m\u00e9trique: plus la valeur de la m\u00e9trique est petite, plus le chemin pour atteindre le r\u00e9seau est court.  </p> <p>\u00c0 savoir</p> <p>Un r\u00e9seau directement li\u00e9 \u00e0 un routeur aura une m\u00e9trique de 0.</p>"},{"location":"NSITerm/ARSE/C9C1.html#comment-un-routeur-arrive-a-remplir-sa-table-de-routage","title":"Comment un routeur arrive \u00e0 remplir sa table de routage?","text":"<p>La r\u00e9ponse est simple pour les r\u00e9seaux qui sont directement reli\u00e9s au routeur c'est-\u00e0-dire o\u00f9 la m\u00e9trique \u00e9gal \u00e0 0. Mais qu'en est-il pour les autres r\u00e9seaux (m\u00e9trique sup\u00e9rieure \u00e0 z\u00e9ro)?</p> <p>Il existe 2 m\u00e9thodes :</p> <ul> <li>le routage statique: chaque ligne doit \u00eatre renseign\u00e9e \u00e0 la main. Cette solution est seulement envisageable pour des tr\u00e8s petits r\u00e9seaux de r\u00e9seaux;</li> <li>le routage dynamique: tout se fait automatiquement, on utilise des protocoles qui vont permettre de d\u00e9couvrir les diff\u00e9rentes routes automatiquement afin de pouvoir remplir la table de routage tout aussi automatiquement.</li> </ul>"},{"location":"NSITerm/ARSE/C9C1.html#protocoles-de-routage_1","title":"Protocoles de routage","text":"<p>Un r\u00e9seau de r\u00e9seaux comportant des routeurs peut \u00eatre mod\u00e9lis\u00e9 par un graphe (le cours sur les graphes sera abord\u00e9 vers f\u00e9vrier-mars 2024). Chaque routeur est un sommet et chaque liaison entre les routeurs ou entre un routeur et un commutateur est une ar\u00eate. Les algorithmes utilis\u00e9s par les protocoles de routages sont donc des algorithmes issus de la th\u00e9orie de graphes.</p> <p>On trouve plusieurs protocoles de routage, nous allons en \u00e9tudier deux:  </p> <ul> <li>RIP (Routing Information Protocol);</li> <li>OSPF (Open Shortest Path First).</li> </ul>"},{"location":"NSITerm/ARSE/C9C1.html#le-protocole-rip","title":"Le protocole RIP","text":"<p>Au d\u00e9part, les tables de routage contiennent uniquement les r\u00e9seaux qui sont directement reli\u00e9s au routeur. Dans l'exemple ci-dessus, \u00e0 l'origine, la table de routage de A contient uniquement les r\u00e9seaux <code>172.168.0.0/16</code>, <code>192.168.7.0/24</code> et <code>172.169.0.0/16</code>. Ensuite:</p> <ul> <li>Chaque routeur envoie p\u00e9riodiquement (typiquement toutes les 30 secondes) \u00e0 tous ses voisins (routeurs adjacents) un message. Ce message contient la liste de tous les r\u00e9seaux qu'il connait. Dans l'exemple ci-dessus, le routeur A envoie un message au routeur G avec les informations suivantes : je connais les r\u00e9seaux <code>172.168.0.0/16</code>, <code>192.168.7.0/24</code> et <code>172.169.0.0/16</code>).</li> <li>De la m\u00eame mani\u00e8re G envoie un message \u00e0 A avec les informations suivantes : je connais les r\u00e9seaux <code>192.168.7.0/24</code> et <code>10.0.0.0/8</code>. \u00c0 la fin de cet \u00e9change, les routeurs mettent \u00e0 jour leur table de routage avec les informations re\u00e7ues (dans l'exemple ci-dessus, le routeur A va pouvoir ajouter le r\u00e9seau <code>10.0.0.0/8</code> \u00e0 sa table de routage: le routeur A sait maintenant qu'un paquet \u00e0 destination du r\u00e9seau <code>10.0.0.0/8</code> devra transiter par le routeur G).</li> <li>Pour renseigner la colonne m\u00e9trique, le protocole utilise le nombre de sauts, autrement dit, le nombre de routeurs qui doivent \u00eatre travers\u00e9s pour atteindre le r\u00e9seau cible. Dans la table de routage de A, on aura donc une m\u00e9trique de 1 pour le r\u00e9seau <code>10.0.0.0/8</code> car depuis A il est n\u00e9cessaire de traverser le routeur G pour atteindre le r\u00e9seau <code>10.0.0.0/8</code>. </li> </ul> <p>Le protocole RIP s'appuie sur l'algorithme de Bellman-Ford, algorithme qui permet de calculer les plus courts chemins dans un graphe.</p> <p>Prenons un exemple avec le r\u00e9seau suivant :</p> <p></p> <p>\u00c9tablissons la table de routage du routeur A en nous basant sur le protocole RIP :</p> <ul> <li>le routeur A est directement reli\u00e9 au r\u00e9seau R1 (r\u00e9seau <code>172.18.0.0/16</code>) par <code>eth0</code>;</li> <li>le routeur A est directement reli\u00e9 au routeur B (r\u00e9seau <code>192.168.1.0/24</code>) par <code>eth1</code>;</li> <li>le routeur A est directement reli\u00e9 au routeur C (r\u00e9seau <code>192.168.2.0/24</code>) par <code>eth2</code>;</li> <li>le routeur A n'est pas directement reli\u00e9 au r\u00e9seau R2 (adresse r\u00e9seau <code>172.17.0.0/16</code>) mais par contre il sait qu'il peut l'atteindre soit en passant par le routeur C (adresse <code>192.168.2.2/24</code>) en une \u00e9tape ou soit en passant par le routeur B (adresse <code>192.168.1.2/24</code>) en deux \u00e9tapes (B et C);</li> <li>le routeur A n'est pas directement reli\u00e9 au r\u00e9seau R3 (adresse r\u00e9seau <code>172.16.0.0/16</code>) mais  il sait qu'il peut l'atteindre soit en passant par le routeur B (<code>192.168.1.2/24</code>) en une \u00e9tape ou soit en passant par le routeur C (<code>192.168.2.2/24</code>) en deux \u00e9tapes (C et B).</li> </ul> <p>Ce qui nous donne donc la table de routage suivante :</p> r\u00e9seau moyen de l'atteindre m\u00e9trique 172.18.0.0/16 eth0 0 192.168.1.0/24 eth1 0 192.168.2.0/24 eth2 0 172.17.0.0/16 192.168.2.2/24 1 172.17.0.0/16 192.168.1.2/24 2 172.16.0.0/16 192.168.1.2/24 1 172.16.0.0/16 192.168.2.2/24 2 <p>Comme d\u00e9j\u00e0 vu plus haut, on peut aussi donner la table de routage de mani\u00e8re simplifi\u00e9e, en utilisant les noms des \u00e9l\u00e9ments \u00e0 la place des adresses IP (mais c'est aussi moins r\u00e9aliste) :</p> r\u00e9seau moyen de l'atteindre m\u00e9trique R1 eth0 0 R\u00e9seau Routeur B eth1 0 R\u00e9seau Routeur C eth2 0 R2 Routeur C 1 R2 Routeur B 2 R3 Routeur B 1 R3 Routeur C 2 <p>pour un paquet de donn\u00e9es allant de R1 \u00e0 R2, la route privil\u00e9gi\u00e9e sera donc : R1 -&gt; Routeur A -&gt; Routeur C -&gt; R2. Mais en cas de probl\u00e8me (panne notamment) la route R1 -&gt; Routeur A -&gt; Routeur B -&gt; Routeur C -&gt; R2 sera possible.</p> <p>pour un paquet de donn\u00e9es allant de R1 \u00e0 R3, la route privil\u00e9gi\u00e9e sera donc : R1 -&gt; Routeur A -&gt; Routeur B -&gt; R3. Mais en cas de probl\u00e8me la route R1 -&gt; Routeur A -&gt; Routeur C -&gt; Routeur B -&gt; R3 sera possible.</p> <p>M\u00e9trique</p> <p>Dans certains exercices, pour le calcul de la m\u00e9trique, on compte le nombre total de routeurs travers\u00e9s, y compris, dans notre exemple le routeur A. Cela nous donne donc un d\u00e9calage de un, voir ci-dessous.</p> r\u00e9seau moyen de l'atteindre m\u00e9trique R1 eth0 0 R\u00e9seau Routeur B eth1 0 R\u00e9seau Routeur C eth2 0 R2 Routeur C 2 R2 Routeur B 3 R3 Routeur B 2 R3 Routeur C 3 <p>Comme c'est juste une histoire de convention, il suffit de se mettre d'accord au d\u00e9part sur la convention utilis\u00e9e.</p> <p>Pour finir</p> <p>Le protocole RIP est aujourd'hui tr\u00e8s rarement utilis\u00e9 dans les grandes infrastructures. En effet, il g\u00e9n\u00e8re, du fait de l'envoi p\u00e9riodique de message, un trafic r\u00e9seau important (surtout si les tables de routages contiennent beaucoup d'entr\u00e9es). De plus, le protocole RIP est limit\u00e9 \u00e0 15 sauts (on traverse au maximum 15 routeurs pour atteindre sa destination).</p>"},{"location":"NSITerm/ARSE/C9C1.html#le-protocole-ospf","title":"Le protocole OSPF","text":"<p>Comme dans le cas du protocole RIP, nous allons retrouver des \u00e9changes d'informations entre les routeurs. Ces \u00e9changes sont plus intelligents dans le cas d'OSPF. Ils permettent de r\u00e9duire l'occupation du r\u00e9seau. Nous n'allons pas rentrer dans les d\u00e9tails de ces \u00e9changes et nous allons principalement insister sur la m\u00e9trique produite par OSPF. </p> <p>Le protocole OSPF, au contraire de RIP, n'utilise pas le nombre de sauts n\u00e9cessaire pour \u00e9tablir la m\u00e9trique, mais la notion de co\u00fbt des routes. Dans les messages \u00e9chang\u00e9s par les routeurs on trouve le co\u00fbt de chaque liaison. </p> <p>\u00c0 savoir</p> <p>Plus le co\u00fbt est grand et moins la liaison est int\u00e9ressante.  </p> <p>Quand on parle de liaison on parle simplement du c\u00e2ble qui relie un routeur \u00e0 un autre routeur. Le protocole OSPF permet de connaitre le co\u00fbt de chaque liaison entre routeurs, et donc, de connaitre le co\u00fbt d'une route (en ajoutant le co\u00fbt de chaque liaison travers\u00e9e). On notera que pour effectuer ces calculs, le protocole OSPF s'appuie sur l'algorithme de Dijkstra (voir \u00e9ventuellement le cours Algorithmes sur les graphes) .</p> <p>Mais sur quoi repose cette notion de co\u00fbt ?</p> <p>La notion de co\u00fbt est directement li\u00e9e au d\u00e9bit des liaisons entre les routeurs. Le d\u00e9bit correspond au nombre de bits de donn\u00e9es qu'il est possible de faire passer dans un r\u00e9seau par seconde. Le d\u00e9bit est donc donn\u00e9 en bits par seconde (bps), mais on trouve souvent des kilo bits par seconde (kbps) ou encore des m\u00e9ga bits par seconde (Mbps) =&gt; 1 kbps = 1000 bps et 1 Mbps = 1000 kbps. </p> <p>Co\u00fbt</p> <p>Connaissant le d\u00e9bit d'une liaison, il est possible de calculer le co\u00fbt d'une liaison \u00e0 l'aide de la formule suivante : \\(co\u00fbt = \\dfrac{10^8}{d\u00e9bit}\\)</p> <p>Dans la formule ci-dessus le d\u00e9bit est en bits par seconde</p> <p>Pour obtenir la m\u00e9trique d'une route, il suffit d'additionner les co\u00fbts de chaque liaison. Par exemple, si pour aller d'un r\u00e9seau 1 \u00e0 un r\u00e9seau 2 on doit traverser une liaison de co\u00fbt 1, puis une liaison de co\u00fbt 10 et enfin une liaison de co\u00fbt 1, la m\u00e9trique de cette route sera de 1 + 10 + 1 = 12.</p> <p>\u00c9videmment, comme dans le cas de RIP, les routes ayant les m\u00e9triques les plus faibles sont privil\u00e9gi\u00e9es.</p> <p>Reprenons l'exemple ci-dessus :</p> <p></p> <p>Prenons un exemple avec les d\u00e9bits suivants :</p> <ul> <li>liaison routeur A - routeur B : 1 Mbps</li> <li>liaison routeur A - routeur C : 10 Mbps</li> <li>liaison routeur C - routeur B : 10 Mbps</li> </ul> <p>Commen\u00e7ons par calculer les co\u00fbts des liaisons inter-routeurs</p> <ul> <li>liaison routeur A - routeur B : 108/106 = 100</li> <li>liaison routeur A - routeur C : 108/107 = 10</li> <li>liaison routeur C - routeur B : 108/107 = 10</li> </ul> <p>pour faire :</p> <ul> <li>Routeur A -&gt; Routeur C le co\u00fbt est de 10</li> <li>Routeur A -&gt; Routeur B le co\u00fbt est de 100</li> <li>Routeur A -&gt; Routeur C -&gt; Routeur B le co\u00fbt est 10+10=20</li> <li>Routeur A -&gt; Routeur B -&gt; Routeur C le co\u00fbt est 100+10=110</li> </ul> <p>Ce qui nous donne la table de routage suivante :</p> r\u00e9seau moyen de l'atteindre m\u00e9trique 172.18.0.0/16 eth0 0 192.168.1.0/24 eth1 0 192.168.2.0/24 eth2 0 172.17.0.0/16 192.168.2.2/24 10 172.17.0.0/16 192.168.1.2/24 110 172.16.0.0/16 192.168.1.2/24 100 172.16.0.0/16 192.168.2.2/24 20 <p>ou encore en se passant des adresses IP : </p> r\u00e9seau moyen de l'atteindre m\u00e9trique R1 eth0 0 R\u00e9seau Routeur B eth1 0 R\u00e9seau Routeur C eth2 0 R2 Routeur C 10 R2 Routeur B 110 R3 Routeur B 100 R3 Routeur C 20 <p>pour un paquet de donn\u00e9es allant de R1 \u00e0 R2, la route privil\u00e9gi\u00e9e sera donc : R1 -&gt; Routeur A -&gt; Routeur C -&gt; R2.</p> <p>pour un paquet de donn\u00e9es allant de R1 \u00e0 R3, la route privil\u00e9gi\u00e9e sera donc : R1 -&gt; Routeur A -&gt; Routeur C -&gt; Routeur B -&gt; R3 (on constate une diff\u00e9rence avec ce que nous avions trouv\u00e9 avec le protocole RIP).</p> <p>En r\u00e9sum\u00e9</p> <p>Ce qu\u2019il faut savoir</p> <ul> <li>un routeur permet de relier ensemble plusieurs r\u00e9seaux locaux.</li> <li>chaque routeur poss\u00e8de une table de routage. Une table de routage peut \u00eatre vue comme un tableau qui va contenir des informations permettant au routeur d'envoyer le paquet de donn\u00e9es dans la bonne direction.</li> <li>il existe 2 m\u00e9thodes permettant de renseigner la table de routage d\u2019un routeur:<ul> <li>le routage statique : chaque ligne doit \u00eatre renseign\u00e9e \u00e0 la main. Cette solution est seulement envisageable pour des tr\u00e8s petits r\u00e9seaux de r\u00e9seaux;</li> <li>le routage dynamique : tout se fait automatiquement, on utilise des protocoles qui vont permettre de d\u00e9couvrir les diff\u00e9rentes routes automatiquement afin de pouvoir remplir la table de routage tout aussi automatiquement.</li> </ul> </li> <li>un r\u00e9seau de r\u00e9seaux comportant des routeurs peut \u00eatre mod\u00e9lis\u00e9 par un graphe : chaque routeur est un sommet et chaque liaison entre les routeurs ou entre un routeur et un switch est une ar\u00eate. Les algorithmes utilis\u00e9s par les protocoles de routages sont donc des algorithmes issus de la th\u00e9orie de graphes.</li> <li>les 2 protocoles au programme de terminale NSI sont les protocoles RIP (Routing Information Protocol) et OSPF (Open Shortest Path First) :<ul> <li>protocole RIP : le protocole RIP s'appuie sur l'algorithme de Bellman-Ford (algorithme qui permet de calculer les plus courts chemins dans un graphe). Le protocole RIP utilise le nombre de sauts comme m\u00e9trique. Ce protocole est aujourd'hui tr\u00e8s rarement utilis\u00e9 dans les grandes infrastructures.</li> <li>protocole OSPF : le protocole OSPF s'appuie sur l'algorithme de Dijkstra. Le protocole OSPF utilise le co\u00fbt comme m\u00e9trique (la notion de co\u00fbt est directement li\u00e9e au d\u00e9bit des liaisons entre les routeurs).</li> </ul> </li> </ul> <p>Ce qu\u2019il faut savoir faire</p> <p>Vous devez \u00eatre capable d\u2019identifier la route emprunt\u00e9e par un paquet suivant le protocole de routage utilis\u00e9 (RIP ou OSPF).</p>"},{"location":"NSITerm/ARSE/c11e.html","title":"Exercices protocole de routage - D. Roche","text":""},{"location":"NSITerm/ARSE/c11e.html#exercice-111","title":"exercice 11.1","text":"<p>Le r\u00e9seau sch\u00e9matis\u00e9 ci-dessous est constitu\u00e9 de 4 r\u00e9seaux locaux (switch+ordinateurs) : R1, R2, R3 et R4, et de 4 routeurs A, B, C et D.</p> <p></p> <p>On donne les d\u00e9bits (bandes passantes) de la connexion entre chaque routeur : A-B : 100 Mbps A-D : 1000 Mbps B-C : 10 Mbps C-D : 10 Mbps On propose ci-dessous une table de routage pour le routeur A :</p> <p></p> <p>1) Compl\u00e9tez la colonne \u201cm\u00e9trique RIP\u201d du tableau ci-dessus.</p> <p>2) Compl\u00e9tez la colonne \u201cm\u00e9trique OSPF\u201d du tableau ci-dessus. </p> <p>3) Un ordinateur appartenant au r\u00e9seau local R1 envoie un paquet de donn\u00e9es \u00e0 un ordinateur appartenant au r\u00e9seau local R2.</p> <p>a) Donnez le chemin suivi par ce paquet de donn\u00e9es si le routeur A utilise le protocole de routage RIP. Justifiez votre r\u00e9ponse.</p> <p>b) Donnez le chemin suivi par ce paquet de donn\u00e9es si le routeur A utilise le protocole de routage OSPF. Justifiez votre r\u00e9ponse.</p> <p>4) Le routeur D est en panne. Un ordinateur appartenant au r\u00e9seau local R1 envoie un paquet de donn\u00e9es \u00e0 un ordinateur appartenant au r\u00e9seau local R3. Donnez le chemin suivi par ce paquet de donn\u00e9es si le routeur A utilise le protocole de routage OSPF. Justifiez votre r\u00e9ponse.</p> <p>5) La liaison entre 2 routeurs a un co\u00fbt de 0,2, calculez le d\u00e9bit de cette liaison en bps puis en Mbps.</p>"},{"location":"NSITerm/ARSE/c11e.html#exercice-112","title":"exercice 11.2","text":"<p>Cet exercice est tir\u00e9 du sujet 0 du bac NSI.</p> <p>On consid\u00e8re un r\u00e9seau compos\u00e9 de plusieurs routeurs reli\u00e9s de la fa\u00e7on suivante :</p> <p></p>"},{"location":"NSITerm/ARSE/c11e.html#le-protocole-rip","title":"Le protocole RIP","text":"<p>Le protocole RIP permet de construire les tables de routage des diff\u00e9rents routeurs, en indiquant pour chaque routeur la distance, en nombre de sauts, qui le s\u00e9pare d\u2019un autre routeur. Pour le r\u00e9seau ci-dessus, on dispose des tables de routage suivantes :</p> <p></p> <p>Question 1</p> <p>1) Le routeur A doit transmettre un message au routeur G, en effectuant un nombre minimal de sauts. D\u00e9terminer le trajet parcouru.</p> <p>2) D\u00e9terminer une table de routage possible pour le routeur G obtenu \u00e0 l\u2019aide du protocole RIP.</p> <p>Question 2</p> <p>Le routeur C tombe en panne. Reconstruire la table de routage du routeur A en suivant le protocole RIP.</p>"},{"location":"NSITerm/ARSE/c11e.html#le-protocole-ospf","title":"Le protocole OSPF","text":"<p>Contrairement au protocole RIP, l\u2019objectif n\u2019est plus de minimiser le nombre de routeurs travers\u00e9s par un paquet. La notion de distance utilis\u00e9e dans le protocole OSPF est uniquement li\u00e9e aux co\u00fbts des liaisons. L\u2019objectif est alors de minimiser la somme des co\u00fbts des liaisons travers\u00e9es.</p> <p>On a rajout\u00e9 sur le graphe repr\u00e9sentant le r\u00e9seau pr\u00e9c\u00e9dent les diff\u00e9rents d\u00e9bits des liaisons. On rappelle que \\(\\mathrm{1\\ Gb\\cdot s^{-1}=1000\\ Mb\\cdot s^{-1}=10^9\\ bits\\cdot s^{-1}}\\).</p> <p></p> <p>Question 3</p> <p>1) V\u00e9rifier que le co\u00fbt de la liaison entre les routeurs A et B est 0,01.</p> <p>2) La liaison entre le routeur B et D a un co\u00fbt de 5. Quel est le d\u00e9bit de cette liaison ?</p> <p>Question 4 </p> <p>Le routeur A doit transmettre un message au routeur G, en empruntant le chemin dont la somme des co\u00fbts sera la plus petite possible. D\u00e9terminer le chemin parcouru. On indiquera le raisonnement utilis\u00e9.</p>"},{"location":"NSITerm/ARSE/c11e.html#exercice-113","title":"exercice 11.3","text":"<p>Cet exercice est tir\u00e9 du sujet 2021 du bac NSI.</p> <p>On repr\u00e9sente ci-dessous un r\u00e9seau dans lequel R1, R2, R3, R4, R5 et R6 sont des routeurs. Le r\u00e9seau local L1 est reli\u00e9 au routeur R1 et le r\u00e9seau local L2 au routeur R6.</p> <p></p> <p>Rappels et notations :</p> <p>Dans cet exercice, les adresses IP sont compos\u00e9es de 4 octets, soit 32 bits. Elles sont not\u00e9es X1.X2.X3.X4, o\u00f9 X1, X2, X3 et X4 sont les valeurs des 4 octets, convertis en notation d\u00e9cimale.</p> <p>La notation X1.X2.X3.X4/n signifie que les n premiers bits de poids forts de l\u2019adresse IP repr\u00e9sentent la partie \u00ab r\u00e9seau \u00bb, les bits suivants repr\u00e9sentent la partie \u00ab h\u00f4te \u00bb. Toutes les adresses des h\u00f4tes connect\u00e9s \u00e0 un r\u00e9seau local ont la m\u00eame partie r\u00e9seau et peuvent donc communiquer directement. L\u2019adresse IP dont tous les bits de la partie \u00ab h\u00f4te \u00bb sont \u00e0 0 est appel\u00e9e \u00ab adresse du r\u00e9seau \u00bb.</p> <p>On donne \u00e9galement des extraits de la table de routage des routeurs R1 \u00e0 R5 dans le tableau suivant.</p> <p></p> <p>1) Un paquet part du r\u00e9seau local L1 \u00e0 destination du r\u00e9seau local L2.</p> <p>a) En utilisant l\u2019extrait de la table de routage de R1, vers quel routeur R1 envoie-t-il ce paquet : R2 ou R3 ? Justifier.</p> <p>b) A l\u2019aide des extraits de tables de routage ci-dessus, nommer les routeurs travers\u00e9s par ce paquet, lorsqu\u2019il va du r\u00e9seau L1 au r\u00e9seau L2.</p> <p>2) La liaison entre R1 et R2 est rompue.</p> <p>a) Sachant que ce r\u00e9seau utilise le protocole RIP (distance en nombre de sauts), donner l\u2019un des deux chemins possibles que pourra suivre un paquet allant de L1 vers L2.</p> <p>b) Dans les extraits de tables de routage ci-dessus, pour le chemin de la question 2.a, quelle(s) ligne(s) sera (seront) modifi\u00e9e(s) ?</p> <p>3) On a r\u00e9tabli la liaison entre R1 et R2. Par ailleurs, pour tenir compte du d\u00e9bit des liaisons, on d\u00e9cide d\u2019utiliser le protocole OSPF (distance li\u00e9e au co\u00fbt minimal des liaisons) pour effectuer le routage. Le co\u00fbt des liaisons entre les routeurs est donn\u00e9 par le tableau suivant :</p> <p></p> <p>a) Sachant que la bande passante (d\u00e9bit) de la liaison R2-R3 est de 10 Mbps, calculer le co\u00fbt correspondant.</p> <p>b) D\u00e9terminer le chemin parcouru par un paquet partant du r\u00e9seau L1 et arrivant au r\u00e9seau L2, en utilisant le protocole OSPF.</p> <p>c) Indiquer pour quel(s) routeur(s) l\u2019extrait de la table de routage sera modifi\u00e9 pour un paquet \u00e0 destination de L2, avec la m\u00e9trique OSPF.</p>"},{"location":"NSITerm/BDD/C8A1.html","title":"Activit\u00e9 de d\u00e9couverte: insuffisance des structures de donn\u00e9es plates","text":"<p>Certains d'entre vous ont probablement d\u00e9j\u00e0 entendu parler des bases de donn\u00e9es. Dans le cadre de cette activit\u00e9, oublions, dans un premier temps, toutes nos connaissances et nos r\u00e9flexions sur le sujet.  </p>"},{"location":"NSITerm/BDD/C8A1.html#contexte","title":"Contexte","text":"<p>Supposons que nous ayons \u00e0 d\u00e9velopper une application de gestion d'une biblioth\u00e8que. Tous les livres de la biblioth\u00e8que poss\u00e8dent un num\u00e9ro d'exemplaire, un titre, un ou plusieurs auteurs et un \u00e9diteur. Le num\u00e9ro d'exemplaire est un identifiant unique permettant de diff\u00e9rencier les exemplaires d'un m\u00eame livre. Lorsqu'une personne emprunte un livre, il faut m\u00e9moriser son nom, son pr\u00e9nom, son num\u00e9ro de t\u00e9l\u00e9phone, son adresse, la date de l'emprunt et la date de retour une fois ce dernier r\u00e9alis\u00e9. Toutes les informations doivent \u00eatre conserv\u00e9es pour garder un historique des emprunts.  </p>"},{"location":"NSITerm/BDD/C8A1.html#une-solution-simple-et-naive","title":"Une solution simple et na\u00efve...","text":"<p>Notre application va devoir stocker toutes les informations pr\u00e9cis\u00e9es ci-dessus de mani\u00e8re persistante. Nous choisissons donc d'utiliser un fichier texte de type <code>csv</code> pour enregistrer les donn\u00e9es. Pour cela, nous adoptons na\u00efvement la solution simple et naturelle suivante : </p> <p>\u2014 Nous cr\u00e9ons un fichier texte <code>csv</code> comportant \u00e0 l'origine une ligne par livre. \u2014 Dans chaque ligne, nous renseignons les informations: <code>idEx</code> (num\u00e9ro d'exemplaire), <code>Titre</code>, <code>Auteur</code> et <code>\u00c9diteur</code>, s\u00e9par\u00e9es par une virgule. \u2014 Quand une personne emprunte un livre, nous compl\u00e9tons la ligne du livre emprunt\u00e9 par les champs: <code>Nom</code>, <code>Pr\u00e9nom</code>, <code>T\u00e9l\u00e9phone</code>, <code>Adresse</code> et <code>Date-emprunt</code> toujours en s\u00e9parant ces informations par une virgule. \u2014 Lorsqu'une personne ram\u00e8ne un livre, il suffit de compl\u00e9ter le dernier champ <code>Date-retour</code> sur la ligne du livre emprunt\u00e9. \u2014 Quand un livre est emprunt\u00e9 une nouvelle fois, nous ajoutons une nouvelle ligne avec toutes les informations concernant le livre et la personne qui l'emprunte. </p> <p>Bien entendu, le biblioth\u00e9caire ne ressaisit pas tout, l'application va chercher la plupart de ces informations dans le fichier. Le fichier en question peut donc \u00eatre per\u00e7u comme un tableau de cha\u00eenes de caract\u00e8res. Nous parlerons \u00e9galement de table plut\u00f4t que de tableau ou de fichier. </p> <p>\u00c0 faire</p> <p>Ouvrir le fichier <code>biblio.csv</code> pour avoir une id\u00e9e plus pr\u00e9cise du contenu.</p> idEx Titre Auteur Editeur Nom Prenom tel Date-emp Date-ret 1 La volont\u00e9 de puissance Nietzsche Gallimard 2 Espoir-du-cerf O Scott Card Deno\u00ebl Michel Tom 20/10/08 07/11/08 3 Vendredi ou la vie sauvage M. Tournier Poche Moreau J. Batiste 02/10/09 4 \u00c9l\u00e9vation D. Brin J\u2019AI LU Laurent Camille 02/04/06 20/04/06 5 Vendredi ou la vie sauvage M. Tournier Poche Moreau J. Batiste 02/10/09 6 Vendredi ou la vie sauvage M. Tournier Poche 7 Ainsi parlait Zarathoustra F. Nietzsche Poche 8 Humain  trop humain F. NIETZSCHE POCHE 9 Les ma\u00eetres chanteurs O.S. Card Deno\u00ebl Moreau J. Batiste 08/10/09 10 Les ma\u00eetres chanteurs O.S. Card Denoel 11 Les ma\u00eetres chanteurs O.S. Card Deno\u00ebl 12 St-Exupery  Terre des hommes F. Brin Broch\u00e9 13 R\u00e9demption Brin J\u2019ai lu 2 Espoir-du-cerf O Scott Card Deno\u00ebl Roux Sarah 20/11/09 4 \u00c9l\u00e9vation D. Brin J\u2019AI LU Dubois Mathis 25/11/09"},{"location":"NSITerm/BDD/C8A1.html#mais-pas-sans-consequence","title":"...Mais pas sans cons\u00e9quence","text":"<p>Supposons que l'application de gestion de biblioth\u00e8que fonctionne correctement et stocke toutes ses donn\u00e9es dans un fichier comme celui que nous venons de d\u00e9crire. Nous allons nous pencher sur les inconv\u00e9nients et les cons\u00e9quences inh\u00e9rentes \u00e0 une telle approche. L'application fonctionne maintenant depuis 20 ans. Le nombre de personnes s'inscrivant \u00e0 la biblioth\u00e8que est d'environ 5000 par an. Un abonn\u00e9 emprunte en moyenne 2 livres par mois.</p> <p>1. Montrer qu'une ann\u00e9e de fonctionnement entra\u00eenera la cr\u00e9ation de \\(120\\ 000\\) lignes. En d\u00e9duire le nombre de lignes approximatif du fichier des donn\u00e9es, au bout de 20 ans?  </p> <p>2. Quelle est la taille approximative du fichier sachant que chaque caract\u00e8re est cod\u00e9 sur 1 octet et qu'une ligne contient, en moyenne, 200 caract\u00e8res? Donner le r\u00e9sultat en Mo.    </p> <p>3. Lorsqu'un abonn\u00e9 emprunte un livre, le biblioth\u00e9caire saisit simplement le num\u00e9ro de l'exemplaire et le nom et le pr\u00e9nom de l'abonn\u00e9. L'application se charge alors de parcourir le fichier pour rechercher les informations manquantes concernant le livre et l'abonn\u00e9 afin de pr\u00e9remplir, \u00e0 la fin du fichier, la nouvelle ligne concernant l'emprunt. Dans le pire des cas, l'application doit parcourir tout le fichier.  </p> <p>Supposons:  </p> <ul> <li>qu'un acc\u00e8s au fichier co\u00fbte 8 ms (c'est le temps d'acc\u00e8s moyen au disque dur);</li> <li>qu'une lecture de ligne co\u00fbte 0.1 ms (temps pour lire les 200 caract\u00e8res de la ligne);</li> <li>qu'une recherche sur la ligne pour trouver le num\u00e9ro de l'exemplaire ou le nom et le pr\u00e9nom de l'abonn\u00e9 co\u00fbte 0.01 ms.  </li> </ul> <p>Quel est, dans le pire des cas, le temps mis par l'application pour compl\u00e9ter les informations saisies par le biblioth\u00e9caire ? Donner le r\u00e9sultat en seconde puis en minutes secondes.    </p> <p>4. Supposons qu'une personne est abonn\u00e9e depuis l'origine de l'application. Elle pr\u00e9vient le biblioth\u00e9caire que son pr\u00e9nom est mal orthographi\u00e9. Combien de lignes, approximativement, doivent \u00eatre modifi\u00e9es pour corriger cette erreur dans tout le fichier de donn\u00e9es?  </p> <p>5. Cette base de donn\u00e9es permet-elle vraiment de retrouver des informations ? Par exemple, en se rappelant du travail fait en 1re sur l'exploitation des fichiers <code>csv</code> (en python), r\u00e9fl\u00e9chir au moyen de retrouver les informations suivantes :  </p> <ul> <li>Quels sont les livres \u00e9dit\u00e9s chez Poche?</li> <li>Quels sont les livres \u00e9dit\u00e9s chez Deno\u00eal?</li> <li>Quels sont les livres \u00e9crits par Orson Scott Card?</li> <li>Quels sont les livres \u00e9crits par Friedrich Nietzsche?</li> <li>Quels sont les livres \u00e9crits par David Brin?</li> </ul> Indice <p>On pourra utiliser le cadeau du professeur:</p> <pre><code>import csv\n\n\nwith open('biblio.csv', newline='', encoding='utf8') as fp:\n    table = [dict(ligne) for ligne in csv.DictReader(fp, delimiter=',')]\n</code></pre> <p>6. La mise \u00e0 jour.  </p> <p>Analyse d'une situation</p> <p>M. Moreau Jean-Batiste et son fils, dont le pr\u00e9nom est \u00e9galement Jean-Batiste, ont tous les deux emprunt\u00e9  un exemplaire d'un livre: Vendredi ou la vie sauvage de Michel Tournier chez Poche et Vendredi ou la  vie sauvage de Michel Tournier chez Poche. Lorsqu'il vient rendre les deux livres, le p\u00e8re pr\u00e9cise que le pr\u00e9nom de son fils est <code>Jean-Batiste  Junior</code>, et non pas <code>Jean-Batiste</code>. Il remarque \u00e9galement que le livre qu'il (le p\u00e8re) vient  d'emprunter, qui porte le num\u00e9ro 3, n'est pas \u00e9crit par <code>Michel Tournier</code>, mais qu'il est co\u00e9crit par  <code>Michel Tournier et G\u00e9rard Franquin</code>. </p> <p>Est-il possible de corriger ces erreurs dans notre fichier ?  </p> <p>7. \u00c9num\u00e9rer ou r\u00e9sumer tous les probl\u00e8mes que la repr\u00e9sentation des donn\u00e9es choisie (c'est-\u00e0-dire utilisation d'un fichier de donn\u00e9es) semble poser.  </p>"},{"location":"NSITerm/BDD/C8A1.html#affinement-de-la-solution","title":"Affinement de la solution","text":"<p>Il est maintenant \u00e9vident que la solution na\u00efve d\u00e9crite dans la section pr\u00e9c\u00e9dente pose de nombreux probl\u00e8mes. Elle est totalement inacceptable pour une application s\u00e9rieuse bien qu'elle soit encore largement employ\u00e9e dans des cas de petite taille. Pour r\u00e9soudre les probl\u00e8mes d'incoh\u00e9rences concernant les auteurs, nous proposons de d\u00e9composer le tableau de d\u00e9part en deux sous-tableaux (voir les fichiers <code>EMPRUNTS_Q8.csv</code> et <code>AUTEURS.csv</code>). Les colonnes <code>idAu</code> permettent de faire le lien entre les deux tables. La redondance sur les noms des auteurs est-elle toujours pr\u00e9sente ?</p>"},{"location":"NSITerm/BDD/C8A1.html#table-emprunts","title":"Table EMPRUNTS","text":"idEx Titre idAu Editeur Nom Prenom tel Date-emp Date-ret 1 La volont\u00e9 de puissance 1 Gallimard 2 Espoir-du-cerf 2 Deno\u00ebl Michel Tom 20/10/08 07/11/08 3 Vendredi ou la vie sauvage 3 Poche Moreau J. Batiste 02/10/09 4 \u00c9l\u00e9vation 4 J\u2019AI LU Laurent Camille 02/04/06 20/04/06 5 Vendredi ou la vie sauvage 3 Poche Moreau J. Batiste 02/10/09 6 Vendredi ou la vie sauvage 3 Poche 7 Ainsi parlait Zarathoustra 1 Poche 8 Humain  trop humain 1 POCHE 9 Les ma\u00eetres chanteurs 2 Deno\u00ebl Moreau J. Batiste 08/10/09 10 Les ma\u00eetres chanteurs 2 Deno\u00ebl 11 Les ma\u00eetres chanteurs 2 Deno\u00ebl 12 St-Exupery  Terre des hommes 5 Broch\u00e9 13 R\u00e9demption 4 J\u2019ai lu 2 Espoir-du-cerf 2 Deno\u00ebl Roux Sarah 20/11/09 4 \u00c9l\u00e9vation 4 J\u2019AI LU Dubois Mathis 25/11/09"},{"location":"NSITerm/BDD/C8A1.html#table-auteurs","title":"Table AUTEURS","text":"idAu Nom Pr\u00e9nom 1 Nietzsche Friedrich 2 Card Orson Scott 3 Tournier Michel 4 Brin David 5 Brin Fran\u00e7oise <p>8. Cette d\u00e9composition a-t-elle engendr\u00e9 une perte d'information? Autrement dit, est-il possible de reconstituer la table originale \u00e0 partir de cette d\u00e9composition?  </p> <p>9. Pouvons-nous maintenant r\u00e9pondre aux requ\u00eates suivantes :  </p> <ul> <li>Quels sont les livres \u00e9crits par Orson Scott Card?</li> <li>Quels sont les livres \u00e9crits par Friedrich Nietzsche?</li> <li>Quels sont les livres \u00e9crits par David Brin? </li> </ul> <p>10. Sur le m\u00eame principe, proposer une solution pour que le titre de chaque livre ne soit repr\u00e9sent\u00e9 qu'une seule fois dans notre base de donn\u00e9es.  </p> Indication <p>On pourra introduire une table suppl\u00e9mentaire <code>LIVRES</code>.</p> <p>11. Toujours en appliquant la m\u00eame m\u00e9thode, supprimer les redondances concernant la mention des \u00e9diteurs et les informations associ\u00e9es aux abonn\u00e9s. Pour ce faire, nous pr\u00e9cisons que l'abonn\u00e9 qui a emprunt\u00e9 le livre Les ma\u00eetres chanteurs est le p\u00e8re.  </p> <p>12. Notre base de donn\u00e9es comporte encore des redondances. O\u00f9 se situent-elles ?</p> Aide <p>On pourra lire les fichiers avec python suivant la m\u00e9thode habituelle:  </p> <pre><code>import csv\n\n\nwith open('EMPRUNTS_Q8.csv', newline='', encoding='utf8') as emprunts:\n    tab_emp = [dict(ligne) for ligne in csv.DictReader(emprunts, delimiter=',')]\nwith open('AUTEURS.csv', newline='', encoding='utf8') as auteurs:\n    tab_aut = [dict(ligne) for ligne in csv.DictReader(auteurs, delimiter=',')]\n</code></pre>"},{"location":"NSITerm/BDD/C8A1P.html","title":"Corrig\u00e9 (partiel) de l'activit\u00e9 de d\u00e9couverte BDD","text":""},{"location":"NSITerm/BDD/C8A1P.html#question-5","title":"Question 5","text":"<pre><code>import csv\n\n\nwith open('./BDD/biblio.csv', newline='', encoding='utf8') as fp:\n    table = [dict(ligne) for ligne in csv.DictReader(fp, delimiter=',')]\n</code></pre>"},{"location":"NSITerm/BDD/C8A1P.html#quels-sont-les-livres-edites-chez-denoel","title":"Quels sont les livres \u00e9dit\u00e9s chez Deno\u00eal?","text":"<pre><code>for ligne in table:\n    if ligne['Editeur'] == 'Deno\u00ebl':\n        print(ligne['Titre'])\n</code></pre> <pre><code>Espoir-du-cerf\nLes ma\u00eetres chanteurs\nLes ma\u00eetres chanteurs\nEspoir-du-cerf\n</code></pre>"},{"location":"NSITerm/BDD/C8A1P.html#remarque","title":"Remarque","text":"<p>Dans le fichier, on a une occurence \u00e9crite diff\u00e9remment et donc n'apparait pas clairement ici: <code>Denoel</code> (sans tr\u00e9ma).</p>"},{"location":"NSITerm/BDD/C8A1P.html#quels-sont-les-livres-ecrits-par-orson-scott-card","title":"Quels sont les livres \u00e9crits par Orson Scott Card?","text":"<pre><code>for ligne in table:\n    if 'Card' in ligne['Auteur']:\n        print(ligne['Titre'])\n</code></pre> <pre><code>Espoir-du-cerf\nLes ma\u00eetres chanteurs\nLes ma\u00eetres chanteurs\nLes ma\u00eetres chanteurs\nEspoir-du-cerf\n</code></pre>"},{"location":"NSITerm/BDD/C8A1P.html#remarque_1","title":"Remarque","text":"<p>On est oblig\u00e9 de se limiter \u00e0 la recherche de la sous cha\u00eene <code>Card</code> pour ne pas louper des occurences.</p>"},{"location":"NSITerm/BDD/C8A1P.html#quels-sont-les-livres-ecrits-par-friedrich-nietzsche","title":"Quels sont les livres \u00e9crits par Friedrich Nietzsche?","text":"<pre><code># Pb d\u00fb \u00e0 l'orthographe\nfor ligne in table:\n    if 'Nietzsche' in ligne['Auteur']:\n        print(ligne['Titre'])\n</code></pre> <pre><code>La volont\u00e9 de puissance\nAinsi parlait Zarathoustra\n</code></pre>"},{"location":"NSITerm/BDD/C8A1P.html#remarque_2","title":"Remarque","text":"<p>On loupe ici l'exemplaire n\u00b05 car dans ce dernier le nom est tout en majuscule. On peut quand m\u00eame s'en sortir, m\u00eame si cela devient p\u00e9nible:</p> <pre><code>for ligne in table:\n    if 'Nietzsche'.upper() in ligne['Auteur'].upper():\n        print(ligne['Titre'])\n</code></pre> <pre><code>La volont\u00e9 de puissance\nAinsi parlait Zarathoustra\nHumain  trop humain\n</code></pre>"},{"location":"NSITerm/BDD/C8A1P.html#quels-sont-les-livres-ecrits-par-david-brin","title":"Quels sont les livres \u00e9crits par David Brin?","text":"<pre><code>for ligne in table:\n    if 'David Brin' in ligne['Auteur']:\n        print(ligne['Titre'])\n</code></pre> <p>On a rien en sortie car dans le fichier on a <code>D. Brin</code>. Comme pr\u00e9c\u00e9demment, on peut trouver une solution, pas tr\u00e8s satisfaisante car il faut v\u00e9rifier que le m\u00eame orthographe a \u00e9t\u00e9 utilis\u00e9e partout. Et, qu'en est-il de l'exemplaire n\u00b0 13 ?</p> <pre><code>for ligne in table:\n    if 'D. Brin' in ligne['Auteur']:\n        print(ligne['Titre'])\n</code></pre> <pre><code>\u00c9l\u00e9vation\n\u00c9l\u00e9vation\n</code></pre>"},{"location":"NSITerm/BDD/C8A1P.html#question-6","title":"Question 6","text":"<p>Il sera extr\u00eamement difficile de changer <code>Jean Batiste</code> en <code>Jean Batiste Junior</code>. En effet, il faudrait examiner chaque ligne o\u00f9 ce pr\u00e9nom intervient et d\u00e9cider au cas par cas.  </p> <p>Le syst\u00e8me tel qu'il est pr\u00e9sent\u00e9 ne pr\u00e9voit pas la gestion de livres avec des auteurs multiples.</p>"},{"location":"NSITerm/BDD/C8A1P.html#question-7","title":"Question 7","text":"<p>Parmi les probl\u00e8mes rencontr\u00e9s, on peut citer:  </p> <ul> <li>la taille du fichier devient tr\u00e8s importante avec le temps;</li> <li>le temps de traitement va devenir r\u00e9dhibitoire dans la dur\u00e9e;</li> <li>la recherche est difficile;</li> <li>la mise \u00e0 jour d'information peut \u00eatre impossible;</li> <li>des probl\u00e8mes peuvent \u00eatre difficiles \u00e0 r\u00e9soudre: Comment ins\u00e9rer un nouvel abonn\u00e9 qui n'a encore rien emprunt\u00e9?, ou encore: Comment supprimer un livre sans risquer de supprimer un abonn\u00e9?.</li> </ul>"},{"location":"NSITerm/BDD/C8A1P.html#question-8","title":"Question 8","text":"<p>Cette d\u00e9composition n'a pas engendr\u00e9 de pertes d'informations. En effet, on peut retrouver l'auteur d'un livre en faisant correspondre <code>idAu</code> de la table <code>EMPRUNTS</code> avec <code>idAu</code> de la table <code>AUTEURS</code>.  </p> <p>Avantage: si on doit faire une modification sur le nom d'un auteur, on ne le fait qu'une fois dans la table <code>AUTEURS</code>.</p>"},{"location":"NSITerm/BDD/C8A1P.html#question-9","title":"Question 9","text":"<p>Exemples de code python associ\u00e9 aux requ\u00eates demand\u00e9es</p> <pre><code>import csv\n\n\nwith open('./BDD/EMPRUNTS_Q8.csv', newline='', encoding='utf8') as fp:\n    t_emprunts = [dict(ligne) for ligne in csv.DictReader(fp, delimiter=',')]\nwith open('./BDD/AUTEURS.csv', newline='', encoding='utf8') as fp:\n    t_auteur = [dict(ligne) for ligne in csv.DictReader(fp, delimiter=',')]\n</code></pre> <pre><code>def trouver_idauteur(auteur):\n    prenom, nom = auteur\n    for ligne in t_auteur:\n        if ligne['Nom'] == nom and ligne['Pr\u00e9nom'] == prenom:\n            return ligne['idAu']\n</code></pre> <pre><code>def chercher_livre(auteur):\n    result = ''\n    id_auteur = trouver_idauteur(auteur)\n    for ligne in t_emprunts:\n        if ligne['idAu'] == id_auteur:\n            result = result + '\\n' + ligne['Titre']\n    return result\n</code></pre> <pre><code>print(chercher_livre(('Orson Scott', 'Card')))\n</code></pre> <pre><code>Espoir-du-cerf\nLes ma\u00eetres chanteurs\nLes ma\u00eetres chanteurs\nLes ma\u00eetres chanteurs\nEspoir-du-cerf\n</code></pre> <pre><code>print(chercher_livre(('David', 'Brin')))\n</code></pre> <pre><code>\u00c9l\u00e9vation\nR\u00e9demption\n\u00c9l\u00e9vation\n</code></pre> <pre><code>print(chercher_livre(('Friedrich', 'Nietzsche')))\n</code></pre> <pre><code>La volont\u00e9 de puissance\nAinsi parlait Zarathoustra\nHumain  trop humain\n</code></pre>"},{"location":"NSITerm/BDD/C8A1P.html#question-10","title":"Question 10","text":"<p>Introduisons, comme sugg\u00e9r\u00e9, une table <code>LIVRES</code>:  </p> idLi Titre 1 La volont\u00e9 de puissance 2 Espoir-du-cerf 3 Vendredi ou la vie sauvage 4 \u00c9l\u00e9vation 5 Ainsi parlait Zarathoustra 6 Humain  trop humain 7 Les ma\u00eetres chanteurs 8 St-Exupery  Terre des hommes 9 R\u00e9demption <p>La table <code>EMPRUNTS</code> sera modifi\u00e9e comme suit:  </p> id Ex idLi idAu Editeur Nom Prenom tel Date-emp Date-ret 1 1 1 Gallimard 2 2 2 Deno\u00ebl Michel Tom 20/10/08 07/11/08 3 3 3 Poche Moreau J. Batiste 02/10/09 4 4 4 J\u2019AI LU Laurent Camille 02/04/06 20/04/06 5 3 3 Poche Moreau J. Batiste 02/10/09 6 3 3 Poche 7 5 1 Poche 8 6 1 POCHE 9 7 2 Deno\u00ebl Moreau J. Batiste 08/10/09 10 7 2 Deno\u00ebl 11 7 2 Deno\u00ebl 12 8 5 Broch\u00e9 13 9 4 J\u2019ai lu 2 2 2 Deno\u00ebl Roux Sarah 20/11/09 4 2 4 J\u2019AI LU Dubois Mathis 25/11/09"},{"location":"NSITerm/BDD/C8A1P.html#question-11","title":"Question 11","text":"<p>On peut adopter la d\u00e9composition suivante:</p>"},{"location":"NSITerm/BDD/C8A1P.html#table-emprunts","title":"Table EMPRUNTS","text":"idEx idLi idAu idEd idAb Date-emp Date-ret 1 1 1 1 2 2 2 2 1 20/10/08 07/11/08 3 3 3 3 2 02/10/09 4 4 4 4 3 02/04/06 20/04/06 5 3 3 3 4 02/10/09 6 3 3 3 7 5 1 3 8 6 1 3 9 7 2 2 2 08/10/09 10 7 2 2 11 7 2 2 12 8 5 5 13 9 4 4 2 2 2 2 5 20/11/09 4 2 4 4 6 25/11/09"},{"location":"NSITerm/BDD/C8A1P.html#table-editeurs","title":"Table EDITEURS","text":"idEd Nom 1 Gallimard 2 Deno\u00ebl 3 Poche 4 J\u2019ai lu 5 Broch\u00e9"},{"location":"NSITerm/BDD/C8A1P.html#table-abonnes","title":"Table ABONNES","text":"idAb Nom Prenom Tel Ad 1 Michel Tom 2 Moreau Jean Batiste 3 Laurent Camille 4 Moreau Jean Batiste 5 Roux Sarah 6 Dubois Mathis <p>Les tables <code>LIVRES</code> et <code>AUTEURS</code>restent inchang\u00e9es par rapport \u00e0 la question 10.</p>"},{"location":"NSITerm/BDD/C8A1P.html#question-12","title":"Question 12","text":"<p>On remarque que les informations li\u00e9es \u00e0 un livre peuvent appara\u00eetre plusieurs fois (lorsque le livre est emprunt\u00e9 \u00e0 nouveau). Cela se produit par exemple pour l'exemplaire <code>idEx = 2</code>.</p>"},{"location":"NSITerm/BDD/C8C1.html","title":"LE MODELE RELATIONNEL","text":""},{"location":"NSITerm/BDD/C8C1.html#introduction","title":"Introduction","text":"<p>Comme on l'a vu dans l'activit\u00e9 introductive, l'utilisation de structures de donn\u00e9es plates souffre de nombreux inconv\u00e9nients (redondance, mise \u00e0 jour et recherche difficiles, performances m\u00e9diocres lorsque le fichier devient volumineux, etc.). Plus g\u00e9n\u00e9ralement, pour toute application s\u00e9rieuse, on se tourne vers une base de donn\u00e9es. </p> <p>D\u00e9finition</p> <p>On d\u00e9finit une base de donn\u00e9es comme une collection de donn\u00e9es structur\u00e9es (de mani\u00e8re logique) stock\u00e9es sur un support persistent.  </p> <p>Mod\u00e9liser les donn\u00e9es n\u00e9cessitera trois grandes \u00e9tapes:  </p> <ul> <li>trouver les objets ou acteurs du probl\u00e8me ainsi les associations existant entre eux -cette \u00e9tape n'est pas abord\u00e9e en terminale-;</li> <li>mod\u00e9liser les objets / acteurs comme des relations;</li> <li>d\u00e9finir les contraintes.</li> </ul> <p>Enfin, pour g\u00e9rer la base de donn\u00e9es on aura un besoin d'un logiciel appel\u00e9 Syt\u00e8me de Gestion de Base de Donn\u00e9es ou SGBD. Dans les applications de ce cours, on utilisera le SGBD <code>MySQL</code> (coupl\u00e9 \u00e0 l'interface phpMyAdmin).</p>"},{"location":"NSITerm/BDD/C8C1.html#le-modele-relationnel-les-concepts","title":"Le mod\u00e8le relationnel - les concepts","text":"<p>Parmi les mod\u00e8les permettant de structurer de mani\u00e8re logique les donn\u00e9es, un des plus populaires est le mod\u00e8le relationnel d\u00e9velopp\u00e9 en 1970 par l'am\u00e9ricain Edgar Frank Codd.</p>"},{"location":"NSITerm/BDD/C8C1.html#le-vocabulaire","title":"Le vocabulaire","text":"<p>Pour Philippe Rigaux, Professeur au CNAM, le mod\u00e8le relationnel est:  </p> <p>un ensemble de r\u00e9sultats scientifiques, qui ont en commun de s\u2019appuyer sur une repr\u00e9sentation tabulaire des donn\u00e9es.  </p> <p>L'expression mod\u00e8le relationnel vient de la notion de relation en math\u00e9matique.  </p>"},{"location":"NSITerm/BDD/C8C1.html#relation-n-uplet-attribut-schema","title":"Relation, n-uplet, attribut, sch\u00e9ma","text":"<p>Dans une premi\u00e8re approche, une relation peut \u00eatre vue comme un tableau \u00e0 deux dimensions (on dit aussi table) et est rep\u00e9r\u00e9e par un nom. </p> <p>Une relation est un ensemble fini de n-uplets (lignes). Chaque composante d'un n-uplet est un attribut. L'ensemble des valeurs possibles que peut prendre un attribut est son domaine. Le domaine peut \u00eatre vu comme le type en informatique.  </p> <p>Chaque relation est conforme \u00e0 un sch\u00e9ma. Il s'agit d'un ensemble ordonn\u00e9 de couple attribut-domaine, distinct deux-\u00e0-deux, qui caract\u00e9rise un n-uplet.  Par exemple, le sch\u00e9ma de la relation <code>Logement</code> de l'exemple ci-dessus est:  </p> <p>Logement ((id, <code>str</code>), (nom, <code>str</code>), (capacit\u00e9, <code>int</code>), (type, <code>str</code>), (lieu, <code>str</code>))  </p> <p>Une base de donn\u00e9es est un ensemble de relations.</p> <p>Application 1</p> <ol> <li>Ouvrir la base de donn\u00e9es <code>Livres_2</code> \u00e0 partir de l'interface phpMyAdmin.</li> <li>Combien de relation comporte cette base?</li> <li>Donner les attributs ainsi que leur domaine, pr\u00e9sents dans la relation <code>auteur</code>.</li> <li>Donner le sch\u00e9ma de la relation <code>livre</code>.</li> <li>Combien de n-uplets comporte la table <code>usager</code>?</li> </ol>"},{"location":"NSITerm/BDD/C8C1.html#cle-primaire","title":"Cl\u00e9 primaire","text":"<p>Si un ensemble d'attributs \\(\\mathcal{K}\\) permet d'identifier un unique n-uplet alors c'est une cl\u00e9. Si cet ensemble est minimal on dit que c'est une cl\u00e9 primaire. Dans la relation <code>livre</code> de l'application 1, l'attribut <code>isbn</code> constitue une cl\u00e9 primaire.  </p> <p> </p> <p>Tr\u00e8s souvent, on sera amen\u00e9 \u00e0 ajouter une cl\u00e9 artificielle qui servira de cl\u00e9 primaire et qui sera un identifiant entier auto-incr\u00e9ment\u00e9.</p> <p>Aplication 2</p> <ol> <li>L'attribut <code>annee</code> peut-il \u00eatre une cl\u00e9 primaire?</li> <li>L'ensemble <code>titre, editeur</code> peut-il \u00eatre une cl\u00e9 primaire?</li> </ol>"},{"location":"NSITerm/BDD/C8C1.html#cle-etrangere","title":"Cl\u00e9 \u00e9trang\u00e8re","text":"<p>Consid\u00e9rons une relation <code>INFO_LIVRES</code> ci-apr\u00e8s. Un rapide examen permet de constater que beaucoup d'informations sont dupliqu\u00e9es.</p> <p>Relation INFO_LIVRES</p> id titre nom prenom date_nai langue_ecriture ann_publi note 1 1984 Orwell George 1903 anglais 1949 10 2 Dune Herbert Frank 1920 anglais 1965 8 3 Fondation Asimov Isaac 1920 anglais 1951 9 4 Le meilleur des mondes Huxley Aldous 1894 anglais 1931 7 5 Fahrenheit 451 Bradbury Ray 1920 anglais 1953 7 6 Ubik K.Dick Philip 1928 anglais 1969 9 7 Chroniques martiennes Bradbury Ray 1920 anglais 1950 8 8 La nuit des temps Barjavel Ren\u00e9 1911 fran\u00e7ais 1968 7 9 Blade Runner K.Dick Philip 1928 anglais 1968 8 10 Les Robots Asimov Isaac 1920 anglais 1950 9 11 La Plan\u00e8te des singes Boulle Pierre 1912 fran\u00e7ais 1963 8 12 Ravage Barjavel Ren\u00e9 1911 fran\u00e7ais 1943 8 13 Le Ma\u00eetre du Haut Ch\u00e2teau K.Dick Philip 1928 anglais 1962 8 14 Le monde des \u0100 Van Vogt Alfred Elton 1912 anglais 1945 7 15 La Fin de l\u2019\u00e9ternit\u00e9 Asimov Isaac 1920 anglais 1955 8 16 De la Terre \u00e0 la Lune Verne Jules 1828 fran\u00e7ais 1865 10 <p>Dans l'activit\u00e9 d'introduction sur les insuffisances des structures de donn\u00e9es plates on a vu qu'une solution au probl\u00e8me de redondance \u00e9tait la s\u00e9paration des donn\u00e9es en plusieurs tables. On parvient alors \u00e0 reconstruire toute l'information avec un ou des attributs jouant le r\u00f4le de lien.  </p> <p>Ici, on s\u00e9pare les informations dans deux tables <code>LIVRES</code> et <code>AUTEURS</code>.</p> <p>Relation AUTEURS </p> id nom prenom ann_naissance langue_ecriture 1 Orwell George 1903 anglais 2 Herbert Frank 1920 anglais 3 Asimov Isaac 1920 anglais 4 Huxley Aldous 1894 anglais 5 Bradbury Ray 1920 anglais 6 K.Dick Philip 1928 anglais 7 Barjavel Ren\u00e9 1911 fran\u00e7ais 8 Boulle Pierre 1912 fran\u00e7ais 9 Van Vogt Alfred Elton 1912 anglais 10 Verne Jules 1828 fran\u00e7ais <p>Relation LIVRES</p> id titre id_auteur ann_publi note 1 1984 1 1949 10 2 Dune 2 1965 8 3 Fondation 3 1951 9 4 Le meilleur des mondes 4 1931 7 5 Fahrenheit 451 5 1953 7 6 Ubik 6 1969 9 7 Chroniques martiennes 5 1950 8 8 La nuit des temps 7 1968 7 9 Blade Runner 6 1968 8 10 Les Robots 3 1950 9 11 La Plan\u00e8te des singes 8 1963 8 12 Ravage 7 1943 8 13 Le Ma\u00eetre du Haut Ch\u00e2teau 6 1962 8 14 Le monde des \u0100 9 1945 7 15 La Fin de l\u2019\u00e9ternit\u00e9 3 1955 8 16 De la Terre \u00e0 la Lune 10 1865 10 <p>Dans cet exemple, la relation <code>LIVRES</code> poss\u00e8de un attribut <code>id_auteur</code> qui correspond \u00e0 l'attribut <code>id</code> de la relation <code>AUTEURS</code>. Cet attribut de la relation <code>LIVRES</code> qui fait r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire d'une autre relation est appel\u00e9e cl\u00e9 \u00e9trang\u00e8re.  </p> <p>Dans le sch\u00e9ma d'une relation, la cl\u00e9 primaire est souvent soulign\u00e9e et les \u00e9ventuelles cl\u00e9s \u00e9tang\u00e8res sont pr\u00e9c\u00e9d\u00e9es du signe <code>#</code>.</p> <p>Application 3</p> <p>\u00c9crire le sch\u00e9ma des relations <code>LIVRES</code> et <code>AUTEURS</code>.</p>"},{"location":"NSITerm/BDD/C8C1.html#les-contraintes-dintegrite","title":"Les contraintes d'int\u00e9grit\u00e9","text":"<p>Un contrainte d'int\u00e9grit\u00e9 est une propri\u00e9t\u00e9 logique, v\u00e9rifi\u00e9e \u00e0 chaque instant et qui garantit la coh\u00e9rence des donn\u00e9es.</p>"},{"location":"NSITerm/BDD/C8C1.html#contrainte-de-domaine","title":"Contrainte de domaine","text":"<p>Les contraintes de domaine sont utiles pour contr\u00f4ler le type de donn\u00e9es stock\u00e9es. Cela est int\u00e9gr\u00e9 au mod\u00e8le relationnel. Par exemple, dans la table <code>Logement</code> \u00e9voqu\u00e9e plus haut, une entr\u00e9e comme <code>10</code> pour l'attribut <code>id</code> sera refus\u00e9e car le domaine de cet attribut est une cha\u00eene de caract\u00e8re.</p>"},{"location":"NSITerm/BDD/C8C1.html#contrainte-dintegrite-des-relations","title":"Contrainte d'int\u00e9grit\u00e9 des relations","text":"<p>Cette contrainte permet d'assurer que chaque relation a bien une cl\u00e9 primaire unique et bien d\u00e9finie. Deux n-uplets ne peuvent avoir les m\u00eames valeurs pour l'ensemble des attributs.  </p> <p>Par exemple, dans la relation <code>LIVRES</code>, choisir <code>titre</code> comme cl\u00e9 n'est pas une bonne id\u00e9e (on peut avoir deux livres avec le m\u00eame titre). On lui pr\u00e9f\u00e8re une cl\u00e9 artificielle <code>id</code>.</p>"},{"location":"NSITerm/BDD/C8C1.html#contrainte-dintegrite-referentielle","title":"Contrainte d'int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle","text":"<p>Cette contrainte permet d'assurer que chaque valeur d'une cl\u00e9 \u00e9trang\u00e8re doit correspondre une valeur de cl\u00e9 primaire associ\u00e9e. Par exemple, dans la relation <code>LIVRES</code> poss\u00e8de une cl\u00e9 \u00e9trang\u00e8re <code>id_auteur</code>. Pour qu'une valeur de <code>id_auteur</code> soit accept\u00e9e, il faut que cette valeur apparaisse dans la cl\u00e9 primaire de <code>AUTEURS</code></p> <p>R\u00e9f\u00e9rences </p> <p>Sp\u00e9cialit\u00e9 NSI - Terminale - pages 285 - 294; Balabonski &amp; al; ellipses Site David Roche https://pixees.fr/informatiquelycee/n_site/nsi_term_bd_rela.html</p> <p>Liens int\u00e9ressants pour manipuler les tables en markdown </p> <p>convertion HTML vers csv convertion csv vers markdown</p>"},{"location":"NSITerm/BDD/C8C2.html","title":"STRUCTURE DES BASES DE DONNEES RELATIONNELLES","text":""},{"location":"NSITerm/BDD/C8C2.html#schema-dune-base-de-donnees","title":"Sch\u00e9ma d'une base de donn\u00e9es","text":"<p>D\u00e9finition</p> <p>Donner le sch\u00e9ma d'une relation consiste \u00e0 donner un nom et un ensemble d'attribut / domaine.</p> <p>Comme on l'a vu au cours des s\u00e9quences pr\u00e9c\u00e9dentes, il n'est pas recommandable de mettre toutes les donn\u00e9es dans une seule table. Il est en g\u00e9n\u00e9ral n\u00e9cessaire de cr\u00e9er plusieurs relations associ\u00e9es les unes aux autres.  </p> <p>D\u00e9finition</p> <p>On d\u00e9finit le sch\u00e9ma d'une base de donn\u00e9es comme un ensemble de sch\u00e9mas de relation. </p> <p>Il s'agit de la structure de la base, \u00e0 ne pas confondre avec le contenu de la base</p>"},{"location":"NSITerm/BDD/C8C2.html#consequences-dun-mauvais-schema","title":"Cons\u00e9quences d'un mauvais sch\u00e9ma","text":"<p>Avant d'entreprendre la compr\u00e9hension d'un sch\u00e9ma relationnel correct d'une base de donn\u00e9es, examinons les cons\u00e9quences d'un mauvais sch\u00e9ma.</p> <p>On veut cr\u00e9er une base de donn\u00e9es <code>Infos_films</code> repr\u00e9sentant des films, avec des informations comme le titre, l\u2019ann\u00e9e, le r\u00e9alisateur, etc. On part d\u2019un sch\u00e9ma rassemblant ces informations dans une unique table: <code>Film(titre, ann\u00e9e, pr\u00e9nomR\u00e9alisateur, nomR\u00e9alisateur, ann\u00e9eNaiss)</code></p> titre ann\u00e9e pr\u00e9nomR\u00e9alisateur nomR\u00e9alisateur ann\u00e9eNais Alien 1979 Ridley Scott 1943 Vertigo 1958 Alfred Hitchcock 1899 Psychose 1960 Alfred Hitchcock 1899 Kagemusha 1980 Akira Kurosawa 1910 Volte-face 1997 John Woo 1946 Pulp Fiction 1995 Quentin Tarantino 1963 Titanic 1997 James Cameron 1954 Sacrifice 1986 Andrei Tarkovski 1932 <p>Les probl\u00e8mes potentiels ont pour origine la redondance d'informations.</p>"},{"location":"NSITerm/BDD/C8C2.html#anomalies-dinsertion","title":"Anomalies d'insertion","text":"<p>En l'\u00e9tat, sans cl\u00e9 primaire d\u00e9finie, rien n'interdit l'insertion d'un film d\u00e9j\u00e0 pr\u00e9sent. Par ailleurs, pour ins\u00e9rer un film il faut absolument saisir son r\u00e9alisateur (\u00e0 moins d'accepter une valeur vide <code>NULL</code>, ce qui n'est jamais tr\u00e8s bon). Un probl\u00e8me similaire se pose si on veut entrer un r\u00e9alisateur: il faut saisir un film qu'il a r\u00e9alis\u00e9.</p>"},{"location":"NSITerm/BDD/C8C2.html#anomalies-de-mise-a-jour","title":"Anomalies de mise \u00e0 jour","text":"<p>Supposons que l\u2019on modifie l\u2019ann\u00e9e de naissance de Hitchcock pour la ligne Vertigo et que l'on oublie d'effectuer la modification pour la ligne Psychose. On se retrouve alors avec des informations incoh\u00e9rentes.</p>"},{"location":"NSITerm/BDD/C8C2.html#anomalies-de-suppression","title":"Anomalies de suppression","text":"<p>On ne peut pas supprimer un film sans supprimer du m\u00eame coup son r\u00e9alisateur. Si on souhaite, par exemple, ne plus voir le film Titanic figurer dans la base de donn\u00e9es, on va effacer du m\u00eame coup les informations sur James Cameron.</p>"},{"location":"NSITerm/BDD/C8C2.html#comprendre-un-bon-schema-dune-base-de-donnees","title":"Comprendre un (bon) sch\u00e9ma d'une base de donn\u00e9es","text":"<p>La base support pour cette section peut \u00eatre consult\u00e9e avec l'interface <code>phpMyAdmin</code>, en ouvrant la base <code>Films_2</code>.</p> <p>Le mod\u00e8le relationnel poss\u00e8de un outil (hors programme de terminale) permettant d'\u00e9viter tous les probl\u00e8mes li\u00e9s \u00e0 la redondance: la normalisation. En l'appliquant au probl\u00e8me pr\u00e9c\u00e9dent on peut aboutir au sch\u00e9ma de base de donn\u00e9es <code>Infos_films</code> suivant:  </p> <ul> <li>Film (idFilm, titre, ann\u00e9e, genre, r\u00e9sum\u00e9, #idR\u00e9alisateur, #codePays)</li> <li>Pays (code, nom, langue)</li> <li>Artiste (idArtiste, nom, pr\u00e9nom, ann\u00e9eNaissance)</li> <li>R\u00f4le (#idFilm, #idActeur, nomR\u00f4le)</li> <li>Internaute (email, nom, pr\u00e9nom, r\u00e9gion)</li> <li>Notation (#email, #idFilm, note)</li> </ul> <p>On peut d'abord noter que chaque relation poss\u00e8de une cl\u00e9 primaire, ce qui assure l'unicit\u00e9 des n-uplets. La cl\u00e9 \u00e9trang\u00e8re <code>idR\u00e9alisateur</code> dans <code>Film</code> r\u00e9f\u00e9rence la cl\u00e9 primaire <code>idArtiste</code> de <code>Artiste</code>. De m\u00eame, La cl\u00e9 \u00e9trang\u00e8re <code>codePays</code> dans <code>Film</code> r\u00e9f\u00e9rence la cl\u00e9 primaire <code>code</code> de <code>Pays</code>. Ainsi, connaissant un film on peut retrouver son r\u00e9alisateur ou son pays de production.</p> <p>On peut aussi utiliser une m\u00e9thode graphique visualiser les liens entre les diverses relations. </p> <p>R\u00e9f\u00e9rence: Cours base de donn\u00e9es de Philipe Rigaux</p>"},{"location":"NSITerm/BDD/C8C3.html","title":"LANGAGE SQL","text":""},{"location":"NSITerm/BDD/C8C3.html#le-langage","title":"Le langage","text":"<p>SQL ou Structured Query Language est un langage standardis\u00e9 de dialogue avec une base de donn\u00e9es. C'est un langage d\u00e9claratif imp\u00e9ratif; on d\u00e9crit le quoi pas le comment. Conform\u00e9ment au programme, on va se limiter aux instructions d'interrogation et de mise \u00e0 jour. En d'autres termes, il s'agira:  </p> <ul> <li>de demander des informations;</li> <li>d'extraire une partie des informations suivant des crit\u00e8res pr\u00e9cis;</li> <li>de modifier des donn\u00e9es (insertion ou suppression)</li> </ul>"},{"location":"NSITerm/BDD/C8C3.html#les-requetes-dinterrogation","title":"Les requ\u00eates d'interrogation","text":"<p>Une requ\u00eate qui permet d'obtenir tout ou une partie des attributs d'une relation (projection en alg\u00e8bre relationnelle) a une syntaxe du type:  </p> <pre><code>SELECT attribut(s) FROM table(s) </code></pre> <p>Application 1 </p> <ol> <li>Donner le sch\u00e9ma de la BDD <code>Livres</code>.</li> <li>Ecrire et tester la requ\u00eate SQL qui permet d'obtenir tous les titres de la relation <code>livre</code>. Combien de titres sont pr\u00e9sents?</li> </ol> <p>On peut rajouter une condition de restriction sur les informations extraites en utilisant la clause <code>WHERE</code>. La syntaxe devient alors:  </p> <pre><code>SELECT attribut(s) FROM table(s) WHERE condition(s);\n</code></pre> <p>Application 2.1 </p> <p>En utilisant la relation <code>livre</code>, \u00e9crire et tester la requ\u00eate SQL permettant d'obtenir toutes informations sur les livres publi\u00e9s par l'\u00e9diteur <code>Dargaud</code>.</p> <p>La condition peut \u00eatre exprim\u00e9e avec les op\u00e9rateur de comparaisons habituels mais aussi avec des op\u00e9rateurs de comparaison de texte comme <code>LIKE</code>.</p> <p>Application 2.2 </p> <p>Que produit la requ\u00eate:  </p> <pre><code>SELECT titre FROM livre WHERE titre LIKE '%Ast\u00e9rix%'\n</code></pre> <p>Si on d\u00e9sire obtenir les r\u00e9sultats dans un ordre particulier, on pourra utiliser la clause <code>ORDER BY</code>. La syntaxe est:  </p> <pre><code>SELECT attribut(s) FROM table(s) WHERE condition(s) ORDER BY attribut;\n</code></pre> <p>Application 3 </p> <p>Ecrire et tester la requ\u00eate SQL permettant d'obtenir tous les titres de livres publi\u00e9s apr\u00e8s 1990, class\u00e9s par titre (on dit aussi ordre lexicographique).</p> <p>Si on veut \u00e9viter les doublons, on ajoute le mot cl\u00e9 <code>DISTINCT</code> \u00e0 la clause <code>SELECT</code>.</p> <p>Application 4 </p> <p>Comparer les sorties des deux requ\u00eates suivantes:  </p> <ul> <li><code>SELECT annee FROM livre;</code></li> <li><code>SELECT DISTINCT annee FROM livre;</code></li> </ul> <p>\u00c0 partir de la table <code>emprunt</code>, on peut obtenir la liste de tous les livres emprunt\u00e9s avec la requ\u00eate simple <code>SELECT * FROM emprunt</code>. Le r\u00e9sultat n'est tr\u00e8s exploitable. Il serait int\u00e9ressant d'avoir aussi les informations sur les livres \u00e0 partir de l'isbn de la table <code>livre</code>. Cette op\u00e9ration de fusion des tables <code>emprunt</code> et <code>livre</code> est appel\u00e9e jointure.  La syntaxe g\u00e9n\u00e9rale d'une jointure en SQL est:  </p> <pre><code>SELECT attribut(s) FROM table JOIN table_aux ON condition(s)\n</code></pre> <p>Application 5 </p> <ul> <li>Tester la jointure des tables <code>emprunt</code> et <code>livre</code> avec la requ\u00eate suivante: <code>SELECT * FROM emprunt JOIN livre ON emprunt.isbn=livre.isbn</code>.</li> <li>Que r\u00e9alise la requ\u00eate ci-dessous? Tester.  </li> </ul> <pre><code>SELECT livre.titre, emprunt.retour\nFROM emprunt JOIN livre ON emprunt.isbn=livre.isbn\nWHERE emprunt.retour &lt; '2020-02-01';\n</code></pre>"},{"location":"NSITerm/BDD/C8C3.html#les-requetes-de-mise-a-jour","title":"Les requ\u00eates de mise \u00e0 jour","text":""},{"location":"NSITerm/BDD/C8C3.html#insert","title":"INSERT","text":"<p>Une premi\u00e8re op\u00e9ration de mise \u00e0 jour consiste \u00e0 ins\u00e9rer des nouvelles entr\u00e9es dans une table. La syntaxe est:  </p> <pre><code>INSERT INTO table VALUES (liste de valeurs des attributs);\n</code></pre> <p>Application 6 </p> <p>Ins\u00e9rer une ligne de valeurs dans la table <code>usager</code>. V\u00e9rifier la mise \u00e0 jour.</p>"},{"location":"NSITerm/BDD/C8C3.html#update","title":"UPDATE","text":"<p>Lorsqu'on souhaite modifier un ou plusieurs attributs, on utilise la clause <code>UPDATE</code> avec une syntaxe du type:  </p> <pre><code>UPDATE table SET att1=valeur1, att2=valeur2, ..., attn=valeurn WHERE condition;\n</code></pre> <p>Par exemple, on peut mettre \u00e0 jour l'email de l'usager <code>PAYET</code>, dont <code>code_barre = '934701281931117'</code> avec la requ\u00eate:  </p> <pre><code>UPDATE usager SET email='david@payet.re' WHERE code_barre = '934701281931117';\n</code></pre> <p>Application 7 </p> <p>Proc\u00e9der \u00e0 la mise \u00e0 jour d'un ou plusieurs attributs dans l'enregistrement effectu\u00e9 \u00e0 l'application 6.</p>"},{"location":"NSITerm/BDD/C8C3.html#delete","title":"DELETE","text":"<p>On peut supprimer une ou plusieurs lignes d'une table avec la clause <code>DELETE</code> dont la syntaxe est la suivante:  </p> <pre><code>DELETE FROM table WHERE condition\n</code></pre> <p>Par exemple, si on veut supprimer l'usager <code>PAYET</code>, on peut utiliser la requ\u00eate:</p> <pre><code>DELETE FROM usager WHERE code_barre = '934701281931117';\n</code></pre> <p>Remarque</p> <p>L'\u00e9xecution de cette requ\u00eate provoque une erreur dans le cadre de l'espace de travail du cours, l'administrateur ayant retir\u00e9 le droit d'utiliser la clause  <code>DELETE</code>.</p>"},{"location":"NSITerm/BDD/C8C3.html#les-fonctions-dagregation","title":"Les fonctions d'agr\u00e9gation","text":"<p>Les fonctions d'agr\u00e9gation servent majoritairement \u00e0 faire des statistiques: compter des lignes, conna\u00eetre une moyenne, trouver la valeur maximale d'une colonne, etc.</p>"},{"location":"NSITerm/BDD/C8C3.html#exemple-1-count","title":"Exemple 1: COUNT","text":"<p>On s'int\u00e9resse \u00e0 la table <code>livre</code> o\u00f9 on d\u00e9sire conna\u00eetre le nombre de livres pr\u00e9sents. On utilise la fonction <code>COUNT</code>:  </p> <p><pre><code>SELECT COUNT(*)\nFROM livre;\n</code></pre> On voudrait maintenant le nombre d'\u00e9diteurs diff\u00e9rents pr\u00e9sents:  </p> <pre><code>SELECT COUNT(DISTINCT editeur)\nFROM livre;\n</code></pre>"},{"location":"NSITerm/BDD/C8C3.html#exemple-2-min-max","title":"Exemple 2: MIN, MAX","text":"<p>On souhaiterait maintenant conna\u00eetre l'ann\u00e9e correspondant au livre le plus ancien et celle du plus r\u00e9cent:</p> <pre><code>SELECT MIN(annee), MAX(annee)\nFROM livre;\n</code></pre>"},{"location":"NSITerm/BDD/C8C3.html#exemple-3-avg","title":"Exemple 3: AVG","text":"<p>On se propose de trouver l'\u00e2ge moyen des livres. On peut commencer par trouver l'ann\u00e9e moyenne de sortie des livres:</p> <pre><code>SELECT AVG(annee)\nFROM livre;\n</code></pre> <p>On peut r\u00e9cup\u00e9rer l'ann\u00e9e en cours en SQL en composant deux fonctions (non exigibles) <code>YEAR</code> et <code>NOW</code>:</p> <pre><code>SELECT YEAR(NOW()) - AVG(annee)\nFROM livre\n</code></pre>"},{"location":"NSITerm/BDD/C8C4.html","title":"Les SGBDR","text":""},{"location":"NSITerm/BDD/C8C4.html#architecture","title":"Architecture","text":"<p>Les SGBDR se retrouvent habituellement dans un environnement client / serveur. Une architecture courante est celle des 3 tiers, aussi appel\u00e9e architecture \u00e0 trois niveaux ou architecture \u00e0 trois couches. On y distingue:  </p> <ul> <li>au niveau 1: la couche de pr\u00e9sentation des donn\u00e9es, correspondant \u00e0 l'affichage, la restitution sur le poste de travail, le dialogue avec l'utilisateur;</li> <li>au niveau 2: la couche de traitement des donn\u00e9es, correspondant \u00e0 la mise en \u0153uvre de l'ensemble des r\u00e8gles de gestion et de la logique applicative;</li> <li>au niveau 3: la couche d'acc\u00e8s aux donn\u00e9es persistantes, correspondant aux donn\u00e9es qui sont destin\u00e9es \u00e0 \u00eatre conserv\u00e9es sur la dur\u00e9e, voire de mani\u00e8re d\u00e9finitive.</li> </ul> <p></p> <p>Parmi les SGBDR courants, on peut citer: Oracle Database, MySQL, MS SQL Server, PostGreSQL, etc.</p>"},{"location":"NSITerm/BDD/C8C4.html#services-rendus-par-un-sgbdr","title":"Services rendus par un SGBDR","text":""},{"location":"NSITerm/BDD/C8C4.html#securisation-des-acces","title":"S\u00e9curisation des acc\u00e8s","text":"<p>Parmi les services rendus par les SGBDR on peut citer la s\u00e9curisation des acc\u00e8s aux donn\u00e9es. Pour cela, un certain nombre de m\u00e9canismes sont mis en oeuvre:  </p> <ul> <li>l'authentification, r\u00e9alis\u00e9e habituellement par la fourniture du couple nom d'utilisateur / mot de passe;</li> <li>l'attribution de droits et privil\u00e8ges: une fois correctement identifi\u00e9 l'utilisateur doit pouvoir acc\u00e9der aux informations et ressources auxquelles il a droit et uniquement \u00e0 celles-ci;</li> <li>la production de LOGs ou traces, permettant d'enregistrer tout ou partie des informations concernant les acc\u00e8s r\u00e9ussis ou \u00e9chou\u00e9s.</li> </ul> <p>Exemple: pensez au syst\u00e8me de gestion Pronote</p>"},{"location":"NSITerm/BDD/C8C4.html#persistance-des-donnees-et-acces-concurrents","title":"Persistance des donn\u00e9es et acc\u00e8s concurrents","text":"<p>LES SGBDR doivent \u00e9galement rendre deux autres services importants:  </p> <ul> <li>la gestion des acc\u00e8s concurrents. En effet, de multiples utilisateurs doivent pouvoir acc\u00e9der et utiliser la base de donn\u00e9e en m\u00eame temps;</li> <li>l'assurance d'avoir des donn\u00e9es persistantes notamment en cas de panne.</li> </ul> <p>La solution \u00e0 ces deux probl\u00e9matiques se trouve dans la gestion des transactions.  </p> <p>D\u00e9finition (non exigible)</p> <p>Une transaction est une suite d'op\u00e9rations interrogeant et/ou modiant la base de donn\u00e9es, pour laquelle l'ensemble des op\u00e9rations doit \u00eatre soit valid\u00e9 (COMMIT), soit annul\u00e9 (ROLLBACK).</p> <p>Une transaction fait passer la base de donn\u00e9es d'un \u00e9tat coh\u00e9rent \u00e0 un autre \u00e9tat coh\u00e9rent. On peut y voir une analogie avec une transaction bancaire. Par ailleurs, l'utilisation de journaux (LOGS) de transactions permet de g\u00e9rer les reprises sur panne. </p> <p>L'utilisation des transactions permet au SGBDR de garantir les quatres propri\u00e9t\u00e9s ACID.</p> <p>\u00c0 faire</p> <p>Effectuer une recherche afin de d\u00e9terminer la signification de cet acronyme.</p>"},{"location":"NSITerm/BDD/C8C4.html#efficacite-de-traitements-des-requetes","title":"Efficacit\u00e9 de traitements des requ\u00eates","text":"<p>L'utilisateur exprime une requ\u00eate sous une forme d\u00e9clarative (il formule ce qu'il souhaite, pas comment faire). Le SGBDR va transformer une requ\u00eate SQL en une ou plusieurs expressions alg\u00e9briques, puis \u00e0 l'aide d'algorithmes complexes va faire le choix d'un plan d'ex\u00e9cution afin d'optimiser l'efficacit\u00e9 du traitement des requ\u00eates.</p> <p></p> <p>Source - credits photo Image 3 Architecture 3-tier (commentcamarche.net - \u00a9 2003 Pillou - GNU FDL) Cours Base de donn\u00e9es Philippe Rigaux - http://sys.bdpedia.fr/optim.html  </p>"},{"location":"NSITerm/BDD/C8E1.html","title":"Mod\u00e8le relationnel - Exercices","text":""},{"location":"NSITerm/BDD/C8E1.html#relation-livres","title":"Relation livres","text":"<p>Soit la relation <code>LIVRES</code> suivante:  </p> id titre auteur ann_publi note 1 1984 Orwell 1949 10 2 Dune Herbert 1965 8 3 Fondation Asimov 1951 9 4 Le meilleur des mondes Huxley 1931 7 5 Fahrenheit 451 Bradbury 1953 7 6 Ubik K. Dick 1969 9 7 Chroniques martiennes Bradbury 1950 8 8 La nuit des temps Barjavel 1968 7 9 Blade Runner K. Dick 1968 8 10 Les Robots Asimov 1950 9 11 La Plan\u00e8te des singes Boulle 1963 8 12 Ravage Barjavel 1943 8 13 Le Ma\u00eetre du Haut Ch\u00e2teau K. Dick 1962 8 14 Le monde des non-A Van Vogt 1945 7 15 La Fin de l'\u00e9ternit\u00e9 Asimov 1955 8 16 De la Terre \u00e0 la Lune Verne 1865 10 <p>On justifiera toutes les r\u00e9ponses </p> <ol> <li>L'attribut <code>note</code> peut-il jouer le r\u00f4le de cl\u00e9 primaire ? </li> <li>L'attribut <code>ann_publi</code> peut-il jouer le r\u00f4le de cl\u00e9 primaire ?</li> <li>L'attribut <code>auteur</code> peut-il jouer le r\u00f4le de cl\u00e9 primaire ?</li> <li>L'attribut <code>titre</code> peut-il jouer le r\u00f4le de cl\u00e9 primaire ?</li> </ol>"},{"location":"NSITerm/BDD/C8E1.html#relation-films","title":"Relation films","text":"<p>En partant de la relation FILMS ci-dessous, cr\u00e9ez une relation REALISATEURS (attributs de la relation REALISATEURS : id, nom, prenom et ann_naissance, vous trouverez toutes les informations n\u00e9cessaires sur le Web). Modifiez ensuite la relation FILMS afin d'\u00e9tablir un lien entre les relations FILMS et REALISATEURS. Vous pr\u00e9ciserez l'attribut qui jouera le r\u00f4le de clef \u00e9trang\u00e8re.  </p> id titre realisateur ann_sortie note_sur_10 1 Alien, le huiti\u00e8me passager Scott 1979 10 2 Dune Lynch 1985 5 3 2001 : l'odyss\u00e9e de l'espace Kubrick 1968 9 4 Blade Runner Scott 1982 10"},{"location":"NSITerm/BDD/C8E1.html#extraits-et-adaptation-des-exercices-du-livre-nsi-terminale-ed-ellipses","title":"Extraits et adaptation des exercices  du livre NSI Terminale \u00e9d. ellipses","text":"<p>Exercice 140 </p> <p>On souhaite mod\u00e9liser un annuaire t\u00e9l\u00e9phonique simple dans lequel chaque personne (identifi\u00e9e par son nom et son pr\u00e9nom) est associ\u00e9e \u00e0 son num\u00e9ro de t\u00e9l\u00e9phone. Proposer une mod\u00e9lisation relationnelle de cet annuaire.  </p> <p>Exercice 141 </p> <p>On souhaite \u00e9tablir la mod\u00e9lisation relationnelle d'un bulletin scolaire. Pour cela, on s'appuie sur trois relations <code>Eleve</code>, <code>Matiere</code> et <code>Note</code> ayant les propri\u00e9t\u00e9s suivantes:  </p> <ul> <li>les \u00e9l\u00e8ves, poss\u00e9dent un num\u00e9ro d'identification alphanum\u00e9rique unique;</li> <li>les mati\u00e8res poss\u00e8dent un intitul\u00e9, mais sont parfois d\u00e9clin\u00e9es en ensemble de mati\u00e8res (par exemple l'enseignement scientique);</li> <li>il y aura une note sur 20, par mati\u00e8re et par \u00e9l\u00e8ve.</li> </ul> <p>\u00c9tablir le sch\u00e9ma de ces trois relations. On pr\u00e9cisera \u00e9ventuellement les contraintes qui ne peuvent \u00eatres inscrites dans les sch\u00e9mas des relations.  </p> <p>Exercice 142 </p> <p>On consid\u00e8re la solution donn\u00e9e pour l'exercice 140. Dire si chacun des ensembles est une relation valide pour le sch\u00e9ma Annuaire.  </p> <ol> <li>{}</li> <li>{( 'Titi ' , 'Toto', ' 0123456789 ' )}</li> <li>{('Titi', 'Toto', ' 0123456789 ' ), ('Doe', 'John', ' 0123456789 ')}</li> <li>{( 'Titi ', 'Toto', ' 0123456789 ' ), ( 'Titi ' , 'Toto', ' 987654343210 ' )}</li> <li>{( 'Titi ' , 'Toto', ' 0123456789 ' ), ('Doe', ' John' )}</li> <li>{('Titi', 'Toto', 42)}</li> </ol> <p>Exercice 143 </p> <p>On consid\u00e8re la solution donn\u00e9e pour l'exercice 141. Dire si chacun des ensembles est une relation valide pour le sch\u00e9ma de la base de donn\u00e9es du bulletin de notes.  </p> <p>Proposition 1.</p> <ul> <li>Eleve = { }</li> <li>Matiere = { }</li> <li>Note = { }</li> </ul> <p>Proposition 2.  </p> <ul> <li>Eleve = {( 'Titi ' , 'Toto', 'AB56789 ' ), }</li> <li>Matiere = {('NSI', 0), ( 'Sport ', 1)}</li> <li>Note = {(' AB56789 ' , 1, 17)}</li> </ul> <p>Proposition 3.  </p> <ul> <li>Eleve = {('Titi', 'Toto', 'AB56789' ), }</li> <li>Matiere = {('NSI' ,0)}</li> <li>Note = {('AB56789' , 1,17)} </li> </ul> <p>Proposition 4.</p> <ul> <li>Eleve = {('Titi' , 'Toto', 'AB56789'), }</li> <li>Matiere = {('NS1' ,0),}</li> <li>Note= {('AB56789', 0, 17), ('AB56789', 0, 18)</li> </ul> <p>Proposition 5.</p> <ul> <li>Eleve = {('Titi' , 'Toto' , 'AB56789'), }</li> <li>Matiere= {('NSI', 0), ('Sport', 1)}</li> <li>Note= {('AB56789', 0, 17), ('AB56789' , 1, 17)} </li> </ul> <p>Exercice 144 </p> <p>On souhaite \u00e9tablir une mod\u00e9lisation relationnelle des d\u00e9partements fran\u00e7ais ainsi que leur(s) \u00e9ventuels d\u00e9partements voisins. Pour cela, on cr\u00e9\u00e9 deux relations <code>Departement</code> et <code>Voisins</code> en tenant compte des propri\u00e9t\u00e9s suivantes:  </p> <ul> <li>pour chaque d\u00e9partement on veut pouvoir stocker son nom, son code, son chef-lieu. Attention, les codes de d\u00e9partement sont tous des nombres, sauf la Corse du Sud et la Haute Corse qui ont les codes 2A et 2B respectivement. Les d\u00e9partements d'Outre-Mer ont un code sur trois chiffres (de 971 \u00e0 976).</li> <li>les d\u00e9partements voisins seront repr\u00e9sent\u00e9s sous la forme de couple (\\(d_1,d_2\\)) o\u00f9 \\(d_1\\) et \\(d_2\\) sont les codes de deux d\u00e9partements et \\(d_1&lt;d_2\\). On supposera que l'on peut comparer des cha\u00eenes de caract\u00e8res.</li> </ul> <p>Donner le sch\u00e9ma relationnel de <code>Departement</code> et <code>Voisins</code>.</p> <p>Exercice 145 </p> <p>On souhaite mod\u00e9liser un r\u00e9seau de bus. Cette mod\u00e9lisation doit \u00eatre suffisamment riche pour permettre de g\u00e9n\u00e9rer, pour chaque arr\u00eat de bus du r\u00e9seau, une fiche horaire avec tous les horaires de passage de toutes les lignes de bus qui desservent l'arr\u00eat.  </p> <p>Indications </p> <ul> <li>le r\u00e9seau est compos\u00e9 d'arr\u00eats de bus. Un arr\u00eat peut \u00eatre repr\u00e9sent\u00e9 par ses coordonn\u00e9es GPS (latitude et longitude), un nom et un identifiant unique;</li> <li>une ligne de bus est repr\u00e9sent\u00e9 par un num\u00e9ro unique et un nom;</li> <li>des horaires de passage. Pour chaque ligne et chaque arr\u00eat desservi par cette ligne, on stocke l'heure de passage et ainsi que l'indication semaine ou dimanche-jour f\u00e9ri\u00e9.  </li> </ul> <p>Proposer des sch\u00e9mas relationnels permettant cette mod\u00e9lisation</p> <p>Exercice 146 </p> <p>On consid\u00e8re deux relations:  </p> <ul> <li>R ((a: int), (b: int), (c: int));</li> <li>S (#(a: int), (e: int))</li> </ul> <p>o\u00f9 l'attribut <code>a</code> de S est une cl\u00e9 \u00e9trang\u00e8re faisant r\u00e9f\u00e9rence \u00e0 <code>a</code> de R. Dire si les affirmations suivantes sont vraies ou fausses, en justifiant.  </p> <ol> <li>Les <code>a</code> de R sont tous deux \u00e0 deux distincts.</li> <li>Les <code>b</code> de R sont tous deux \u00e0 deux distincts.</li> <li>Les <code>a</code> de S sont tous deux \u00e0 deux distincts.</li> <li>Les <code>e</code> de S sont tous deux \u00e0 deux distincts.</li> <li>S peut \u00eatre vide alors que R est non vide.</li> <li>R peut \u00eatre vide alors que S est non vide .</li> </ol>"},{"location":"NSITerm/BDD/C8TP1.html","title":"TP SQL","text":"<p>Retrouvez ce TP sur Capytale:  </p> <p></p>"},{"location":"NSITerm/BDD/C8TP1.html#requetes-simples-sans-jointure","title":"Requ\u00eates simples, sans jointure","text":"<p>Soit la base de donn\u00e9es de <code>Livres</code> disponible sur le serveur du professeur et d\u00e9j\u00e0 \u00e9tudi\u00e9e. Donner le code SQL de chacune des requ\u00eates ci-dessous. Les mots en police fixe donnent une indication sur les attributs et les tables \u00e0 utiliser dans la requ\u00eate.  </p> <ol> <li>Tous les <code>titre</code>s de <code>livre</code>.</li> <li>Tous les <code>nom</code>s d'<code>usager</code>.</li> <li>Tous les <code>nom</code>s d'<code>usager</code> en retirant les doublons.</li> <li>Les <code>titre</code>s des livres publi\u00e9s avant 1980.</li> <li>Les <code>titre</code>s des livres dont le titre commence par la lettre \u00ab A \u00bb.</li> <li>Les <code>isbn</code> des livres \u00e0 rendre pour le 01/01/2020.</li> <li>Les <code>nom</code>s d'<code>auteur</code>s tri\u00e9s par ordre alphab\u00e9tique.</li> <li>Les <code>nom</code>s d'<code>usager</code>s vivant dans le 12e ou 13e arrondissement de Paris (codes postaux 75012 et 75013).</li> <li>Les <code>nom</code>s et <code>adresse</code>s des usagers n'habitant pas dans une rue. (la cha\u00eene \u00ab Rue \u00bb ne doit pas appara\u00eetre dans l'adresse).</li> <li>Les <code>annee</code>s et <code>titre</code>s des <code>livre</code>s publi\u00e9s lors d'une ann\u00e9e bissextile. On rappelle que ce sont les ann\u00e9es divisibles par 4, mais pas celles divisibles  par 100 sauf si elles sont divisibles par 400.</li> </ol>"},{"location":"NSITerm/BDD/C8TP1.html#requetes-avancees-avec-jointure","title":"Requ\u00eates avanc\u00e9es avec jointure","text":"<p>Soit la base de donn\u00e9es <code>Livres</code> utilis\u00e9e en cours et disponible en suivant le lien ci-dessus. Donner le code SQL de chacune des requ\u00eates ci-dessous. Les mots en police fixe donnent une indication sur les attributs et les tables \u00e0 utiliser dans la requ\u00eate.  </p> <ol> <li>Le <code>titre</code> des <code>livre</code>s <code>emprunt</code>\u00e9s.</li> <li>Le <code>titre</code> des <code>livre</code>s <code>emprunt</code>\u00e9s \u00e0 rendre avant le 31/03/2020.</li> <li>Le <code>nom</code> et <code>prenom</code> de l'auteur du livre '1984' .</li> <li>Le <code>nom</code> et le <code>prenom</code> des <code>usager</code>s ayant emprunt\u00e9 des livres, sans doublons (c'est-\u00e0-dire si un usager a emprunt\u00e9 plusieurs livres, il ne doit appara\u00eetre qu'une fois dans le r\u00e9sultat).</li> <li>M\u00eame requ\u00eate que pr\u00e9c\u00e9demment, avec les noms tri\u00e9s par ordre alphab\u00e9tique.</li> </ol>"},{"location":"NSITerm/BDD/C8TP1Cor.html","title":"Correction du TP1","text":""},{"location":"NSITerm/BDD/C8TP1Cor.html#requetes-simples","title":"Requ\u00eates simples","text":"<pre><code>SELECT titre FROM livre;\nSELECT nom FROM usager;\nSELECT DISTINCT nom FROM usager;\nSELECT titre FROM livre WHERE annee &lt;= 1980;\nSELECT titre FROM livre WHERE titre LIKE 'A%';\nSELECT isbn FROM emprunt WHERE retour='2020-01-01';\nSELECT nom FROM auteur ORDER BY nom;\nSELECT nom FROM usager WHERE cp='75012' OR cp='75013';\nSELECT nom,adresse FROM usager WHERE NOT (adresse LIKE '%Rue%');\nSELECT annee, titre FROM livre WHERE annee%4 = 0 AND (annee%100 &lt;&gt; 0 OR annee%400 = 0);\n</code></pre>"},{"location":"NSITerm/BDD/C8TP1Cor.html#requetes-avec-jointure","title":"Requ\u00eates avec jointure","text":"<pre><code>SELECT titre FROM livre JOIN emprunt ON livre.isbn=emprunt.isbn;\nSELECT titre FROM livre JOIN emprunt ON livre.isbn=emprunt.isbn WHERE emprunt.retour &lt;= '2020-03-31';\nSELECT nom, prenom FROM auteur JOIN auteur_de ON auteur_de.a_id=auteur.a_id JOIN livre ON livre.isbn=auteur_de.isbn WHERE livre.titre='1984';\nSELECT DISTINCT nom, prenom FROM emprunt JOIN usager ON emprunt.code_barre=usager.code_barre;\nSELECT DISTINCT nom, prenom FROM emprunt JOIN usager ON emprunt.code_barre=usager.code_barre ORDER BY nom;\n</code></pre>"},{"location":"NSITerm/BDD/C8TP2.html","title":"TP2 - Enigme \u00e0 r\u00e9soudre ... \u00e0 SQL City","text":"<p>Un meurtre a eu lieu le 15 janvier 2018 \u00e0 SQL City. \u00c0 vous de r\u00e9soudre cette \u00e9gnime, rendez vous \u00e0 cette adresse.</p>"},{"location":"NSITerm/BDD/C8TP2C.html","title":"R\u00e9solution de l'\u00e9nigme","text":""},{"location":"NSITerm/BDD/C8TP2C.html#informations-sur-le-crime","title":"Informations sur le crime","text":"<pre><code>SELECT * FROM crime_scene_report WHERE city='SQL City' AND type='murder';\n</code></pre> <p>R\u00e9ponse: Security footage shows that there were 2 witnesses. The first witness lives at the last house on \"Northwestern Dr\". The second witness, named Annabel, lives somewhere on \"Franklin Ave\".</p>"},{"location":"NSITerm/BDD/C8TP2C.html#identification-des-temoins","title":"Identification des t\u00e9moins","text":"<pre><code>SELECT * FROM person WHERE address_street_name LIKE '%Northwestern Dr' ORDER BY address_number DESC LIMIT 1;\n</code></pre> <p>R\u00e9ponse:  </p> id name license_id address_number address_street_name ssn 14887 Morty Schapiro 118009 4919 Northwestern Dr 111564949 <pre><code>SELECT * FROM person WHERE name LIKE '%Annabel%' and address_street_name LIKE '%Franklin Ave%';\n</code></pre> <p>R\u00e9ponse:  </p> id name license_id address_number address_street_name ssn 16371 Annabel Miller 490173 103 Franklin Ave 318771143"},{"location":"NSITerm/BDD/C8TP2C.html#transcription-des-entretiens-des-temoins","title":"Transcription des entretiens des t\u00e9moins","text":"<pre><code>SELECT transcript FROM interview\nJOIN person ON interview.person_id = person.id\nWHERE person.address_street_name LIKE '%Northwestern Dr' ORDER BY person.address_number DESC LIMIT 1;\n</code></pre> <p>R\u00e9ponse:</p> transcript I heard a gunshot and then saw a man run out. He had a \"Get Fit Now Gym\" bag. The membership number on the bag started with \"48Z\". Only gold members have those bags. The man got into a car with a plate that included \"H42W\". <pre><code>SELECT transcript FROM interview\nJOIN person ON interview.person_id = person.id\nWHERE name LIKE '%Annabel%' and address_street_name LIKE '%Franklin Ave%';\n</code></pre> <p>R\u00e9ponse: </p> transcript I saw the murder happen, and I recognized the killer from my gym when I was working out last week on January the 9th."},{"location":"NSITerm/BDD/C8TP2C.html#exploitation-des-entretiens","title":"Exploitation des entretiens","text":"<pre><code>SELECT * FROM get_fit_now_check_in\nJOIN get_fit_now_member ON get_fit_now_check_in.membership_id = get_fit_now_member.id WHERE get_fit_now_check_in.check_in_date = 20180109\nAND get_fit_now_member.membership_status = 'gold';\n</code></pre> <p>R\u00e9ponse:</p> membership_id check_in_date check_in_time check_out_time id person_id name membership_start_date membership_status XTE42 20180109 486 1124 XTE42 55662 Sarita Bartosh 20170524 gold 6LSTG 20180109 399 515 6LSTG 83186 Burton Grippe 20170214 gold GE5Q8 20180109 367 959 GE5Q8 92736 Carmen Dimick 20170618 gold 48Z7A 20180109 1600 1730 48Z7A 28819 Joe Germuska 20160305 gold 48Z55 20180109 1530 1700 48Z55 67318 Jeremy Bowers 20160101 gold 90081 20180109 1600 1700 90081 16371 Annabel Miller 20160208 gold <pre><code>select * from drivers_license AS dl\nJOIN person ON person.license_id = dl.id\nWHERE dl.plate_number LIKE '%H42W%'\nAND dl.gender = 'male';\n</code></pre> <p>R\u00e9ponse:</p> id age height eye_color hair_color gender plate_number car_make car_model id name license_id address_number address_street_name ssn 664760 21 71 black black male 4H42WR Nissan Altima 51739 Tushar Chandra 664760 312 Phi St 137882671 423327 30 70 brown brown male 0H42W2 Chevrolet Spark LS 67318 Jeremy Bowers 423327 530 Washington Pl, Apt 3A 871539279 <p>gold</p> <p>On en d\u00e9duit que l'assassin est tr\u00e8s certainement <code>Jeremy Bowers</code>.</p>"},{"location":"NSITerm/BDD/C8TP2C.html#entretien-de-jeremy-bowers","title":"Entretien de Jeremy Bowers","text":"<pre><code>SELECT transcript FROM interview\nJOIN person ON interview.person_id = person.id\nWHERE person.name = 'Jeremy Bowers';\n</code></pre> <p>R\u00e9ponse:  </p> transcript I was hired by a woman with a lot of money. I don't know her name but I know she's around 5'5\" (65\") or 5'7\" (67\"). She has red hair and she drives a Tesla Model S. I know that she attended the SQL Symphony Concert 3 times in December 2017."},{"location":"NSITerm/BDD/C8TP2C.html#final","title":"Final","text":"<pre><code>SELECT DISTINCT name FROM drivers_license AS dl\nJOIN person ON dl.id = person.license_id\nJOIN facebook_event_checkin ON facebook_event_checkin.person_id=person.id\nWHERE dl.gender='female' AND dl.hair_color='red' AND dl.car_make='Tesla' AND dl.height BETWEEN 65 AND 67;\n</code></pre> <p>R\u00e9ponse:  </p> name Miranda Priestly"},{"location":"NSITerm/BDD/C8TP4.html","title":"Service rendus par un SGBDR","text":"<p>Indication</p> <p>Le SGBDR utilis\u00e9 dans ce TP sera MySQL. Sa socumentation est disponible \u00e0 cette adresse. </p> <p>L'int\u00e9gralit\u00e9 du TP sera r\u00e9alis\u00e9 en ligne de commande.</p>"},{"location":"NSITerm/BDD/C8TP4.html#question-1-licence","title":"Question 1: licence","text":"<p>\u00c0 partir d'une recherche rapide donner les particularit\u00e9s de la licence d'utilisation de MySQL.</p>"},{"location":"NSITerm/BDD/C8TP4.html#question-2-securisation-des-acces","title":"Question 2: s\u00e9curisation des acc\u00e8s","text":"<p>a) Se connecter au serveur avec les param\u00e8tres d'authentification fournis. Typiquement, dans un shell Bash, on entrera la commande: <code>mysql --host=xxx.xxx.xxx.xxx -ueleve -p</code>.</p> <p>o\u00f9: <code>xxx</code> repr\u00e9sente l'adresse IPv4 de la machine (prof) h\u00e9bergeant le serveur, <code>eleve</code> est le login, \u00e0 remplacer par votre pr\u00e9nom et <code>-p</code> le mot de passe.  </p> <p>b) Entrer les deux requ\u00eates suivantes: <code>SHOW DATABASES</code> puis <code>SELECT User,Host FROM mysql.user</code>. Comparer la r\u00e9ponse avec celle re\u00e7ue par le professeur: </p> <p>c) La douzi\u00e8me ligne de la r\u00e9ponse \u00e0 la requ\u00eate <code>SELECT User,Host FROM mysql.user</code> du professeur montre un probl\u00e8me de s\u00e9curit\u00e9 potentiel. Expliquer.  </p> <p>Indication</p> <p><code>%</code> signifie n'importe quelle machine et <code>localhost</code> est la machine locale.</p> <p>d) Se d\u00e9connecter du serveur avec la commande <code>exit</code>. Le prompt <code>mysql&gt;</code> r\u00e9apparait.</p>"},{"location":"NSITerm/BDD/C8TP4.html#question-3-acces-concurrents","title":"Question 3: acc\u00e8s concurrents","text":"<p>Il s'agit de voir le comportement du SGBDR lors d'acc\u00e8s concurrents.  </p> <p>a) Se connecter au serveur avec vos login / mot de passe pr\u00e9c\u00e9dents et se placer dans la base <code>tpnsi</code> avec la commande SQL:  </p> <pre><code>USE tpnsi;\n</code></pre> <p>b) Combien de relation sont pr\u00e9sentes dans cette table?  </p> <p>Commande SQL</p> <p>La commande <code>SHOW</code> permet de consulter aussi les tables: <code>SHOW tables;</code></p> <p>c) Prendre connaissance de la structure de la table <code>speNSI</code>.  </p> <p>Commande SQL</p> <p>La commande <code>DESCRIBE</code> permet de consulter aussi la structure d'une table: <code>DESCRIBE speNSI</code> par exemple.</p> <p>d) R\u00e9aliser la transaction suivante:  </p> <pre><code>START TRANSACTION;\nINSERT INTO speNSI VALUES (..., ...., ...., ....);\nSELECT * FROM speNSI;\nCOMMIT;\n</code></pre> <p>Champ id</p> <p><code>id</code> sera un entier naturel compris entre 1 et 15 inclus.</p> <p>e) V\u00e9rifier aupr\u00e8s d'un voisin que les modifications sont visibles dans la table.</p> <p>f) R\u00e9aliser la transaction suivante: </p> <pre><code>START TRANSACTION;\nDELETE FROM speNSI WHERE id=xx;\nSELECT * FROM speNSI;\nROLLBACK;\n</code></pre> <p>Commenter le r\u00e9sultat obtenu apr\u00e8s avoir entrer \u00e0 nouveau <code>SELECT * FROM speNSI;</code>.</p>"},{"location":"NSITerm/BDD/CorC8.html","title":"Correction","text":""},{"location":"NSITerm/BDD/CorC8.html#application-3","title":"Application 3","text":"<p><code>LIVRES</code>((<code>id</code> INT), (<code>titre</code> STRING), #(<code>id_auteur</code> INT), (<code>ann_publi</code> INT), (<code>note</code> INT))  </p> <p><code>AUTEURS</code> ((<code>id</code> INT), (<code>nom</code> STRING), (<code>prenom</code> STRING), (<code>ann_naissance</code> INT), (<code>titre</code> STRING))</p>"},{"location":"NSITerm/BDD/CorC8.html#relation-livres","title":"Relation Livres","text":"<p>1, 2 et 3 impossible \u00e0 cause d'une contrainte de non unicit\u00e9. <code>titre</code> est possible ici mais c'est quand m\u00eame une tr\u00e8s mauvaise id\u00e9e.</p>"},{"location":"NSITerm/BDD/CorC8.html#relation-films","title":"Relation Films","text":"<p>Pour all\u00e9ger l'\u00e9criture, on ne fera pas apparaitre les domaines ici.  </p> <p>REALISATEURS(id, nom, prenom et ann_naissance)  </p> id nom prenom ann_naissance 1 Scott Ridley 1937 2 Lynch David 1946 3 Kubrick Stanley 1928 <p>Le sch\u00e9ma de la relation <code>FILMS</code> est alors modifi\u00e9 en:  </p> <p>Films (id, titre, #idrealisateur, ann_sortie, note_sur_10)</p> id titre idrealisateur ann_sortie note_sur_10 1 Alien, le huiti\u00e8me passager 1 1979 10 2 Dune 2 1985 5 3 2001 : l'odyss\u00e9e de l'espace 3 1968 9 4 Blade Runner 1 1982 10"},{"location":"NSITerm/BDD/CorC8.html#exercice-140","title":"Exercice 140","text":"<p>Annuaire ((<code>nom</code> STRING), (<code>prenom</code> STRING), (<code>tel</code> STRING))</p>"},{"location":"NSITerm/BDD/CorC8.html#exercice-141","title":"Exercice 141","text":"<p>Eleve ((<code>nom</code> STRING), (<code>prenom</code> STRING), (<code>id</code> STRING))  </p> <p>Matiere ((<code>intitule</code> STRING), (<code>id_mat</code> INT))  </p> <p>Note ( #(<code>id_eleve</code> STRING), #(<code>id_mat</code> INT), <code>note</code> FLOAT)</p>"},{"location":"NSITerm/BDD/CorC8.html#exercice-144","title":"Exercice 144","text":"<p>Departement ((<code>nom</code> STRING), (<code>chef_lieu</code> STRING), (<code>code</code> STRING))  </p> <p>Voisins (#(<code>code_d1</code> STRING), #(<code>code_d2</code> STRING)</p>"},{"location":"NSITerm/BDD/CorC8.html#exercice-145","title":"Exercice 145","text":"<p>Arret ((<code>lat</code> FLOAT), (<code>lon</code> FLOAT), (<code>nom</code> STRING), (<code>id</code> INT))  </p> <p>Ligne ((<code>num</code> INT), (<code>nom</code> STRING))  </p> <p>Horaire (#(<code>num</code> INT), #(<code>id</code> INT), (<code>heure</code> TIME), (<code>jour</code> STRING) )</p> <pre><code>\n</code></pre>"},{"location":"NSITerm/EP/EP260123.html","title":"Entra\u00eenement \u00e9preuve pratique NSI - 26/01/23","text":""},{"location":"NSITerm/EP/EP260123.html#exercice-1","title":"Exercice 1","text":"<p>Programmer la fonction <code>multiplication</code>, prenant en param\u00e8tres deux nombres entiers <code>n1</code> et <code>n2</code>, et qui renvoie le produit de ces deux nombres.</p> <p>Attention</p> <p>Les seules op\u00e9rations autoris\u00e9es sont l\u2019addition et la soustraction.</p> <p>Exemples : <pre><code>&gt;&gt;&gt; multiplication(3,5)\n15\n&gt;&gt;&gt; multiplication(-4,-8)\n32\n&gt;&gt;&gt; multiplication(-2,6)\n-12\n&gt;&gt;&gt; multiplication(-2,0)\n0\n</code></pre></p>"},{"location":"NSITerm/EP/EP260123.html#exercice-2","title":"Exercice 2","text":"<p>Soit <code>t</code> un tableau non vide d'entiers tri\u00e9s dans l'ordre croissant et <code>n</code> un entier. La fonction <code>chercher</code> doit renvoyer l'indice o\u00f9 la valeur <code>n</code> appara\u00eet \u00e9ventuellement dans <code>t</code>, et <code>None</code> si <code>n</code> n'appartient pas \u00e0 <code>t</code>.</p> <p>Les param\u00e8tres de la fonction sont :</p> <ul> <li><code>t</code>, le tableau dans lequel s'effectue la recherche ;</li> <li><code>n</code>, l'entier \u00e0 chercher dans le tableau ;</li> </ul> <p>La fonction auxilliaire <code>recherche_dichotomique</code> est une fonction r\u00e9cursive bas\u00e9e sur le principe \u00abdiviser pour r\u00e9gner\u00bb.</p> <p>Recopier et compl\u00e9ter lorsque cela est n\u00e9cessaire les fonctions <code>recherche_dichotomique</code> et <code>chercher</code> propos\u00e9es ci-dessous :</p> <pre><code>def recherche_dichotomique(t, n, i, j):\n    if j &lt; i:\n        return None\n    m = (i + j) // ...\n    if t[m] &lt; ... :\n        return recherche_dichotomique(t, n, ..., ...)\n    elif ... :\n        return recherche_dichotomique(t, n, ..., ...)\n    else :\n        return ...\n\ndef chercher(t, n):\n    return recherche_dichotomique(t, n, 0, len(t)-1)\n</code></pre> <p>L'ex\u00e9cution du code doit donner :</p> <pre><code>&gt;&gt;&gt; chercher([1,5,6,6,9,12],7)\n&gt;&gt;&gt; chercher([1,5,6,6,9,12],9)\n4\n&gt;&gt;&gt; chercher([1,5,6,6,9,12],6)\n2\n</code></pre>"},{"location":"NSITerm/EVAL/Listes.html","title":"DS du 23/11 - Exercice 1","text":"<p>Bar\u00e8me: 11 points</p> <p>1.1.a) Cette instruction permet l'instanciation d'un objet <code>lst</code> de type <code>ListeChainee</code>.</p> <p>1.1.b) Cette classe comporte 7 m\u00e9thodes (dont une sp\u00e9ciale <code>__init__</code>).</p> <p>1.1.c) On peut l'obtenir avec:</p> <pre><code>lst.queue().tete()\n</code></pre> <p>La valeur est <code>4</code>.</p> <p>1.1.d) On obtient la cha\u00eene <code>'[0, 4, 5, 7]'</code></p> <p>1.1.e) On obtient la cha\u00eene pr\u00e9c\u00e9dente renvers\u00e9e <code>'[7, 5, 4, 0]'</code>.</p> <p>1.2.a) Elle permet de renverser la liste cha\u00een\u00e9e <code>lst</code>.</p> <p>1.2.b) La derni\u00e8re ligne du bloc <code>while</code> fait appara\u00eetre l'instruction <code>actuel = suivant</code> qui permet d'avancer d'un \u00e9l\u00e9ment. Quand on arrivera au dernier, <code>actuel</code> prendra la valeur <code>None</code> et on sortira de la boucle.</p> <p>1.2.c) Les trois mots \u00e0 trouver \u00e9taient dans l'ordre (de haut en bas) <code>precedent</code>, <code>actuel</code> et <code>suivant</code>. </p> <p>1.2.d) Une proposition:</p> <pre><code>def r_reverse(self):\n    actuel = self.head\n\n    # Cas de base\n    if actuel is None or actuel.suiv is None:\n        return\n    suivants = actuel.suiv\n    actuel.suiv = None\n    self.head = suivants\n    self.r_reverse()\n    suivants.suiv = actuel\n</code></pre>"},{"location":"NSITerm/EVAL/REUJ1_2023.html","title":"DS du 23/11 - exercice 2","text":"<p>Bar\u00e8me: 9 points</p>"},{"location":"NSITerm/EVAL/REUJ1_2023.html#question-1","title":"Question 1","text":"<pre><code>class Aliment:\n    def __init__(self, e, p, g, l):\n        self.energie = e\n        self.proteines = p\n        self.glucides = g\n        self.lipides = l\n</code></pre> <p>1.a) Cr\u00e9ation d'un objet <code>lait</code>:</p> <pre><code>lait = Aliment(65.1, 3.32, 4.85, 3.63)\n</code></pre> <p>1.b) L'\u00e9nergie de l'aliment <code>lait</code> est obtenu avec:</p> <pre><code>lait.energie\n</code></pre> <pre><code>65.1\n</code></pre> <p>1.c) R\u00e9ponse probablement attendue (voir remarque ci-dessous):</p> <pre><code>lait.proteines = 3.4\n</code></pre> <p>Remarque: m\u00eame si Python permet d'effectuer ce changement, cette pratique est \u00e0 proscrire. En effet en POO, on doit laisser \u00e0 la classe le soin d'intervenir sur les attributs. </p> <p>Astuce</p> <p>Comment fait-on cela proprement en Python ? --totalement hors programme, pour les curieux--</p> <p>On laisse le soin \u00e0 la classe de manipuler les attributs. Python poss\u00e8de un m\u00e9canisme transparent pour l'utilisateur pour manipuler les attributs \u00e0 travers des m\u00e9thodes: les <code>property</code>. On doit cr\u00e9er deux m\u00e9thodes pour g\u00e9rer un attribut: un <code>getter</code> et un <code>setter</code>.</p> <pre><code>class MesAliments:\n    def __init__(self, e, p, g, l):\n        self.__energie = e\n        self.__proteines = p\n        self.__glucides = g\n        self.__lipides = l\n\n    def get_energie(self):\n        # getter\n        return self.__energie\n\n    def set_energie(self, nouvelle_val):\n        # setter\n        # On fait le choix de ne rien modifier si la valeur est invalide\n        if not isinstance(nouvelle_val, float) or nouvelle_val &lt;= 0:\n            return\n        self.__energie = nouvelle_val\n\n    energie = property(get_energie, set_energie)\n\n    def get_proteines(self):\n        return self.__proteines\n\n    def set_proteines(self, nouvelle_val):\n        if not isinstance(nouvelle_val, float) or nouvelle_val &lt;= 0:\n            return\n        self.__proteines = nouvelle_val\n\n    proteines = property(get_proteines, set_proteines)\n\n    def get_glucides(self):\n        return self.__glucides\n\n    def set_glucides(self, nouvelle_val):\n        if not isinstance(nouvelle_val, float) or nouvelle_val &lt;= 0:\n            return\n        self.__glucides = nouvelle_val\n\n    glucides = property(get_glucides, set_glucides)\n\n    def get_lipides(self):\n        return self.__lipidess\n\n    def set_lipides(self, nouvelle_val):\n        if not isinstance(nouvelle_val, float) or nouvelle_val &lt;= 0:\n            return\n        self.__lipides = nouvelle_val\n\n    lipides = property(get_lipides, set_lipides)\n</code></pre> <pre><code>lait = MesAliments(65.1, 3.32, 4.85, 3.63)\n</code></pre> <pre><code>lait.proteines = 3.4\n</code></pre> <pre><code>lait.proteines\n</code></pre> <pre><code>3.4\n</code></pre> <pre><code>lait.proteines = 'animales'\n</code></pre> <pre><code>lait.proteines\n</code></pre> <pre><code>3.4\n</code></pre> <p>Derni\u00e8re remarque (pour la route)</p> <p>On peut aussi utiliser <code>property</code> comme un d\u00e9corateur (<code>@property</code> juste avant la d\u00e9claration du getter). Continuez en faisant des recherches sur le net si le sujet vous int\u00e9resse ...</p>"},{"location":"NSITerm/EVAL/REUJ1_2023.html#question-2","title":"Question 2","text":"<pre><code># 2)\n\nclass Aliment:\n    def __init__(self, e, p, g, l):\n        self.energie = e\n        self.proteines = p\n        self.glucides = g\n        self.lipides = l\n\n    def energie_reelle(self, masse):\n        return round(masse * self.energie / 100, 3)\n</code></pre> <pre><code>lait = Aliment(65.1, 3.32, 4.85, 3.63)\n\nlait.energie_reelle(245)\n</code></pre> <pre><code>159.495\n</code></pre> <p>La fonction native <code>round</code> a \u00e9t\u00e9 utilis\u00e9e vu que le test de l'\u00e9nonc\u00e9 \u00e9tait donn\u00e9 avec 3 d\u00e9cimales !</p>"},{"location":"NSITerm/EVAL/REUJ1_2023.html#question-3","title":"Question 3","text":"<pre><code>nutrition = {'lait' : Aliment(65.1,3.4,4.85,3.63),\n             'farine' : Aliment(343,11.7,69.3,0.8),\n             'huile' : Aliment(900,0,0,100)\n             }\n</code></pre> <p>3.a)</p> <pre><code>nutrition['lait'].energie\n</code></pre> <pre><code>65.1\n</code></pre> <p>3.b)</p> <pre><code>nutrition['lait'].energie_reelle(220)\n</code></pre> <pre><code>143.22\n</code></pre>"},{"location":"NSITerm/EVAL/REUJ1_2023.html#question-4","title":"Question 4","text":"<pre><code>recette_gateau = {'lait' : 220, 'farine' :230, 'huile':100}\n</code></pre> <pre><code>valeur_energetique = 0\nfor ingredient, masse in recette_gateau.items():\n    valeur_energetique += nutrition[ingredient].energie_reelle(masse)\nprint(valeur_energetique)\n</code></pre> <pre><code>1832.12\n</code></pre> <p>Remarque</p> <p>On pourrait aussi utiliser la fonction <code>sum</code> \u00e9vitant l'utilisation de variable suppl\u00e9mentaire.</p> <pre><code>sum([nutrition[k].energie_reelle(m) for k,m in recette_gateau.items()])\n</code></pre> <pre><code>1832.12\n</code></pre>"},{"location":"NSITerm/EVAL/correction1re.html","title":"Corrections exo niveau 1re","text":""},{"location":"NSITerm/EVAL/correction1re.html#exercice-2","title":"Exercice 2","text":"<ol> <li> <p>Les commandes sont <code>touch un</code> et <code>touch deux</code>.</p> </li> <li> <p>Il s'agit de la commande <code>cp</code>. La copie est r\u00e9alis\u00e9e avec <code>cp un ./A/trois</code>.</p> </li> <li> <p>R\u00e9ponses: <code>cp ../un ./trois</code> et <code>cp ../un ../A/trois</code></p> </li> <li> <p>Si on a les droits (peu probable par d\u00e9faut): <code>cp /home/Matei/un /home/Matei/A/trois</code></p> </li> <li> <p>Dans l'hypoth\u00e8se o\u00f9 le fichier <code>trois</code> se trouve dans le r\u00e9pertoire courant: <code>mv ./trois ./quatre</code>.</p> </li> </ol>"},{"location":"NSITerm/EVAL/correction2023.html","title":"Correction bac blanc","text":""},{"location":"NSITerm/EVAL/correction2023.html#exercice-1","title":"Exercice 1","text":"<p>1) La machine <code>M1</code> est un h\u00f4te sur le r\u00e9seau <code>192.168.1.0</code>. L'adresse <code>192.168.2.3/24</code> indique que cette machine appartient au r\u00e9seau <code>192.168.2.0</code>. La machine <code>M1</code>ne peut donc pas atteindre <code>192.168.2.3</code>.</p> <p>2) <code>RAM</code>: Random Access Memory</p> <p>3) <code>Linux</code>: noyau libre du syst\u00e8me d'exploitation GNU/Linux.</p> <p>4) Un routeur permet de connecter au moins deux r\u00e9seaux diff\u00e9rents. Il doit donc avoir au minimum deux interfaces r\u00e9seaux.</p> <p>5) Il d'usage de donner aux routeurs comme adresse machine <code>.1</code> ou <code>.254</code> (ce n'est pas une obligation). Comme <code>.1</code> est d\u00e9j\u00e0 utilis\u00e9e par une machine de ce r\u00e9seau, on attribuera au routeur l'adresse <code>192.168.1.254</code>.</p> <p>6) La route emprunt\u00e9e par un paquet depuis <code>N1</code>, \u00e0 destination de <code>N2</code> sera: \\(R_1 \\longrightarrow R_3 \\longrightarrow R_4\\) puis arriv\u00e9e dans <code>N2</code>.</p> <p>7) \u00c0 la suite de la panne de \\(R_3\\), on remarque que le r\u00e9seau <code>N4</code> est injoignable. Une fois que l'algorithme aura converg\u00e9, la table de routage de \\(R_1\\) devient:  </p> destination Interface m\u00e9trique N1 eth0 0 N2 eth2 4 N3 eht2 3 <p>8) Avec la formule propos\u00e9e, on peut calculer le co\u00fbt des trois liaisons:  </p> Fibre Fast Ethernet Ethernet 0,1 1 10 <p>9) La topologie du r\u00e9seau \u00e9tant la suivante: </p> <p>Erreur sujet</p> <p>Une erreur \u00e9tait pr\u00e9sente dans le sujet original: le co\u00fbt de la liaison \\(R_1\\) vers le r\u00e9seau <code>N3</code> en passant par <code>eth1</code> est de 11,1 et non 11,3.</p> <p>La destination <code>N3</code> pr\u00e9sente un co\u00fbt de 0,3 en passant par <code>eth2</code>. Cela n'est possible que si la liaison \\(R_2-R_6\\) a un co\u00fbt de 0,1, soit une liaison fibre.</p> <p>10) Toutes les liaisons sortant par <code>eth1</code> sont concern\u00e9es. On modifiera donc les m\u00e9triques des liaisons:  </p> <ul> <li>\\(R_1-N2\\)</li> <li>\\(R_1-N3\\)</li> <li>\\(R_2-N4\\) passant par l'interface <code>eth1</code>.</li> </ul> destination interface m\u00e9trique N1 eth0 0 N2 eth1 0.2 N2 eth2 1.3 N3 eth1 1.2 N3 eth2 0.3 N4 eth1 0.1 N4 eth2 1.2 <p>11) En tenant compte des m\u00e9triques impos\u00e9es, on propose la topologie suivante pour le r\u00e9seau:</p> <p></p>"},{"location":"NSITerm/EVAL/correction2023.html#exercice-2","title":"Exercice 2","text":"<p>1) \u00c9criture de la fonction <code>corrige</code>.</p> <pre><code>def corrige(cop: list[int], corr: list[int]) -&gt; list[bool]:\n    return [cop[i] == corr[i] for i in range(len(cop))]\n</code></pre> <pre><code>corr0 = [4, 2, 1, 4, 3, 5, 3, 3, 2, 1, 1, 3, 3, 5, 4, 4, 5, 1, 3, 3]\ncopTM = [4, 1, 5, 4, 3, 3, 1, 4, 5, 3, 5, 1, 5, 5, 5, 1, 3, 3, 3, 3]\n\ncorrige(copTM, corr0)\n</code></pre> <p>2) Fonction <code>note</code></p> <pre><code>def note(cop, corr):\n    points = 0\n    for i in range(len(cop)):\n        if cop[i] == corr[i]:\n            points += 1\n    return points\n</code></pre> <pre><code>note(copTM, corr0)\n</code></pre> <pre><code>6\n</code></pre> <p>3) Fonction <code>notes_paquet</code></p> <pre><code>def notes_paquet(p, corr):\n    resultats = dict()\n    for eleve in p.keys():\n        resultats[eleve] = note(p[eleve], corr)\n    return resultats\n</code></pre> <pre><code>p1 = {('Tom', 'Matt'): [4, 1, 5, 4, 3, 3, 1, 4, 5, 3, 5, 1, 5, 5, 5,\n1, 3, 3, 3, 3], ('Lambert', 'Ginne'): [2, 4, 2, 2, 1, 2, 4, 2, 2, 5,\n1, 2, 5, 5, 3, 1, 1, 1, 4, 4], ('Carl', 'Roth'): [5, 4, 4, 2, 1, 4,\n5, 1, 5, 2, 2, 3, 2, 3, 3, 5, 2, 2, 3, 4], ('Kurt', 'Jett'): [2, 5,\n5, 3, 4, 1, 5, 3, 2, 3, 1, 3, 4, 1, 3, 1, 3, 2, 4, 4], ('Ayet',\n'Finzerb'): [4, 3, 5, 3, 2, 1, 2, 1, 2, 4, 5, 5, 1, 4, 1, 5, 4, 2,\n3, 4]}\n</code></pre> <pre><code>notes_paquet(p1, corr0)\n</code></pre> <pre><code>{('Tom', 'Matt'): 6,\n ('Lambert', 'Ginne'): 4,\n ('Carl', 'Roth'): 2,\n ('Kurt', 'Jett'): 4,\n ('Ayet', 'Finzerb'): 3}\n</code></pre> <p>4) La cl\u00e9 d'un dictionnaire doit \u00eatre un type non mutable. Par cons\u00e9quent, on ne peut pas utiliser des listes de python.</p> <p>5) On pourrait ajouter au tuple une composante qui serait un identifiant unique (entier) incr\u00e9ment\u00e9 \u00e0 chaque nouvelle insertion.</p> <pre><code>def enigme(notes) :\n    a = None\n    b = None\n    c = None\n    d = {}\n    for nom in notes :\n        tmp = c\n        if a == None or notes[nom] &gt; a[1] :\n            c = b\n            b = a\n            a = (nom, notes[nom])\n        elif b == None or notes[nom] &gt; b[1] :\n            c = b\n            b = (nom, notes[nom])\n        elif c == None or notes[nom] &gt; c[1] :\n            c = (nom, notes[nom])\n        else :\n            d[nom] = notes[nom]\n        if tmp != c and tmp != None :\n            d[tmp[0]] = tmp[1]\n    return (a, b, c, d)\n</code></pre> <pre><code>notes = {\n         ('Tom', 'Matt'): 6,\n         ('Lambert', 'Ginne'): 4,\n         ('Carl', 'Roth'): 2,\n         ('Kurt', 'Jett'): 4,\n         ('Ayet', 'Finzerb'): 3\n        }\n</code></pre> <p>6) L'appel <code>enigme(notes)</code> renvoie:  </p> <pre><code>((('Tom', 'Matt'), 6),\n (('Lambert', 'Ginne'), 4),\n (('Kurt', 'Jett'), 4),\n {('Carl', 'Roth'): 2, ('Ayet', 'Finzerb'): 3})\n</code></pre> <p>7) Cette fonction construit un tuple dont les composantes sont:  </p> <ul> <li>3 tuples contenant les noms des trois \u00e9l\u00e8ves ayant eu les meilleurs notes ainsi que ... leur notes;</li> <li>un dictionnaire donnant les autres \u00e9l\u00e8ves avec leur note.</li> </ul> <pre><code>enigme(notes)\n</code></pre> <pre><code>((('Tom', 'Matt'), 6),\n (('Lambert', 'Ginne'), 4),\n (('Kurt', 'Jett'), 4),\n {('Carl', 'Roth'): 2, ('Ayet', 'Finzerb'): 3})\n</code></pre> <p>8) Si il y a moins de trois candidats (deux par exemple), le tuple renvoy\u00e9 aura toujours 4 composantes dont le contenu serait le suivant:  </p> <ul> <li>deux tuples contenant les deux meilleurs r\u00e9sultats;</li> <li><code>None</code>;</li> <li><code>{}</code> (dictionnaire vide);</li> </ul> <p>9) Une fonction <code>classement</code></p> <p>Commen\u00e7ons par une fonction d'assistance qui v\u00e9rifie s'il y a encore des copies \u00e0 classer:</p> <pre><code>def tas_vide(c_1, c_2, c_3):\n\"\"\" Renvoie True si il n'y a plus de copie(s) \u00e0 classer  \"\"\"\n    return c_1 is None and c_2 is None and c_3 is None\n</code></pre> <p>Ensuite on \u00e9crit la fonction <code>classement</code> en essayant au maximum d'utiliser des noms de variables explicites.</p> <pre><code>def classement(dict_notes):\n    # Initialisation des variables qui seront utilis\u00e9es\n    notes_classees = []\n    no1, no2, no3, autres_candidats = enigme(dict_notes)\n\n    # On boucle tant qu'il reste des copies \u00e0 classer\n    while  not tas_vide(no1, no2, no3):\n        for candidat in (no1, no2, no3):\n            if candidat is not None:\n                notes_classees.append(candidat)\n        # On prend les copie suivantes\n        no1, no2, no3, autres_candidats = enigme(autres_candidats)\n\n    return notes_classees\n</code></pre> Any (hors programme) <p>Il existe une fonction python qui r\u00e9alise le m\u00eame travail que la fonction <code>tas_vide</code>: il s'agit de <code>any</code>:</p> <pre><code>def classement_2(dict_notes):\nnotes_classees = []\nno1, no2, no3, autres = enigme(dict_notes)\nwhile  any((no1, no2, no3)):\n    for item in (no1, no2, no3):\n        if item is not None:\n            notes_classees.append(item)\n    no1, no2, no3, autres = enigme(autres)\nreturn notes_classees\n</code></pre> <pre><code>classement({('Tom', 'Matt'): 6, ('Lambert',\n'Ginne'): 4, ('Carl', 'Roth'): 2, ('Kurt', 'Jett'): 4, ('Ayet',\n'Finzerb'): 3})\n</code></pre> <pre><code>[(('Tom', 'Matt'), 6),\n (('Lambert', 'Ginne'), 4),\n (('Kurt', 'Jett'), 4),\n (('Ayet', 'Finzerb'), 3),\n (('Carl', 'Roth'), 2)]\n</code></pre> <p>10) Il fallait voir ici une recherche dichotomique (de la transition <code>True</code> -&gt; <code>False</code>) dans un tableau tri\u00e9.</p> <pre><code>def renote_express2(copcorr):\n    gauche = 0\n    droite = len(copcorr)\n    while droite - gauche &gt; 1 :\n        milieu = (gauche + droite)//2\n        if copcorr[milieu]:\n            gauche = milieu # compl\u00e9t\u00e9\n        else:\n            droite = milieu # compl\u00e9t\u00e9\n    if copcorr[gauche]:\n        return droite # compl\u00e9t\u00e9\n    else :\n        return gauche # compl\u00e9t\u00e9\n</code></pre> <p>Conseil</p> <p>On gagne rapidement en compr\u00e9hension en raisonnant \u00e0 la main. Un sch\u00e9ma est vite fait ...</p> <pre><code>renote_express2([True, True, True, False, False, False, False, False])\n</code></pre> <pre><code>3\n</code></pre> <pre><code>renote_express2([True, True, True, False])\n</code></pre> <pre><code>3\n</code></pre> <pre><code>renote_express2([False, False, False, False, False, False])\n</code></pre> <pre><code>0\n</code></pre> <pre><code>renote_express2([True, True, True, True, True, True])\n</code></pre> <pre><code>6\n\n\n\n**11)** Dans le pire des cas (*o\u00f9 Pau Tager devrait quand m\u00eame \u00eatre content) il faudra parcourir tout le tableau dans `renote_express`. Le co\u00fbt en temps de cette fonction est lin\u00e9aire (on dit aussi en $\\mathcal{O}(n)$).\n</code></pre> <p>Dans <code>renote_express2</code>, la zone de recherche dans le tableau est divis\u00e9 par deux \u00e0 chaque tour de boucle. Le co\u00fbt en temps de cette fonction est logarithmique (on dit aussi en \\(\\mathcal{O(\\log(n))}\\)</p> <p>12) Si on exclue la construction du tableau de bool\u00e9en, on reprend l'id\u00e9e pr\u00e9sente dans la question 1: on passe en param\u00e8tre la copie et le corrig\u00e9.</p> <pre><code>def renote_express3(cop, corr):\n    gauche = 0\n    droite = len(cop)\n    while droite - gauche &gt; 1 :\n        milieu = (gauche + droite)//2\n        if cop[milieu] == corr[milieu]:\n            gauche = milieu\n        else:\n            droite = milieu\n    if cop[gauche]:\n        return droite\n    else :\n        return gauche\n</code></pre>"},{"location":"NSITerm/EVAL/revisions.html","title":"R\u00e9visions bac blanc - d\u00e9cembre 2023","text":""},{"location":"NSITerm/EVAL/revisions.html#programme-de-1re","title":"Programme de 1re","text":"<ul> <li>Syst\u00e8me d'exploitation;</li> <li>arborescence: chemin absolu, chemin relatif;</li> <li>commandes de base du shell Bash (<code>mv</code>, <code>cd</code>, etc.);</li> <li>logiciels libres / propri\u00e9taires (voir expos\u00e9s de 1re)</li> <li>commandes de base r\u00e9seaux: <code>ping</code>, <code>traceroute</code>, etc.</li> <li>structure d'une adresse IPv4</li> </ul>"},{"location":"NSITerm/EVAL/revisions.html#programme-de-terminale","title":"Programme de terminale","text":""},{"location":"NSITerm/EVAL/revisions.html#gestion-des-ressources-par-le-se","title":"Gestion des ressources par le SE","text":"<ul> <li>Processus;</li> <li>comprendre et utiliser un exemple simpliste d'ordonnancement;</li> <li>deadlock;</li> </ul>"},{"location":"NSITerm/EVAL/revisions.html#reseaux-protocoles-de-routage","title":"R\u00e9seaux - protocoles de routage","text":"<ul> <li>table de routage;</li> <li>protocole RIP: choix d'une route en fonction du nombre de routeurs \u00e0 traverser pour atteindre la destination;</li> <li>notion de co\u00fbt d'une liaison;</li> <li>protocole OSPF;</li> </ul>"},{"location":"NSITerm/EVAL/revisions.html#programmation-generale-en-python","title":"Programmation g\u00e9n\u00e9rale (en python)","text":"<p>Pas de r\u00e9cursivit\u00e9 \ud83e\udd73</p> <ul> <li>bonne ma\u00eetrise des listes de python (pas listes cha\u00een\u00e9es \ud83e\udd73);</li> <li>savoir utiliser les bool\u00e9ens \u00e0 bon escient;</li> <li>ma\u00eetriser l'emploi des dictionnaires;</li> <li>savoir expliquer ce que fait un programme (donn\u00e9) sans paraphraser le code.</li> </ul>"},{"location":"NSITerm/LP2/C12C1.html","title":"PARADIGMES DE PROGRAMMATION","text":""},{"location":"NSITerm/LP2/C12C1.html#introduction","title":"Introduction","text":"<p>Un paradigme de programmation est une fa\u00e7on de s'organiser pour concevoir un programme informatique. On peut le voir comme un style de programmation. C'est un crit\u00e8re d\u00e9terminant pour le choix d'un langage.  </p> <p>Il existe de tr\u00e8s nombreux paradigmes de programmation (voir wikipedia ou ce document concernant le sujet). </p> <p>Dans le cadre du programme de terminale, on aborde sommairement les caract\u00e9ristiques des paradigmes fonctionnels et orient\u00e9 objet en plus du paradigme imp\u00e9ratif (plus connu et plus utilis\u00e9 par les \u00e9l\u00e8ves).</p> <p>Enfin, on le constatera avec python, les grands langages g\u00e9n\u00e9ralistes actuels sont multi-paradigmes. </p>"},{"location":"NSITerm/LP2/C12C1.html#programmation-imperative","title":"Programmation imp\u00e9rative","text":""},{"location":"NSITerm/LP2/C12C1.html#les-caracteristiques","title":"Les caract\u00e9ristiques","text":"<p>Dans le style imp\u00e9ratif, un programme correspond \u00e0 une s\u00e9quence d'instructions, qui repr\u00e9sentent les actions \u00e0 r\u00e9aliser.  La notion de variable est importante. Elle correspond \u00e0 une zone m\u00e9moire que l'on pourra lire et modifier . Cette modification de la m\u00e9moire est aussi appel\u00e9e effet de bord. On utilise abondamment des structures de boucle (for, while, etc.). Les fonctions peuvent exister mais n'ont pas le m\u00eame sens qu'en math\u00e9matique. Elles peuvent \u00eatre vues comme des blocs destin\u00e9s \u00e0 mieux structurer et factoriser le code. Les fonctions qui ne renvoient pas de valeurs sont souvent nomm\u00e9es proc\u00e9dures.  </p> <p>Parmi les grands langages imp\u00e9ratifs, on peut citer:  </p> <ul> <li>Fortran cr\u00e9\u00e9 par John Backus en 1954;</li> <li>le langage C cr\u00e9\u00e9 par Dennis Ritchie en 1972.</li> </ul> <p>Python permet la programmation imp\u00e9rative. C'est ce que l'on fait depuis la premi\u00e8re, voire la classe de seconde ...</p>"},{"location":"NSITerm/LP2/C12C1.html#exemple-de-probleme-resolu-dans-le-style-imperatif-avec-python","title":"Exemple de probl\u00e8me r\u00e9solu dans le style imp\u00e9ratif avec Python","text":"<p>Concevoir un programme qui calcule la somme des \u00e9l\u00e9ments d'un tableau (sans utiliser la fonction <code>sum</code> de Python \u00e9videmment !!).</p> <pre><code>def somme_i(t):\n    # A compl\u00e9ter\n    pass\n\n# Decommenter\n#sommei(t)\n</code></pre> <pre><code>t = [2, 8, 9, 18, 15]\nassert somme_i(t) == 52\n</code></pre>"},{"location":"NSITerm/LP2/C12C1.html#vers-linfini-et-les-fonctions-la-programmation-fonctionnelle","title":"Vers l'infini et ... les fonctions: la programmation fonctionnelle","text":""},{"location":"NSITerm/LP2/C12C1.html#les-caracteristiques_1","title":"Les caract\u00e9ristiques","text":"<p>Dans le style fonctionnel, un programme est une suite de d\u00e9clarations (de fonctions) suivi d'une expression. D'ailleurs on parle souvent de paradigme d\u00e9claratif.  </p> <p>Une expression est une combinaison d'\u00e9l\u00e9ments du langage qui renvoie une valeur. Le programme consiste \u00e0 \u00e9valuer cette expression.  </p> <p>On peut noter deux premi\u00e8res caract\u00e9ristiques importantes:  </p> <ul> <li>l'absence d'effets de bords;</li> <li>pour les m\u00eames entr\u00e9es, le programme fournira la m\u00eame sortie (on trouve souvent le terme de transparence r\u00e9f\u00e9rentielle).</li> </ul> <p>Les fonctions (au sens math\u00e9matique du terme ici) jouent un r\u00f4le tr\u00e8s important. Elles peuvent \u00eatre des expressions, pass\u00e9es en param\u00e8tres \u00e0 d'autres fonctions et m\u00eame \u00eatre renvoy\u00e9es par d'autre fonctions !  </p> <p>Parmi les grands langages fonctionnels, on peut citer:  </p> <ul> <li>Lisp cr\u00e9\u00e9 par John Mc Carthy en 1958;</li> <li>Ocaml cr\u00e9\u00e9 par Xavier Leroy en 1996;</li> <li>Haskell cr\u00e9\u00e9 par une communaut\u00e9 de d\u00e9veloppeur en 1990. Son nom  a \u00e9t\u00e9 donn\u00e9 en r\u00e9f\u00e9rence au math\u00e9maticien Haskell Curry.  </li> </ul> <p>Python impl\u00e9mente des caract\u00e9ristiques d'un langage fonctionnnel. Voir documentation officielle.</p>"},{"location":"NSITerm/LP2/C12C1.html#exemple","title":"Exemple","text":"<p>On reprend le m\u00eame probl\u00e8me que celui donn\u00e9 au paragraphe pr\u00e9c\u00e9dent, mais cette fois on demande d'\u00e9crire une solution en style fonctionnel.  </p> <p>Une premi\u00e8re solution consiste \u00e0 utiliser la r\u00e9cursivit\u00e9: la somme des \u00e9l\u00e9ments du tableau est la somme de son premier terme et du reste du tableau. </p> <p>On pose par convention que la somme des \u00e9l\u00e9ments d'un tableau vide vaut 0.</p> <pre><code>def somme_func1(t):\n    # A compl\u00e9ter\n    pass\n</code></pre> <pre><code>assert somme_func1([2, 8, 9, 18, 15]) == 52\n</code></pre> <p>On peut aussi vouloir \u00e9viter le slicing:</p> <pre><code>def somme_func2(t):\n    def somme_rec(tab, taille):\n        return 0 if taille == 0 else tab[taille-1] + somme_rec(tab, taille-1)\n    return somme_rec(t, len(t))\n\nsomme_func2([2, 8, 9, 18, 15])\n</code></pre> <pre><code>52\n</code></pre> <p>Remarque: </p> <ul> <li>dans le style fonctionnel  on adopte fr\u00e9quemment une \u00e9criture plus concise, du type: <code>return expr if ... else ...</code> (voir ci-dessous).</li> </ul>"},{"location":"NSITerm/LP2/C12C1.html#les-briques-de-la-programmation-fonctionnelle","title":"Les briques de la programmation fonctionnelle","text":""},{"location":"NSITerm/LP2/C12C1.html#les-fonctions-anonymes","title":"Les fonctions anonymes","text":"<p>Dans un langage fonctionnel, une fonction est une expression comme une autre, qui peut donc \u00eatre pass\u00e9e en param\u00e8tre ou renvoy\u00e9e comme r\u00e9sultat. </p> <p>En Python, une fonction peut \u00eatre \u00e9crite par la notation <code>lambda</code> (puis \u00eatre nomm\u00e9e, ... ou pas).</p> <pre><code>informaticiens = [\n    {'nom': 'Steve Jobs', 'naissance': 1955, 'deces': 2011},\n    {'nom': 'Alan Turing', 'naissance': 1912, 'deces': 1954},\n    {'nom': 'John Von Neumann', 'naissance': 1903, 'deces': 1957},\n    {'nom': 'John McCarty', 'naissance': 1927, 'deces': 2011},\n    {'nom': 'John Backus', 'naissance': 1924, 'deces': 2007},\n]\n\nsorted(informaticiens, key=lambda x: x['naissance'])\n</code></pre> <pre><code>[{'nom': 'John Von Neumann', 'naissance': 1903, 'deces': 1957},\n {'nom': 'Alan Turing', 'naissance': 1912, 'deces': 1954},\n {'nom': 'John Backus', 'naissance': 1924, 'deces': 2007},\n {'nom': 'John McCarty', 'naissance': 1927, 'deces': 2011},\n {'nom': 'Steve Jobs', 'naissance': 1955, 'deces': 2011}]\n</code></pre> <pre><code>sorted(informaticiens, key=lambda x: x['nom'])\n</code></pre> <pre><code>[{'nom': 'Alan Turing', 'naissance': 1912, 'deces': 1954},\n {'nom': 'John Backus', 'naissance': 1924, 'deces': 2007},\n {'nom': 'John McCarty', 'naissance': 1927, 'deces': 2011},\n {'nom': 'John Von Neumann', 'naissance': 1903, 'deces': 1957},\n {'nom': 'Steve Jobs', 'naissance': 1955, 'deces': 2011}]\n</code></pre>"},{"location":"NSITerm/LP2/C12C1.html#les-fonctions-dordre-superieur","title":"Les fonctions d'ordre sup\u00e9rieur","text":"<p>Il s'agit de fonctions qui prennent une ou plusieurs fonctions en param\u00e8tres et qui renvoient une fonction.</p> <pre><code>from math import sin\n\n\ndef derive(h, f):\n    return lambda x: (f(x+h)-f(x))/h\n\nfprime = derive(1e-6, sin)\n[fprime(0), fprime(1.5708), fprime(3.14159)]\n</code></pre> <pre><code>[0.9999999999998334, -4.173106304961038e-06, -1.0000000001374174]\n</code></pre>"},{"location":"NSITerm/LP2/C12C1.html#les-outils-de-python","title":"Les outils de python","text":"<p>Comme tous les langages fonctionnels, Python poss\u00e8de trois fonctions d'ordre sup\u00e9rieur tr\u00e8s utilis\u00e9es (en programmation fonctionnelle): <code>map</code>, <code>filter</code> et <code>reduce</code>. </p> <p>Hors programme</p> <p>Ces fonctions ne sont pas strictement au programme, n\u00e9anmoins les exemples suivants pourront profiter \u00e0 tout \u00e9l\u00e8ve curieux.</p> <p>map</p> <p><code>map</code> prend une fonction et un it\u00e9rable et applique la fonction \u00e0 chaque \u00e9l\u00e9ment de l'it\u00e9rable.</p> <pre><code>ma_liste = [1, 2, 5, 10]\nmes_carres = map(lambda x: x**2, ma_liste)\nlist(mes_carres)\n</code></pre> <pre><code>[1, 4, 25, 100]\n</code></pre> <p>filter</p> <p><code>filter</code> prend une fonction <code>f</code> et un it\u00e9rable en param\u00e8tre. Elle renvoie une s\u00e9quence ne comprenant que les \u00e9l\u00e9ments de l'it\u00e9rable o\u00f9 <code>f(element)</code> est vrai.</p> <pre><code>plus_anciens = filter(lambda x: x['deces'] &gt; 2000, informaticiens)\nlist(plus_anciens)\n</code></pre> <pre><code>[{'nom': 'Steve Jobs', 'naissance': 1955, 'deces': 2011},\n {'nom': 'John McCarty', 'naissance': 1927, 'deces': 2011},\n {'nom': 'John Backus', 'naissance': 1924, 'deces': 2007}]\n</code></pre> <p>reduce</p> <p><code>reduce</code> applique une technique math\u00e9matique appel\u00e9e r\u00e9duction. Typiquement <code>reduce(f, [1, 2, 3, 4])</code> va calculer <code>f(f(f(1, 2), 3), 4)</code></p> <pre><code>from functools import reduce\n\n\ndef somme_func3(t):\n    return reduce(lambda x,y: x+y, t)\n</code></pre> <pre><code>somme_func3([2, 8, 9, 18, 15])\n</code></pre> <pre><code>52\n</code></pre> <p>On peut encore raccourcir l'\u00e9criture:</p> <pre><code>somme_func4 = lambda t: reduce(lambda x,y: x+y, t)\nsomme_func4([2, 8, 9, 18, 15])\n</code></pre> <pre><code>52\n</code></pre>"},{"location":"NSITerm/LP2/C12C1.html#programmation-orientee-objet","title":"Programmation orient\u00e9e objet","text":""},{"location":"NSITerm/LP2/C12C1.html#les-caracteristiques_2","title":"Les caract\u00e9ristiques","text":"<p>Ce paradigme est bas\u00e9 sur la notion d'objet qui peut \u00eatre vu comme une zone m\u00e9moire qui poss\u00e8de ses propres attributs et m\u00e9thodes.  L'objet expose uniquement les m\u00e9thodes pr\u00e9vues dans son interface, tout en cachant les d\u00e9tails d'impl\u00e9mentations. C'est le m\u00e9canisme d'encapsulation. L'objet est construit \u00e0 partir de classes (dans beaucoup de langages). D'autres aspects importants caract\u00e9risant la POO peuvent \u00eatre cit\u00e9s mais sont clairement exclus du programme de terminal.</p> <p>Parmi les grands langages orient\u00e9s objet, on peut citer:  </p> <ul> <li>C++ qui peut \u00eatre vu comme une extension du langage C, cr\u00e9\u00e9 en 1983 par Bjarne Stroustrup;</li> <li>Java cr\u00e9\u00e9 en 1990 par James Gosling;</li> <li>Python cr\u00e9\u00e9 1991 par Guido van Rossum.</li> </ul>"},{"location":"NSITerm/LP2/C12C1.html#exemple_1","title":"Exemple","text":"<p>On r\u00e9soud le m\u00eame probl\u00e8me qu'aux deux paragraphes pr\u00e9c\u00e9dents.</p> <pre><code>tab = Tableau([2, 8, 9, 18, 15])\ntab.somme()\n</code></pre>"},{"location":"NSITerm/LP2/C12C1.html#choisir-un-paradigme","title":"Choisir un paradigme","text":"<p>Le choix d'un paradigme, puis d'un langage, d\u00e9pend fortement de la nature du probl\u00e8me \u00e0 r\u00e9soudre et de l'exp\u00e9rience du programmeur.  </p> <p>Pour les probl\u00e8mes o\u00f9 l'algorithme laisse clairement appara\u00eetre une liste d'actions, la programmation imp\u00e9rative est un bon choix.  </p> <p>Si le probl\u00e8me \u00e0 r\u00e9soudre fait appara\u00eetre des interactions entre entit\u00e9s et surtout si c'est un gros projet, la programmation orient\u00e9 objet est probablement \u00e0 privil\u00e9gier.</p>"},{"location":"NSITerm/LP2/C12E1.html","title":"Paradigmes de programmation - Exercices","text":""},{"location":"NSITerm/LP2/C12E1.html#savoir-distinguer-les-paradigmes","title":"Savoir distinguer les paradigmes","text":"<p>En s'inspirant du cours, proposer un code python donnant le maximum d'un tableau (objet de type <code>list</code>), dans:  </p> <ul> <li>le paradigme imp\u00e9ratif;</li> <li>le paradigme objet;</li> <li>le paradigme fonctionnel</li> </ul>"},{"location":"NSITerm/LP2/C12E1.html#voyager-en-1re-classe-avec-les-fonctions","title":"Voyager en 1re classe avec les fonctions","text":"<p>Les fonctions sont des valeurs comme les autres. Elles peuvent \u00eatre pass\u00e9es en arguments, renvoy\u00e9es comme r\u00e9sultat ou encore stock\u00e9es comme des donn\u00e9es.</p>"},{"location":"NSITerm/LP2/C12E1.html#exemple-1","title":"Exemple 1","text":"<p>a) \u00c9crire une fonction <code>compose(f, g)</code>qui re\u00e7oit en arguments deux fonctions <code>f</code> et <code>g</code> et qui renvoie une fonction qui est la composition de <code>f</code> et <code>g</code> c'est-\u00e0-dire une fonction telle que:</p> <p>\\(\\begin{array}{ccccc} h &amp; : &amp; \\mathbb{R} &amp; \\to &amp; \\mathbb{R} \\\\  &amp; &amp; x &amp; \\mapsto &amp; f\\circ g\\ (x)=f(g(x)) \\\\ \\end{array}\\)</p> <p>b) Tester votre fonction.</p> <p>c) \u00c9crire une fonction <code>applique_deux_fois</code> qui prend une fonction <code>f</code> en argument et qui applique deux fois de suite la fonction <code>f</code> \u00e0 son argument <code>x</code> avant de le renvoyer (cette op\u00e9ration est not\u00e9e \\((f\\circ f)(x)\\) en math\u00e9matique). Tester votre fonction sur la fonction suivante:  </p> <p>\\(\\begin{array}{ccccc} f &amp; : &amp; \\mathbb{R} &amp; \\to &amp; \\mathbb{R} \\\\  &amp; &amp; x &amp; \\mapsto &amp; x^2 \\\\ \\end{array}\\)</p>"},{"location":"NSITerm/LP2/C12E1.html#exemple-2","title":"Exemple 2","text":"<p>\u00c9crire une fonction <code>applique(f, tab)</code> qui prend en arguments une fonction <code>f</code> et un tableau <code>tab</code> qui renvoie un nouveau tableau, de m\u00eame taille o\u00f9 la fonction <code>f</code> a \u00e9t\u00e9 appliqu\u00e9e \u00e0 chaque \u00e9l\u00e9ment de <code>tab</code>. </p> <p>Contrainte</p> <p>Deux versions sont attendues:  </p> <ul> <li>version imp\u00e9rative;</li> <li>version fonctionnelle (on pourra utiliser /!\\ hors programme la fonction <code>map</code>)</li> </ul>"},{"location":"NSITerm/LP2/C1C1.html","title":"R\u00c9CURSIVIT\u00c9","text":""},{"location":"NSITerm/LP2/C1C1.html#introduction","title":"Introduction","text":"<p>Soit le probl\u00e8me simple du calcul de la somme des \\(n+1\\) premiers entiers naturels:  </p> \\[ 0+1+2+3+\\cdots+n \\] <p>Les connaissances de premi\u00e8re permettent de r\u00e9soudre tr\u00e8s facilement ce probl\u00e8me en utilisant une boucle (<code>for</code>ou <code>while</code>):</p> <pre><code>def somme(n):\n\"\"\"\n    Renvoie la somme des n entiers compris entre 0 et n;\n    n: entier naturel positif\n    \"\"\"\n    s = 0\n    for i in range(n+1):\n        s += i\n    return s\n</code></pre> <pre><code>somme(8)\n</code></pre> <pre><code>36\n</code></pre> <p>En proc\u00e9dant ainsi on a r\u00e9solu le probl\u00e8me en expliquant comment calculer <code>somme(n)</code>. On aurait pu aussi arriver au m\u00eame r\u00e9sultat en expliquant c'est quoi <code>somme(n)</code>.  En effet,  </p> \\[ somme(n)=\\underbrace{0+1+2+3+\\cdots+(n-1)}_{somme(n-1)}+n=somme(n-1)+n \\] <p>Ainsi on peut calculer la valeur de <code>somme(n)</code> comme \u00e9tant une fonction math\u00e9matique de \\(n\\):  </p> \\[ somme(n)= \\begin{cases} 0 &amp; \\text{si } n=0 \\\\ n+somme(n-1) &amp; \\text{si } n\\geq 1 \\end{cases} \\] <p>En python, cela se programme facilement:</p> <pre><code>def somme_rec(n):\n    if n == 0:\n        return 0\n    else:\n        return n + somme_rec(n-1)\n</code></pre> <pre><code>somme_rec(8)\n</code></pre> <pre><code>36\n</code></pre> <p>On remarque que <code>somme_rec(n)</code> fait appel \u00e0 <code>somme_rec(n-1)</code>.  </p> <p>D\u00e9finition</p> <p>Une fonction qui fait appel \u00e0 elle m\u00eame est dite r\u00e9cursive.</p> <p>Application directe</p> Enonc\u00e9Aide <p>La puissance \\(n\\)-i\u00e8me d'un nombre \\(x\\) est la multiplication r\u00e9p\u00e9t\u00e9e \\(n\\) fois de \\(x\\) avec lui m\u00eame. Par  convention \\(x^0=1\\). La puissance \\(n\\)-i\u00e8me de \\(x\\) s'\u00e9crit: \\(x^n = \\underbrace{x\\times \\cdots \\times x}_{n-1 \\text{ fois}}\\times x=x^{n-1}\\times x\\) Coder de mani\u00e8re r\u00e9cursive cette fonction en python.</p> <p>On peut donc d\u00e9finir une fonction <code>puissance</code> \\(n\\)-i\u00e8me de \\(x\\) telle que: </p> \\[ puissance(x,n)=\\begin{cases} 1 &amp; \\text{si } n=0\\\\ puissance(x,n-1)\\times x &amp; \\text{si } n&gt;0 \\end{cases} \\] <pre><code>def puissance(x, n):\n    # Supprimer l'instruction 'pass' et compl\u00e9ter avec votre code\n    pass\n</code></pre> <pre><code>#Cellule de test\nassert puissance(2, 0) == 1\nassert puissance(2, 10) == 1024\n</code></pre>"},{"location":"NSITerm/LP2/C1C1.html#la-recursivite-simple-et-magique","title":"La r\u00e9cursivit\u00e9: simple et magique ?","text":"<p>Pour bien comprendre le d\u00e9roulement de l'ex\u00e9cution de la fonction r\u00e9cursive <code>somme_rec</code>, analysons l'appel <code>somme_rec(4)</code> (on dit aussi l'arbre d'appels). <pre><code>somme_rec(4)--&gt; return  4 + somme_rec(3)\n                            |\n                            return 3 + somme_rec(2)\n                                        |\n                                        return 2 + somme_rec(1)\n                                                    |\n                                                    return 1 + somme_rec(0)\n                                                                |\n                                                                return 0\n</code></pre> L'appel de <code>somme_rec(4)</code> provoque une s\u00e9rie d'appels en cascade jusqu'\u00e0 l'appel <code>somme_rec(0)</code> qui renvoit 0. A ce moment l\u00e0, <code>somme_rec(1)</code> peut se terminer en renvoyant 1, puis <code>somme_rec(2)</code> en renvoyant 3, etc.  </p> <p>Cette succession d'appels rend naturellement les boucles inutiles dans dans une fonction r\u00e9cursive.  </p> <p>Chaque appel de fonction se traduit par le stockage dans une zone m\u00e9moire appel\u00e9e pile, de donn\u00e9es li\u00e9es au contexte d'ex\u00e9cution de la fonction appelante (adresse de retour, param\u00e8tres de la fonction, etc.). </p> <p>Application directe </p> Enonc\u00e9Aide <p>Analyser l'arbre d'appels de <code>puissance(2, 4)</code> et justifier la valeur renvoy\u00e9e.</p> <p>Revoir l'exemple de la fonction <code>somme_rec</code></p>"},{"location":"NSITerm/LP2/C1C1.html#dautres-exemples-de-fonctions-recursives-precautions","title":"D'autres exemples de fonctions r\u00e9cursives - pr\u00e9cautions","text":""},{"location":"NSITerm/LP2/C1C1.html#la-suite-de-fibonacci-ecriture-dune-fonction-recursive-naive","title":"La suite de Fibonacci: \u00e9criture d'une fonction r\u00e9cursive na\u00efve","text":"<p>Cette suite est d\u00e9finie pour tout entier naturel \\(n\\), par:  </p> \\[ F(n)= \\begin{cases} n &amp; \\text{si } n&lt;2\\\\ F(n-1) + F(n-2)&amp; \\text{si } n\\geq 2 \\end{cases} \\] <p>Ecrire une fonction r\u00e9cursive en python <code>fib(n)</code> qui renvoie le calcul du \\((n+1)\\)-i\u00e8me terme de la suite de Fibonacci, compte tenu de la d\u00e9finition ci-dessus.</p> <pre><code>def fib(n):\n    # Supprimer 'pass' et compl\u00e9ter avec votre code\n    pass\n</code></pre> <pre><code># Tests\nassert fib(1) == 1\nassert fib(2) == 1\nassert fib(6) == 8\n</code></pre>"},{"location":"NSITerm/LP2/C1C1.html#analyse-de-la-fonction-naive","title":"Analyse de la fonction na\u00efve","text":"<p>Jupyter Notebook poss\u00e8de une extension int\u00e9ressante (les magic commands) qui permet d'appeler une fonction python (ou autre). On va utiliser la commande <code>%timeit fib(n)</code> pour mesurer le temps d'ex\u00e9cution de <code>fib(n)</code>. Par exemple: <pre><code>%timeit fib(10)\n</code></pre></p> <p>Les r\u00e9sultats sont consign\u00e9s dans le tableau ci-dessous:  </p> n %timeit fib(n) 5 1.2 \u00b5s 10 14 \u00b5s 20 1.7 ms 30 0.22 s 35 2.4 s <p>On constate que la complexit\u00e9 explose rapidement. Essayons de comprendre pourquoi en examinant une partie de l'arbre d'appels de <code>fib(5)</code> par exemple.  </p> <p>Des calculs d\u00e9j\u00e0 effectu\u00e9s lors de l'appel de <code>fib(4)</code> sont \u00e0 nouveau effectu\u00e9s lors de l'appel de <code>fib(3)</code> !!  </p> <p>Attention</p> <p>La traduction na\u00efve d'une fonction math\u00e9matique en une fonction r\u00e9cursive peut conduire \u00e0 une complexit\u00e9  inacceptable. Des techniques simples existent pour r\u00e9gler le probl\u00e8me pr\u00e9c\u00e9dent et seront abord\u00e9es plus loin dans le  cours de terminale.</p>"},{"location":"NSITerm/LP2/C1C1.html#retour-sur-la-pile","title":"Retour sur la pile","text":"<p>Ex\u00e9cuter la cellule suivante et analyser le r\u00e9sultat obtenu.</p> <pre><code>def f(n):\n    return 1 + f(n + 1)\n\nf(0)\n</code></pre> <pre><code>#Votre analyse\n</code></pre> <p>Attention</p> <p>La taille de la pile est limit\u00e9e, le nombre d'appels r\u00e9cursifs est donc limit\u00e9 aussi. Python limite  naturellement et assez s\u00e9v\u00e8rement d'ailleurs, le nombre d'appels r\u00e9cursifs. On peut avoir une id\u00e9e de  cette limite avec le code suivant:  </p> <pre><code>import sys\nprint(sys.getrecursionlimit())\n</code></pre>"},{"location":"NSITerm/LP2/C1C1.html#bien-ecrire-des-fonctions-recursives","title":"Bien \u00e9crire des fonctions r\u00e9cursives","text":"<p>Il est g\u00e9n\u00e9ralement simple de traduire une fonction math\u00e9matique d\u00e9finie par r\u00e9currence en une fonction r\u00e9cursive python. On veillera n\u00e9anmoins \u00e0 ce que le sch\u00e9ma suivant soit toujours pr\u00e9sent dans la d\u00e9finition de la fonction:  </p> <p><pre><code>def f_rec(parametres):\n    if condition:\n        #cas de base: cas trivial o\u00f9 la fonction termine\n        return valeur\n    else:\n        #cas r\u00e9cursifs o\u00f9 on appelle \u00e0 nouveau f_rec\n        ...\n        return expression(f_rec(...))\n</code></pre> Les diff\u00e9rents cas sont typiquement examin\u00e9s avec des tests <code>if ... else</code>. Enfin, le cas de base peut \u00eatre ... constitu\u00e9 de plusieurs cas!</p>"},{"location":"NSITerm/LP2/C1C1.html#a-retenir","title":"A retenir","text":"<p>La r\u00e9cursivit\u00e9 est une technique de programmation \u00e9l\u00e9gante, tr\u00e8s proche de la d\u00e9finition math\u00e9matique des fonctions ou des probl\u00e8mes. Les boucles y sont inutiles.  Une fonction r\u00e9cursive est g\u00e9n\u00e9ralement constitu\u00e9 d'un ou de plusieurs cas de base, qui permet(tent) \u00e0 la fonction de terminer et de cas r\u00e9cursifs. La r\u00e9cursivit\u00e9 repose sur l'utilisation d'une zone m\u00e9moire appel\u00e9e pile, de capacit\u00e9 limit\u00e9e. Une erreur est signal\u00e9e lors d'une tentative de d\u00e9passement de cette capacit\u00e9. Enfin, il faut toujours \u00eatre vigilant sur le fait que cette technique appliqu\u00e9e de mani\u00e8re na\u00efve peut engendrer une complexit\u00e9 inacceptable.</p>"},{"location":"NSITerm/LP2/C1E1.html","title":"Exercices - R\u00e9cursivit\u00e9","text":""},{"location":"NSITerm/LP2/C1E1.html#rappels-ou-complements-sur-les-chaines-de-caracteres-en-python","title":"Rappels ou compl\u00e9ments sur les chaines de caract\u00e8res en python","text":""},{"location":"NSITerm/LP2/C1E1.html#declaration","title":"D\u00e9claration","text":"<p>Rappel: une cha\u00eene de caract\u00e8re python peut \u00eatre initialis\u00e9e avec une d\u00e9claration du type: <pre><code>ma_chaine1 = 'caracteres'\n</code></pre> Si la cha\u00eene contient un apostrophe, il vaut mieux utiliser une paire de doubles quotes: <pre><code>ma_chaine2 = \"l'apostrophe n'est pas interpr\u00e9t\u00e9 comme d\u00e9limiteur de chaine ici\"\n</code></pre> Enfin, si la cha\u00eene occupe plusieurs lignes, on utilisera une paire de trois double quotes accol\u00e9es: <pre><code>ma_chaine3 = \"\"\"\nligne 1\nligne 2\netc.\n\"\"\"\n</code></pre></p> <pre><code>ma_chaine1 = 'caracteres'\ntype(ma_chaine1)\n</code></pre> <pre><code>str\n</code></pre>"},{"location":"NSITerm/LP2/C1E1.html#indexation-et-longueur","title":"Indexation et longueur","text":"<p>On peut acc\u00e9der aux diff\u00e9rents caract\u00e8res de la cha\u00eene en utilisant une indexation comme pour les tableaux.  Une particularit\u00e9 de python est de permettre une indexation n\u00e9gative. Ainsi l'index -1 correspond au dernier caract\u00e8re.</p> <pre><code>ma_chaine2 = \"l'apostrophe n'est pas interpr\u00e9t\u00e9 comme d\u00e9limiteur de chaine ici\"\nprint(ma_chaine2[0])\nprint(ma_chaine2[-1])\n</code></pre> <pre><code>l\ni\n</code></pre> <p>On obtient la longueur de la cha\u00eene avec la fonction <code>len</code>.</p> <pre><code>print(len(ma_chaine2))\n</code></pre> <pre><code>64\n</code></pre>"},{"location":"NSITerm/LP2/C1E1.html#les-chaines-objets-non-mutables","title":"Les chaines: objets non mutables","text":"<p>Les cha\u00eenes de caract\u00e8res sont des objets non mutables (on dit aussi immuables).</p> <pre><code>ma_chaine2[0] = 'L'\n</code></pre> <pre><code>---------------------------------------------------------------------------\n\nTypeError                                 Traceback (most recent call last)\n\n&lt;ipython-input-50-f4b20dca7b9a&gt; in &lt;module&gt;\n----&gt; 1 ma_chaine2[0] = 'L'\n\n\nTypeError: 'str' object does not support item assignment\n</code></pre>"},{"location":"NSITerm/LP2/C1E1.html#tranches-facilite-de-python-non-exigible-en-nsi-hors-programme-mais-tres-pratique","title":"Tranches (facilit\u00e9 de python non exigible en NSI, hors programme, mais tr\u00e8s pratique)","text":"<p>On peut s\u00e9lectionner des tranches dans une cha\u00eene ou un tableau. Par exemple, pour r\u00e9cup\u00e9rer les caract\u00e8res situ\u00e9s entre les index \\(i\\) (inclus) et \\(j\\) (exclus) d'une cha\u00eene <code>ch</code>, on utilise la syntaxe: <code>ch[i:j]</code>.</p> <pre><code>ma_chaine2[0:12]#r\u00e9cup\u00e8re les caract\u00e8res entre les index 0 (inclus) et 12 (exclus)\n</code></pre> <pre><code>\"l'apostrophe\"\n</code></pre>"},{"location":"NSITerm/LP2/C1E1.html#concatenation","title":"Concat\u00e9nation","text":"<p>On peut utiliser le signe '+' pour concat\u00e9ner (mettre bout \u00e0 bout) deux cha\u00eenes. Le r\u00e9sultat est une nouvelle cha\u00eene.</p> <pre><code>new_chaine = 'Les ' + ma_chaine1\nprint(new_chaine)\n</code></pre> <pre><code>Les caracteres\n</code></pre>"},{"location":"NSITerm/LP2/C1E1.html#exercice-1-fonction-factorielle","title":"Exercice 1 - Fonction factorielle","text":"<p>La traditionnelle fonction factorielle (pratiquement syst\u00e9matiquement pr\u00e9sent\u00e9e lorsqu'on aborde la r\u00e9cursivit\u00e9) est d\u00e9finie par: \\(fact(n)=n!=1\\times 2\\times \\cdots \\times n\\). Par ailleurs, \\(0!=1\\).  </p> <p>A faire</p> <p>\u00c9crire une fonction factorielle <code>fact(n)</code> de mani\u00e8re r\u00e9cursive. Coup de pouce: revoir le code de la fonction puissance.</p> <pre><code>def fact(n):\n    # Supprimer l'instruction 'pass' et compl\u00e9ter avec votre code\n    pass\n</code></pre>"},{"location":"NSITerm/LP2/C1E1.html#exercice-2-renverser-une-chaine","title":"Exercice 2 - Renverser une cha\u00eene","text":"<p>On souhaite \u00e9crire une fonction <code>renverse</code> qui renverse tous les caract\u00e8res d'une cha\u00eene non vide <code>c</code>. Par exemple, l'appel <code>renverse('bonjour')</code> renvoie <code>'ruojnob'</code>. Plusieurs m\u00e9thodes de programmation sont possibles. On impose ici une m\u00e9thode r\u00e9cursive.  </p> <ul> <li>Le cas de base est simple \u00e0 identifier: il s'agit d'une cha\u00eene de longueur 1 ! Lorsque ce cas se produit, il suffit de renvoyer la cha\u00eene;</li> <li>Pour les autres cas, on s'appuie sur le constat suivant: l'inverse d'une cha\u00eene c'est tout simplement la concat\u00e9nation du dernier caract\u00e8re de celle-ci avec l'inverse du reste de la cha\u00eene.  </li> </ul> <p>A faire</p> <p>Compl\u00e9ter la fonction suivante qui renverse <code>c</code> de mani\u00e8re r\u00e9cursive. Puis tester la fonction en ex\u00e9cutant la cellule pr\u00e9vue \u00e0 cet effet.</p> <pre><code>def renverse(c):\n    # Supprimer l'instruction 'pass' et compl\u00e9ter avec votre code\n    pass   \n</code></pre> <pre><code># Tests\nassert renverse('a') == 'a'\nassert renverse('moteur') == 'ruetom'\n</code></pre>"},{"location":"NSITerm/LP2/C1E1.html#exercice-3-conversion-binaire-encore","title":"Exercice 3 - Conversion binaire (encore)","text":"<p>On a vu en premi\u00e8re qu'on pouvait obtenir la conversion en binaire d'un entier naturel en r\u00e9alisant les divisions successives de son quotient par 2. Exprimons cette id\u00e9e de mani\u00e8re \u00e0 faire \u00e9merger une m\u00e9thode r\u00e9cursive. On peut voir la d\u00e9composition en binaire d'un nombre \\(n\\) comme la concat\u00e9nation de la d\u00e9composition en binaire du quotient de \\(n\\) par \\(2\\), avec son reste. Le cas de base \u00e9tant obtenu lorsque le nombre \\(n\\) est nul, dans ce cas on renvoie une cha\u00eene vide.  </p> <p>A faire</p> <p>Compl\u00e9ter la fonction <code>binaire(n)</code> qui prend en param\u00e8tre un entier naturel \\(n\\) et qui renvoie une cha\u00eene qui correspond \u00e0 sa conversion en binaire. Une m\u00e9thode r\u00e9cursive est exig\u00e9e.</p> <pre><code>def binaire(n):\n    # Supprimer l'instruction 'pass' et compl\u00e9ter avec votre code\n    pass\n</code></pre> <pre><code># Test\nassert binaire(40) == '101000'\n</code></pre>"},{"location":"NSITerm/LP2/C1E1.html#exercice-4-la-recherche-lineaire-en-version-recursive","title":"Exercice 4 - La recherche lin\u00e9aire en version r\u00e9cursive","text":"<p>L'algorithme de recherche s\u00e9quentielle ou lin\u00e9aire dans un tableau \\(t\\) a \u00e9t\u00e9 vue en classe de 1re. Donner une impl\u00e9mentation r\u00e9cursive de cet algorithme.  </p> <p>Indication</p> <p>\\(x \\in t\\) si \\(x\\) correspond au caract\u00e8re en cours ou appartient au reste du tableau.</p> <pre><code>def appartient(x, t):\n    pass   \n</code></pre> <pre><code># Tests\nt4 = [1, 2, 10, -5, 8, 6, -2]\nt2 = []\nassert appartient(-2, t2) == False\nassert appartient(10, t4) == True\n</code></pre>"},{"location":"NSITerm/LP2/C1E1.html#exercice-5-optionnel-le-tri-par-insertion","title":"Exercice 5 (optionnel) - Le tri par insertion","text":"<p>Le tri par insertion a \u00e9galement \u00e9t\u00e9 vu en 1re. On se propose ici d'impl\u00e9menter une version r\u00e9cursive.  </p>"},{"location":"NSITerm/LP2/C1E1.html#a-amener-un-element-a-sa-place-dans-un-tableau-trie","title":"a) Amener un \u00e9l\u00e9ment \u00e0 sa place dans un tableau tri\u00e9","text":"<p>Soit un tableau \\(t\\) de \\(n\\) \u00e9l\u00e9ments, tri\u00e9. C'est quoi amener un \u00e9l\u00e9ment \\(x\\) \u00e0 sa place dans \\(t\\)?  </p> <ul> <li>si \\(t\\) est vide, c'est tout simplement un tableau compos\u00e9 du seul \u00e9l\u00e9ment \\(x\\) (c'est-\u00e0-dire <code>[x]</code>);</li> <li>si \\(x&lt; t[0]\\) (plus petit que le premier \u00e9l\u00e9ment du tableau) alors c'est le tableau obtenu en pla\u00e7ant \\(x\\) au d\u00e9but de \\(t\\);</li> <li>si \\(x\\geq t[0]\\) c'est la concat\u00e9nation <code>[t[0]]</code> avec le tableau r\u00e9sultant du placement de \\(x\\) dans <code>[t[1]...t[n-1]]</code>.</li> </ul> <p>A faire</p> <p>\u00c9crire une fonction r\u00e9cursive <code>placer(x, t)</code> qui am\u00e8ne \\(x\\) \u00e0 sa place dans un tableau tri\u00e9 <code>t</code>. Cette fonction renvoie un nouveau tableau.</p> <pre><code>def place(x, t):\n    pass\n</code></pre> <pre><code># Tests\nt=[-5, -3,4,12,15,20]\nassert placer(8, t) == [-5, -3, 4, 8, 12, 15, 20]\n</code></pre>"},{"location":"NSITerm/LP2/C1E1.html#b-trier-par-insertion","title":"b) Trier par insertion","text":"<p>C'est quoi trier un tableau \\(t\\) de \\(n\\) \u00e9l\u00e9ments par insertion ?</p> <ul> <li>si \\(t\\) est vide alors il s'agit d'un tableau vide;</li> <li>sinon c'est placer <code>t[0]</code> dans le tableau de \\(n-1\\) \u00e9l\u00e9ments <code>[t[1]...t[n-1]</code> tri\u00e9 par insertion.</li> </ul> <p>A faire</p> <p>\u00c9crire la fonction r\u00e9cursive <code>tri_insertion(t)</code> qui trie \\(t\\) par insertion.</p> <pre><code>def tri_insertion(t):\n    pass\n</code></pre> <pre><code># Tests\nt4 = [1, 2, 10, -5, 8, 6, -2]\nassert tri_insertion(t4) == [-5, -2, 1, 2, 6, 8, 10]\nassert tri_insertion([]) == []\nassert tri_insertion(tri_insertion([0,0,0])) == [0,0,0]\n</code></pre>"},{"location":"NSITerm/LP2/C1E1.html#exercice-6-un-autre-tri-le-tri-fusion","title":"Exercice 6 - Un autre tri: le tri fusion","text":"<p>Pr\u00e9ambule </p> <p>Avant d'aborder l'impl\u00e9mentation d'un nouvel algorithme de tri plus performant que ceux de 1re, on donne les deux fonctions ci-dessous. Malheureusement les sp\u00e9cifications ne sont pas toutes compl\u00e8tes ...</p> <pre><code>def est_trie(t, g, d):\n\"\"\"\n    t: tableau\n    g,d: entiers naturels\n    renvoie True si t est tri\u00e9 par ordre croissant entre les indices g et d (inclus),\n    False sinon.\n    \"\"\"\n    # par ordre croissant \n    return all(t[i+1] &gt;= t[i] for i in range(g, d))\n</code></pre> <pre><code>def fusion(t, g, m, d):\n\"\"\"\n    t: tableau\n    g,m,d: entiers naturels\n    ....\n    \"\"\"\n    assert est_trie(t, g, m)\n    assert est_trie(t, m+1, d)\n\n    i, j = g, m + 1\n    aux = t[:] # r\u00e9alise une copie de t\n    for k in range(g, d+1):\n        if i &gt; m:\n            t[k] = aux[j]\n            j += 1\n        elif j &gt; d:\n            t[k] = aux[i]\n            i += 1\n        elif aux[j] &lt; aux[i]:\n            t[k] = aux[j]\n            j += 1\n        else:\n            t[k] = aux[i]\n            i += 1\n\n    assert est_trie(t, g, d)\n</code></pre> <pre><code># 1er exemple d'appel\nt1 = [1, 3, 7, -3, 4, 10, 12]\nfusion(t1, 0, 2, 6)\nprint(t1)\n</code></pre> <pre><code>[-3, 1, 3, 4, 7, 10, 12]\n</code></pre> <pre><code>      k\n      |\n      v\n    +---+---+---+---+---+---+--+\nt   | 1 | 3 | 7 |-3 | 4 |10 |12|\n    +---+---+---+---+---+---+--+\n      g       m              d\n\n    +---+---+---+---+---+---+--+\naux | 1 | 3 | 7 |-3 | 4 |10 |12|\n    +---+---+---+---+---+---+--+\n      ^           ^\n      |           |\n      i           j\n</code></pre> <pre><code># Autre exemple\nt2 = ['E','E','G','M','R','A','C','E','R','T']\nfusion(t2,0,4,9)\nprint(t2)\n</code></pre> <pre><code>['A', 'C', 'E', 'E', 'E', 'G', 'M', 'R', 'R', 'T']\n</code></pre> <p>\u00c0 faire</p> <ul> <li>\u00c0 partir du code et des exemples, dire ce que r\u00e9alise la fonction <code>fusion</code>.</li> <li>Quelle est l'utilit\u00e9 de la fonction <code>est_trie</code>?</li> </ul> <p>Le tri fusion </p> <p>Le tri fusion d'un tableau est bas\u00e9 sur une id\u00e9e simple:  </p> <ul> <li>s\u00e9parer le tableau en deux parties \u00e9gales ou presqu'\u00e9gales (\u00e0 un \u00e9l\u00e9ment pr\u00e8s);</li> <li>trier de mani\u00e8re ind\u00e9pendante et r\u00e9cursivement les deux parties;</li> <li>fusionner les deux parties de tableau tri\u00e9es.</li> </ul> <p>Le cas de base se produit lorsqu'on arrive \u00e0 un tableau \u00e0 un \u00e9l\u00e9ment. Dans ce cas, il est forc\u00e9ment tri\u00e9 et on le renvoie sans plus de traitement.  </p> <p>\u00c0 faire</p> <p>\u00c9crire une fonction <code>tri_fusion</code> qui trie un tableau non vide <code>t</code> selon l'algorithme du tri fusion. On pourra introduire au pr\u00e9alable une fonction d'assistance qui r\u00e9alise l'essentiel du travail (voir ci-dessous). Tester.</p> <pre><code># A compl\u00e9ter\n\n#def tri_recursivement(t, g, d):\n#    \"\"\"Fonction d'assistance \"\"\"\n#    if ...: # Cas de base\n#        return\n#    else: # cas r\u00e9cursif\n#        m = g + (d - g) // 2 # sensiblement la moiti\u00e9 du tableau\n#        ...\n</code></pre> <pre><code># Cellule de test\nt1 = [3, -8, 10,1, 3, -5, 12, 7, 6]\nt2 = []\ntri_fusion(t1, 0, 8)\ntri_fusion(t2, 0, 0)\nassert t1 == [-8, -5, 1, 3, 3, 6, 7, 10, 12]\nassert t2 == []\n</code></pre>"},{"location":"NSITerm/LP2/C1E1.html#probleme-classique-les-tours-de-hanoi","title":"Probl\u00e8me classique: les tours de Hano\u00ef","text":"<p>Origine: wikipedia</p> <p>Le probl\u00e8me math\u00e9matique des tours de Hano\u00ef a \u00e9t\u00e9 invent\u00e9 par \u00c9douard Lucas. Il est publi\u00e9 dans le tome 3 de ses R\u00e9cr\u00e9ations math\u00e9matiques, parues \u00e0 titre posthume en 1892. Il annonce que ce probl\u00e8me est d\u00fb \u00e0 un de ses amis, N. Claus de Siam (anagramme de Lucas d'Amiens, Amiens \u00e9tant sa ville de naissance), pr\u00e9tendument professeur au coll\u00e8ge de Li-Sou-Stian (anagramme de Saint Louis, le lyc\u00e9e o\u00f9 Lucas enseignait).</p> <p>Sous le titre \u00ab Les brahmes tombent \u00bb, Lucas relate que \u00ab N. Claus de Siam a vu, dans ses voyages pour la publication des \u00e9crits de l'illustre Fer-Fer-Tam-Tam, dans le grand temple de B\u00e9nar\u00e8s, au-dessous du d\u00f4me qui marque le centre du monde, trois aiguilles de diamant, plant\u00e9es dans une dalle d'airain, hautes d'une coud\u00e9e et grosses comme le corps d'une abeille. Sur une de ces aiguilles, Dieu enfila au commencement des si\u00e8cles, 64 disques d'or pur, le plus large reposant sur l'airain, et les autres, de plus en plus \u00e9troits, superpos\u00e9s jusqu'au sommet. C'est la tour sacr\u00e9e du Brahm\u00e2. Nuit et jour, les pr\u00eatres se succ\u00e8dent sur les marches de l'autel, occup\u00e9s \u00e0 transporter la tour de la premi\u00e8re aiguille sur la troisi\u00e8me, sans s'\u00e9carter des r\u00e8gles fixes que nous venons d'indiquer, et qui ont \u00e9t\u00e9 impos\u00e9es par Brahma. Quand tout sera fini, la tour et les brahmes tomberont, et ce sera la fin des mondes ! \u00bb.</p> <p>Un jeu \u00e0 64 disques requiert un minimum de \\(2^{64}-1\\) d\u00e9placements. En admettant qu'il faille 1 seconde pour d\u00e9placer un disque, ce qui fait 86 400 d\u00e9placements par jour, la fin du jeu aurait lieu au bout d'environ 213 000 milliards de jours, ce qui \u00e9quivaut \u00e0 peu pr\u00e8s \u00e0 584,5 milliards d'ann\u00e9es, soit 43 fois l'\u00e2ge estim\u00e9 de l'univers (13,7 milliards d'ann\u00e9es selon certaines sources).</p> <p>Principe: tours de Hanoi - Chistian Queinnec <pre><code>from IPython.display import YouTubeVideo\n\n\nYouTubeVideo('U3nGNJTxYc4', width=800, height=450)\n</code></pre></p> <p> </p> <p>L'objectif est de r\u00e9soudre ce casse-t\u00eate en utilisant une m\u00e9thode r\u00e9cursive. Le cas de base est obtenu lorsque le nombre \\(n\\) de disques \u00e0 d\u00e9placer est nul. Dans ce cas on retourne. Le cas r\u00e9cursif est \u00e0 faire appara\u00eetre avec la remarque suivante: pour d\u00e9placer \\(n\\) disques d'une tour A vers une tour C, il faut:  </p> <ul> <li>d\u00e9placer les \\(n-1\\) premiers disques vers une tour interm\u00e9diaire (B par exemple);</li> <li>d\u00e9placer le plus grand disque restant vers sa destination (ici tour C);</li> <li>d\u00e9placer les \\(n-1\\) disques de la premi\u00e8re \u00e9tape vers C.  </li> </ul> <p>A faire</p> <p>Proposer une solution r\u00e9cursive, en python, du probl\u00e8me des tours de Hano\u00ef. La fonction pourrait avoir une signature du type: <code>hanoi(nb_disques, tour_depart, tour interm, tour_arrivee)</code>.</p> <pre><code>def hanoi(n, tour_A, tour_B, tour_C):\n\"\"\"\n    d\u00e9place n disques de 'tour_A' vers 'tour_C', en utilisant la tour\n    interm\u00e9diaire 'tour_B'\n    \"\"\"\n    # Supprimer l'instruction 'pass' et compl\u00e9ter avec votre code\n    pass \n</code></pre>"},{"location":"NSITerm/LP2/C1EP1.html","title":"Vers le bac: Rendu de monnaie","text":"<p>Pour travailler \u00e0 la maison, sans installation de Jupyter, ouvrir le notebook avec basthon, depuis cette adresse</p> <p>Le probl\u00e8me du rendu de monnaie est un probl\u00e8me d'algorithmique. Il s'\u00e9nonce de la fa\u00e7on suivante: \u00e9tant donn\u00e9 un syst\u00e8me de monnaie (pi\u00e8ces et billets), comment rendre une somme donn\u00e9e de fa\u00e7on optimale, c'est-\u00e0-dire avec le nombre minimal de pi\u00e8ces et billets ?</p> <p>Par exemple, la meilleure fa\u00e7on de rendre 7 euros est de rendre un billet de cinq et une pi\u00e8ce de deux, m\u00eame si d'autres fa\u00e7ons existent (rendre 7 pi\u00e8ces de un euro, par exemple). </p> <p>Cependant pour certains syst\u00e8mes de monnaie dits canoniques, l'algorithme glouton , o\u00f9 il suffit de rendre syst\u00e9matiquement la pi\u00e8ce ou le billet de valeur maximale \u2014 tant qu'il reste quelque chose \u00e0 rendre, est optimal. C'est la m\u00e9thode employ\u00e9e en pratique, ce qui se justifie car la quasi-totalit\u00e9 des syst\u00e8mes ayant cours dans le monde sont canoniques. </p> <p>Source: wikipedia</p>"},{"location":"NSITerm/LP2/C1EP1.html#modelisation-du-probleme","title":"Mod\u00e9lisation du probl\u00e8me","text":"<p>On consid\u00e8re un syst\u00e8me mon\u00e9taire canonique constitu\u00e9 de pi\u00e8ces ou billets \\(P=\\{p_1, p_2, \\cdots, p_n\\}\\), avec \\(p_1&gt;p_2&gt;\\cdots &gt;p_n\\). Les \\(p_i\\) \u00e9tant les valeurs des diff\u00e9rentes pi\u00e8ces ou billets. On appelle \\(v\\) la valeur \u00e0 rendre et \\(sol\\) la solution du probl\u00e8me. Le probl\u00e8me du rendu de monnaie peut \u00eatre vu comme un probl\u00e8me de choix de pi\u00e8ces (billets) ou ... pas, suivant la valeur \u00e0 rendre.  </p> <p>Si la valeur \\(v\\) \u00e0 rendre est nulle, on a termin\u00e9, il suffit de renvoyer la solution. Dans le cas contraire,  on compare \\(v\\) \u00e0 la valeur de la i-\u00e8me pi\u00e8ce \\(P\\left[i\\right]\\) courante:  </p> <ul> <li>si la valeur \u00e0 rendre est plus petite que la valeur de la i-\u00e8me pi\u00e8ce, on ne peut \u00e9videmment pas choisir cette derni\u00e8re; il faudra essayer de rendre la monnaie avec la prochaine pi\u00e8ce;</li> <li>sinon, la pi\u00e8ce peut \u00eatre choisie et doit \u00eatre incluse \u00e0 la solution et on doit essayer de rendre la monnaie  sur \\(v-P\\left[ i\\right]\\).</li> </ul> <p>\u00c0 faire</p> <p>On adopte une d\u00e9marche r\u00e9cursive pour r\u00e9soudre ce probl\u00e8me. En utilisant la description pr\u00e9c\u00e9dente:  </p> <ul> <li>identifier le cas de base et le ou les cas r\u00e9cursifs;</li> <li>\u00e9crire une fonction <code>rendu</code> qui r\u00e9soud ce probl\u00e8me; on pourra s'appuyer sur une fonction auxilliaire <code>rendu_aux</code> (\u00e0 \u00e9crire \u00e9galement), dont la signature est donn\u00e9e ci-apr\u00e8s.</li> </ul>"},{"location":"NSITerm/LP2/C1EP1.html#codage","title":"Codage","text":"<pre><code>def rendu_aux(v, sol, i):\n\"\"\"\n    v (entier): valeur \u00e0 rendre;\n    sol (liste python): la solution\n    i (entier): index de la pi\u00e8ce \u00e0 tester\n    \"\"\"\n    if ... # Cas de base\n    ...\n    else:\n        ... # Cas r\u00e9cursifs\n</code></pre>"},{"location":"NSITerm/LP2/C1EP1.html#indications","title":"Indications","text":"<p>La solution est une liste de python qui diff\u00e8re sensiblement du tableau, dans le sens o\u00f9 elle peut \u00eatre agrandie. Pour inclure une nouvelle pi\u00e8ce \u00e0 la solution, on utilisera la m\u00e9thode <code>append</code>.</p> <pre><code>sol = []\nsol.append(10) # inclus 10 \u00e0 la liste sol\n</code></pre>"},{"location":"NSITerm/LP2/C1EP1.html#tests","title":"Tests","text":"<p>Tester votre fonction</p> <pre><code>P = [500, 200, 100, 50, 20, 10, 5, 2, 1]\nassert rendu(0) == []\nassert rendu(37) == [20, 10, 5, 2]\nassert rendu(300) == [200, 100]\n</code></pre>"},{"location":"NSITerm/LP2/C1TD1.html","title":"Adaptation (plus difficile) d'un sujet de bac: le rendu de monnaie","text":"<p>Pour travailler \u00e0 la maison, sans installation de Jupyter, ouvrir le notebook avec basthon, depuis cette adresse</p> <p>Le probl\u00e8me du rendu de monnaie est un probl\u00e8me d'algorithmique. Il s'\u00e9nonce de la fa\u00e7on suivante: \u00e9tant donn\u00e9 un syst\u00e8me de monnaie (pi\u00e8ces et billets), comment rendre une somme donn\u00e9e de fa\u00e7on optimale, c'est-\u00e0-dire avec le nombre minimal de pi\u00e8ces et billets ?</p> <p>Par exemple, la meilleure fa\u00e7on de rendre 7 euros est de rendre un billet de cinq et une pi\u00e8ce de deux, m\u00eame si d'autres fa\u00e7ons existent (rendre 7 pi\u00e8ces de un euro, par exemple). </p> <p>Cependant pour certains syst\u00e8mes de monnaie dits canoniques, l'algorithme glouton est optimal, c'est-\u00e0-dire qu'il suffit de rendre syst\u00e9matiquement la pi\u00e8ce ou le billet de valeur maximale \u2014 ce tant qu'il reste quelque chose \u00e0 rendre. C'est la m\u00e9thode employ\u00e9e en pratique, ce qui se justifie car la quasi-totalit\u00e9 des syst\u00e8mes ayant cours dans le monde sont canoniques. </p> <p>Source: wikipedia</p>"},{"location":"NSITerm/LP2/C1TD1.html#modelisation-du-probleme","title":"Mod\u00e9lisation du probl\u00e8me","text":"<p>On consid\u00e8re un syst\u00e8me mon\u00e9taire canonique constitu\u00e9 de pi\u00e8ces ou de billets \\(P=\\{p_1, p_2, \\cdots, p_n\\}\\), avec \\(p_1&gt;p_2&gt;\\cdots &gt;p_n\\). On appelle \\(v\\) la valeur \u00e0 rendre et \\(sol\\) la solution du probl\u00e8me. Le probl\u00e8me du rendu de monnaie peut \u00eatre vu comme un probl\u00e8me de choix de pi\u00e8ces (billets) ou ... pas, suivant la valeur \u00e0 rendre. Si la valeur \\(v\\) \u00e0 rendre est nulle, on a termin\u00e9, il suffit de renvoyer la solution. Dans le cas contraire,  on compare \\(v\\) \u00e0 la valeur de la i-\u00e8me pi\u00e8ce \\(P\\left[i\\right]\\):  </p> <ul> <li>si la valeur \u00e0 rendre est plus petite que la valeur de la i-\u00e8me pi\u00e8ce, on ne peut \u00e9videmment pas choisir cette derni\u00e8re; il faudra essayer de rendre la monnaie avec la prochaine pi\u00e8ce;</li> <li>sinon, la pi\u00e8ce peut \u00eatre choisie et doit \u00eatre ajout\u00e9e \u00e0 la solution et on doit essayer de rendre la monnaie  sur \\(v-P\\left[ i\\right]\\).</li> </ul> <p>A faire</p> <p>On adopte une d\u00e9marche r\u00e9cursive pour r\u00e9soudre ce probl\u00e8me. En utilisant la description pr\u00e9c\u00e9dente:  </p> <ul> <li>identifier le cas de base et le ou les cas r\u00e9cursifs;</li> <li>\u00e9crire une fonction <code>rendu_aux</code> dont la signature est donn\u00e9e dans la cellule suivante.</li> </ul>"},{"location":"NSITerm/LP2/C1TD1.html#codage","title":"Codage","text":"<pre><code>def rendu_aux(v, sol, i):\n\"\"\"\n    v (entier): somme \u00e0 rendre;\n    sol (liste python): la solution\n    i (entier): index de la pi\u00e8ce \u00e0 tester\n    \"\"\"\n    if ... # Cas de base\n    ...\n    else:\n        ... # Cas r\u00e9cursifs\n</code></pre> <p>Rappel</p> <p>On ins\u00e8re (\u00e0 droite) une valeur dans une liste python en utilisant <code>append</code>. Exemple: <code>sol.append(100)</code>.</p>"},{"location":"NSITerm/LP2/C1TD1.html#tests","title":"Tests","text":"<p>Tester votre fonction</p> <pre><code>PIECES = [100, 50, 20, 10, 5, 2, 1]\nassert rendu_aux(0, [], 0) == []\nassert rendu_aux(37, [], 0) == [20, 10, 5, 2]\nassert rendu_aux(300, [], 0) == [100, 100, 100]\n</code></pre>"},{"location":"NSITerm/LP2/C1TD1C.html","title":"Le probl\u00e8me du rendu de monnaie","text":""},{"location":"NSITerm/LP2/C1TD1C.html#analyse-de-lenonce","title":"Analyse de l'\u00e9nonc\u00e9","text":"<p>Pour plus de lisibilit\u00e9, certaines variables sugg\u00e9r\u00e9es par l'\u00e9nonc\u00e9 sont renomm\u00e9es.</p> <pre><code>PIECES = [100, 50, 20, 10, 5, 2, 1] # syst\u00e8me monnaitaire canonique\n\n\ndef rendu_aux(somme_a_rendre, solution, i):\n    # Cas de base\n    if somme_a_rendre == 0:\n        return solution\n    # Cas r\u00e9cursifs\n    if somme_a_rendre &lt; PIECES[i]:\n        # On ne peut prendre la pi\u00e8ce, on essaie avec la suivante\n        return rendu_aux(somme_a_rendre, solution, i+1)\n    else:        \n        solution.append(PIECES[i]) # On prend la pi\u00e8ce...\n        # ... et on r\u00e9soud le pb avec somme_a_rendre - PIECES[i]\n        return rendu_aux(somme_a_rendre - PIECES[i], solution, i) \n</code></pre> <pre><code>rendu_aux(73, [], 0)\n</code></pre> <pre><code>[50, 20, 2, 1]\n</code></pre> <pre><code>rendu_aux(68, [], 0)\n</code></pre> <pre><code>[50, 10, 5, 2, 1]\n</code></pre> <pre><code>rendu_aux(100, [], 0)\n</code></pre> <pre><code>[100]\n</code></pre>"},{"location":"NSITerm/LP2/C1TD1C.html#autre-solution","title":"Autre solution","text":"<p>On remarque que l'appel de la fonction <code>rendu_aux</code> est assez lourd et que les deux derniers param\u00e8tres seront syst\u00e9matiquement <code>[]</code> et <code>0</code>. On pourrait alors simplifier l'appel avec:</p> <pre><code>def rendu(somme):\n\"\"\" r\u00e9soud r\u00e9cursivement le pb du rendu de monnaie\"\"\"\n\n    def rendu_aux(somme_a_rendre, solution, i):\n\"\"\" Une fonction auxiliaire\"\"\"\n        # Cas de base\n        if somme_a_rendre == 0:\n            return solution\n        # Cas r\u00e9cursifs\n        if somme_a_rendre &lt; PIECES[i]:\n            # On ne peut prendre la pi\u00e8ce, on essaie avec la suivante\n            return rendu_aux(somme_a_rendre, solution, i+1)\n        else:        \n            solution.append(PIECES[i]) # On prend la pi\u00e8ce...\n            # ... et on r\u00e9soud le pb avec somme_a_rendre - PIECES[i]\n            return rendu_aux(somme_a_rendre - PIECES[i], solution, i)\n\n    return rendu_aux(somme, [], 0)\n</code></pre> <pre><code># TESTS\nassert rendu(0) == []\nassert rendu(37) == [20, 10, 5, 2]\nassert rendu(300) == [100, 100, 100]\n</code></pre>"},{"location":"NSITerm/LP2/C1TD1Ex.html","title":"TD r\u00e9cursivit\u00e9: Rendu de monnaie","text":"<p>Pour travailler \u00e0 la maison, sans installation de Jupyter, ouvrir le notebook avec basthon, depuis cette adresse</p> <p>Le probl\u00e8me du rendu de monnaie est un probl\u00e8me d'algorithmique. Il s'\u00e9nonce de la fa\u00e7on suivante: \u00e9tant donn\u00e9 un syst\u00e8me de monnaie (pi\u00e8ces et billets), comment rendre une somme donn\u00e9e de fa\u00e7on optimale, c'est-\u00e0-dire avec le nombre minimal de pi\u00e8ces et billets ?</p> <p>Par exemple, la meilleure fa\u00e7on de rendre 7 euros est de rendre un billet de cinq et une pi\u00e8ce de deux, m\u00eame si d'autres fa\u00e7ons existent (rendre 7 pi\u00e8ces de un euro, par exemple). </p> <p>Cependant pour certains syst\u00e8mes de monnaie dits canoniques, l'algorithme glouton est optimal, c'est-\u00e0-dire qu'il suffit de rendre syst\u00e9matiquement la pi\u00e8ce ou le billet de valeur maximale \u2014 ce tant qu'il reste quelque chose \u00e0 rendre. C'est la m\u00e9thode employ\u00e9e en pratique, ce qui se justifie car la quasi-totalit\u00e9 des syst\u00e8mes ayant cours dans le monde sont canoniques. </p> <p>Source: wikipedia</p>"},{"location":"NSITerm/LP2/C1TD1Ex.html#modelisation-du-probleme","title":"Mod\u00e9lisation du probl\u00e8me","text":"<p>On consid\u00e8re un syst\u00e8me mon\u00e9taire canonique \\(S=\\{p_1, p_2, \\cdots, p_n\\}\\), avec \\(p_1&gt;p_2&gt;\\cdots &gt;p_n\\). On appelle \\(v\\) la valeur \u00e0 rendre et \\(sol\\) la solution du probl\u00e8me. Le probl\u00e8me du rendu de monnaie peut \u00eatre vu comme un probl\u00e8me de choix de pi\u00e8ces (billets) ou ... pas, suivant la valeur \u00e0 rendre. Si la valeur \\(v\\) \u00e0 rendre est nulle, on a termin\u00e9, il suffit de renvoyer la solution. Dans le cas contraire,  on compare \\(v\\) \u00e0 la valeur de la i-\u00e8me pi\u00e8ce \\(S\\left[i\\right]\\):  </p> <ul> <li>si la valeur \u00e0 rendre est plus petite que la valeur de la i-\u00e8me pi\u00e8ce, on ne peut \u00e9videmment pas choisir cette derni\u00e8re; il faudra essayer de rendre la monnaie avec la prochaine pi\u00e8ce;</li> <li>sinon, la pi\u00e8ce peut \u00eatre choisie et doit \u00eatre ajout\u00e9e \u00e0 la solution et on doit essayer de rendre la monnaie  sur \\(v-S\\left[ i\\right]\\).</li> </ul> <p>A faire</p> <p>On adopte une d\u00e9marche r\u00e9cursive pour r\u00e9soudre ce probl\u00e8me. En utilisant la description pr\u00e9c\u00e9dente:  </p> <ul> <li>identifier le cas de base et le ou les cas r\u00e9cursifs;</li> <li>coder une fonction <code>rendu</code> dont la signature est donn\u00e9e dans la cellule suivante.</li> </ul>"},{"location":"NSITerm/LP2/C1TD1Ex.html#codage","title":"Codage","text":"<pre><code>def rendu(v, sol, i):\n\"\"\"\n    v (entier): valeur \u00e0 rendre;\n    sol (liste python): la solution\n    i (entier): index de la pi\u00e8ce \u00e0 tester\n    \"\"\"\n    if ... # Cas de base\n    ...\n    else:\n        ... # Cas r\u00e9cursifs\n</code></pre>"},{"location":"NSITerm/LP2/C1TD1Ex.html#tests","title":"Tests","text":"<p>Tester votre fonction</p> <pre><code>S = [500, 200, 100, 50, 20, 10, 5, 2, 1]\nassert rendu(0, [], 0) == []\nassert rendu(37, [], 0) == [20, 10, 5, 2]\nassert rendu(300, [], 0) == [200, 100]\n</code></pre>"},{"location":"NSITerm/LP2/C2E2.html","title":"Mise au point de programme","text":""},{"location":"NSITerm/LP2/C2E2.html#des-fonctions-mal-ecrites","title":"Des fonctions mal \u00e9crites","text":"<p>Soient les trois fonctions suivantes:</p> <pre><code>def f1(x):\n    return str(2 * 3.14 * x) + ' cm'\n\ndef f2(p):\n    x, y, z = p\n    return x**2 + y**2 == z**2\n\ndef f3(d, s):\n    if s != 'nsi':\n        d[s] += 1\n    return d\n</code></pre> <p>R\u00e9sultats de quelques appels</p> <pre><code>f1(3)\n</code></pre> <pre><code>'18.84 cm'\n</code></pre> <pre><code>f2((3, 4, 5))\n</code></pre> <pre><code>True\n</code></pre> <pre><code>f2((1, 5, 9))\n</code></pre> <pre><code>False\n</code></pre> <pre><code>f3({'math': 10, 'ses': 12.5, 'nsi': 6}, 'ses')\n</code></pre> <pre><code>{'math': 10, 'ses': 13.5, 'nsi': 6}\n</code></pre> <pre><code>\n</code></pre> <p>\u00c0 faire</p> <p>Apr\u00e8s une analyse rapide du code des trois fonctions pr\u00e9c\u00e9dentes et en tenant compte des conseils formul\u00e9s en cours, proc\u00e9dez aux am\u00e9liorations n\u00e9cessaires.</p>"},{"location":"NSITerm/LP2/C2E2.html#attention-aux-effets-de-bord","title":"Attention aux effets de bord","text":"<p>Consid\u00e9rons le probl\u00e8me simple suivant: transformer un tableau de tableaux (matrice) en un tableau. En d'autres termes, passer de:  </p> <pre><code>mat = [[1, 2, 3], \n       [4, 5, 6,], \n       [7, 8, 9]]\n</code></pre> <p>\u00e0 </p> <pre><code>t = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n</code></pre> <p>Un \u00e9l\u00e8ve de terminale NSI*  propose:</p> <pre><code>from typing import List\n\n\ndef mat2tab(m: List[List[int, int, int]]) -&gt; list:\n\"\"\"\n    renvoie la matrice m sous la forme d'un tableau\n    m: tableau de tableaux d'entiers\n    \"\"\"\n    tab = m[0] # on r\u00e9cup\u00e8re l'int\u00e9gralit\u00e9 du 1er sous tableau\n    for t in m[1:]:\n        tab += t # on va concat\u00e9ner avec les sous tableaux restants\n    return tab\n</code></pre> <pre><code>mat = [[1, 2, 3], \n       [4, 5, 6,], \n       [7, 8, 9]]\nt = mat2tab(mat)\nprint(t)\n</code></pre> <pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9]\n</code></pre> <p>La fonction est document\u00e9e et annot\u00e9e. Le r\u00e9sultat correspond \u00e0 ce qui \u00e9tait attendu. Malheureusement, un effet non souhait\u00e9 s'est produit.</p> <pre><code>print(mat)\n</code></pre> <pre><code>[[1, 2, 3, 4, 5, 6, 7, 8, 9], [4, 5, 6], [7, 8, 9]]\n</code></pre> <p>Identifiez le probl\u00e8me et corrigez le.</p>"},{"location":"NSITerm/LP2/C2E2P.html","title":"C2E2P","text":"<pre><code>from typing import List\n\n\ndef mat2tab(m: List[List[int]]) -&gt; list:\n\"\"\"\n    renvoie la matrice m sous la forme d'un tableau\n    m: tableau de tableaux d'entiers\n    \"\"\"\n    tab = m[0] # on r\u00e9cup\u00e8re l'int\u00e9gralit\u00e9 du 1er sous tableau\n    for t in m[1:]:\n        tab += t # on va concat\u00e9ner avec les sous tableaux restants\n    return tab\n</code></pre> <pre><code>!mypy mestests.py\n</code></pre> <pre><code>\u001b[1m\u001b[32mSuccess: no issues found in 1 source file\u001b[m\n</code></pre> <pre><code>mat = [[1, 2, 3], \n       [4, 5, 6,], \n       [7, 8, 9]]\nt = mat2tab(mat)\nprint(t)\n</code></pre> <pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9]\n</code></pre> <pre><code>import ipytest\nipytest.autoconfig()\n</code></pre> <pre><code>%%ipytest\nimport pytest\nfrom random import randint\nfrom tri import  tri_insertion\n\n\ndef test_tab_neg_1():\n    t = [-1,-1,-1]\n    tri_insertion(t)\n    assert  t == [-1,-1,-1]\n\ndef test_inverse_2():\n    t = [14,10,5,1]\n    tri_insertion(t)\n    assert  t == [1,5,10,14]\n\ndef test_vide_0():\n    with pytest.raises(ValueError):\n        tri_insertion([])\n\ndef test_deja_tri_3():\n    t = [1,2,3,4,5]\n    tri_insertion(t)\n    assert  t == [1,2,3,4,5]\n\ndef test_random_4():    \n    t = [randint(-20, 20) for _ in range(10)]\n    tri_insertion(t)\n    assert all(t[i] &lt;= t[i + 1] for i in range(9))\n\ndef test_en_place_5():\n    assert tri_insertion([1,2,3]) is None\n</code></pre> <pre><code>\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31mF\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                                                       [100%]\u001b[0m\n============================================= FAILURES =============================================\n\u001b[31m\u001b[1m___________________________________________ test_vide_0 ____________________________________________\u001b[0m\n\n    \u001b[94mdef\u001b[39;49;00m \u001b[92mtest_vide_0\u001b[39;49;00m():\n&gt;       \u001b[94mwith\u001b[39;49;00m pytest.raises(\u001b[96mValueError\u001b[39;49;00m):\n\u001b[1m\u001b[31mE       Failed: DID NOT RAISE &lt;class 'ValueError'&gt;\u001b[0m\n\n\u001b[1m\u001b[31m/tmp/ipykernel_7122/2745413413.py\u001b[0m:17: Failed\n===================================== short test summary info ======================================\nFAILED tmpguxs08cg.py::test_vide_0 - Failed: DID NOT RAISE &lt;class 'ValueError'&gt;\n\u001b[31m\u001b[31m\u001b[1m1 failed\u001b[0m, \u001b[32m5 passed\u001b[0m\u001b[31m in 0.76s\u001b[0m\u001b[0m\n</code></pre> <p>La fonction <code>f1</code> effectue la multiplication de \\(2\\times \\pi\\) avec le nombre pass\u00e9 en param\u00e8tre. On pourrait imaginer qu'elle effectue le calcul du p\u00e9rim\u00e8tre d'un cercle. D'o\u00f9, la proposition:</p> <pre><code>def perimetre(r: float) -&gt; str:\n\"\"\"\n    Calcul le p\u00e9rim\u00e8tre d'un cercle de rayon r et renvoie le r\u00e9sultat sous\n    forme d'une cha\u00eene de caract\u00e8re.\n    r: rayon (float), d\u00e9cimal positif\n    \"\"\"\n    assert r &gt; 0, \"Erreur, r &gt; 0\"\n\n    return str(2 * 3.14 * r) + ' cm'\n</code></pre> <pre><code>perimetre(3)\n</code></pre> <pre><code>'18.84 cm'\n</code></pre> <p>La fonction <code>f2</code> v\u00e9rifie si la somme du carr\u00e9 de deux nombres est \u00e9gal au carr\u00e9 d'un troisi\u00e8me. On peut supposer qu'il v\u00e9rifie si un triangle de c\u00f4t\u00e9s \\(a, b, c\\) est rectangle en testant l'\u00e9galit\u00e9 \\(a^2+b^2=c^2\\) (Pythagore). </p> <pre><code>from typing import Tuple\n\n\ndef est_rectangle(cotes: Tuple[int, int, int]) -&gt; bool:\n\"\"\"\n    V\u00e9rifie si un triangle rectangle. Renvoie True si oui ou False sinon.\n    cotes: tuple d'entiers positifs\n    \"\"\"\n    a, b, c = cotes\n    assert a &gt; 0 and b &gt; 0 and c &gt; 0, \"Erreur a,b,c positifs\"\n\n    return a**2 + b**2 == c**2\n</code></pre> <pre><code>est_rectangle((3, 4, 5))\n</code></pre> <pre><code>True\n</code></pre> <pre><code>est_rectangle(3, 4, 5)\n</code></pre> <pre><code>---------------------------------------------------------------------------\n\nTypeError                                 Traceback (most recent call last)\n\n/tmp/ipykernel_7122/681810540.py in &lt;module&gt;\n----&gt; 1 est_rectangle(3, 4, 5)\n\n\nTypeError: est_rectangle() takes 1 positional argument but 3 were given\n</code></pre> <pre><code>est_rectangle((1, 7, 5))\n</code></pre> <pre><code>False\n</code></pre> <p>La fonction <code>f3</code> augmente la valeur associ\u00e9e \u00e0 la cl\u00e9 pass\u00e9e en deuxi\u00e8me param\u00e8tre de 1, sauf si cette cl\u00e9 vaut <code>nsi</code>. Le code propos\u00e9 modifie une entr\u00e9e du dictionnaire, il serait souhaitable de v\u00e9rifier que celle-ci existe !</p> <pre><code>def augmente_note(releve: dict, matiere: str) -&gt; None:\n\"\"\"\n    Augmente la valeur associ\u00e9e \u00e0 la cl\u00e9 mati\u00e8re de 1, sauf si celle-ci vaut 'nsi'.\n    \"\"\"\n    assert matiere in releve, \"Erreur: mati\u00e8re absente\"\n\n    if matiere != 'nsi':\n        releve[matiere] += 1    \n</code></pre> <pre><code>r1 = {'math': 10, 'ses': 12.5, 'nsi': 6}\naugmente_note(r1, 'ses')\nprint(r1)\n</code></pre> <pre><code>{'math': 10, 'ses': 13.5, 'nsi': 6}\n</code></pre> <pre><code>augmente_note(r1, 'anglais')\n</code></pre> <pre><code>---------------------------------------------------------------------------\n\nAssertionError                            Traceback (most recent call last)\n\n/tmp/ipykernel_7122/3385823553.py in &lt;module&gt;\n----&gt; 1 augmente_note(r1, 'anglais')\n\n\n/tmp/ipykernel_7122/1063914476.py in augmente_note(releve, matiere)\n      3     Augmente la valeur associ\u00e9e \u00e0 la cl\u00e9 mati\u00e8re de 1, sauf si celle-ci vaut 'nsi'.\n      4     \"\"\"\n----&gt; 5     assert matiere in releve, \"Erreur: mati\u00e8re absente\"\n      6 \n      7     if matiere != 'nsi':\n\n\nAssertionError: Erreur: mati\u00e8re absente\nassert 'anglais' in {'math': 10, 'nsi': 6, 'ses': 13.5}\n</code></pre> <pre><code>augmente_note(r1, 'nsi')\nprint(r1)\n</code></pre> <pre><code>{'math': 10, 'ses': 13.5, 'nsi': 6}\n</code></pre> <pre><code>from typing import List\n\n\ndef mat2tab_v2(m: List[list]) -&gt; list:\n\"\"\"\n    renvoie la matrice m sous la forme d'un tableau\n    m: tableau de tableaux d'entiers\n    \"\"\"\n    nb_element = len(m)\n    a_plat = []\n    for i in range(nb_element):\n        for valeur in m[i]:\n            a_plat.append(valeur)\n    return a_plat\n</code></pre> <pre><code>mat = [[1, 2, 3], \n       [4, 5, 6,], \n       [7, 8, 9]]\nt = mat2tab_v2(mat)\nprint(t)\n</code></pre> <pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9]\n</code></pre> <pre><code>print(mat)\n</code></pre> <pre><code>[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n</code></pre> <p>... ou de mani\u00e8re plus concise, en utilisant une compr\u00e9hension de liste:</p> <pre><code>def mat2tab_v3(m: List[list]) -&gt; list:\n\"\"\"\n    renvoie la matrice m sous la forme d'un tableau\n    m: tableau de tableaux d'entiers\n    \"\"\"\n    return [valeur for i in range(len(m)) for valeur in m[i]]\n</code></pre> <pre><code>mat = [[1, 2, 3], \n       [4, 5, 6,], \n       [7, 8, 9]]\nt = mat2tab_v3(mat)\nprint(t)\n</code></pre> <pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9]\n</code></pre> <pre><code>print(mat)\n</code></pre> <pre><code>[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n</code></pre>"},{"location":"NSITerm/LP2/C3A1.html","title":"Activit\u00e9: cr\u00e9er son propre module","text":"<p>Comme il a \u00e9t\u00e9 pr\u00e9cis\u00e9 dans l'introduction du TP, il est important de d\u00e9couper son code en modules afin de pouvoir le r\u00e9utiliser facilement et d'en assurer une maintenance ais\u00e9e.  </p>"},{"location":"NSITerm/LP2/C3A1.html#quest-ce-quun-module","title":"Qu'est-ce qu'un module?","text":"<p>D\u00e9finition</p> <p>Un module est un fichier texte, d'extension <code>.py</code> (ou un fichier binaire <code>.pyc</code> qui ne sera pas abord\u00e9 ici). Il peut contenir des variables, des fonctions des classes ou d'autres modules.  </p> <p>Une bonne pratique en python consiste \u00e0 placer des commentaires (docstring) au d\u00e9but:  </p> <ul> <li>des fichiers, pour informer l'utilisateur des diverses fonctionnalit\u00e9s du module;</li> <li>des fonctions afin d'en donner les sp\u00e9cifications.  </li> </ul>"},{"location":"NSITerm/LP2/C3A1.html#ou-placer-un-module-personnel","title":"O\u00f9 placer un module personnel?","text":"<p>Le plus simple, mais pas forc\u00e9ment le plus recommand\u00e9, est de placer le module dans le m\u00eame dossier que les programmes qui en feront appel.</p> <p>A faire</p> <ol> <li>Cr\u00e9er un module <code>pile</code>, correctement document\u00e9, qui regroupe l'impl\u00e9mentation des op\u00e9rations courantes  sur une structure de donn\u00e9e de type pile (voir chap. IV).</li> <li>En faire de m\u00eame en cr\u00e9ant un module <code>file</code>.</li> <li>Cr\u00e9er une file nomm\u00e9e <code>f</code> puis enfiler successivement les valeurs 3, 9 et 27. V\u00e9rifier si la file f est  vide. Enfin, d\u00e9filer <code>f</code> 4 fois de suite. Les r\u00e9sultats sont-ils coh\u00e9rents?</li> </ol> <pre><code>import pile, file\n\n\n# Tests - A compl\u00e9ter\n</code></pre>"},{"location":"NSITerm/LP2/C3A1.html#comment-creer-un-package","title":"Comment cr\u00e9er un package?","text":"<p>D\u00e9finition</p> <p>Un package ou librairie en fran\u00e7ais est un dossier sp\u00e9cial dans lequel on regroupe des modules.</p> <p>Supposons que l'on dispose de 4 modules nomm\u00e9s <code>algo</code>, <code>langage</code>, <code>machine</code> et <code>information</code>. On souhaite cr\u00e9er un package <code>nsi</code> qui regroupe ces 4 modules. On proc\u00e8de de la mani\u00e8re suivante:  </p> <ul> <li>cr\u00e9er dans le dossier o\u00f9 se situe le programme appelant un dossier nomm\u00e9 <code>nsi</code> (en ligne de commande <code>mkdir nsi</code>);</li> <li>cr\u00e9er dans le dossier <code>nsi</code> un fichier vide <code>__init__.py</code> (en ligne de commande <code>touch nsi/__init__.py</code>, attention \u00e0 la pr\u00e9sence des 2 caract\u00e8res 'soulign\u00e9' en d\u00e9but et fin de nom);</li> <li>d\u00e9placer les 4 fichiers <code>py</code> des modules dans le dossier <code>nsi</code>.  </li> </ul> <p>Pour utiliser une fonction <code>tri</code> du module <code>algo</code>, on utilisera la syntaxe:  </p> <p><pre><code>from nsi.algo import tri\n</code></pre> ou <code>from nsi.algo import *</code> (d\u00e9conseill\u00e9)</p> <p>A faire</p> <ol> <li>R\u00e9aliser un package nomm\u00e9 <code>sdd</code> constitu\u00e9 des modules <code>pile</code> et <code>file</code>.</li> <li>Tester le bon fonctionnement des imports en indiquant les commandes utilis\u00e9es dans la cellule suivante.</li> </ol>"},{"location":"NSITerm/LP2/C3TP1-2.html","title":"M\u00e9thodes de programmation modulaire","text":""},{"location":"NSITerm/LP2/C3TP1-2.html#avantages-dune-programmation-modulaire","title":"Avantages d'une programmation modulaire","text":"En premi\u00e8re on a introduit les fonctions en r\u00e9ponse \u00e0 la r\u00e9p\u00e9tition de code au sein d'un programme. Cependant, la r\u00e9p\u00e9tition des fonctions entre programmes est encore possible. Une solution est de regrouper ces fonctions et classes dans un module. On d\u00e9compose ainsi une application en module(s) qui peuvent \u00eatre d\u00e9velopp\u00e9s ind\u00e9pendamment et r\u00e9utilis\u00e9s dans d'autres applications.    Par ailleurs, cette organisation limite ou supprime les doublons de code, facilitant ainsi la maintenance (un bug est corrig\u00e9 une fois).  Enfin, la programmation modulaire permet d'une certaine fa\u00e7on de cacher des d\u00e9tails d'impl\u00e9mentation, l'interaction utilisateur-module se faisant par le biais de l'interface.  Il s'agira dans l'activit\u00e9 1, de se placer en temps qu'utilisateur de modules en se r\u00e9f\u00e9rant \u00e0 leur API, puis en temps que concepteur d'un module simple, dans la suivante."},{"location":"NSITerm/LP2/C3TP1-2.html#tp-1-traitement-de-donnees-au-format-json","title":"TP 1: traitement de donn\u00e9es au format JSON","text":""},{"location":"NSITerm/LP2/C3TP1-2.html#preambule-le-format-json","title":"Pr\u00e9ambule: le format json","text":"<p>Un fichier <code>json</code> est un fichier texte contenant de l'information structur\u00e9e, tr\u00e8s utilis\u00e9 sur internet. Cette structuration est assur\u00e9e par des scalaires (nombre, bool\u00e9en, cha\u00eene) et des types d'\u00e9l\u00e9ments tels que:  </p> <ul> <li>des paires cl\u00e9/valeur (qui rappelle les dictionnaires de python);</li> <li>de listes ordonn\u00e9es de valeurs.  </li> </ul> <p>Voir json sur wikipedia. Voici un exemple de donn\u00e9es au format <code>json</code>: <pre><code>{\n\"menu\": {\n\"id\": \"file\",\n\"value\": \"File\",\n\"popup\": {\n\"menuitem\": [\n{ \"value\": \"New\", \"onclick\": \"CreateNewDoc()\" },\n{ \"value\": \"Open\", \"onclick\": \"OpenDoc()\" },\n{ \"value\": \"Close\", \"onclick\": \"CloseDoc()\" }\n]\n}\n}\n}\n</code></pre></p>"},{"location":"NSITerm/LP2/C3TP1-2.html#travail-sur-un-fichier-reel","title":"Travail sur un fichier r\u00e9el","text":"<p>Le site openweathermap permet d'obtenir des informations m\u00e9t\u00e9o dans beaucoup de villes du monde entier. Pour obtenir le temps dans une ville donn\u00e9e, il faut fournir un identifiant unique ou la paire lattitude/longitude. </p> <p>Openweathermap propose un fichier <code>json</code> contenant les informations pr\u00e9c\u00e9dentes. Ce fichier a \u00e9t\u00e9 t\u00e9l\u00e9charg\u00e9 et une version zipp\u00e9e est fournie <code>city.zip</code>.  </p> <p>\u00c0 faire</p> <p>D\u00e9zipper ce fichier et retrouver ce notebook.</p> <p>ATTENTION</p> <p>Ne pas double-cliquer sur le fichier se situant dans le dossier <code>json</code>, pour ouvrir avec l'application par d\u00e9faut. En effet, ce fichier a une taille de 33 Mo et plus de 2 millions de lignes!!</p> <p>On pr\u00e9f\u00e8rera un traitement en ligne de commande pour voir la structure du fichier. On rappelle que l'utilisation de la ligne de commande est possible dans une cellule <code>jupyter notebook</code>, il suffit de pr\u00e9fixer la commande avec le caract\u00e8re <code>!</code>.  </p> <p>Enfin, pour plus de pr\u00e9cisions sur une commande du shell, ne pas h\u00e9siter \u00e0 consulter le manuel (exemple: <code>!man sed</code>).</p> <p>\u00c0 faire</p> <p>Que r\u00e9alise la commande suivante ?</p> <pre><code>!cat ./json/city.list.json | wc -l\n</code></pre> <pre><code>2095791\n</code></pre> <p>\u00c0 faire</p> <p>Que r\u00e9alise la commande suivante ?</p> <pre><code>!cat ./json/city.list.json | grep -n \"RE\" | head -n 2\n</code></pre> <pre><code>238646:    \"country\": \"RE\",\n238656:    \"country\": \"RE\",\n</code></pre> <p>Enfin, pour avoir une meilleure id\u00e9e du contenu du fichier, on affiche quelques lignes avec l'\u00e9diteur <code>sed</code> disponible avec le shell.</p> <pre><code># Affichage de 20 lignes\n!sed -n \"238642,+20p\" ./json/city.list.json\n</code></pre> <pre><code>  {\n    \"id\": 935146,\n    \"name\": \"Les Trois-Bassins\",\n    \"state\": \"\",\n    \"country\": \"RE\",\n    \"coord\": {\n      \"lon\": 55.299999,\n      \"lat\": -21.1\n    }\n  },\n  {\n    \"id\": 935210,\n    \"name\": \"Salazie\",\n    \"state\": \"\",\n    \"country\": \"RE\",\n    \"coord\": {\n      \"lon\": 55.539001,\n      \"lat\": -21.02734\n    }\n  },\n  {\n</code></pre>"},{"location":"NSITerm/LP2/C3TP1-2.html#les-objectifs-du-tp","title":"Les objectifs du TP","text":"<p>Le principal objectif de ce premier TP est d'exploiter un module fourni par la biblioth\u00e8que standard de python. Il sera tr\u00e8s important de savoir utiliser la documentation du module afin d'extraire du fichier <code>json</code> fourni, uniquement les informations concernant les villes de la R\u00e9union mais aussi de sauvegarder ces derni\u00e8res dans un fichier au format json. Le fichier obtenu devrait \u00eatre nettement moins lourd et plus facilement utilisable (une soixantaine d'entr\u00e9es au lieu de plus de 200 000 dans le fichier original).  </p> Rappels de 1re <p>Pour importer un module, on peut utiliser la syntaxe <code>import mon_super_module</code>; ce qui nous obligera \u00e0  pr\u00e9fixer chaque appel de fonction par <code>mon_super_module.ma_fonction()</code>. On peut raccourcir les appels en  utilisant un alias lors de l'import: <code>import mon_super_module as msp</code>, on appelle alors  <code>msp.ma_fonction()</code>. Enfin, on peut cibler une fonction pr\u00e9cise \u00e0 importer. Dans ce cas, on utilisera la syntaxe: <code>from  mon_super_module import ma_fonction</code> et l'appel se fera directement par <code>ma_fonction()</code> sans pr\u00e9fixe.</p>"},{"location":"NSITerm/LP2/C3TP1-2.html#travail-a-realiser","title":"Travail \u00e0 r\u00e9aliser","text":"<p>A faire</p> <p>Prendre connaissance de l'api du module <code>json</code>, en ligne sur  python.org ou \u00e0 d\u00e9faut dans une cellule de Jupyter en  utilisant les fonctions <code>dir</code> et <code>help</code>.</p> <pre><code>import json\n\n\ndir(json)\n</code></pre> <p>A faire</p> <p>Quelles sont les deux fonctions du module <code>json</code> susceptibles de nous int\u00e9resser en vue d'une ouverture et  d'une \u00e9criture de fichiers json ?  Pour obtenir de l'aide sur une fonction pr\u00e9sente dans un module on  utilise la fonction <code>help</code> (par exemple <code>help(json.xxxx)</code> o\u00f9 <code>xxxx</code> est le nom d'une fonction du module  <code>json</code>).  </p> <pre><code># R\u00e9ponse\n</code></pre> <p>A faire</p> <p>On ne va extraire que les informations concernant les villes de la R\u00e9union. Quelle fonction doit-on utiliser  pour transformer le fichier <code>city.list.json</code> pr\u00e9sent sur le disque, en une structure de donn\u00e9e utilisable en python ? R\u00e9aliser cette  op\u00e9ration en compl\u00e9tant le code ci-dessous.   </p> <pre><code>import json\n\n# Cr\u00e9ation d'un objet fichier f li\u00e9 \u00e0 city.list.json\nwith open('./json/city.list.json', 'r') as f:\n    #A compl\u00e9ter (supprimer la ligne 'pass')\n    pass\n</code></pre> <p>A faire</p> <p>Quelle est le type de la structure de donn\u00e9e obtenue et combien d'entr\u00e9es poss\u00e8de-t-elle? </p> <pre><code># R\u00e9ponse\n</code></pre> <p>A faire</p> <p>Afficher la premi\u00e8re valeur de cette structure de donn\u00e9e.</p> <pre><code># R\u00e9ponse (donner la ligne de code + r\u00e9sultat)\n</code></pre> <p>A faire</p> <p>Proposer un code permettant de sauver les entr\u00e9es qui ne concernent que la R\u00e9union dans une liste python.</p> <pre><code># R\u00e9ponse\nvilles_RE = []\n# \u00c0 compl\u00e9ter\n</code></pre> <p>A faire</p> <p>Combien d'entr\u00e9es poss\u00e8de cette nouvelle liste ?</p> <pre><code># R\u00e9ponse\n</code></pre> <p>A faire</p> <p>Quelle fonction devra-t-on utilser pour sauver cette liste dans un fichier <code>json</code> ?</p> <pre><code># R\u00e9ponse\n</code></pre> <p>A faire</p> <p>Proposer un code qui r\u00e9alise la sauvergarde la liste <code>villes_RE</code> dans un fichier <code>json</code> <code>villes_RE.json</code>.</p> <pre><code>#R\u00e9ponse\n\n# Cr\u00e9ation d'un objet fichier f li\u00e9 \u00e0 villes_RE.json\nwith open(\"./json/villes_RE.json\", \"w\") as f:\n    #\u00e0 compl\u00e9ter ici\n    pass           \n</code></pre>"},{"location":"NSITerm/LP2/C3TP1.html","title":"M\u00e9thodes de programmation modulaire","text":""},{"location":"NSITerm/LP2/C3TP1.html#avantages-dune-programmation-modulaire","title":"Avantages d'une programmation modulaire","text":"En premi\u00e8re on a introduit les fonctions en r\u00e9ponse \u00e0 la r\u00e9p\u00e9tition de code au sein d'un programme. Cependant, la r\u00e9p\u00e9tition des fonctions entre programmes est encore possible. Une solution est de regrouper ces fonctions et classes dans un module. On d\u00e9compose ainsi une application en module(s) qui peuvent \u00eatre d\u00e9velopp\u00e9s ind\u00e9pendamment et r\u00e9utilis\u00e9s dans d'autres applications.    Par ailleurs, cette organisation limite ou supprime les doublons de code, facilitant ainsi la maintenance (un bug est corrig\u00e9 une fois).  Enfin, la programmation modulaire permet d'une certaine fa\u00e7on de cacher des d\u00e9tails d'impl\u00e9mentation, l'interaction utilisateur-module se faisant par le biais de l'interface.  Il s'agira dans le TP, de se placer en temps qu'utilisateur de modules en se r\u00e9f\u00e9rant \u00e0 leur API, puis en temps que concepteur d'un module simple, dans l'activit\u00e9."},{"location":"NSITerm/LP2/C3TP1.html#tp-traitement-de-donnees-au-format-json","title":"TP: traitement de donn\u00e9es au format JSON","text":""},{"location":"NSITerm/LP2/C3TP1.html#preambule-le-format-json","title":"Pr\u00e9ambule: le format json","text":"<p>Un fichier <code>json</code> est un fichier texte contenant de l'information structur\u00e9e, tr\u00e8s utilis\u00e9 sur internet. Cette structuration est assur\u00e9e par des scalaires (nombre, bool\u00e9en, cha\u00eene) et des types d'\u00e9l\u00e9ments tels que:  </p> <ul> <li>des paires cl\u00e9/valeur (qui rappelle les dictionnaires de python);</li> <li>de listes ordonn\u00e9es de valeurs.  </li> </ul> <p>Voir json sur wikipedia. Voici un exemple de donn\u00e9es au format <code>json</code>: <pre><code>{\n\"menu\": {\n\"id\": \"file\",\n\"value\": \"File\",\n\"popup\": {\n\"menuitem\": [\n{ \"value\": \"New\", \"onclick\": \"CreateNewDoc()\" },\n{ \"value\": \"Open\", \"onclick\": \"OpenDoc()\" },\n{ \"value\": \"Close\", \"onclick\": \"CloseDoc()\" }\n]\n}\n}\n}\n</code></pre></p>"},{"location":"NSITerm/LP2/C3TP1.html#travail-sur-un-fichier-reel","title":"Travail sur un fichier r\u00e9el","text":"<p>Le site openweathermap permet d'obtenir des informations m\u00e9t\u00e9o dans beaucoup de villes du monde entier. Pour obtenir le temps dans une ville donn\u00e9e, il faut fournir un identifiant unique ou la paire lattitude/longitude. </p> <p>Openweathermap propose un fichier <code>json</code> contenant les informations pr\u00e9c\u00e9dentes. Ce fichier a \u00e9t\u00e9 t\u00e9l\u00e9charg\u00e9 et une version zipp\u00e9e est fournie <code>city.zip</code>.  </p> <p>\u00c0 faire</p> <p>D\u00e9zipper ce fichier et retrouver ce notebook.</p> <p>ATTENTION</p> <p>Ne pas double-cliquer sur le fichier se situant dans le dossier <code>json</code>, pour ouvrir avec l'application par d\u00e9faut. En effet, ce fichier a une taille de 33 Mo et plus de 2 millions de lignes!!</p> <p>On pr\u00e9f\u00e8rera un traitement en ligne de commande pour voir la structure du fichier. On rappelle que l'utilisation de la ligne de commande est possible dans une cellule <code>jupyter notebook</code>, il suffit de pr\u00e9fixer la commande avec le caract\u00e8re <code>!</code>.  </p> <p>Enfin, pour plus de pr\u00e9cisions sur une commande du shell, ne pas h\u00e9siter \u00e0 consulter le manuel (exemple: <code>!man sed</code>).</p> <p>\u00c0 faire</p> <p>Que r\u00e9alise la commande suivante ?</p> <pre><code>!cat ./json/city.list.json | wc -l\n</code></pre> <pre><code>2095791\n</code></pre> <p>\u00c0 faire</p> <p>Que r\u00e9alise la commande suivante ?</p> <pre><code>!cat ./json/city.list.json | grep -n \"RE\" | head -n 2\n</code></pre> <pre><code>238646:    \"country\": \"RE\",\n238656:    \"country\": \"RE\",\n</code></pre> <p>Enfin, pour avoir une meilleure id\u00e9e du contenu du fichier, on affiche quelques lignes avec l'\u00e9diteur <code>sed</code> disponible avec le shell.</p> <pre><code># Affichage de 20 lignes\n!sed -n \"238642,+20p\" ./json/city.list.json\n</code></pre> <pre><code>  {\n    \"id\": 935146,\n    \"name\": \"Les Trois-Bassins\",\n    \"state\": \"\",\n    \"country\": \"RE\",\n    \"coord\": {\n      \"lon\": 55.299999,\n      \"lat\": -21.1\n    }\n  },\n  {\n    \"id\": 935210,\n    \"name\": \"Salazie\",\n    \"state\": \"\",\n    \"country\": \"RE\",\n    \"coord\": {\n      \"lon\": 55.539001,\n      \"lat\": -21.02734\n    }\n  },\n  {\n</code></pre>"},{"location":"NSITerm/LP2/C3TP1.html#les-objectifs-du-tp","title":"Les objectifs du TP","text":"<p>Le principal objectif de ce TP est d'exploiter un module fourni par la biblioth\u00e8que standard de python. Il sera tr\u00e8s important de savoir utiliser la documentation du module afin d'extraire du fichier <code>json</code> fourni, uniquement les informations concernant les villes de la R\u00e9union mais aussi de sauvegarder ces derni\u00e8res dans un fichier au format json. Le fichier obtenu devrait \u00eatre nettement moins lourd et plus facilement utilisable (une soixantaine d'entr\u00e9es au lieu de plus de 200 000 dans le fichier original).  </p> Rappels de 1re <p>Pour importer un module, on peut utiliser la syntaxe <code>import mon_super_module</code>; ce qui nous obligera \u00e0  pr\u00e9fixer chaque appel de fonction par <code>mon_super_module.ma_fonction()</code>. On peut raccourcir les appels en  utilisant un alias lors de l'import: <code>import mon_super_module as msp</code>, on appelle alors  <code>msp.ma_fonction()</code>. Enfin, on peut cibler une fonction pr\u00e9cise \u00e0 importer. Dans ce cas, on utilisera la syntaxe: <code>from  mon_super_module import ma_fonction</code> et l'appel se fera directement par <code>ma_fonction()</code> sans pr\u00e9fixe.</p>"},{"location":"NSITerm/LP2/C3TP1.html#travail-a-realiser","title":"Travail \u00e0 r\u00e9aliser","text":"<p>A faire</p> <p>Prendre connaissance de l'api du module <code>json</code>, en ligne sur  python.org ou \u00e0 d\u00e9faut dans une cellule de Jupyter en  utilisant les fonctions <code>dir</code> et <code>help</code>.</p> <pre><code>import json\n\n\ndir(json)\n</code></pre> <p>A faire</p> <p>Quelles sont les deux fonctions du module <code>json</code> susceptibles de nous int\u00e9resser en vue d'une ouverture et  d'une \u00e9criture de fichiers json ?  Pour obtenir de l'aide sur une fonction pr\u00e9sente dans un module on  utilise la fonction <code>help</code> (par exemple <code>help(json.xxxx)</code> o\u00f9 <code>xxxx</code> est le nom d'une fonction du module  <code>json</code>).  </p> <pre><code># R\u00e9ponse\n</code></pre> <p>A faire</p> <p>On ne va extraire que les informations concernant les villes de la R\u00e9union. Quelle fonction doit-on utiliser  pour transformer le fichier <code>city.list.json</code> pr\u00e9sent sur le disque, en une structure de donn\u00e9e utilisable en python ? R\u00e9aliser cette  op\u00e9ration en compl\u00e9tant le code ci-dessous.   </p> <pre><code>import json\n\n# Cr\u00e9ation d'un objet fichier f li\u00e9 \u00e0 city.list.json\nwith open('./json/city.list.json', 'r') as f:\n    #A compl\u00e9ter (supprimer la ligne 'pass')\n    pass\n</code></pre> <p>A faire</p> <p>Quelle est le type de la structure de donn\u00e9e obtenue et combien d'entr\u00e9es poss\u00e8de-t-elle? </p> <pre><code># R\u00e9ponse\n</code></pre> <p>A faire</p> <p>Afficher la premi\u00e8re valeur de cette structure de donn\u00e9e.</p> <pre><code># R\u00e9ponse (donner la ligne de code + r\u00e9sultat)\n</code></pre> <p>A faire</p> <p>Proposer un code permettant de sauver les entr\u00e9es qui ne concernent que la R\u00e9union dans une liste python.</p> <pre><code># R\u00e9ponse\nvilles_RE = []\n# \u00c0 compl\u00e9ter\n</code></pre> <p>A faire</p> <p>Combien d'entr\u00e9es poss\u00e8de cette nouvelle liste ?</p> <pre><code># R\u00e9ponse\n</code></pre> <p>A faire</p> <p>Quelle fonction devra-t-on utilser pour sauver cette liste dans un fichier <code>json</code> ?</p> <pre><code># R\u00e9ponse\n</code></pre> <p>A faire</p> <p>Proposer un code qui r\u00e9alise la sauvergarde la liste <code>villes_RE</code> dans un fichier <code>json</code> <code>villes_RE.json</code>.</p> <pre><code>#R\u00e9ponse\n\n# Cr\u00e9ation d'un objet fichier f li\u00e9 \u00e0 villes_RE.json\nwith open(\"./json/villes_RE.json\", \"w\") as f:\n    #\u00e0 compl\u00e9ter ici\n    pass           \n</code></pre>"},{"location":"NSITerm/LP2/C4A1.html","title":"M\u00e9thodes de programmation modulaire","text":""},{"location":"NSITerm/LP2/C4A1.html#avantages-dune-programmation-modulaire","title":"Avantages d'une programmation modulaire","text":"<p>En premi\u00e8re on a introduit les fonctions en r\u00e9ponse \u00e0 la r\u00e9p\u00e9tition de code au sein d'un programme. Cependant, la r\u00e9p\u00e9tition des fonctions entre programmes est encore possible. Une solution est de regrouper ces fonctions et classes dans un module. On d\u00e9compose ainsi une application en module(s) qui peuvent \u00eatre d\u00e9velopp\u00e9s ind\u00e9pendamment et r\u00e9utilis\u00e9s dans d'autres applications.  </p> <p>Par ailleurs, cette organisation limite ou supprime les doublons de code, facilitant ainsi la maintenance (un bug est corrig\u00e9 une fois).   </p> <p>Enfin, la programmation modulaire permet d'une certaine fa\u00e7on de cacher des d\u00e9tails d'impl\u00e9mentation, l'interaction utilisateur-module se faisant par le biais de l'interface.</p> <p>Il s'agira dans l'activit\u00e9 1, de se placer en temps qu'utilisateur de modules en se r\u00e9f\u00e9rant \u00e0 leur API, puis en temps que concepteur d'un module simple, dans la suivante.</p>"},{"location":"NSITerm/LP2/C4A1.html#activite-1-traitement-de-donnees-au-format-json","title":"Activit\u00e9 1: traitement de donn\u00e9es au format JSON","text":""},{"location":"NSITerm/LP2/C4A1.html#presentation-rapide-du-format-json","title":"Pr\u00e9sentation rapide du format json","text":"<p>Le fichier <code>json</code> est un fichier texte contenant de l'information structur\u00e9e, tr\u00e8s utilis\u00e9 sur internet. Cette structuration est assur\u00e9e par deux types d'\u00e9l\u00e9ments:  </p> <ul> <li>des paires cl\u00e9/valeur (qui rappelle les dictionnaires de python);</li> <li>de listes ordonn\u00e9es de valeurs.  </li> </ul> <p>Voir json sur wikipedia. Voici un exemple de donn\u00e9es au format <code>json</code>: <pre><code>{\n\"menu\": {\n\"id\": \"file\",\n\"value\": \"File\",\n\"popup\": {\n\"menuitem\": [\n{ \"value\": \"New\", \"onclick\": \"CreateNewDoc()\" },\n{ \"value\": \"Open\", \"onclick\": \"OpenDoc()\" },\n{ \"value\": \"Close\", \"onclick\": \"CloseDoc()\" }\n]\n}\n}\n}\n</code></pre></p>"},{"location":"NSITerm/LP2/C4A1.html#decouvrir-la-structure-dun-fichier-reel","title":"D\u00e9couvrir la structure d'un fichier r\u00e9el","text":"<p>Le site openweathermap permet d'obtenir des informations m\u00e9t\u00e9o dans beaucoup de villes du monde entier. Pour obtenir le temps dans une ville donn\u00e9e, il faut fournir un identifiant unique ou la paire lattitude/longitude. Openweathermap propose un fichier <code>json</code> contenant ces informations. Ce fichier est disponible en version compress\u00e9e, ici.  </p> <p>ATTENTION</p> <p>Ne pas double-cliquer pour ouvrir avec l'application par d\u00e9faut, le fichier a une taille de 33 Mo et plus de 2 millions de lignes!!    </p> <p>On pr\u00e9f\u00e8rera un traitement en ligne de commande pour voir la structure du fichier. On rappelle que l'utilisation de la ligne de commande est possible dans une cellule <code>jupyter notebook</code>, il suffit de pr\u00e9fixer la commande avec le caract\u00e8re <code>!</code>.  </p> <p>Enfin, pour plus de pr\u00e9cisions sur une commande <code>bash</code>, ne pas h\u00e9siter \u00e0 consulter le manuel (exemple: <code>man sed</code>).</p> <pre><code># Nombre de lignes\n!cat ./json/city.list.json | wc -l\n</code></pre> <pre><code>2095791\n</code></pre> <pre><code># 2 premi\u00e8res lignes concernant la R\u00e9union\n!cat ./json/city.list.json | grep -n \"RE\" | head -n 2\n</code></pre> <pre><code>238646:    \"country\": \"RE\",\n238656:    \"country\": \"RE\",\n</code></pre> <pre><code># Affichage de 20 lignes autour du 1er r\u00e9sultat\n!sed -n \"238642,+20p\" ./json/city.list.json\n</code></pre> <pre><code>  {\n    \"id\": 935146,\n    \"name\": \"Les Trois-Bassins\",\n    \"state\": \"\",\n    \"country\": \"RE\",\n    \"coord\": {\n      \"lon\": 55.299999,\n      \"lat\": -21.1\n    }\n  },\n  {\n    \"id\": 935210,\n    \"name\": \"Salazie\",\n    \"state\": \"\",\n    \"country\": \"RE\",\n    \"coord\": {\n      \"lon\": 55.539001,\n      \"lat\": -21.02734\n    }\n  },\n  {\n</code></pre>"},{"location":"NSITerm/LP2/C4A1.html#objectifs","title":"Objectifs","text":"<p>Le but de cette premi\u00e8re activit\u00e9 est d'extraire de ce fichier uniquement les informations concernant les villes de la R\u00e9union et de les sauvegarder dans un fichier au format json. Le fichier obtenu devrait \u00eatre nettement moins lourd et plus facilement utilisable (une soixantaine d'entr\u00e9es au lieu de plus de 200 000 dans le fichier original).  </p> Rappels de 1re <p>Pour importer un module, on peut utiliser la syntaxe <code>import mon_super_module</code>; ce qui nous obligera \u00e0  pr\u00e9fixer chaque appel de fonction par <code>mon_super_module.ma_fonction()</code>. On peut raccourcir les appels en  utilisant un alias lors de l'import: <code>import mon_super_module as msp</code>, on appelle alors  <code>msp.ma_fonction()</code>. Enfin, on peut cibler une fonction pr\u00e9cise \u00e0 importer. Dans ce cas, on utilisera la syntaxe: <code>from  mon_super_module import ma_fonction</code> et l'appel se fera directement par <code>ma_fonction()</code> sans pr\u00e9fixe.</p>"},{"location":"NSITerm/LP2/C4A1.html#travail-a-realiser","title":"Travail \u00e0 r\u00e9aliser","text":"<p>A faire</p> <p>Prendre connaissance de l'api du module json, en ligne sur  python.org ou \u00e0 d\u00e9faut dans une cellule de Jupyter en  utilisant les fonctions <code>dir</code> et <code>help</code>.</p> <pre><code>import json\n\n\ndir(json)\n</code></pre> <p>A faire</p> <p>Quelles sont les deux fonctions du module <code>json</code> susceptibles de nous int\u00e9resser en vue d'une ouverture et  d'une \u00e9criture de fichiers json ?  Pour obtenir de l'aide sur une fonction pr\u00e9sente dans un module on  utilise la fonction <code>help</code> (par exemple <code>help(json.xxxx)</code> o\u00f9 <code>xxxx</code> est le nom d'une fonction du module  <code>json</code>).  </p> <pre><code>#R\u00e9ponse\n</code></pre> <p>A faire</p> <p>On va extraire que les informations concernant les villes de la R\u00e9union. Quelle fonction doit-on utiliser  pour transformer le fichier <code>city.list.json</code> en une structure utilisable en python ? R\u00e9aliser cette  op\u00e9ration en compl\u00e9tant le code ci-dessous.   </p> <pre><code>import json\n\n# Cr\u00e9ation d'un objet fichier f li\u00e9 \u00e0 city.list.json\nwith open('./json/city.list.json', 'r') as f:\n    #A compl\u00e9ter (supprimer la ligne 'pass')\n    pass\n</code></pre> <p>A faire</p> <p>Quelle est le type de la structure obtenue et combien d'entr\u00e9es poss\u00e8de-t-elle? </p> <pre><code>#R\u00e9ponse\n</code></pre> <p>A faire</p> <p>Afficher la 1ere entr\u00e9e.</p> <pre><code>#R\u00e9ponse\n</code></pre> <p>A faire</p> <p>Proposer un code permettant de sauver les entr\u00e9es qui ne concernent que la R\u00e9union dans un tableau.</p> <pre><code>#R\u00e9ponse\nvilles_RE = []\n#A compl\u00e9ter\n</code></pre> <p>A faire</p> <p>Combien d'entr\u00e9e poss\u00e8de ce nouveau tableau ?</p> <pre><code>#R\u00e9ponse\n</code></pre> <p>A faire</p> <p>Quelle fonction devra-t-on utilser pour transformer ce tableau et le sauver dans un fichier json ?</p> <pre><code>#R\u00e9ponse\n</code></pre> <p>A faire</p> <p>Proposer un code qui r\u00e9alise la sauvergarde du tableau <code>villes_RE</code> dans un fichier json  <code>villes_RE.json</code>.</p> <pre><code>#R\u00e9ponse\n\n# Cr\u00e9ation d'un objet fichier f li\u00e9 \u00e0 villes_RE.json\nwith open(\"./json/villes_RE.json\", \"w\") as f:\n    #\u00e0 compl\u00e9ter ici\n    pass           \n</code></pre> <pre><code>\n</code></pre>"},{"location":"NSITerm/LP2/C4A2.html","title":"Activit\u00e9 2: cr\u00e9er son propre module","text":"<p>Comme il a \u00e9t\u00e9 pr\u00e9cis\u00e9 en introduction, il est important de d\u00e9couper son code en modules afin de pouvoir le r\u00e9utiliser facilement et d'en assurer une maintenance ais\u00e9e.  </p>"},{"location":"NSITerm/LP2/C4A2.html#quest-ce-quun-module","title":"Qu'est-ce qu'un module?","text":"<p>D\u00e9finition</p> <p>Un module est un fichier texte, d'extension <code>.py</code> (ou un fichier binaire <code>.pyc</code> qui ne sera pas abord\u00e9 ici). Il peut contenir des variables, des fonctions des classes ou d'autres modules.  </p> <p>Une bonne pratique en python consiste \u00e0 placer des commentaires (docstring) au d\u00e9but:  </p> <ul> <li>des fichiers, pour informer l'utilisateur des diverses fonctionnalit\u00e9s du module;</li> <li>des fonctions afin d'en donner les sp\u00e9cifications.  </li> </ul>"},{"location":"NSITerm/LP2/C4A2.html#ou-placer-un-module-personnel","title":"O\u00f9 placer un module personnel?","text":"<p>Le plus simple, mais pas forc\u00e9ment le plus recommand\u00e9, est de placer le module dans le m\u00eame dossier que les programmes qui en feront appel.</p> <p>A faire</p> <ol> <li>Cr\u00e9er un module <code>pile</code>, correctement document\u00e9, qui regroupe l'impl\u00e9mentation des op\u00e9rations courantes  sur une structure de donn\u00e9e de type pile (voir le\u00e7on pr\u00e9c\u00e9dente).</li> <li>En faire de m\u00eame en cr\u00e9ant un module <code>file</code>.</li> <li>Cr\u00e9er une file nomm\u00e9e <code>f</code> puis enfiler successivement les valeurs 3, 9 et 27. V\u00e9rifier si la file f est  vide. Enfin, d\u00e9filer <code>f</code> 4 fois de suite. Les r\u00e9sultats sont-ils coh\u00e9rents?</li> </ol> <pre><code>import pile, file\n\n\n# Tests - A compl\u00e9ter\n</code></pre>"},{"location":"NSITerm/LP2/C4A2.html#comment-creer-un-package","title":"Comment cr\u00e9er un package?","text":"<p>D\u00e9finition</p> <p>Un package ou librairie en fran\u00e7ais est un dossier sp\u00e9cial dans lequel on regroupe des modules.</p> <p>Supposons que l'on dispose de 4 modules nomm\u00e9s <code>algo</code>, <code>langage</code>, <code>machine</code> et <code>information</code>. On souhaite cr\u00e9er un package <code>nsi</code> qui regroupe ces 4 modules. La proc\u00e9dure est la suivante:  </p> <ul> <li>cr\u00e9er dans le dossier o\u00f9 se situe le programme appelant un dossier nomm\u00e9 <code>nsi</code> (en ligne de commande <code>mkdir nsi</code>);</li> <li>cr\u00e9er dans le dossier <code>nsi</code> un fichier vide <code>__init__.py</code> (en ligne de commande <code>touch nsi/__init__.py</code>, attention \u00e0 la pr\u00e9sence des 2 caract\u00e8res 'soulign\u00e9' en d\u00e9but et fin de nom);</li> <li>d\u00e9placer les 4 fichiers <code>py</code> des modules dans le dossier <code>nsi</code>.  </li> </ul> <p>Pour utiliser une fonction <code>tri</code> du module <code>algo</code>, on utilisera la syntaxe:  </p> <p><pre><code>from nsi.algo import tri\n</code></pre> ou <code>from nsi.algo import *</code> (d\u00e9conseill\u00e9)</p> <p>A faire</p> <ol> <li>R\u00e9aliser un package nomm\u00e9 <code>sdd</code> constitu\u00e9 des modules <code>pile</code> et <code>file</code>.</li> <li>Tester le bon fonctionnement des imports en indiquant les commandes utilis\u00e9es dans la cellule suivante.</li> </ol>"},{"location":"NSITerm/LP2/C5C1.html","title":"Mise au point des programmes - gestion des bugs","text":""},{"location":"NSITerm/LP2/C5C1.html#introduction-les-bugs-en-informatique","title":"Introduction: les bugs en informatique","text":"<p>Un bug est une toute petite erreur qui peut avoir des cons\u00e9quences catastrophiques. La gestion des bugs est un des points fondamentaux de l'informatique.</p> <p>A voir</p> <p>Voir l'introduction (ou lien de secours Youtube) de  l'informaticien G\u00e9rard Berry \u00e0 ce sujet.</p>"},{"location":"NSITerm/LP2/C5C1.html#eviter-les-bugs","title":"Eviter les bugs","text":"<p>Rien ne permet vraiment de garantir qu\u2019un programme ne pr\u00e9sente aucun bug. Toutefois, certains principes permettent de limiter les risques. </p>"},{"location":"NSITerm/LP2/C5C1.html#commenter-le-code","title":"Commenter le code","text":"<p>Un module, un package, une fonction ou une classe doit \u00eatre document\u00e9. Cette documentation ou sp\u00e9cification sera disponible lorsqu'on utilisera la fonction <code>help</code> de python.  </p> <p>Le moyen le plus simple pour documenter le code est l'utilisation d'une docstring.  </p> <p>D\u00e9finition</p> <p>Une docstring est une cha\u00eene de caract\u00e8res situ\u00e9e entre une paire de triple double quotes <code>\"\"\" \"\"\"</code>, au d\u00e9but de l'entit\u00e9 qu'elle renseigne.  </p> <p>Dans le cas d'une fonction, on y trouve les conditions portant sur les entr\u00e9es ou pr\u00e9conditions ainsi que ce qu'elle renvoie ou postcondition.  </p> <p>Exemple</p> <pre><code>def max_tab(t):\n\"\"\"\n    renvoie le maximum d'un tableau t;\n    t: tableau d'\u00e9l\u00e9ments comparables, non vide\n    \"\"\"\n    m = t[0]\n    for i in range(1, len(t)):\n        if t[i] &gt; m:\n            m = t[i]\n    return m\n</code></pre> <pre><code>help(max_tab)\n</code></pre> <pre><code>Help on function max_tab in module __main__:\n\nmax_tab(t)\n    renvoie le maximum d'un tableau t;\n    t: tableau d'\u00e9l\u00e9ments comparables, non vide\n</code></pre>"},{"location":"NSITerm/LP2/C5C1.html#le-typage-des-donnees","title":"Le typage des donn\u00e9es","text":"<p>On reprend la fonction <code>max_tab</code> pr\u00e9c\u00e9dente avec l'appel:</p> <pre><code>max_tab(5)\n</code></pre> <pre><code>---------------------------------------------------------------------------\n\nTypeError                                 Traceback (most recent call last)\n\n&lt;ipython-input-33-c8d064365998&gt; in &lt;module&gt;\n----&gt; 1 max_tab(5)\n\n\n&lt;ipython-input-29-4b5b186e2743&gt; in max_tab(t)\n      4     t: tableau d'\u00e9l\u00e9ments comparables, non vide\n      5     \"\"\"\n----&gt; 6     assert len(t) &gt; 0, \"Erreur: tableau vide\" # pr\u00e9condition\n      7     m = t[0]\n      8     for i in range(1, len(t)):\n\n\nTypeError: object of type 'int' has no len()\n</code></pre> <p>On obtient une erreur de type <code>TypeError</code>. Il s'agit d'une erreur tr\u00e8s courante. </p> <p>Certains langages v\u00e9rifient avant l'ex\u00e9cution les probl\u00e8mes de typage.  De par sa nature, Python ne le fait pas (du moins pas directement). Cependant, depuis la version 3.5, on peut annoter les programmes de mani\u00e8re \u00e0 bien pr\u00e9ciser les types des variables utilis\u00e9es ainsi que celui du r\u00e9sultat renvoy\u00e9.  </p> <p>D'un point de vue syntaxique, il suffit de rajouter le type pr\u00e9c\u00e9d\u00e9 de:  </p> <ul> <li><code>:</code> juste apr\u00e8s le nom du param\u00e8tre ou de la variable;</li> <li><code>-&gt;</code> si c'est la valeur renvoy\u00e9e par la fonction.</li> </ul> <pre><code>def max_tab(t: list) -&gt; int:\n\"\"\"\n    renvoie le maximum d'un tableau t;\n    t: tableau d'\u00e9l\u00e9ments comparables, non vide\n    \"\"\"\n    m = t[0]\n    for i in range(1, len(t)):\n        if t[i] &gt; m:\n            m = t[i]\n    return m\n</code></pre> <pre><code>help(max_tab)\n</code></pre> <pre><code>Help on function max_tab in module __main__:\n\nmax_tab(t: list) -&gt; int\n    renvoie le maximum d'un tableau t;\n    t: tableau d'\u00e9l\u00e9ments comparables, non vide\n</code></pre> <p>Le module <code>typing</code> de la biblioth\u00e8que standard permet d'aller encore plus loin dans l'annotation en pr\u00e9cisant le type d'objet pr\u00e9sent dans le tableau <code>t</code>.</p> <pre><code>from typing import List\n\n\ndef max_tab(t: List[int]) -&gt; int:\n\"\"\"\n    renvoie le maximum d'un tableau t;\n    t: tableau d'entiers, non vide\n    \"\"\"\n    m = t[0]\n    for i in range(1, len(t)):\n        if t[i] &gt; m:\n            m = t[i]\n    return m\n</code></pre> <pre><code>help(max_tab)\n</code></pre> <pre><code>Help on function max_tab in module __main__:\n\nmax_tab(t: List[int]) -&gt; int\n    renvoie le maximum d'un tableau t;\n    t: tableau d'entiers, non vide\n</code></pre> <p>Remarques</p> <ul> <li>Le type du tableau est ici List avec un 'l' majuscule;</li> <li>On a modifi\u00e9 la sp\u00e9cification de la fonction, notamment sa pr\u00e9condition, en pr\u00e9cisant qu'on travaillait  avec un tableau d'entiers.</li> </ul> <p>Hors programme</p> <p>On peut aller encore plus loin (non exigible en terminale) en faisant une v\u00e9rification des types avec un outil externe <code>mypy</code>.  Utilisation: on copie la fonction pr\u00e9c\u00e9dente dans le fichier <code>max_tab.py</code> par exemple et on ex\u00e9cute la commande ci-dessous.</p> <pre><code>!mypy max_tab.py\n</code></pre> <p></p>"},{"location":"NSITerm/LP2/C5C1.html#les-tests","title":"Les tests","text":"<p>On a vu en 1re qu'une bonne pratique de d\u00e9veloppement consistait \u00e0 \u00e9crire des proc\u00e9dures de tests suffisamment exhaustifs pour couvrir les cas normaux d'utilisation notamment aux limites ainsi que les cas anormaux.  </p> <p>On s'int\u00e9resse ici aux tests unitaires, dont l'objectif est de tester ind\u00e9pendamment chaque fonction. il existe plusieurs outils permettant de r\u00e9aliser des tests unitaires. On en utilisera deux principalement.  </p> <p>ATTENTION - Rappel</p> <p>Un test ne garantit jamais la correction d\u2019un programme.  Une r\u00e9ussite du test n\u2019est pas significative, alors qu'un \u00e9chec \u00e9tablit de mani\u00e8re certaine la pr\u00e9sence d\u2019un bug.</p>"},{"location":"NSITerm/LP2/C5C1.html#les-assertions","title":"Les assertions","text":"<p>Une assertion \u00e9choue si l'expression bool\u00e9enne qui suit le mot cl\u00e9 <code>assert</code> est fausse. L'exception AssertionError est alors lev\u00e9e. Si elle est vraie, l'ex\u00e9cution continue.  </p> <p>Exemples</p> <pre><code>def max_tab(t):\n\"\"\"\n    renvoie le maximum d'un tableau t;\n    t: tableau d'\u00e9l\u00e9ments comparables, non vide\n    \"\"\"\n    assert len(t) &gt; 0, \"Erreur: tableau vide\" # pr\u00e9condition\n    m = t[0]\n    for i in range(1, len(t)):\n        if t[i] &gt; m:\n            m = t[i]\n    assert all(t[i] &lt;= m for i in range(len(t))) # postcondition\n    return m\n</code></pre> <pre><code># Tests\nassert max_tab([1,1,1]) == 1\nassert max_tab([0]) == 0\nassert max_tab([-2,-1,0]) == 0\nassert max_tab([1,2,3]) == 3\n</code></pre> <p>Remarque</p> <p>On peut utiliser \u00e9galement <code>assert</code> au sein du code afin de v\u00e9rifier les pr\u00e9conditions et postconditions.</p>"},{"location":"NSITerm/LP2/C5C1.html#le-module-pytest","title":"Le module pytest","text":"<p>Le module <code>pytest</code> permet de faire des tests plus complets et plus explicites. Dans Jupyter Notebook on ex\u00e9cute d'abord la cellule ci-dessous, puis on \u00e9crit ses fonctions de tests qui doivent commencer par <code>test_</code>.</p> <pre><code>import ipytest\nipytest.autoconfig()\n</code></pre> <pre><code>%%ipytest\nimport pytest\nfrom random import randint\nfrom tri import  tri_insertion\n\n\ndef test_tab_neg_1():\n    t = [-1,-1,-1]\n    tri_insertion(t)\n    assert  t == [-1,-1,-1]\n\ndef test_inverse_2():\n    t = [14,10,5,1]\n    tri_insertion(t)\n    assert  t == [1,5,10,14]\n\ndef test_vide_0():\n    with pytest.raises(ValueError):\n        tri_insertion([])\n\ndef test_deja_tri_3():\n    t = [1,2,3,4,5]\n    tri_insertion(t)\n    assert  t == [1,2,3,4,5]\n\ndef test_random_4():    \n    t = [randint(-20, 20) for _ in range(10)]\n    tri_insertion(t)\n    assert all(t[i] &lt;= t[i + 1] for i in range(9))\n\ndef test_en_place_5():\n    assert tri_insertion([1,2,3]) is None\n</code></pre> <p></p>"},{"location":"NSITerm/LP2/C5C1.html#quand-le-bug-est-la","title":"Quand le bug est l\u00e0","text":"<p>Quand le bug survient, il faut alors :  </p> <ul> <li>savoir mettre en \u00e9vidence le bug et le reproduire;</li> <li>comprendre la cause du bug;</li> <li>corriger le bug.</li> </ul> <p>C\u2019est ce qu\u2019on appelle la mise au point, ou le d\u00e9buggage. Parmi les erreurs classiques, on trouve notamment:  </p> <ul> <li>division par zero : <code>ZeroDivisionError</code></li> <li>acc\u00e8s hors des bornes d\u2019une liste : <code>IndexError</code></li> <li>erreur de nom de variable : <code>NameError</code></li> <li>erreur de nom de m\u00e9thode ou d\u2019attribut : <code>AttributeError</code></li> <li>appel r\u00e9cursif trop profond : <code>RecursionError</code></li> <li>modification d\u2019un objet non mutable : <code>TypeError</code></li> </ul>"},{"location":"NSITerm/LP2/C5E1.html","title":"Mise au point de programmes - Exercices","text":"<p>Voir fiche d'exercices Hatier Terminale </p>"},{"location":"NSITerm/LP2/Recursivite.html","title":"RECURSIVITE","text":""},{"location":"NSITerm/LP2/Recursivite.html#introduction","title":"Introduction","text":"<p>Soit le probl\u00e8me simple du calcul de la somme des \\(n+1\\) premiers entiers naturels:  </p> \\[ 0+1+2+3+\\cdots+n \\] <p>Les connaissances de premi\u00e8re permettent de r\u00e9soudre tr\u00e8s facilement ce probl\u00e8me en utilisant une boucle (<code>for</code>ou <code>while</code>):</p> <pre><code>def somme(n):\n\"\"\"\n    Renvoie la somme des n entiers compris entre 0 et n;\n    n: entier naturel positif\n    \"\"\"\n    s = 0\n    for i in range(n+1):\n        s += i\n    return s\n</code></pre> <pre><code>somme(8)\n</code></pre> <pre><code>36\n</code></pre> <p>En proc\u00e9dant ainsi on a r\u00e9solu le probl\u00e8me en expliquant comment calculer <code>somme(n)</code>. On aurait pu aussi arriver au m\u00eame r\u00e9sultat en expliquant c'est quoi <code>somme(n)</code>.  En effet,  </p> \\[ somme(n)=\\underbrace{0+1+2+3+\\cdots+(n-1)}_{somme(n-1)}+n=somme(n-1)+n \\] <p>Ainsi on peut calculer la valeur de <code>somme(n)</code> comme \u00e9tant une fonction math\u00e9matique de \\(n\\):  </p> \\[ somme(n)= \\begin{cases} 0 &amp; \\text{si } n=0 \\\\ n+somme(n-1) &amp; \\text{si } n\\geq 1 \\end{cases} \\] <p>En python, cela se programme facilement:</p> <pre><code>def somme_rec(n):\n    if n == 0:\n        return 0\n    else:\n        return n + somme_rec(n-1)\n</code></pre> <pre><code>somme_rec(8)\n</code></pre> <pre><code>36\n</code></pre> <p>On remarque que <code>somme_rec(n)</code> fait appel \u00e0 <code>somme_rec(n-1)</code>.  </p> <p>D\u00e9finition</p> <p>Une fonction qui fait appel \u00e0 elle m\u00eame est dite r\u00e9cursive.</p> <p>Application directe</p> Enonc\u00e9Aide <p>La puissance \\(n\\)-i\u00e8me d'un nombre \\(x\\) est la multiplication r\u00e9p\u00e9t\u00e9e \\(n\\) fois de \\(x\\) avec lui m\u00eame. Par  convention \\(x^0=1\\). La puissance \\(n\\)-i\u00e8me de \\(x\\) s'\u00e9crit: \\(x^n = \\underbrace{x\\times \\cdots \\times x}_{n-1 \\text{ fois}}\\times x=x^{n-1}\\times x\\) Coder de mani\u00e8re r\u00e9cursive cette fonction en python.</p> <p>On peut donc d\u00e9finir une fonction <code>puissance</code> \\(n\\)-i\u00e8me de \\(x\\) telle que: </p> \\[ puissance(x,n)=\\begin{cases} 1 &amp; \\text{si } n=0\\\\ puissance(x,n-1)\\times x &amp; \\text{si } n&gt;0 \\end{cases} \\] <pre><code>def puissance(x, n):\n    # Supprimer l'instruction 'pass' et compl\u00e9ter avec votre code\n    pass\n</code></pre> <pre><code>#Cellule de test\nassert puissance(2, 0) == 1\nassert puissance(2, 10) == 1024\n</code></pre>"},{"location":"NSITerm/LP2/Recursivite.html#la-recursivite-simple-et-magique","title":"La r\u00e9cursivit\u00e9: simple et magique ?","text":"<p>Pour bien comprendre le d\u00e9roulement de l'ex\u00e9cution de la fonction r\u00e9cursive <code>somme_rec</code>, analysons l'appel <code>somme_rec(4)</code> (on dit aussi l'arbre d'appels). <pre><code>somme_rec(4)--&gt; return  4 + somme_rec(3)\n                            |\n                            return 3 + somme_rec(2)\n                                        |\n                                        return 2 + somme_rec(1)\n                                                    |\n                                                    return 1 + somme_rec(0)\n                                                                |\n                                                                return 0\n</code></pre> L'appel de <code>somme_rec(4)</code> provoque une s\u00e9rie d'appels en cascade jusqu'\u00e0 l'appel <code>somme_rec(0)</code> qui renvoit 0. A ce moment l\u00e0, <code>somme_rec(1)</code> peut se terminer en renvoyant 1, puis <code>somme_rec(2)</code> en renvoyant 3, etc.  </p> <p>Cette succession d'appels rend naturellement les boucles inutiles dans dans une fonction r\u00e9cursive.  </p> <p>Chaque appel de fonction se traduit par le stockage dans une zone m\u00e9moire appel\u00e9e pile, de donn\u00e9es li\u00e9es au contexte d'ex\u00e9cution de la fonction appelante (adresse de retour, param\u00e8tres de la fonction, etc.). </p> <p>Application directe </p> Enonc\u00e9Aide <p>Analyser l'arbre d'appels de <code>puissance(2, 4)</code> et justifier la valeur renvoy\u00e9e.</p> <p>Revoir l'exemple de la fonction <code>somme_rec</code></p>"},{"location":"NSITerm/LP2/Recursivite.html#dautres-exemples-de-fonctions-recursives-precautions","title":"D'autres exemples de fonctions r\u00e9cursives - pr\u00e9cautions","text":""},{"location":"NSITerm/LP2/Recursivite.html#la-suite-de-fibonacci-ecriture-dune-fonction-recursive-naive","title":"La suite de Fibonacci: \u00e9criture d'une fonction r\u00e9cursive na\u00efve","text":"<p>Cette suite est d\u00e9finie pour tout entier naturel \\(n\\), par:  </p> \\[ F(n)= \\begin{cases} n &amp; \\text{si } n&lt;2\\\\ F(n-1) + F(n-2)&amp; \\text{si } n\\geq 2 \\end{cases} \\] <p>Ecrire une fonction r\u00e9cursive en python <code>fib(n)</code> qui renvoie le calcul du \\((n+1)\\)-i\u00e8me terme de la suite de Fibonacci, compte tenu de la d\u00e9finition ci-dessus.</p> <pre><code>def fib(n):\n    # Supprimer 'pass' et compl\u00e9ter avec votre code\n    pass\n</code></pre> <pre><code># Tests\nassert fib(1) == 1\nassert fib(2) == 1\nassert fib(6) == 8\n</code></pre>"},{"location":"NSITerm/LP2/Recursivite.html#analyse-de-la-fonction-naive","title":"Analyse de la fonction na\u00efve","text":"<p>Jupyter Notebook poss\u00e8de une extension int\u00e9ressante (les magic commands) qui permet d'appeler une fonction python (ou autre). On va utiliser la commande <code>%timeit fib(n)</code> pour mesurer le temps d'ex\u00e9cution de <code>fib(n)</code>. Par exemple: <pre><code>%timeit fib(10)\n</code></pre></p> <p>Les r\u00e9sultats sont consign\u00e9s dans le tableau ci-dessous:  </p> n %timeit fib(n) 5 1.2 \u00b5s 10 14 \u00b5s 20 1.7 ms 30 0.22 s 35 2.4 s <p>On constate que la complexit\u00e9 explose rapidement. Essayons de comprendre pourquoi en examinant une partie de l'arbre d'appels de <code>fib(5)</code> par exemple.  </p> <p>Des calculs d\u00e9j\u00e0 effectu\u00e9s lors de l'appel de <code>fib(4)</code> sont \u00e0 nouveau effectu\u00e9s lors de l'appel de <code>fib(3)</code> !!  </p> <p>Attention</p> <p>La traduction na\u00efve d'une fonction math\u00e9matique en une fonction r\u00e9cursive peut conduire \u00e0 une complexit\u00e9  inacceptable. Des techniques simples existent pour r\u00e9gler le probl\u00e8me pr\u00e9c\u00e9dent et seront abord\u00e9es plus loin dans le  cours de terminale.</p>"},{"location":"NSITerm/LP2/Recursivite.html#retour-sur-la-pile","title":"Retour sur la pile","text":"<p>Ex\u00e9cuter la cellule suivante et analyser le r\u00e9sultat obtenu.</p> <pre><code>def f(n):\n    return 1 + f(n + 1)\n\nf(0)\n</code></pre> <pre><code>#Votre analyse\n</code></pre> <p>Attention</p> <p>La taille de la pile est limit\u00e9e, le nombre d'appels r\u00e9cursifs est donc limit\u00e9 aussi. Python limite  naturellement et assez s\u00e9v\u00e8rement d'ailleurs, le nombre d'appels r\u00e9cursifs. On peut avoir une id\u00e9e de  cette limite avec le code suivant:  </p> <pre><code>import sys\nprint(sys.getrecursionlimit())\n</code></pre>"},{"location":"NSITerm/LP2/Recursivite.html#bien-ecrire-des-fonctions-recursives","title":"Bien \u00e9crire des fonctions r\u00e9cursives","text":"<p>Il est g\u00e9n\u00e9ralement simple de traduire une fonction math\u00e9matique d\u00e9finie par r\u00e9currence en une fonction r\u00e9cursive python. On veillera n\u00e9anmoins \u00e0 ce que le sch\u00e9ma suivant soit toujours pr\u00e9sent dans la d\u00e9finition de la fonction:  </p> <p><pre><code>def f_rec(parametres):\n    if condition:\n        #cas de base: cas trivial o\u00f9 la fonction termine\n        return valeur\n    else:\n        #cas r\u00e9cursifs o\u00f9 on appelle \u00e0 nouveau f_rec\n        ...\n        return expression(f_rec(...))\n</code></pre> Les diff\u00e9rents cas sont typiquement examin\u00e9s avec des tests <code>if ... else</code>. Enfin, le cas de base peut \u00eatre ... constitu\u00e9 de plusieurs cas!</p>"},{"location":"NSITerm/LP2/Recursivite.html#a-retenir","title":"A retenir","text":"<p>La r\u00e9cursivit\u00e9 est une technique de programmation \u00e9l\u00e9gante, tr\u00e8s proche de la d\u00e9finition math\u00e9matique des fonctions ou des probl\u00e8mes. Les boucles y sont inutiles.  Une fonction r\u00e9cursive est g\u00e9n\u00e9ralement constitu\u00e9 d'un ou de plusieurs cas de base, qui permet(tent) \u00e0 la fonction de terminer et de cas r\u00e9cursifs. La r\u00e9cursivit\u00e9 repose sur l'utilisation d'une zone m\u00e9moire appel\u00e9e pile, de capacit\u00e9 limit\u00e9e. Une erreur est signal\u00e9e lors d'une tentative de d\u00e9passement de cette capacit\u00e9. Enfin, il faut toujours \u00eatre vigilant sur le fait que cette technique appliqu\u00e9e de mani\u00e8re na\u00efve peut engendrer une complexit\u00e9 inacceptable.</p>"},{"location":"NSITerm/SD/C11C1.html","title":"ARBRES","text":""},{"location":"NSITerm/SD/C11C1.html#structures-arborescentes","title":"Structures arborescentes","text":"<p>La structure de liste cha\u00een\u00e9e rencontr\u00e9e pr\u00e9c\u00e9demment est int\u00e9ressante lorsqu'on a besoin d'un acc\u00e8s s\u00e9quentiel aux \u00e9l\u00e9ments. En revanche, elle est peu adapt\u00e9e \u00e0 des acc\u00e8s arbitraires. Dans ce cas de figure, une structure arborescente peut \u00eatre envisag\u00e9e. Il s'agit d'une autre famille de structures cha\u00een\u00e9es qui permet d'organiser les informations stock\u00e9es de mani\u00e8re hi\u00e9rarchique. Les applications sont tr\u00e8s nombreuses; on peut citer par exemple:  </p> <ul> <li>arborescence du syst\u00e8me de fichier d'un ordinateur;</li> <li>expression arithm\u00e9tique;</li> <li>structure des pages web;</li> <li>arbre g\u00e9n\u00e9alogique;</li> <li>etc.</li> </ul>"},{"location":"NSITerm/SD/C11C1.html#arbres-binaires","title":"Arbres binaires","text":""},{"location":"NSITerm/SD/C11C1.html#definitions","title":"D\u00e9finitions","text":"<p>Un arbre est une structure arborescente particuli\u00e8re, compos\u00e9e de noeuds. Dans un arbre binaire chaque noeud pr\u00e9sente au maximum 2 branches.  </p> <p> </p> <p>Un arbre qui ne comporte pas de noeud est un arbre vide.  Si l'arbre n'est pas vide, il comporte:  </p> <ul> <li>un noeud particulier appel\u00e9 racine;</li> <li>deux sous ensembles de noeuds appel\u00e9s sous arbre gauche et sous arbre droit.</li> </ul> <p>Remarque: la racine est reli\u00e9e \u00e0 la racine des sous arbres (sauf s'il est vide).  </p> <p>Un noeud qui a deux sous arbres vides est une feuille. Dans l'exemple ci-dessus:  </p> <ul> <li><code>A</code> est la racine;</li> <li><code>D</code>, <code>E</code> et <code>F</code> sont des feuilles.  </li> </ul> <p>La taille \\(N\\) d'un arbre correspond au nombre de noeuds. Par exemple, la taille de l'arbre pr\u00e9sent\u00e9 en introduction est \\(N=6\\). La hauteur \\(h\\) d'un arbre correspond au nombre maximal de noeuds rencontr\u00e9s en descendant de la racine \u00e0 une feuille. Par exemple, l'arbre pr\u00e9sent\u00e9 en introduction a une hauteur \\(h=3\\).</p>"},{"location":"NSITerm/SD/C11C1.html#encadrement-de-la-taille","title":"Encadrement de la taille","text":"<p>La taille d'un arbre v\u00e9rifie une double in\u00e9galit\u00e9:  </p> \\[h \\leq N \\leq 2^{h} -1\\] <p>La borne inf\u00e9rieure correspond \u00e0 un arbre dont chaque noeud ne pr\u00e9sente qu'une branche, dans ce cas \\(N = h\\) (Fig. 1). La borne sup\u00e9rieure correspond \u00e0 un arbre o\u00f9 chaque niveau est complet, dans ce cas \\(N=2^{h}-1\\) (Fig. 2).  </p> <p> (Fig. 1)  (Fig. 2)</p>"},{"location":"NSITerm/SD/C11C1.html#une-representation-possible-en-python","title":"Une repr\u00e9sentation possible en python","text":""},{"location":"NSITerm/SD/C11C1.html#utilisation-dune-classe","title":"Utilisation d'une classe","text":"<p>De la m\u00eame fa\u00e7on qu'on a construit les listes cha\u00een\u00e9es avec des cellules, on va utiliser une classe Noeud pour d\u00e9crire un arbre. Un noeud comporte une information ou valeur, une r\u00e9f\u00e9rence vers le sous arbre gauche et une r\u00e9f\u00e9rence vers le sous arbre droit.</p> <pre><code>class Noeud:\n\"\"\" Une classe pour mod\u00e9liser les noeuds d'un arbre\"\"\"\n\n    def __init__(self, v, fg, fd):\n        self.val = v\n        self.gauche = fg\n        self.droit = fd        \n</code></pre> <p>Ainsi, l'arbre donn\u00e9 en introduction peut \u00eatre cod\u00e9 de la mani\u00e8re suivante:</p> <pre><code>arb1 = Noeud('A', \n             Noeud('B', Noeud('D', None, None), None), \n             Noeud('C', Noeud('E', None, None), Noeud('F', None, None))\n            )\n</code></pre> <pre><code>print(arb1.val)\nprint(arb1.gauche.val)\n</code></pre> <pre><code>A\nB\n</code></pre>"},{"location":"NSITerm/SD/C11C1.html#taille-et-hauteur","title":"Taille et hauteur","text":"<p>La taille d'un arbre vide vaut 0. S'il n'est pas vide, sa taille est:  </p> <p>1 (racine) + taille sous arbre gauche + taille sous arbre droit</p> <p>Une telle pr\u00e9sentation incite \u00e0 \u00e9crire une fonction r\u00e9cursive. Coder cette fonction.</p> <pre><code>def taille(arb):\n\"\"\" Renvoie la taille de l'arbre pass\u00e9 en param\u00e8tre\"\"\"\n\n    if arb is None:\n        return 0\n    else:\n        return 1 + taille(arb.gauche) + taille(arb.droit)\n</code></pre> <pre><code>assert taille(arb1) == 6\n</code></pre> <p>La hauteur d'un arbre vide est nulle. Si l'arbre n'est pas vide, sa hauteur vaut:  </p> \\[ 1 + \\text{max}(hauteur(\\text{sous arbre gauche}), hauteur(\\text{sous arbre droit}))\\] <p>Coder une fonction r\u00e9cursive qui renvoie la hauteur d'un arbre pass\u00e9 en param\u00e8tre.</p> <pre><code>def hauteur(arb):\n\"\"\" Renvoie la hauteur de l'arbre 'arb'\"\"\"\n\n    if arb is None:\n        return 0\n    else:\n        return 1 + max(hauteur(arb.gauche), hauteur(arb.droit))\n</code></pre> <pre><code>hauteur(arb1)\n</code></pre> <pre><code>3\n</code></pre>"},{"location":"NSITerm/SD/C11C1.html#parcours-dun-arbre-en-profondeur-dabord","title":"Parcours d'un arbre en profondeur d'abord","text":"<p>Dans quel ordre parcourir les noeuds d'un arbre? Il existe plusieurs possibilit\u00e9s:  </p> <ul> <li>si on traite d'abord la racine, puis le sous arbre gauche, puis le sous arbre droit, l'ordre est dit pr\u00e9fixe;</li> <li>si on traite d'abord le sous arbre gauche, puis la racine, puis le sous arbre droit, l'ordre est dit infixe;</li> <li>si on traite d'abord le sous arbre gauche, puis le sous arbre droit, puis la racine, l'ordre est dit postfixe ou suffixe.  </li> </ul> <pre><code>def parcours_prefixe(arb):\n\"\"\" Parcours pr\u00e9fixe d'un arbre\"\"\"\n\n    if arb is None:\n        return\n    else:\n        print(arb.val, end=' ')\n        parcours_prefixe(arb.gauche)\n        parcours_prefixe(arb.droit)\n</code></pre> <pre><code>parcours_prefixe(arb1)\n</code></pre> <pre><code>A B D C E F\n</code></pre> <pre><code>def parcours_infixe(arb):\n\"\"\" Parcours pr\u00e9fixe d'un arbre\"\"\"\n\n    if arb is None:\n        return\n    else:\n        parcours_infixe(arb.gauche)\n        print(arb.val, end=' ')\n        parcours_infixe(arb.droit)\n</code></pre> <pre><code>parcours_infixe(arb1)\n</code></pre> <pre><code>D B A E C F\n</code></pre> <p>Ecrire la fonction qui renvoie le parcours postfixe d'un arbre.</p> <pre><code>from queue import Queue\nhelp(Queue.get)\n</code></pre> <pre><code>Help on function get in module queue:\n\nget(self, block=True, timeout=None)\n    Remove and return an item from the queue.\n\n    If optional args 'block' is true and 'timeout' is None (the default),\n    block if necessary until an item is available. If 'timeout' is\n    a non-negative number, it blocks at most 'timeout' seconds and raises\n    the Empty exception if no item was available within that time.\n    Otherwise ('block' is false), return an item if one is immediately\n    available, else raise the Empty exception ('timeout' is ignored\n    in that case).\n</code></pre>"},{"location":"NSITerm/SD/C11C1.html#parcours-en-largeur-dabord","title":"Parcours en largeur d'abord","text":"<p>Ce parcours est moins trivial que le pr\u00e9c\u00e9dent. Il s'agit de parcourir l'arbre par niveau. On commence par la racine puis les racines de ses deux sous arbres et ainsi de suite. Une structure de donn\u00e9es adapt\u00e9e \u00e0 ce probl\u00e8me est la file. </p> <p>Description d'un algorithme it\u00e9ratif On suppose l'arbre non vide.  </p> <ul> <li>on enfile l'arbre;</li> <li> <p>tant que la file n'est pas vide:  </p> <ul> <li>on d\u00e9file un \u00e9l\u00e9ment (en fait un arbre);</li> <li>on affiche la valeur de sa racine;</li> <li>on enfile ses deux sous arbres s'ils ne sont pas vides</li> </ul> </li> </ul> <p>\u00c0 faire</p> <p>Compl\u00e9ter la fonction <code>parcours_largeur</code> puis tester.</p> <pre><code>from queue import Queue\n\n\ndef parcours_largeur(arbre):\n\"\"\" Affiche la valeur des noeuds trouv\u00e9s lors d'un parcours en largeur d'un arbre;\n    arbre: arbre binaire\n    \"\"\"\n    assert a is not None\n    f = Queue() # On cr\u00e9e une file vide\n    f.put(arbre) # On enfile l'arbre\n    while not f.empty():\n        x = f.get() # d\u00e9file un \u00e9l\u00e9ment\n        print(x.val, end=' ')\n        if x.gauche is not None:\n            ...\n        if x.droit is not None:\n            ...\n</code></pre>"},{"location":"NSITerm/SD/C11C1b.html","title":"ARBRES","text":""},{"location":"NSITerm/SD/C11C1b.html#structures-arborescentes","title":"Structures arborescentes","text":"<p>La structure de liste cha\u00een\u00e9e rencontr\u00e9e pr\u00e9c\u00e9demment est int\u00e9ressante lorsqu'on a besoin d'un acc\u00e8s s\u00e9quentiel aux \u00e9l\u00e9ments. En revanche, elle est peu adapt\u00e9e \u00e0 des acc\u00e8s arbitraires. Dans ce cas de figure, une structure arborescente peut \u00eatre envisag\u00e9e. Il s'agit d'une autre famille de structures cha\u00een\u00e9es qui permet d'organiser les informations stock\u00e9es de mani\u00e8re hi\u00e9rarchique.  </p> <p>Les applications sont tr\u00e8s nombreuses; on peut citer par exemple:  </p> <ul> <li>arborescence du syst\u00e8me de fichier d'un ordinateur;</li> <li>expression arithm\u00e9tique;</li> <li>structure des pages web;</li> <li>arbre g\u00e9n\u00e9alogique;</li> <li>etc.</li> </ul>"},{"location":"NSITerm/SD/C11C1b.html#arbres-binaires","title":"Arbres binaires","text":""},{"location":"NSITerm/SD/C11C1b.html#definitions","title":"D\u00e9finitions","text":"<p>Un arbre est une structure arborescente particuli\u00e8re, compos\u00e9e de noeuds. Dans un arbre binaire chaque noeud pr\u00e9sente au maximum 2 branches.  </p> <p> </p> <p>Arbre / sous arbre</p> <p>Un arbre qui ne comporte pas de noeud est un arbre vide.  Si l'arbre n'est pas vide, il comporte:  </p> <ul> <li>un noeud particulier appel\u00e9 racine;</li> <li>deux sous ensembles de noeuds appel\u00e9s sous arbre gauche et sous arbre droit.</li> </ul> Remarque <p>La racine est reli\u00e9e \u00e0 la racine des sous arbres (sauf s'il est vide).  </p> <p>Feuille</p> <p>Un noeud qui a deux sous arbres vides est une feuille.  </p> <p>Dans l'exemple ci-dessus:  </p> <ul> <li><code>A</code> est la racine;</li> <li><code>D</code>, <code>E</code> et <code>F</code> sont des feuilles.  </li> </ul> <p>Taille</p> <p>La taille \\(N\\) d'un arbre correspond au nombre de noeuds.</p> <p>Par exemple, la taille de l'arbre pr\u00e9sent\u00e9 en introduction est \\(N=6\\).  </p> <p>Hauteur</p> <p>La hauteur \\(h\\) d'un arbre correspond au nombre maximal de noeuds rencontr\u00e9s en descendant de la racine \u00e0 une feuille.</p> <p>Par exemple, l'arbre pr\u00e9sent\u00e9 en introduction a une hauteur \\(h=3\\).</p>"},{"location":"NSITerm/SD/C11C1b.html#encadrement-de-la-taille","title":"Encadrement de la taille","text":"<p>Taille</p> <p>La taille d'un arbre v\u00e9rifie une double in\u00e9galit\u00e9:  </p> \\[h \\leq N \\leq 2^{h} -1\\] <p>La borne inf\u00e9rieure correspond \u00e0 un arbre dont chaque noeud ne pr\u00e9sente qu'une branche, dans ce cas \\(N = h\\) (Fig. 1). La borne sup\u00e9rieure correspond \u00e0 un arbre o\u00f9 chaque niveau est complet, dans ce cas \\(N=2^{h}-1\\) (Fig. 2).  </p> <p> (Fig. 1)  </p> <p> (Fig. 2)</p>"},{"location":"NSITerm/SD/C11C1b.html#une-representation-possible-en-python","title":"Une repr\u00e9sentation possible en python","text":""},{"location":"NSITerm/SD/C11C1b.html#utilisation-dune-classe","title":"Utilisation d'une classe","text":"<p>De la m\u00eame fa\u00e7on qu'on a construit les listes cha\u00een\u00e9es avec des cellules, on va utiliser une classe Noeud pour d\u00e9crire un arbre. Un noeud comporte une information ou valeur, une r\u00e9f\u00e9rence vers le sous arbre gauche et une r\u00e9f\u00e9rence vers le sous arbre droit.</p> <pre><code>class Noeud:\n\"\"\" Une classe pour mod\u00e9liser les noeuds d'un arbre\"\"\"\n\n    def __init__(self, v, fg, fd):\n        self.val = v\n        self.gauche = fg\n        self.droit = fd        \n</code></pre> <p>Ainsi, l'arbre donn\u00e9 en introduction peut \u00eatre cod\u00e9 de la mani\u00e8re suivante:</p> <pre><code>arb1 = Noeud('A', \n             Noeud('B', Noeud('D', None, None), None), \n             Noeud('C', Noeud('E', None, None), Noeud('F', None, None))\n            )\n</code></pre> <pre><code>print(arb1.val)\nprint(arb1.gauche.val)\n</code></pre> <pre><code>A\nB\n</code></pre>"},{"location":"NSITerm/SD/C11C1b.html#taille-et-hauteur","title":"Taille et hauteur","text":"<p>Expression de la taille</p> <p>La taille d'un arbre vide vaut 0. S'il n'est pas vide, sa taille est:  </p> <p>1 (racine) + taille sous arbre gauche + taille sous arbre droit</p> <p>Une telle pr\u00e9sentation incite \u00e0 utiliser une fonction r\u00e9cursive \ud83e\udd74 (R\u00e9petez 10 fois: Jaime la r\u00e9cursivit\u00e9).  </p> <p>\u00c9crire cette fonction.</p> <pre><code>def taille(arb):\n\"\"\" Renvoie la taille de l'arbre pass\u00e9 en param\u00e8tre\"\"\"\n    pass\n</code></pre> <pre><code>assert taille(arb1) == 6\n</code></pre> <p>Expression de la hauteur</p> <p>La hauteur d'un arbre vide est nulle. Si l'arbre n'est pas vide, sa hauteur vaut:</p> \\[ 1 + \\text{max}(hauteur(\\text{sous arbre gauche}), hauteur(\\text{sous arbre droit}))\\] <p>\u00c9crire une fonction r\u00e9cursive (encore ? \ud83d\ude30) qui renvoie la hauteur d'un arbre pass\u00e9 en param\u00e8tre.</p> <pre><code>def hauteur(arb):\n\"\"\" Renvoie la hauteur de l'arbre 'arb'\"\"\"\n    pass\n</code></pre> <pre><code>hauteur(arb1)\n</code></pre> <pre><code>3\n</code></pre>"},{"location":"NSITerm/SD/C11C1b.html#parcours-dun-arbre-en-profondeur-dabord","title":"Parcours d'un arbre en profondeur d'abord","text":"<p>Dans quel ordre parcourir les noeuds d'un arbre? Il existe plusieurs possibilit\u00e9s:  </p> <ul> <li>si on traite d'abord la racine, puis le sous arbre gauche, puis le sous arbre droit, l'ordre est dit pr\u00e9fixe;</li> <li>si on traite d'abord le sous arbre gauche, puis la racine, puis le sous arbre droit, l'ordre est dit infixe;</li> <li>si on traite d'abord le sous arbre gauche, puis le sous arbre droit, puis la racine, l'ordre est dit postfixe ou suffixe.  </li> </ul> <pre><code>def parcours_prefixe(arb):\n\"\"\" Parcours pr\u00e9fixe d'un arbre\"\"\"\n\n    if arb is None:\n        return\n    else:\n        print(arb.val, end=' ')\n        parcours_prefixe(arb.gauche)\n        parcours_prefixe(arb.droit)\n</code></pre> <pre><code>parcours_prefixe(arb1)\n</code></pre> <pre><code>A B D C E F\n</code></pre> <p>\u00c0 faire</p> <p>Compl\u00e9ter la fonction suivante:</p> <pre><code>def parcours_infixe(arb):\n\"\"\" Parcours pr\u00e9fixe d'un arbre\"\"\"\n\n    if arb is None:\n        return\n    else:\n        ...\n</code></pre> <pre><code>parcours_infixe(arb1)\n</code></pre> <pre><code>D B A E C F\n</code></pre> <p>\u00c0 faire</p> <p>\u00c9crire la fonction qui renvoie le parcours postfixe d'un arbre.</p>"},{"location":"NSITerm/SD/C11C1b.html#parcours-en-largeur-dabord","title":"Parcours en largeur d'abord","text":"<p>Ce parcours est moins trivial que le pr\u00e9c\u00e9dent. Il s'agit de parcourir l'arbre par niveau. On commence par la racine puis les racines de ses deux sous arbres et ainsi de suite. Une structure de donn\u00e9es adapt\u00e9e \u00e0 ce probl\u00e8me est la file. </p> <p>Description d'un algorithme it\u00e9ratif On suppose l'arbre non vide.  </p> <ul> <li>on enfile l'arbre;</li> <li> <p>tant que la file n'est pas vide:  </p> <ul> <li>on d\u00e9file un \u00e9l\u00e9ment (en fait un arbre);</li> <li>on affiche la valeur de sa racine;</li> <li>on enfile ses deux sous arbres s'ils ne sont pas vides</li> </ul> </li> </ul> <p>\u00c0 faire</p> <p>Compl\u00e9ter la fonction <code>parcours_largeur</code> puis tester.</p> <pre><code>from queue import Queue\nhelp(Queue.get)\n</code></pre> <pre><code>Help on function get in module queue:\n\nget(self, block=True, timeout=None)\n    Remove and return an item from the queue.\n\n    If optional args 'block' is true and 'timeout' is None (the default),\n    block if necessary until an item is available. If 'timeout' is\n    a non-negative number, it blocks at most 'timeout' seconds and raises\n    the Empty exception if no item was available within that time.\n    Otherwise ('block' is false), return an item if one is immediately\n    available, else raise the Empty exception ('timeout' is ignored\n    in that case).\n</code></pre> <pre><code>from queue import Queue\n\n\ndef parcours_largeur(arbre):\n\"\"\" Affiche la valeur des noeuds trouv\u00e9s lors d'un parcours en largeur d'un arbre;\n    arbre: arbre binaire\n    \"\"\"\n    assert a is not None\n    f = Queue() # On cr\u00e9e une file vide\n    f.put(arbre) # On enfile l'arbre\n    while not f.empty():\n        x = f.get() # d\u00e9file un \u00e9l\u00e9ment\n        print(x.val, end=' ')\n        if x.gauche is not None:\n            ...\n        if x.droit is not None:\n            ...\n</code></pre>"},{"location":"NSITerm/SD/C11C2.html","title":"Algorithmes sur les ABR","text":""},{"location":"NSITerm/SD/C11C2.html#definition-et-representation-des-arbres-binaires-de-recherche-en-python","title":"D\u00e9finition et repr\u00e9sentation des arbres binaires de recherche en python","text":"<p>D\u00e9finition</p> <p>Un arbre binaire de recherche (en abr\u00e9g\u00e9 ABR) est un arbre binaire dont les noeuds contiennent des valeurs comparables. Pour tout noeud d'un ABR toutes les valeurs situ\u00e9es dans le sous arbre gauche sont inf\u00e9rieures \u00e0 celle du noeud. De la m\u00eame fa\u00e7on, toutes les valeurs situ\u00e9es dans le sous arbre droit sont sup\u00e9rieures \u00e0 celle du noeud.</p> <p>Exemples d'ABR </p> <p>Un ABR \u00e9tant un arbre binaire, on peut le repr\u00e9senter comme pr\u00e9c\u00e9demment avec une classe <code>Noeud</code> avec une contrainte sur la valeur des noeuds: ils doivent \u00eatre comparables. Avec la classe <code>Noeud</code> du chapitre pr\u00e9c\u00e9dent, les deux ABR ci-dessus sont mod\u00e9lis\u00e9s de la fa\u00e7on suivante:</p> <pre><code>class Noeud:\n\"\"\" Une classe pour mod\u00e9liser les noeuds d'un arbre\"\"\"\n\n    def __init__(self, v, fg=None, fd=None):\n        self.val = v\n        self.gauche = fg\n        self.droit = fd     \n</code></pre> <pre><code>abr1 = Noeud(20,\n            Noeud(10, Noeud(5), Noeud(15)), \n            Noeud(25, Noeud(21), Noeud(26))\n            )\n\nabr2 = Noeud(7,\n            Noeud(5, Noeud(2), Noeud(6)),\n            Noeud(10, Noeud(8), Noeud(12, Noeud(11), Noeud(13)))\n            )\n</code></pre> <p>Remarque</p> <p>Dans la m\u00e9thode <code>__init__</code>, <code>fg</code> et <code>fd</code> ont une valeur par d\u00e9faut \u00e9gale \u00e0 <code>None</code>, cela permet juste une \u00e9criture plus compacte lors de la cr\u00e9ation d'une instance en \u00e9vitant de r\u00e9\u00e9crire <code>None</code> lorsqu'un noeud n'a pas de fils.</p>"},{"location":"NSITerm/SD/C11C2.html#recherche-dans-un-abr","title":"Recherche dans un ABR","text":"<p>Chercher une valeur dans un ABR revient \u00e0 la comparer \u00e0 la valeur de la racine puis, si elle est diff\u00e9rente, \u00e0 poursuivre la recherche dans un seul des sous arbres.  </p> <p>La recherche d'une valeur ou cl\u00e9 \\(x\\) dans un arbre binaire de recherche <code>arb</code> peut \u00eatre men\u00e9e avec l'algorithme ci-dessous qui renvoie <code>Vrai</code> ou <code>Faux</code> selon que la recherche aboutit ou pas.  </p> <p>Algorithme</p> <pre><code>Algorithme recherche(x, arbre)\n----------------------------\nsi arbre est vide\n    renvoyer Faux\nsi x &lt; arbre.val\n    renvoyer recherche(x, arbre.gauche)\nsinon si x &gt; arbre.val\n    renvoyer recherche(x, arbre.droit)\nsinon\n    renvoyer Vrai\n</code></pre> <p>\u00c0 faire</p> <p>Impl\u00e9menter cet algorithme en python.</p> <pre><code>def rechercher(x, arbre):\n\"\"\" \n    recherche une valeur x dans un ABR;\n    renvoie un bool\u00e9en correspondant \u00e0 la presence ou non de x dans arbre\n    x: \u00e9l\u00e9ment comparable avec les valeurs pr\u00e9sentes dans l'arbre\n    arbre: arbre binaire de recherche\n    \"\"\"\n    if arbre is None:\n        return False\n    # \u00c0 compl\u00e9ter\n</code></pre> <pre><code># A DECOMMENTER ET EXECUTER\nassert rechercher(10, abr2) == True\nassert rechercher(35, abr2) == False\nprint(\"Valid\u00e9 !\")\n</code></pre> <p>Efficacit\u00e9 de la recherche </p> <p>Dans le cas id\u00e9al, si l'arbre est \u00e9quilibr\u00e9, chaque appel de <code>rechercher(x, arbre)</code> \u00e9limine la moiti\u00e9 des \u00e9l\u00e9ments. Cette recherche est alors \u00e0 rapprocher de la recherche dichotomique vue en 1re, dont la complexit\u00e9 est logarithmique. Dans le pire des cas, si l'arbre est filiforme, la recherche est peu efficace et sa complexit\u00e9 est alors lin\u00e9aire.</p>"},{"location":"NSITerm/SD/C11C2.html#insertion-dans-un-abr","title":"Insertion dans un ABR","text":"<p>Comme pr\u00e9c\u00e9demment, on va privil\u00e9gier une m\u00e9thode r\u00e9cursive pour ins\u00e9rer une valeur \\(x\\) dans un arbre tout en gardant la structure d'arbre binaire de recherche.  </p> <p>Afin d'\u00e9viter certains probl\u00e8mes, on choisira une solution non mutable, autrement dit la fonction d'insertion va toujours renvoyer un nouvel objet ABR c'est-\u00e0-dire une instance de la classe <code>Noeud</code>.</p> <p>Algorithme</p> <p>Si l'arbre est vide, il suffit de renvoyer un noeud ayant \\(x\\) comme valeur (cas de base); sinon, on compare \\(x\\) \u00e0 la valeur du noeud:  </p> <pre><code>si x &lt; arbre.val\n    \"placer\" x dans le sous arbre gauche\nsinon\n    \"placer\" x dans le sous arbre droit\n</code></pre> <p>Attention \u00e0 l'interpr\u00e9tation de <code>\"placer\" x</code> lors de l'impl\u00e9mentation et notamment au type renvoy\u00e9.</p> <p>\u00c0 faire</p> <p>Impl\u00e9menter cette fonction en python.</p> <pre><code>def inserer(x, arbre):\n\"\"\"\n    ins\u00e8re x dans un ABR tout en gardant la structure d'ABR; Renvoie un ABR.\n    x: \u00e9l\u00e9ment comparable avec les valeurs pr\u00e9sentes dans l'arbre\n    arbre: arbre binaire de recherche\n    \"\"\"\n    if arbre is None:\n        return Noeud(x)\n    # \u00c0 compl\u00e9ter\n</code></pre> <p>\u00c0 faire</p> <p>V\u00e9rifier sur pythontutor que les insertions suivantes sont correctes.  </p> <pre><code>abr = None # abr est un arbre vide\nabr = inserer(15, abr)\nabr = inserer(20, abr)\nabr = inserer(7, abr)\nabr = inserer(3, abr)\n</code></pre> <p>Efficacit\u00e9 de l'insertion </p> <p>Cette fonction pr\u00e9sente une complexit\u00e9 temporelle identique \u00e0 celle qui effectuait la recherche. Cette complexit\u00e9 va d\u00e9pendre de la forme de l'arbre.</p> <p>\u00c0 faire</p> <p>Comme pour les listes cha\u00een\u00e9es, compl\u00e9ter la classe <code>ABR</code> dont l'interface propose les m\u00e9thodes <code>chercher</code> et <code>ajouter</code>.</p> <pre><code>class ABR:\n\"\"\" Une classe pour impl\u00e9menter des arbres binaires de recherche\"\"\"\n\n    def __init__(self):\n        self.racine = None # arbre vide\n\n    def ajouter(self, x):\n        self.racine = ...\n\n    def chercher(self, x):\n        return ...\n</code></pre> <p>Variante</p> <p>Une autre possibilit\u00e9 aurait \u00e9t\u00e9 d'inclure les codes de <code>inserer</code> et <code>rechercher</code> dans le code de la classe.</p> <pre><code>abr = ABR()\nabr.ajouter(15)\nabr.ajouter(20)\nabr.ajouter(7)\nabr.ajouter(3)\n</code></pre> <p></p>"},{"location":"NSITerm/SD/C11C2.html#parcours-dun-abr","title":"Parcours d'un ABR","text":"<pre><code>class Noeud:\n\"\"\" Une classe pour mod\u00e9liser les noeuds d'un arbre\"\"\"\n\n    def __init__(self, v, fg=None, fd=None):\n        self.val = v\n        self.gauche = fg\n        self.droit = fd \n\na = Noeud('A', \n          Noeud('B'),\n          Noeud('K', Noeud('L', Noeud('S'), Noeud('Y')),\n                Noeud('P', None, Noeud('Z')))\n)\n\ndef parcoursInfixe(r):\n    if r is not None:\n        parcoursInfixe(r.gauche)\n        print(r.val, end=' ')\n        parcoursInfixe(r.droit)\n\n\ndef parcoursPostfixe(r):\n    if r is not None:\n        parcoursPostfixe(r.gauche)\n        parcoursPostfixe(r.droit)\n        print(r.val, end=' ')\n\nparcoursPostfixe(a)\n</code></pre> <pre><code>B S Y L Z P K A\n</code></pre>"},{"location":"NSITerm/SD/C11E1.html","title":"Les arbres binaires en terminale NSI","text":""},{"location":"NSITerm/SD/C11E1.html#le-cours","title":"Le cours","text":"<ol> <li>Quelles sont la taille et la hauteur de cet arbre ?</li> <li>Dans un parcours infixe, donner l'ordre des noeuds visit\u00e9s.</li> </ol> <p>Donn\u00e9es</p> <pre><code>class Noeud:\n\"\"\" Une classe pour mod\u00e9liser les noeuds d'un arbre\"\"\"\n\n    def __init__(self, v, fg, fd):\n        self.val = v\n        self.gauche = fg\n        self.droit = fd \n</code></pre> <pre><code>arb1 = Noeud('1',\n             Noeud('2', Noeud('4', None, None), Noeud('5', None, None)),\n             Noeud('3', Noeud('6', \n                             Noeud('8', Noeud('10', None, None), Noeud('11', None, None)),\n                             Noeud('9', Noeud('12', None, None), Noeud('13', None, None))),\n                  Noeud('7', None, None))\n)\n</code></pre>"},{"location":"NSITerm/SD/C11E1.html#applications-directes","title":"Applications directes","text":"<p>Soit l'arbre de la figure suivante.  </p> <p> </p> <ol> <li>En utilisant la classe <code>Noeud</code> de l'exercice pr\u00e9c\u00e9dent, d\u00e9finir un objet <code>arb2</code> qui pourrait d\u00e9crire cet arbre. Pour \u00e9viter les ambiguit\u00e9s: G est le fils droit de D et F est le fils gauche de C</li> <li>Quelle est la hauteur de cet arbre?</li> <li>Donner les noeuds visit\u00e9s lors d'un parcours postfixe.</li> <li> <p>Compl\u00e9ter la fonction r\u00e9cursive <code>affiche</code> (voir ci-dessous) qui:  </p> <ul> <li>affiche un point <code>.</code> et qui ne renvoie rien pour un arbre vide;</li> <li>affiche une parenth\u00e8se ouvrante <code>(</code>, la valeur, le sous arbre gauche, le sous arbre droit et enfin une parenth\u00e8se fermante <code>)</code> autrement.  </li> </ul> <p>Par exemple pour l'arbre pr\u00e9sent\u00e9 ici, <code>affiche(arb2)</code> fournit:  </p> </li> </ol> <pre><code> (A (B (D. (G.. ) ) (E.. ) ) (C (F.. ). ) )\n</code></pre> <p>Remarque</p> <p>Une paire de parenth\u00e8ses d\u00e9limite un arbre ou un sous arbre.</p> <ol> <li>Dessiner l'arbre qui fournit <code>(A( D..)( B(C..).)</code></li> </ol> <pre><code>def affiche(arb):\n\"\"\" Affiche un arbre binaire\"\"\"\n\n    if arb is None:\n        print('.', end='')\n        return\n    else:\n        print(' (', end='')\n        print(..., end='')\n        ...        \n        ...        \n        print(' )', end='')\n</code></pre>"},{"location":"NSITerm/SD/C11E1.html#un-peigne-gauche","title":"Un peigne gauche","text":"<p>\u00c0 faire</p> <p>Compl\u00e9ter la fonction <code>peigne</code> ci-dessous, qui prend en param\u00e8tre un entier naturel \\(h\\) et qui renvoie un arbre de hauteur \\(h\\) o\u00f9 chaque noeud a pour valeur sa hauteur et n'a pas de sous arbre droit. V\u00e9rifier le r\u00e9sultat avec la fonction <code>affiche</code> de l'exercice pr\u00e9c\u00e9dent.</p> <pre><code>def peigne(h):\n\"\"\" \n    Renvoie un peigne gauche de hauteur h, dont la valeur de chaque noeud est\n    \u00e9gale \u00e0 sa hauteur.\n    h: entier naturel non nul\n    \"\"\"\n\n    noeud_courant = None\n    i = h\n    while i &gt; 0:\n        noeud_courant = Noeud(..., ..., ...)\n        i = ...\n    return noeud_courant\n</code></pre> <pre><code># TESTS\np = peigne(4)\naffiche(p)\n</code></pre> <p>M\u00e9thode r\u00e9cursive</p> <p>On souhaite maintenant \u00e9crire une fonction <code>peigne_recursif</code> pour d\u00e9crire le peigne gauche pr\u00e9c\u00e9dent. Proposer un code</p> <pre><code>def peignerec(h, racine=1):\n\"\"\"\n    Construit r\u00e9cursivement et renvoie un peigne gauche de hauteur h;\n    h: entier naturel\n    \"\"\"\n    if h == 0:\n        ...\n    else:\n        ...\n</code></pre> <pre><code>p2 = peignerec(4)\n</code></pre> <pre><code>p2.gauche\n</code></pre> <pre><code># Tester\naffiche(p2)\n</code></pre>"},{"location":"NSITerm/SD/C13C1.html","title":"Introduction aux graphes","text":""},{"location":"NSITerm/SD/C13C1.html#quest-ce-quun-graphe","title":"Qu'est-ce qu'un graphe ?","text":"<p>Un graphe est un couple compos\u00e9 d'un ensemble de sommets ...  ... et d'un ensemble d'ar\u00eates qui repr\u00e9sentent des relations entre ces sommets.  De fa\u00e7on plus formelle:</p> <p>D\u00e9finition</p> <p>un graphe est un couple \\(G=(S, A)\\) compos\u00e9:</p> <ul> <li>d'un ensemble fini de sommets \\(S\\), parfois appel\u00e9s noeuds;</li> <li>d'un ensemble fini d'ar\u00eates \\(A\\) reliants des sommets.  </li> </ul> Remarque <p>La notation anglo-saxonne \\(G=(V, E)\\) est souvent rencontr\u00e9e, \\(V\\) est mis pour vertice et \\(E\\) pour edge.</p>"},{"location":"NSITerm/SD/C13C1.html#a-quoi-sert-un-graphe","title":"A quoi sert un graphe ?","text":"<p>Cas d'utilisation</p> <p>Un graphe sert \u00e0 repr\u00e9senter des relations entre des \u00e9l\u00e9ments. </p> <p>Ses applications sont tr\u00e8s nombreuses. Il est particuli\u00e8rement adapt\u00e9 pour repr\u00e9senter des r\u00e9seaux.</p>"},{"location":"NSITerm/SD/C13C1.html#exemple-dun-reseau-social","title":"Exemple d'un r\u00e9seau social","text":"<p> Ici les sommets sont des personnes et la pr\u00e9sence d'une ar\u00eate indique un lien entre ces personnes.</p>"},{"location":"NSITerm/SD/C13C1.html#exemple-dun-reseau-de-bus","title":"Exemple d'un r\u00e9seau de bus","text":"<p> Ici les sommets sont des arr\u00eats de bus et les ar\u00eates repr\u00e9sentent la relation \"permet d'acc\u00e9der \u00e0 l'arr\u00eat ...\"</p>"},{"location":"NSITerm/SD/C13C1.html#exemple-dun-reseau-electrique","title":"Exemple d'un r\u00e9seau \u00e9lectrique","text":"<p> Ici les sommets sont des postes de transformation haute tension et les ar\u00eates la relation \"alimente ..\"</p>"},{"location":"NSITerm/SD/C13C1.html#exemple-de-reseau-informatique","title":"Exemple de r\u00e9seau informatique","text":"<p> Ici les sommets sont des machines et les ar\u00eates la relation \"est reli\u00e9 \u00e0 ...\".</p>"},{"location":"NSITerm/SD/C13C1.html#exercice-dapplication-directe","title":"Exercice d'application directe","text":"<p>Soit un r\u00e9seau social compos\u00e9 de 6 personnes (A, B, C, D, E et F). Donner un repr\u00e9sentation de ce r\u00e9seau, sachant que les relations entre les divers abonn\u00e9s sont les suivantes:  </p> <ul> <li>A est ami avec B, C et D</li> <li>B est ami avec A et D</li> <li>C est ami avec A, E et D</li> <li>D est ami avec tous les autres</li> <li>E est ami avec C, D et F</li> <li>F est ami avec E et D</li> </ul>"},{"location":"NSITerm/SD/C13C1.html#quelques-definitions","title":"Quelques d\u00e9finitions","text":"<p>Voisinage</p> <p>Deux sommets \\(u\\) et \\(v\\) sont adjacents si ils sont reli\u00e9s par une ar\u00eate. L'ensemble des sommets adjacents \u00e0 \\(u\\) constitue les voisins de ce dernier.  </p> <p>Chemin</p> <p>Soient \\(u\\) et \\(v\\) deux sommets d'un graphe \\(G\\). On dit qu'un chemin relie \\(u\\) \u00e0 \\(v\\) si il existe une suite finie de sommets reli\u00e9s deux \u00e0 deux par une ar\u00eate, menant de \\(u\\) \u00e0 \\(v\\).  </p> <p>Application directe 1</p> <p>  Existe-t-il un chemin entre E et D ? D est-il un voisin de E?</p> <p>Graphe non orient\u00e9s / orient\u00e9s Dans tous les exemples pr\u00e9c\u00e9dents, le parcours des ar\u00eates pouvait se faire dans les deux sens: on parle alors de graphe non orient\u00e9s. Lorsque la mod\u00e9lisation n\u00e9cessite un parcours d'ar\u00eate dans un sens bien d\u00e9termin\u00e9, on parle de graphe orient\u00e9. </p> <p>On utilise souvent le terme d'arc \u00e0 la place d'ar\u00eate.  </p> <p>Encore une fois, on peut citer en exemple les r\u00e9seaux sociaux. En effet, par exemple pour Facebook si A est ami avec B alors B est aussi ami avec A alors que sur Twitter A peut suivre B qui ne suit pas forc\u00e9ment A. Exemple de repr\u00e9sentation  </p> <p>Dans un graphe orient\u00e9, il est commode de traiter les voisins en terme de successeur/pr\u00e9d\u00e9cesseur. Ainsi, A est le pr\u00e9d\u00e9cesseur de C,  D est un successeur de B, etc.  </p> <p>Application directe 2</p> <p>Repr\u00e9senter le graphe mod\u00e9lisant le r\u00e9seau routier urbain ayant les caract\u00e9ristiques suivantes:  </p> <p>Carefours: A, B, C, D, E, F, G  </p> <ul> <li>il existe une liaison \u00e0 double sens entre A et C;</li> <li>il existe une liaison \u00e0 sens unique B-&gt;A entre A et B;</li> <li>il existe une liaison \u00e0 sens unique A-&gt;D entre A et D;</li> <li>il existe une liaison \u00e0 sens unique B-&gt;F entre B et F;</li> <li>il existe une liaison \u00e0 sens unique E-&gt;B entre B et E;</li> <li>il existe une liaison \u00e0 double sens entre B et G;</li> <li>il existe une liaison \u00e0 double sens entre D et G;</li> <li>il existe une liaison \u00e0 double sens entre E et F.</li> </ul>"},{"location":"NSITerm/SD/C13C1.html#comment-representer-un-graphe","title":"Comment repr\u00e9senter un graphe?","text":"<p>On distingue deux grands types de repr\u00e9sentation:  </p> <ul> <li>utilisation d'une matrice d'adjacence;</li> <li>utilisation(s) liste(s) de successeurs / pr\u00e9d\u00e9cesseurs.</li> </ul> <p>D\u00e9taillons ces deux modes de repr\u00e9sentation.</p>"},{"location":"NSITerm/SD/C13C1.html#representation-avec-une-matrice-dadjacence","title":"Repr\u00e9sentation avec une matrice d'adjacence","text":"<p>Il s'agit d'un tableau \u00e0 doubles entr\u00e9es. Ces derni\u00e8res repr\u00e9sentent les sommets. \u00c0 chaque intersection ligne \\(i\\) - colonne \\(j\\) (ligne \\(i\\) correspond au sommet \\(i\\) et colonne \\(j\\) correspond au sommet \\(j\\)), on place un 1 s'il existe une ar\u00eate entre le sommet \\(i\\) et le sommet \\(j\\), et un 0 s'il n'existe pas d'ar\u00eate entre le sommet \\(i\\) et le sommet \\(j\\).</p>"},{"location":"NSITerm/SD/C13C1.html#exemple","title":"Exemple","text":"A B C D E A 0 1 1 0 1 B 1 0 1 1 0 C 1 1 0 1 0 D 0 1 1 0 0 E 1 0 0 0 0 <p>En pratique, on va ommettre l'\u00e9criture des sommets et \u00e9crire la matrice d'adjacence de la mani\u00e8re suivante:  </p> \\[ \\begin{pmatrix} 0&amp;1&amp;1&amp;0&amp;1\\\\ 1&amp;0&amp;1&amp;1&amp;0\\\\ 1&amp;1&amp;0&amp;1&amp;0\\\\ 0&amp;1&amp;1&amp;0&amp;0\\\\ 1&amp;0&amp;0&amp;0&amp;0 \\end{pmatrix} \\]"},{"location":"NSITerm/SD/C13C1.html#application-directe-3","title":"Application directe 3","text":"<p>Donner la matrice d'adjacence du graphe suivant:  </p> <p></p>"},{"location":"NSITerm/SD/C13C1.html#cas-des-graphes-orientes","title":"Cas des graphes orient\u00e9s","text":"<p>On proc\u00e8de de la m\u00eame mani\u00e8re en faisant attention au sens de parcours des arcs.</p>"},{"location":"NSITerm/SD/C13C1.html#application-directe-4","title":"Application directe 4","text":"<p>Donner la matrice d'adjacence du graphe orient\u00e9 d\u00e9j\u00e0 rencontr\u00e9 pr\u00e9c\u00e9demment:  </p> <p></p>"},{"location":"NSITerm/SD/C13C1.html#representation-par-liste-dadjacence","title":"Repr\u00e9sentation par liste d'adjacence","text":"<p>Il s'agit dans ce cas de repr\u00e9senter chaque sommet et \u00e0 associer chacun d'eux \u00e0 la liste de ses voisins dans le cas d'un graphe non orient\u00e9 ou la liste de ses successeurs ou pr\u00e9d\u00e9cesseurs dans le cas d'un graphe orient\u00e9.</p>"},{"location":"NSITerm/SD/C13C1.html#exemples","title":"Exemples","text":"<p>Le graphe non orient\u00e9 de l'application directe 3 peut \u00eatre repr\u00e9sent\u00e9 par sa liste d'adjacence:  </p> Sommet Voisins R --&gt; [U, T] S --&gt; [V, U] T --&gt; [R, V] U --&gt; [R, S] V --&gt; [S, T] <p>Quant au graphe orient\u00e9 de l'application directe 4, on peut le repr\u00e9senter par une liste de successeurs:  </p> Sommet Succ A --&gt; [B, C] B --&gt; [D, E] D --&gt; [ ] C --&gt; [E] E --&gt; [B, F] F --&gt; [ ]"},{"location":"NSITerm/SD/C13C1.html#application-directe-5","title":"Application directe 5","text":"<p>Repr\u00e9senter le graphe de l'application directe 1 par une liste d'adjacence et celui de l'application directe 4 par une liste de pr\u00e9d\u00e9cesseurs.</p>"},{"location":"NSITerm/SD/C13C1.html#choix-du-mode-de-representation","title":"Choix du mode de repr\u00e9sentation","text":"<p>Le choix d\u00e9pend du type de graphe (dense ou pas), des algorithmes. Par ailleurs, on montrera en exercices qu'il est possible de passer d'une repr\u00e9sentation \u00e0 l'autre.</p>"},{"location":"NSITerm/SD/C13E1.html","title":"Repr\u00e9sentation d'un graphe","text":""},{"location":"NSITerm/SD/C13E1.html#un-graphe-simple","title":"Un graphe simple","text":"<p>On consid\u00e8re le graphe ci-dessous:  </p> <p></p> <ol> <li>Est-ce un graphe orient\u00e9 ?</li> <li>Quels sont les voisins de 1 ?</li> <li>Construire sa matrice d\u2019adjacence.</li> <li>Combien peut-on ajouter d\u2019ar\u00eates \u00e0 ce graphe ?</li> </ol>"},{"location":"NSITerm/SD/C13E1.html#graphe-complet","title":"Graphe complet","text":"<p>Un graphe est dit complet si tous ses sommets sont reli\u00e9s. On consid\u00e8re les trois graphes complets suivant:  </p> <p> </p> <ol> <li>Construire un graphe complet \u00e0 5 sommets.</li> <li>Construire les matrices d\u2019adjacence des trois graphes ci-dessus.</li> <li>Combient d\u2019ar\u00eates comportent-ils ?</li> <li>En examinant les matrices d\u2019adjacence, d\u00e9terminer le nombre maximum d\u2019ar\u00eates d\u2019un graphe comportant \\(n\\) sommets.</li> </ol>"},{"location":"NSITerm/SD/C13E1.html#retrouver-son-chemin","title":"Retrouver son chemin","text":"<p>D\u00e9finitions</p> <p>Un chemin est simple s'il n'emprunte pas deux fois le m\u00eame arc. Un chemin simple reliant un sommet \u00e0 lui m\u00eame et contenant au moins un arc est appel\u00e9 un cycle. </p> <ol> <li>Trouver trois chemins simples menant de A \u00e0 C.</li> <li>Trouver deux cycles sur ce graphe.</li> </ol>"},{"location":"NSITerm/SD/C13E1.html#modeliser-une-situation-par-un-graphe","title":"Mod\u00e9liser une situation par un graphe","text":""},{"location":"NSITerm/SD/C13E1.html#tournoi-de-football","title":"Tournoi de football","text":"<p>On souhaite organiser un tournoi de football avec 4 \u00e9quipes (num\u00e9rot\u00e9es de 1 \u00e0 4). Chaque \u00e9quipe rencontre une seule fois toutes les autres.  </p> <ol> <li>Repr\u00e9senter la situation sous la forme d\u2019un graphe</li> <li>Combien d\u2019ar\u00eates poss\u00e8de-t-il ? En d\u00e9duire le nombre de matchs au total pour ce tournoi</li> <li>En se r\u00e9f\u00e9rant \u00e0 l'exercice 2, quelle propri\u00e9t\u00e9 remarquable poss\u00e8de ce graphe?</li> </ol>"},{"location":"NSITerm/SD/C13E1.html#tournoi-de-tennis","title":"Tournoi de tennis","text":"<p>Un club de tennis doit s\u00e9lectionner deux joueurs parmi quatre pour repr\u00e9senter le club \u00e0 un tournoi national. Les quatre joueurs sont not\u00e9s A, B, C et D. Pour r\u00e9aliser la s\u00e9l\u00e9ction le club organise des matchs, chaque joueur rencontrant les trois autres. R\u00e8glement:  </p> <ul> <li>Tout match gagn\u00e9 donne un point;</li> <li>Tout match perdu enl\u00e8ve un point.</li> </ul> <p>Les joueurs s\u00e9lectionn\u00e9s sont les joueurs ayant obtenu le plus grand nombre de points. On donne le r\u00e9sultat sous la forme d\u2019un graphe orient\u00e9:  </p> <p></p> <p>L'orientation des arcs est telle que \\(X\\longrightarrow Y\\) signifie \\(X\\) a battu \\(Y\\).  </p> <p>Quels sont les deux joueurs s\u00e9lectionn\u00e9s ?</p>"},{"location":"NSITerm/SD/C13E1.html#reunion-de-famille-niveau-de-difficulte-xxl","title":"R\u00e9union de famille - niveau de difficult\u00e9 XXL :)","text":"<p>Michel est invit\u00e9 par Andr\u00e9 \u00e0 un d\u00eener de famille. D\u00e8s son arriv\u00e9e, il se pr\u00e9sente \u00e0 chacune des onze autres personnes qu'il trouve dans la maison. Les onze premi\u00e8res phrases qu'il entend successivement sont les suivantes:  </p> <ul> <li>B\u00e9atrice : \"Bonjour ! Je suis la m\u00e8re d'Andr\u00e9.\"</li> <li>Carole : \"Bienvenue ! Je suis la s\u0153ur du p\u00e8re d'Andr\u00e9.\"</li> <li>Daniel : \"Salut ! Je suis le fils unique de la s\u0153ur de la m\u00e8re d'Andr\u00e9.\"</li> <li>\u00c9mile : \"Bonjour ! Je suis l'unique beau-fr\u00e8re du fils de Karl.\"</li> <li>Fabienne : \"M\u00e8re de deux filles, je suis aussi la grand-m\u00e8re maternelle de Daniel.\"</li> <li>Gaston : \"Salut ! Je suis un des fils de Lucien et un des petits-fils de Fabienne.\"</li> <li>Honor\u00e9 : \"Je suis le grand-p\u00e8re paternel de Lucien.\"</li> <li>Ir\u00e8ne : \"Je suis l'unique belle-s\u0153ur de Lucien.\"</li> <li>Joseph : \"Salut ! Je suis le neveu de Lucien et le petit fils de Karl.\"</li> <li>Karl: Mon petit-fils m'a parl\u00e9 de vous.</li> <li>Lucien : Bienvenue dans ma maison, je vous ai vu a l'instant parler avec mon p\u00e8re.</li> </ul> <p>Et la famille d'ajouter d'une seule voix : \"si vous ne trouvez pas les liens familiaux qui nous unissent, vous n'aurez pas \u00e0 d\u00eener !\"  </p> <p>(d'apr\u00e8s F. Droesbeke, les graphes par l'exemple, pp 17-18 ellipses)</p> <p>Aider Michel ... en mod\u00e9lisant cette situation par un graphe. Remarque: dans cet exercice, le beau-fr\u00e8re de X est le fr\u00e8re du mari/femme de X, et la belle-soeur la soeur du mari/femme de X.</p>"},{"location":"NSITerm/SD/C13E1.html#codage","title":"Codage","text":"<p>On consid\u00e8re le graphe ci-dessous ainsi que sa matrice d'adjacence. </p>"},{"location":"NSITerm/SD/C13E1.html#questions-de-cours","title":"Questions de cours","text":"<ol> <li>Est-ce un graphe orient\u00e9 ou non orient\u00e9?</li> <li>Combien a-t-il de sommets? d'ar\u00eates?</li> <li>Les sommets d et h sont-ils voisins?</li> </ol>"},{"location":"NSITerm/SD/C13E1.html#implementation-en-python","title":"Impl\u00e9mentation en python","text":""},{"location":"NSITerm/SD/C13E1.html#liste-dadjacence","title":"Liste d'adjacence","text":"<p>Une fa\u00e7on d\u2019encoder un graphe sous Python est d\u2019utiliser un dictionnaire contenant les listes des voisins de chaque sommet. Les cl\u00e9s seront les sommets du graphe et leur valeur sera la liste des sommets adjacents.</p> <pre><code>G = {\n    'a': ['b','c'],\n    'b': ['a','d', 'e'],\n    'c': ['a','d'],\n    'd': ['b','c', 'e'],\n    'e': ['b','d', 'f', 'g'],\n    'f': ['e','g'],\n    'g': ['e','f', 'h'],\n    'h': ['g']\n}\n</code></pre> <ol> <li>Ecrire une fonction <code>sommets</code> qui prend un graphe en param\u00e8tre et qui renvoie la liste de ses sommets.</li> <li>Ecrire une fonction <code>voisins</code> qui prend en param\u00e8tres un graphe et un sommet et qui renvoie la liste des vosins de ce sommet.</li> <li>Que r\u00e9alise la fonction <code>lst_to_mat</code>? Expliquer notamment la portion de code situ\u00e9e entre les lignes 9 et 12.</li> <li>Le r\u00e9sultat de l'appel <code>lst_to_mat(G)</code> est-il conforme aux donn\u00e9es de l'\u00e9nonc\u00e9?</li> </ol> <pre><code>def sommets(g):\n\"\"\"\n    \u00e0 compl\u00e9ter\n    \"\"\"\n    pass\n</code></pre> <pre><code>def voisins(g, u):\n\"\"\"\n    \u00e0 compl\u00e9ter\n    \"\"\"\n    pass\n</code></pre> <pre><code>def lst_to_mat(g):\n\"\"\"\n    renvoie ...\n    g: graphe mod\u00e9lis\u00e9 par un dictionnaire de listes d'adjacences\n    \"\"\"\n    n = len(g)\n    adj = [[0] * n for _ in range(n)]\n    lst_som = sommets(g) \n    ind_som = {lst_som[i]: i for i in range(n)}\n    for s in lst_som:\n        for v in voisins(g, s):\n            adj[ind_som[s]][ind_som[v]] = 1\n    return adj           \n</code></pre> <pre><code># A d\u00e9commenter puis ex\u00e9cuter (utile pour la suite)\n#A = lst_to_mat(G)\n</code></pre>"},{"location":"NSITerm/SD/C13E1.html#matrice-dadjacence","title":"Matrice d'adjacence","text":"<ol> <li>Ecrire une fonction <code>adj_to_lst</code> qui prend en param\u00e8tre une liste (de python) de sommets <code>l</code> et une matrice d'adjacence <code>mat</code> (liste de listes) et qui renvoie un dictionnaire dont les items sont de la forme: <code>sommet: liste de voisins</code>. On peut s'inspirer de la fonction <code>lst_to_mat</code> et notamment l'utilisation d'un dictionnaire qui fait l'association index &lt;--&gt; nom de sommet.</li> <li>Donner alors, sous forme de liste d'adjacence, une repr\u00e9sentation du graphe dont la matrice d'adjacence est la suivante:  </li> </ol> \\[ \\begin{pmatrix} 0&amp;1&amp;0&amp;0&amp;0\\\\ 0&amp;0&amp;1&amp;1&amp;1\\\\ 0&amp;1&amp;0&amp;1&amp;0\\\\ 0&amp;0&amp;1&amp;0&amp;0\\\\ 1&amp;1&amp;0&amp;1&amp;0 \\end{pmatrix} \\] <p>On notera les sommets: A, B, C, D et E.</p> <pre><code>def adj_to_lst(l, mat):\n\"\"\"\n    \u00e0 compl\u00e9ter\n    \"\"\"\n    pass\n</code></pre> <pre><code># TESTS QUESTION 1- A EXECUTER\nrep = {'a': ['b', 'c'],\n 'b': ['a', 'd', 'e'],\n 'c': ['a', 'd'],\n 'd': ['b', 'c', 'e'],\n 'e': ['b', 'd', 'f', 'g'],\n 'f': ['e', 'g'],\n 'g': ['e', 'f', 'h'],\n 'h': ['g']}\nassert adj_to_lst(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'], A) == rep\n</code></pre> <pre><code># QUESTION 2 - A DECOMMENTER, COMPLETER PUIS EXECUTER\n\n#l = []\n#mat = []\n#adj_to_lst(l, mat)\n</code></pre>"},{"location":"NSITerm/SD/C13E1.html#implementation-dune-classe-graphe-oriente-par-matrice-dadjacence","title":"Impl\u00e9mentation d'une classe graphe orient\u00e9 par matrice d'adjacence","text":"<p>On se propose d'encapsuler les op\u00e9rations r\u00e9alisables sur les graphes orient\u00e9s dans une classe <code>GrapheOr</code>.  La construction repose sur l'utilisation d'une matrice d'adjacence.</p> <pre><code>class GrapheOr:\n\"\"\" Une classe pour repr\u00e9senter les graphes orient\u00e9s.\"\"\"\n\n    def __init__(self, sommets):\n\"\"\" sommets est la liste des sommets du graphe; ceux-ci\n            peuvent \u00eatre des entiers ou des caract\u00e8res.\"\"\"\n\n        self.s = sommets\n        self.ma = [[0]*len(sommets) for _ in range(len(sommets))]\n</code></pre> <ol> <li> <p>Ajouter une m\u00e9thode <code>ajouter_arc</code> qui prend deux param\u00e8tres <code>s1</code> et <code>s2</code> correspondant \u00e0 deux sommets (on s'assurera de leur pr\u00e9sence dans la liste de sommets) qui permet d'ajouter un arc entre <code>s1</code> et <code>s2</code>. Cette m\u00e9thode ne renvoie rien.</p> </li> <li> <p>Ajouter une m\u00e9thode <code>arc</code> qui prend en param\u00e8tres deux sommets <code>s1</code> et <code>s2</code> et qui renvoie un bool\u00e9en correspondant \u00e0 la pr\u00e9sence ou non d'un arc entre ces deux sommets.</p> </li> <li> <p>Ajouter une m\u00e9thode <code>voisins</code> qui prend en param\u00e8tre un sommet <code>s1</code> et qui renvoie la liste de ses voisins.</p> </li> </ol> <pre><code>g = GrapheOr(['a', 'b', 'c', 'd'])\ng.ajouter_arc('a', 'b')\ng.ajouter_arc('a', 'd')\ng.ajouter_arc('b', 'c')\ng.ajouter_arc('d', 'a')\n</code></pre> <ol> <li>Impl\u00e9menter une classe <code>GrapheOr2</code> qui utilise un dictionnaire de listes d'adjacence. L'interface restant rigoureusement la m\u00eame.</li> </ol> <pre><code># TESTS - A DECOMMENTER ET EXECUTER\n#g = GrapheOr(['a', 'b', 'c', 'd'])\n#g.ajouter_arc('a', 'b')\n#g.ajouter_arc('a', 'd')\n#g.ajouter_arc('b', 'c')\n#g.ajouter_arc('d', 'a')\n#assert g.voisins('a') == ['b', 'd']\n#assert g.voisins('c') == []\n</code></pre>"},{"location":"NSITerm/SD/C13E1P.html","title":"C13E1P","text":"<pre><code>G = {\n    'a': ['b','c'],\n    'b': ['a','d', 'e'],\n    'c': ['a','d'],\n    'd': ['b','c', 'e'],\n    'e': ['b','d', 'f', 'g'],\n    'f': ['e','g'],\n    'g': ['e','f', 'h'],\n    'h': ['g']\n}\n</code></pre> <pre><code>def sommets(graphe):\n\"\"\"\n    renvoie une liste de tous les sommets de 'graphe'\n    \"\"\"\n    return list(graphe.keys())\n</code></pre> <pre><code>sommets(G)\n</code></pre> <pre><code>['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\n</code></pre> <pre><code>def voisins(g, u):\n\"\"\"\n    Renvoie la liste des voisins du sommet u, dans le graphe g\n    \"\"\"\n    assert u in g, \"Sommet inconnu\"\n    return g[u]\n</code></pre> <pre><code>voisins(G, 'f')\n</code></pre> <pre><code>['e', 'g']\n</code></pre> <pre><code>def lst_to_mat(g):\n\"\"\"\n    renvoie la matrice d'adjacence associ\u00e9e au graphe g\n    g: graphe mod\u00e9lis\u00e9 par un dictionnaire de listes d'adjacences\n    \"\"\"\n    n = len(g)\n    adj = [[0] * n for _ in range(n)]\n    liste_sommets = sommets(g) \n    index_sommet = {liste_sommets[i]: i for i in range(n)}\n    print(index_sommet)\n\n    for sommet in liste_sommets:\n        for v in voisins(g, sommet):\n            adj[index_sommet[sommet]][index_sommet[v]] = 1\n    return adj \n</code></pre> <pre><code>lst_to_mat(G)\n</code></pre> <pre><code>{'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7}\n\n\n\n\n\n[[0, 1, 1, 0, 0, 0, 0, 0],\n [1, 0, 0, 1, 1, 0, 0, 0],\n [1, 0, 0, 1, 0, 0, 0, 0],\n [0, 1, 1, 0, 1, 0, 0, 0],\n [0, 1, 0, 1, 0, 1, 1, 0],\n [0, 0, 0, 0, 1, 0, 1, 0],\n [0, 0, 0, 0, 1, 1, 0, 1],\n [0, 0, 0, 0, 0, 0, 1, 0]]\n</code></pre> <pre><code>A = lst_to_mat(G)\n</code></pre> <pre><code>{'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7}\n</code></pre> <pre><code>def lst_to_mat2(g):\n\"\"\"\n    renvoie la matrice d'adjacence associ\u00e9e au graphe g\n    g: graphe mod\u00e9lis\u00e9 par un dictionnaire de listes d'adjacences\n    \"\"\"\n    n = len(g)\n    adj = [[0] * n for _ in range(n)]\n    liste_sommets = sommets(g)\n    for sommet in liste_sommets:\n        for voisin in voisins(g, sommet):\n            adj[liste_sommets.index(sommet)][liste_sommets.index(voisin)] = 1\n    return adj\n</code></pre> <pre><code>lst_to_mat2(G)\n</code></pre> <pre><code>[[0, 1, 1, 0, 0, 0, 0, 0],\n [1, 0, 0, 1, 1, 0, 0, 0],\n [1, 0, 0, 1, 0, 0, 0, 0],\n [0, 1, 1, 0, 1, 0, 0, 0],\n [0, 1, 0, 1, 0, 1, 1, 0],\n [0, 0, 0, 0, 1, 0, 1, 0],\n [0, 0, 0, 0, 1, 1, 0, 1],\n [0, 0, 0, 0, 0, 0, 1, 0]]\n</code></pre> <pre><code>def mat_to_lst(liste_sommets, mat):\n\"\"\"\n    Renvoie un dictionnaire correspondant \u00e0 la conversion de la matrice\n    d'adjacence mat en liste d'adjacence.\n    \"\"\"\n    adj = dict()\n    n = len(liste_sommets)\n    for sommet in liste_sommets:\n        adj[sommet] = []\n    for i in range(n):\n        for j in range(n):\n            if mat[i][j] == 1:\n                adj[liste_sommets[i]].append(liste_sommets[j])\n    return adj\n</code></pre> <pre><code>mat_to_lst(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'], A) == G\n</code></pre> <pre><code>True\n</code></pre> <ol> <li> <p>Ecrire une fonction <code>mat_to_lst</code> qui prend en param\u00e8tre une liste (de python) de sommets <code>l</code> et une matrice d'adjacence <code>mat</code> (liste de listes) et qui renvoie un dictionnaire correspondant \u00e0 une liste d'adjacence c'est-\u00e0-dire de la forme: <pre><code>{'sommet': [liste de voisins],\n ...\n}\n</code></pre></p> </li> <li> <p>Donner alors, sous forme de liste d'adjacence, une repr\u00e9sentation du graphe dont la matrice d'adjacence est la suivante:  </p> </li> </ol> \\[ \\begin{pmatrix} 0&amp;1&amp;0&amp;0&amp;0\\\\ 0&amp;0&amp;1&amp;1&amp;1\\\\ 0&amp;1&amp;0&amp;1&amp;0\\\\ 0&amp;0&amp;1&amp;0&amp;0\\\\ 1&amp;1&amp;0&amp;1&amp;0 \\end{pmatrix} \\] <p>On notera les sommets: A, B, C, D et E.</p> <pre><code># QUESTION 2 - A DECOMMENTER, COMPLETER PUIS EXECUTER\n\nl = ['A', 'B', 'C', 'D', 'E']\nmat = [\n    [0, 1, 0, 0, 0],\n    [0, 0, 1, 1, 1],\n    [0, 1, 0, 1, 0],\n    [0, 0, 1, 0, 0],\n    [1, 1, 0, 1, 0]\n]\nmat_to_lst(l, mat)\n</code></pre> <pre><code>{'A': ['B'],\n 'B': ['C', 'D', 'E'],\n 'C': ['B', 'D'],\n 'D': ['C'],\n 'E': ['A', 'B', 'D']}\n</code></pre> <pre><code>class GrapheOriente:\n\"\"\" Une classe pour repr\u00e9senter les graphes orient\u00e9s.\"\"\"\n\n    def __init__(self, sommets):\n\"\"\" sommets est la liste des sommets du graphe; ceux-ci\n            peuvent \u00eatre des entiers ou des caract\u00e8res.\"\"\"\n\n        self.s = sommets\n        self.mat = [[0]*len(sommets) for _ in range(len(sommets))]\n\n    def ajouter_arc(self, s1, s2):\n\"\"\" Ajoute un arc s1 --&gt; s2 en modifiant la matrice d'ajacence\"\"\"\n\n        self.mat[self.s.index(s1)][self.s.index(s2)] = 1\n\n    def arc(self, s1, s2):\n\"\"\" V\u00e9rifie la pr\u00e9sence d'un arc s1 --&gt; s2\"\"\"\n        if not s1 in self.s or not s2 in self.s: \n            return False\n        return self.mat[self.s.index(s1)][self.s.index(s2)] == 1\n\n    def voisins(self, s1):\n        liste_voisins = []\n        for j in range(len(self.s)):\n            if self.mat[self.s.index(s1)][j] == 1:\n                liste_voisins.append(self.s[j])\n        return liste_voisins\n</code></pre> <pre><code>g = GrapheOriente(['a', 'b', 'c', 'd'])\ng.ajouter_arc('a', 'b')\ng.ajouter_arc('a', 'd')\ng.ajouter_arc('b', 'c')\ng.ajouter_arc('d', 'a')\n</code></pre> <pre><code>g.arc('a', 'd')\n</code></pre> <pre><code>True\n</code></pre> <pre><code>g.voisins('a')\n</code></pre> <pre><code>['b', 'd']\n</code></pre> <pre><code># TESTS - A DECOMMENTER ET EXECUTER\ng = GrapheOriente(['a', 'b', 'c', 'd'])\ng.ajouter_arc('a', 'b')\ng.ajouter_arc('a', 'd')\ng.ajouter_arc('b', 'c')\ng.ajouter_arc('d', 'a')\nassert g.voisins('a') == ['b', 'd']\nassert g.voisins('c') == []\n</code></pre> <pre><code>class GrapheOriente2:\n\"\"\" Une classe pour repr\u00e9senter les graphes orient\u00e9s.\"\"\"\n\n    def __init__(self, sommets):\n\"\"\" sommets est la liste des sommets du graphe; ceux-ci\n            peuvent \u00eatre des entiers ou des caract\u00e8res.\"\"\"\n\n        self.s = sommets\n        #self.mat = [[0]*len(sommets) for _ in range(len(sommets))]\n        self.liste = {sommet: [] for sommet in self.s}\n\n    def ajouter_arc(self, s1, s2):\n\"\"\" Ajoute un arc s1 --&gt; s2 en modifiant la matrice d'ajacence\"\"\"\n\n        #self.mat[self.s.index(s1)][self.s.index(s2)] = 1\n        self.liste[s1].append(s2)\n\n    def arc(self, s1, s2):\n\"\"\" V\u00e9rifie la pr\u00e9sence d'un arc s1 --&gt; s2\"\"\"\n        if not s1 in self.s or not s2 in self.s: \n            return False\n        return s2 in self.voisins(s1)\n\n    def voisins(self, s1):\n        return self.liste[s1]\n</code></pre> <pre><code># TESTS - A DECOMMENTER ET EXECUTER\ng = GrapheOriente2(['a', 'b', 'c', 'd'])\ng.ajouter_arc('a', 'b')\ng.ajouter_arc('a', 'd')\ng.ajouter_arc('b', 'c')\ng.ajouter_arc('d', 'a')\nassert g.voisins('a') == ['b', 'd']\nassert g.voisins('c') == []\n</code></pre> <pre><code>\n</code></pre>"},{"location":"NSITerm/SD/C13E1b.html","title":"Repr\u00e9sentation d'un graphe","text":""},{"location":"NSITerm/SD/C13E1b.html#un-graphe-simple","title":"Un graphe simple","text":"<p>On consid\u00e8re le graphe ci-dessous:  </p> <p></p> <ol> <li>Est-ce un graphe orient\u00e9 ?</li> <li>Quels sont les voisins de 1 ?</li> <li>Construire sa matrice d\u2019adjacence.</li> <li>Combien peut-on ajouter d\u2019ar\u00eates \u00e0 ce graphe ?</li> </ol>"},{"location":"NSITerm/SD/C13E1b.html#graphe-complet","title":"Graphe complet","text":"<p>Un graphe est dit complet si tous ses sommets sont reli\u00e9s. On consid\u00e8re les trois graphes complets suivant:  </p> <p> </p> <ol> <li>Construire un graphe complet \u00e0 5 sommets.</li> <li>Construire les matrices d\u2019adjacence des trois graphes ci-dessus.</li> <li>Combient d\u2019ar\u00eates comportent-ils ?</li> <li>En examinant les matrices d\u2019adjacence, d\u00e9terminer le nombre maximum d\u2019ar\u00eates d\u2019un graphe comportant \\(n\\) sommets.</li> </ol>"},{"location":"NSITerm/SD/C13E1b.html#retrouver-son-chemin","title":"Retrouver son chemin","text":"<p>D\u00e9finitions</p> <p>Un chemin est simple s'il n'emprunte pas deux fois le m\u00eame arc. Un chemin simple reliant un sommet \u00e0 lui m\u00eame et contenant au moins un arc est appel\u00e9 un cycle. </p> <ol> <li>Trouver trois chemins simples menant de A \u00e0 C.</li> <li>Trouver deux cycles sur ce graphe.</li> </ol>"},{"location":"NSITerm/SD/C13E1b.html#modeliser-une-situation-par-un-graphe","title":"Mod\u00e9liser une situation par un graphe","text":""},{"location":"NSITerm/SD/C13E1b.html#tournoi-de-football","title":"Tournoi de football","text":"<p>On souhaite organiser un tournoi de football avec 4 \u00e9quipes (num\u00e9rot\u00e9es de 1 \u00e0 4). Chaque \u00e9quipe rencontre une seule fois toutes les autres.  </p> <ol> <li>Repr\u00e9senter la situation sous la forme d\u2019un graphe</li> <li>Combien d\u2019ar\u00eates poss\u00e8de-t-il ? En d\u00e9duire le nombre de matchs au total pour ce tournoi</li> <li>En se r\u00e9f\u00e9rant \u00e0 l'exercice 2, quelle propri\u00e9t\u00e9 remarquable poss\u00e8de ce graphe?</li> </ol>"},{"location":"NSITerm/SD/C13E1b.html#tournoi-de-tennis","title":"Tournoi de tennis","text":"<p>Un club de tennis doit s\u00e9lectionner deux joueurs parmi quatre pour repr\u00e9senter le club \u00e0 un tournoi national. Les quatre joueurs sont not\u00e9s A, B, C et D. Pour r\u00e9aliser la s\u00e9l\u00e9ction le club organise des matchs, chaque joueur rencontrant les trois autres. R\u00e8glement:  </p> <ul> <li>Tout match gagn\u00e9 donne un point;</li> <li>Tout match perdu enl\u00e8ve un point.</li> </ul> <p>Les joueurs s\u00e9lectionn\u00e9s sont les joueurs ayant obtenu le plus grand nombre de points. On donne le r\u00e9sultat sous la forme d\u2019un graphe orient\u00e9:  </p> <p></p> <p>L'orientation des arcs est telle que \\(X\\longrightarrow Y\\) signifie \\(X\\) a battu \\(Y\\).  </p> <p>Quels sont les deux joueurs s\u00e9lectionn\u00e9s ?</p>"},{"location":"NSITerm/SD/C13E1b.html#reunion-de-famille-niveau-de-difficulte-xxl","title":"R\u00e9union de famille - niveau de difficult\u00e9 XXL :)","text":"<p>Michel est invit\u00e9 par Andr\u00e9 \u00e0 un d\u00eener de famille. D\u00e8s son arriv\u00e9e, il se pr\u00e9sente \u00e0 chacune des onze autres personnes qu'il trouve dans la maison. Les onze premi\u00e8res phrases qu'il entend successivement sont les suivantes:  </p> <ul> <li>B\u00e9atrice : \"Bonjour ! Je suis la m\u00e8re d'Andr\u00e9.\"</li> <li>Carole : \"Bienvenue ! Je suis la s\u0153ur du p\u00e8re d'Andr\u00e9.\"</li> <li>Daniel : \"Salut ! Je suis le fils unique de la s\u0153ur de la m\u00e8re d'Andr\u00e9.\"</li> <li>\u00c9mile : \"Bonjour ! Je suis l'unique beau-fr\u00e8re du fils de Karl.\"</li> <li>Fabienne : \"M\u00e8re de deux filles, je suis aussi la grand-m\u00e8re maternelle de Daniel.\"</li> <li>Gaston : \"Salut ! Je suis un des fils de Lucien et un des petits-fils de Fabienne.\"</li> <li>Honor\u00e9 : \"Je suis le grand-p\u00e8re paternel de Lucien.\"</li> <li>Ir\u00e8ne : \"Je suis l'unique belle-s\u0153ur de Lucien.\"</li> <li>Joseph : \"Salut ! Je suis le neveu de Lucien et le petit fils de Karl.\"</li> <li>Karl: Mon petit-fils m'a parl\u00e9 de vous.</li> <li>Lucien : Bienvenue dans ma maison, je vous ai vu a l'instant parler avec mon p\u00e8re.</li> </ul> <p>Et la famille d'ajouter d'une seule voix : \"si vous ne trouvez pas les liens familiaux qui nous unissent, vous n'aurez pas \u00e0 d\u00eener !\"  </p> <p>(d'apr\u00e8s F. Droesbeke, les graphes par l'exemple, pp 17-18 ellipses)</p> <p>Aider Michel ... en mod\u00e9lisant cette situation par un graphe. Remarque: dans cet exercice, le beau-fr\u00e8re de X est le fr\u00e8re du mari/femme de X, et la belle-soeur la soeur du mari/femme de X.</p>"},{"location":"NSITerm/SD/C13E1b.html#codage","title":"Codage","text":"<p>On consid\u00e8re le graphe ci-dessous ainsi que sa matrice d'adjacence. </p>"},{"location":"NSITerm/SD/C13E1b.html#questions-de-cours","title":"Questions de cours","text":"<ol> <li>Est-ce un graphe orient\u00e9 ou non orient\u00e9?</li> <li>Combien a-t-il de sommets? d'ar\u00eates?</li> <li>Les sommets d et h sont-ils voisins?</li> </ol>"},{"location":"NSITerm/SD/C13E1b.html#implementation-en-python","title":"Impl\u00e9mentation en python","text":""},{"location":"NSITerm/SD/C13E1b.html#liste-dadjacence","title":"Liste d'adjacence","text":"<p>Une fa\u00e7on d\u2019encoder un graphe sous Python est d\u2019utiliser un dictionnaire contenant les listes des voisins de chaque sommet. Les cl\u00e9s seront les sommets du graphe et leur valeur sera la liste des sommets adjacents.</p> <pre><code>G = {\n    'a': ['b','c'],\n    'b': ['a','d', 'e'],\n    'c': ['a','d'],\n    'd': ['b','c', 'e'],\n    'e': ['b','d', 'f', 'g'],\n    'f': ['e','g'],\n    'g': ['e','f', 'h'],\n    'h': ['g']\n}\n</code></pre> <ol> <li>Ecrire une fonction <code>sommets</code> qui prend un graphe en param\u00e8tre et qui renvoie la liste de ses sommets.</li> <li>Ecrire une fonction <code>voisins</code> qui prend en param\u00e8tres un graphe et un sommet et qui renvoie la liste des vosins de ce sommet.</li> <li>Que r\u00e9alise la fonction <code>lst_to_mat</code>? Expliquer notamment la portion de code situ\u00e9e entre les lignes 9 et 11. On pourra utiliser la documentation python.</li> <li>Le r\u00e9sultat de l'appel <code>lst_to_mat(G)</code> est-il conforme aux donn\u00e9es de l'\u00e9nonc\u00e9?</li> </ol> <pre><code>def sommets(g):\n\"\"\"\n    \u00e0 compl\u00e9ter\n    \"\"\"\n    pass\n</code></pre> <pre><code>def voisins(g, u):\n\"\"\"\n    \u00e0 compl\u00e9ter\n    \"\"\"\n    pass\n</code></pre> <pre><code>def lst_to_mat(g):\n\"\"\"\n    renvoie la matrice d'adjacence associ\u00e9e au graphe g\n    g: graphe mod\u00e9lis\u00e9 par un dictionnaire de listes d'adjacences\n    \"\"\"\n    n = len(g)\n    adj = [[0] * n for _ in range(n)]\n    liste_sommets = sommets(g)\n    for sommet in liste_sommets:\n        for voisin in voisins(g, sommet):\n            adj[liste_sommets.index(sommet)][liste_sommets.index(voisin)] = 1\n    return adj\n</code></pre> <pre><code># \u00c0 ex\u00e9cuter (utile pour la suite)\nA = lst_to_mat(G)\n</code></pre>"},{"location":"NSITerm/SD/C13E1b.html#matrice-dadjacence","title":"Matrice d'adjacence","text":"<ol> <li> <p>Ecrire une fonction <code>mat_to_lst</code> qui prend en param\u00e8tre une liste (de python) de sommets <code>l</code> et une matrice d'adjacence <code>mat</code> (liste de listes) et qui renvoie un dictionnaire correspondant \u00e0 une liste d'adjacence c'est-\u00e0-dire de la forme: <pre><code>{'sommet': [liste de voisins],\n ...\n}\n</code></pre></p> </li> <li> <p>Donner alors, sous forme de liste d'adjacence, une repr\u00e9sentation du graphe dont la matrice d'adjacence est la suivante:  </p> </li> </ol> \\[ \\begin{pmatrix} 0&amp;1&amp;0&amp;0&amp;0\\\\ 0&amp;0&amp;1&amp;1&amp;1\\\\ 0&amp;1&amp;0&amp;1&amp;0\\\\ 0&amp;0&amp;1&amp;0&amp;0\\\\ 1&amp;1&amp;0&amp;1&amp;0 \\end{pmatrix} \\] <p>On notera les sommets: A, B, C, D et E.</p> <pre><code>def mat_to_lst(l, mat):\n\"\"\"\n    \u00e0 compl\u00e9ter\n    \"\"\"\n    pass\n</code></pre> <pre><code># TEST\nassert mat_to_lst(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'], A) == G\n</code></pre> <pre><code># QUESTION 2 - A DECOMMENTER, COMPLETER PUIS EXECUTER\n\n#l = []\n#mat = []\n#mat_to_lst(l, mat)\n</code></pre>"},{"location":"NSITerm/SD/C13E1b.html#implementation-dune-classe-graphe-oriente-par-matrice-dadjacence","title":"Impl\u00e9mentation d'une classe graphe orient\u00e9 par matrice d'adjacence","text":"<p>On se propose d'encapsuler les op\u00e9rations r\u00e9alisables sur les graphes orient\u00e9s dans une classe <code>GrapheOriente</code>.  La construction repose sur l'utilisation d'une matrice d'adjacence.</p> <pre><code>class GrapheOriente:\n\"\"\" Une classe pour repr\u00e9senter les graphes orient\u00e9s.\"\"\"\n\n    def __init__(self, sommets):\n\"\"\" sommets est la liste des sommets du graphe; ceux-ci\n            peuvent \u00eatre des entiers ou des caract\u00e8res.\"\"\"\n\n        self.s = sommets\n        self.mat = [[0]*len(sommets) for _ in range(len(sommets))]\n</code></pre> <ol> <li> <p>Ajouter une m\u00e9thode <code>ajouter_arc</code> qui prend deux param\u00e8tres <code>s1</code> et <code>s2</code> correspondant \u00e0 deux sommets (on s'assurera de leur pr\u00e9sence dans la liste de sommets) qui permet d'ajouter un arc entre <code>s1</code> et <code>s2</code>. Cette m\u00e9thode ne renvoie rien.</p> </li> <li> <p>Ajouter une m\u00e9thode <code>arc</code> qui prend en param\u00e8tres deux sommets <code>s1</code> et <code>s2</code> et qui renvoie un bool\u00e9en correspondant \u00e0 la pr\u00e9sence ou non d'un arc entre ces deux sommets.</p> </li> <li> <p>Ajouter une m\u00e9thode <code>voisins</code> qui prend en param\u00e8tre un sommet <code>s1</code> et qui renvoie la liste de ses voisins.</p> </li> </ol> <pre><code>g = GrapheOriente(['a', 'b', 'c', 'd'])\ng.ajouter_arc('a', 'b')\ng.ajouter_arc('a', 'd')\ng.ajouter_arc('b', 'c')\ng.ajouter_arc('d', 'a')\n</code></pre> <ol> <li>Impl\u00e9menter une classe <code>GrapheOriente2</code> qui utilise un dictionnaire de listes d'adjacence au lieu d'une matrice. L'interface restant rigoureusement la m\u00eame.</li> </ol> <pre><code># TESTS - A DECOMMENTER ET EXECUTER\n#g = GrapheOr(['a', 'b', 'c', 'd'])\n#g.ajouter_arc('a', 'b')\n#g.ajouter_arc('a', 'd')\n#g.ajouter_arc('b', 'c')\n#g.ajouter_arc('d', 'a')\n#assert g.voisins('a') == ['b', 'd']\n#assert g.voisins('c') == []\n</code></pre>"},{"location":"NSITerm/SD/C2C1.html","title":"Structures de donn\u00e9es lin\u00e9aires 1: pile et file - impl\u00e9mentation et interface","text":"Compl\u00e9ment-rappels: les tableaux/listes de python (le retour) <p>En classe de premi\u00e8re on a rencontr\u00e9 et utilis\u00e9 les tableaux. En toute rigueur, ce sont des structures  ayant une taille fixe et contenant des objets de m\u00eame type. Cependant, Python n'impl\u00e9mente pas des tableaux r\u00e9pondant \u00e0 ces crit\u00e8res (du moins pas sans module  sp\u00e9cialis\u00e9). A la place, on trouve des structures plus complexes: les tableaux dynamiques (les fameuses  \"listes de python\") qui ont la propri\u00e9t\u00e9 de pouvoir \u00eatre agrandis, \u00e0 droite. On peut ajouter ou retirer des \u00e9l\u00e9ments d'une liste de python avec les m\u00e9thodes <code>append</code> et <code>pop</code>. <pre><code>t = [10, 20, 30]\nt.append(50)\nt.append(70)\nprint(t)\n\n&gt;&gt;&gt; [10, 20, 30, 50, 70]\nt.pop()\n&gt;&gt;&gt; 70\nprint(t)\n&gt;&gt;&gt; [10, 20, 30, 50]\n</code></pre> On peut \u00e9ventuellement agrandir le tableau \"par la gauche\" avec la m\u00e9thode insert: <pre><code>t.insert(0, -20)\nprint(t)\n\n&gt;&gt;&gt; [-20, 10, 20, 30, 50]\n</code></pre> On \u00e9vitera autant que possible cette pratique \u00e0 cause de ses m\u00e9diocres performances, notamment sur les  tableaux de grande taille. Rappelons enfin, que l'acc\u00e8s \u00e0 la derni\u00e8re valeur du tableau peut se faire avec l'index <code>-1</code>: <pre><code>print(t[-1])\n&gt;&gt;&gt; 50\n</code></pre></p>"},{"location":"NSITerm/SD/C2C1.html#les-structures-de-donnees-lineaires","title":"Les structures de donn\u00e9es lin\u00e9aires","text":"<p>En informatique, pour chaque type de donn\u00e9es, pour chaque utilisation pr\u00e9vue, une structure particuli\u00e8re de donn\u00e9es se rev\u00e8lera probablement plus adapt\u00e9e qu'une autre.  </p> <p>Lorsque les donn\u00e9es ne comportent pas de hi\u00e9rarchie et jouent le m\u00eame r\u00f4le, on utilise des structures de donn\u00e9es lin\u00e9aires comme les dictionnaires ou les listes. Par ailleurs, le probl\u00e8me de l'entr\u00e9e ou de la sortie des donn\u00e9es dans la structure peut \u00eatre important. Ce qui nous am\u00e8nera \u00e0 distinguer ces structures lin\u00e9aires entre elles.</p>"},{"location":"NSITerm/SD/C2C1.html#une-premiere-structure-simple-la-pile","title":"Une premi\u00e8re structure simple: la pile","text":""},{"location":"NSITerm/SD/C2C1.html#presentation","title":"Pr\u00e9sentation","text":"Pile d'assiettes <p>Dans une pile d'assiettes, les manipulations enlever ou d\u00e9poser une nouvelle assiette, ne peuvent se faire qu'au sommet. Une propri\u00e9t\u00e9 remarquable est qu'une assiette ne peut \u00eatre enlev\u00e9e qu'apr\u00e8s avoir enlev\u00e9 toutes celles qui se trouvaient au dessus.  Il s'agit d'une structure de type LIFO, qui signifie Last In First Out.</p> <p>En informatique, il existe une structure de donn\u00e9e appel\u00e9e pile (stack en anglais) dont le fonctionnnement peut rappeler celui de la pile d'assiette. Les applications sont tr\u00e8s nombreuses. Citons par exemple, le probl\u00e8me de l'annulation de la derni\u00e8re action enregistr\u00e9e de nombreux logiciels (le fameux Ctrl\uff0bZ). Il s'agit de sauvegarder les actions de l'utilisateur et de pouvoir restaurer la derni\u00e8re si besoin. Il existe \u00e9norm\u00e9ment de ressources de vulgarisation sur Internet permettant de d\u00e9couvrir son fonctionnement  </p>"},{"location":"NSITerm/SD/C2C1.html#realisation-implementation-simple","title":"R\u00e9alisation (impl\u00e9mentation) simple","text":"<p>Une premi\u00e8re r\u00e9alisation possible d'une pile (born\u00e9e) peut se faire avec un tableau (de taille fixe \\(N+1\\)). La premi\u00e8re case du tableau (index 0) stockera le nombre \\(n\\) d'\u00e9l\u00e9ments de la pile, permettant ainsi d'avoir acc\u00e8s au sommet.  </p> <p> </p> <pre><code>N = 5 #la taille choisie est arbitraire\n\n# Cr\u00e9ation d'un pile vide capable d'accueillir N \u00e9l\u00e9ments par d\u00e9faut\ndef creer_pile(n=N):\n    p = [None for _ in range(n + 1)]\n    p[0] = 0\n    return p\n</code></pre> <p>Les op\u00e9rations d'insertions et de suppressions, qu'on nommera ici empiler et d\u00e9piler, se font au sommet. Il est \u00e9vident qu'on ne peut pas d\u00e9piler une pile vide ou empiler une pile pleine ! Il faut donc g\u00e9rer ces cas.   On peut \u00e9ventuellement pr\u00e9voir une fonction <code>est_pilevide</code>.</p> <pre><code>def est_pilevide(p):\n    return p[0] == 0\n\ndef depiler(p):\n    n = p[0]\n    assert not est_pilevide(p), \"Erreur: pile vide\"\n    p[0] -= 1 # ne pas oublier de r\u00e9ajuster le sommet\n    return p[n]\n\ndef empiler(p, val):\n    n = p[0]\n    assert n &lt; len(p) - 1, \"Erreur: pile pleine\"\n    n += 1 # la pile va contenir un \u00e9l\u00e9ment de plus\n    p[0] = n\n    p[n] = val\n</code></pre> <p>Enfin, il est courant d'avoir une fonction <code>sommet</code> qui r\u00e9cup\u00e8re le seul \u00e9l\u00e9ment accessible de la pile.</p> <pre><code>def sommet(p):\n    assert not est_pilevide(p), \"Erreur: pile vide\"\n    return p[p[0]]\n</code></pre> Application <p>Donner la situation de la pile apr\u00e8s chacune des op\u00e9rations suivantes:</p> <p><pre><code>p = creer_pile()\nempiler(p, 5)\nempiler(p, 15)\nempiler(p, 25)\ndepiler(p)\n</code></pre> Quelle valeur se trouve au sommet de la pile? Le v\u00e9rifier.</p> <p>On peut aussi r\u00e9aliser une pile (non born\u00e9e) avec des listes de python et leurs m\u00e9thodes <code>append</code> et <code>pop</code>.  </p> <p>A faire</p> <p>Compl\u00e9ter les fonctions <code>depiler</code> , <code>empiler</code> et <code>sommet</code>.</p> <pre><code>def creer_pile():\n    return []\n\ndef est_pilevide(p):\n    return len(p) == 0\n\ndef depiler(p):\n    # A compl\u00e9ter\n    pass\n\ndef empiler(p, val):\n    # A compl\u00e9ter\n    pass\n\ndef sommet(p):\n    # A compl\u00e9ter\n    pass\n</code></pre> <pre><code>p = creer_pile()\nempiler(p, 5)\nempiler(p, 15)\nempiler(p, 25)\ndepiler(p)\nprint(sommet(p))\ndepiler(p)\nprint(sommet(p))\n</code></pre> <pre><code>15\n5\n</code></pre> <p>A retenir</p> <p>Les op\u00e9rations r\u00e9alisables sur une pile peuvent donner lieu \u00e0 des r\u00e9alisations (on dit aussi  impl\u00e9mentations) diff\u00e9rentes.</p>"},{"location":"NSITerm/SD/C2C1.html#une-deuxieme-structure-la-file","title":"Une deuxi\u00e8me structure: la file","text":""},{"location":"NSITerm/SD/C2C1.html#presentation_1","title":"Pr\u00e9sentation","text":"File d'attente  <p>La file est une structure qui diff\u00e8re de la pile dans le sens o\u00f9 l'insertion et la suppression ne se font pas du m\u00eame c\u00f4t\u00e9 (penser \u00e0 une file d'attente devant un guichet). Ces op\u00e9rations sont nomm\u00e9es enfiler et d\u00e9filer.  Les files sont par exemple utilis\u00e9es dans les gestionnaires d'impression (des imprimantes).  Il s'agit d'une structure de type FIFO, pour First In First Out.</p>"},{"location":"NSITerm/SD/C2C1.html#implementation","title":"Impl\u00e9mentation","text":"<p>Une impl\u00e9mentation triviale peut \u00eatre r\u00e9alis\u00e9e avec des listes de python. </p> <p>A faire</p> <p>Compl\u00e9ter le code suivant. Coup de pouce: utiliser les m\u00e9thodes <code>append</code> , <code>pop</code> et <code>insert</code>.</p> <pre><code>def creer_file():\n    return []\n\ndef est_filevide(f):\n    return len(f) == 0\n\ndef defiler(f):\n    # A compl\u00e9ter\n    pass\n\ndef enfiler(f, val):\n    # A compl\u00e9ter\n    pass\n</code></pre> <p>V\u00e9rifier que l'on a bien une structure de file en ex\u00e9cutant la cellule suivante</p> <pre><code>f = creer_file()\nenfiler(f, 5)\nenfiler(f, 15)\nenfiler(f, 25)\nwhile not est_filevide(f):\n    print(defiler(f), end=' ')\n</code></pre> <pre><code>5 15 25\n</code></pre> <pre><code>defiler(f)\n</code></pre> <pre><code>---------------------------------------------------------------------------\n\nAssertionError                            Traceback (most recent call last)\n\n&lt;ipython-input-66-cbba2ba98b42&gt; in &lt;module&gt;\n----&gt; 1 defiler(f)\n\n\n&lt;ipython-input-64-bfde421bb079&gt; in defiler(f)\n      7 def defiler(f):\n      8     #A compl\u00e9ter\n----&gt; 9     assert not est_filevide(f), \"Erreur: file vide\"\n     10     return f.pop()\n     11\n\n\nAssertionError: Erreur: file vide\n</code></pre> <p>Une autre r\u00e9alisation est possible en utilisant 2 piles qu'on nommera <code>p_in</code> et <code>p_out</code>.  Les op\u00e9rations <code>enfiler</code> et <code>d\u00e9filer</code> sont d\u00e9taill\u00e9es ci dessous:</p> <p>enfiler <pre><code>empiler sur p_in.\n</code></pre></p> <p>defiler <pre><code>Si p_out est vide:\n    Tant que p_in n'est pas vide:\n        depiler p_in et empiler cet \u00e9l\u00e9ment sur p_out\ndepiler p_out\n</code></pre></p> <p>A faire</p> <p>Compl\u00e9ter l'impl\u00e9mentation d'une file qui utilise deux piles, dans la cellule suivante.        </p> <pre><code>def creer_file():\n    return (creer_pile(), creer_pile())\n\ndef enfiler(f, val):\n    p_in = f[0]\n    # A compl\u00e9ter\n    pass\n\ndef defiler(f):\n    assert not est_filevide(f), \"Erreur: file vide\"\n    # A compl\u00e9ter\n    pass\n\ndef est_filevide(f):\n    p_in, p_out = f[0], f[1]\n    return est_pilevide(p_in) and est_pilevide(p_out)\n</code></pre> <pre><code>#Cellule de tests \u00e0 ex\u00e9cuter\nf = creer_file()\nenfiler(f, 5)\nenfiler(f, 15)\nenfiler(f, 25)\nwhile not est_filevide(f):\n    print(defiler(f), end=' ')\n</code></pre> <pre><code>defiler(f)\n</code></pre> <pre><code>---------------------------------------------------------------------------\n\nAssertionError                            Traceback (most recent call last)\n\n&lt;ipython-input-70-cbba2ba98b42&gt; in &lt;module&gt;\n----&gt; 1 defiler(f)\n\n\n&lt;ipython-input-68-6de1afd1571e&gt; in defiler(f)\n      7 \n      8 def defiler(f):\n----&gt; 9     assert not est_filevide(f), \"Erreur: file vide\"\n     10     p_in, p_out = f[0], f[1]\n     11     if est_pilevide(p_out):\n\n\nAssertionError: Erreur: file vide\n</code></pre> <p>Comme pour la pile, m\u00eame si les impl\u00e9mentations d'une file peuvent \u00eatre tr\u00e8s diff\u00e9rentes les fonctionnalit\u00e9s qu'elles offrent sont identiques.</p>"},{"location":"NSITerm/SD/C2C1.html#vers-une-abstraction-des-structures-de-donnees","title":"Vers une abstraction des structures de donn\u00e9es","text":"<p>Les exemples pr\u00e9c\u00e9dents ont montr\u00e9 qu'on pouvait d\u00e9finir une structure de donn\u00e9es comme \u00e9tant une description logique de la fa\u00e7on dont on voit ces donn\u00e9es et des op\u00e9rations permises. D'un point de vue utilisateur (c'est-\u00e0-dire le programmeur), manipuler une structure de donn\u00e9es c'est se pr\u00e9occuper de ce que les donn\u00e9es repr\u00e9sentent et utiliser les op\u00e9rations autoris\u00e9es sans se soucier de leur impl\u00e9mentation.  </p> <p></p> <p>Les d\u00e9tails de mise en oeuvre des structures de donn\u00e9es \u00e9tant cach\u00e9s \u00e0 l'utilisateur, celui-ci acc\u00e8de \u00e0 ces objets par le biais d'une interface (ensemble des op\u00e9rations permises et d'une description informelle de leur effet).  </p> <p>Voici par exemple, les sp\u00e9cifications de la structure de donn\u00e9es pile pr\u00e9cedente:  </p> Struture de donn\u00e9es Pile Op\u00e9rations Description creer_pile(n) Cr\u00e9\u00e9 une pile vide de taille n optionnelle est_pilevide(p) retourne un bool\u00e9en correspondant \u00e0 l'\u00e9tat de la pile p. empiler(p, val) empile val dans la pile p. depiler(p) renvoie le sommet de la pile p et le supprimede celle-ci sommet(p) renvoie le sommet de la pile p, sans le supprimer <p>Cette liste de sp\u00e9cifications est souvent appel\u00e9e API pour Application Programming Interface.</p>"},{"location":"NSITerm/SD/C2E1.html","title":"Exercices","text":""},{"location":"NSITerm/SD/C2E1.html#exercice-1","title":"Exercice 1","text":"<p>Reprendre la structure de pile du cours impl\u00e9ment\u00e9e avec des <code>list</code> de python et ajouter \u00e0 l'interface deux op\u00e9rations:  </p> <ul> <li><code>vider(p)</code> qui vide une pile <code>p</code>;</li> <li><code>taille(p)</code> qui renvoie la taille de la pile <code>p</code>.</li> </ul>"},{"location":"NSITerm/SD/C2E1.html#exercice-2-notation-polonaise-inverse","title":"Exercice 2 - Notation polonaise inverse","text":"<p>L'\u00e9criture polonaise inverse des expressions arithm\u00e9tiques place l'op\u00e9rateur apr\u00e8s ses op\u00e9randes. Cette notation ne n\u00e9cessite aucune parenth\u00e8se, ni aucune r\u00e8gle de priorit\u00e9. Ainsi l'expression polonaise inverse d\u00e9crite par la cha\u00eene de caract\u00e8res  </p> <p><code>1 2 3 * + 4 *</code> </p> <p>d\u00e9signe l\u2019expression traditionnellement not\u00e9e \\((1+ 2 \\times 3)\\times 4\\). La valeur d\u2019une telle expression peut \u00eatre calcul\u00e9e facilement en utilisant une pile pour stocker les r\u00e9sultats interm\u00e9diaires. Pour cela, on parcours un \u00e0 un les \u00e9l\u00e9ments de l'expression et on effectue les actions suivantes:  </p> <ul> <li>si on trouve un nombre, on l'empile;</li> <li>si on trouve un op\u00e9rateur binaire, on d\u00e9pile le dernier et l'avant dernier nombre, on leur applique l\u2019op\u00e9rateur, et on empile r\u00e9sultat.</li> </ul> <p>Si l'expression \u00e9tait bien \u00e9crite, il y a bien toujours deux nombres sur la pile lorsque l\u2019on voit un op\u00e9rateur, et \u00e0 la fin du processus il reste exactement un nombre sur la pile, qui est le r\u00e9sultat.  </p> <p>\u00c9crire une fonction prenant en param\u00e8tre une cha\u00eene de caract\u00e8res repr\u00e9sentant une expression en notation polonaise inverse compos\u00e9e d\u2019additions et de de multiplications de nombres entiers et renvoyant la valeur de cette expression.  </p> <p>On supposera que les \u00e9l\u00e9ments de l'expression sont s\u00e9par\u00e9s par des espaces. Attention, cette fonction ne doit pas renvoyer de r\u00e9sultat si l'expression est mal \u00e9crite.</p>"},{"location":"NSITerm/SD/C2E1.html#exercice-3-chaines-bien-parenthesees","title":"Exercice 3 - Cha\u00eenes bien parenth\u00e9s\u00e9es","text":"<p>On consid\u00e8re une cha\u00eene de caract\u00e8res incluant \u00e0 la fois des parenth\u00e8ses rondes <code>(</code> et <code>)</code> et des parenth\u00e8ses carr\u00e9es <code>[</code> et <code>]</code> . La cha\u00eene est bien parenth\u00e9s\u00e9e si chaque ouvrante est associ\u00e9e \u00e0 une unique fermante de m\u00eame forme, et r\u00e9ciproquement.  </p> <p>\u00c9crire une fonction prenant en param\u00e8tre une cha\u00eene de caract\u00e8res contenant, entre autres, les parenth\u00e8ses d\u00e9crites et qui renvoie <code>True</code> si la cha\u00eene est bien parenth\u00e9s\u00e9e et <code>False</code> sinon.</p>"},{"location":"NSITerm/SD/C2E1.html#exercice-4-file-bornee","title":"Exercice 4 - File born\u00e9e","text":"<p>On propose ici une autre r\u00e9alisation possible d'une file born\u00e9e \u00e0 partir d'un tableau.  Les extr\u00e9mit\u00e9s de la file seront rep\u00e9r\u00e9es par deux index <code>tete</code> et <code>queue</code>. On enfile par la queue et d\u00e9file par la t\u00eate.  </p> <p>Soit <code>MAXFILE</code> la capacit\u00e9 de la file. On pr\u00e9voit un tableau de taille <code>MAXFILE+3</code> car on souhaite stocker \u00e9galement:</p> <ul> <li>la position de la t\u00eate (index 0);  </li> <li>la position de la queue (index 1);  </li> <li>le nombre d'\u00e9l\u00e9ment pr\u00e9sent dans la file (index 3)  </li> </ul> <p>La position de la queue indique l'endroit o\u00f9 sera enfil\u00e9e la prochaine donn\u00e9e et la position de la t\u00eate, la prochaine donn\u00e9e qui sera d\u00e9fil\u00e9e. La figure (a) ci-dessous montre l'\u00e9tat d'une file <code>f</code> de ce type et de capacit\u00e9 maximale 7, dans laquelle figurent d\u00e9j\u00e0 4 \u00e9l\u00e9ments. \u00c0 partir de cette situation et apr\u00e8s les op\u00e9rations:  </p> <p><pre><code>defiler(f)\ndefiler(f)\nenfiler(f, 4)\nenfiler(f, 17)\nenfiler(f, 10)\n</code></pre> on se trouve dans la situation (b).</p> <p></p> <pre><code>MAXFILE = 7 # Capacit\u00e9 de la pile\n\ndef creer_file(n=MAXFILE):\n    return [3, 3, 0] + [None] * n\n\ndef est_vide(f):\n    return f[2] == 0\n\ndef est_pleine(f):\n    return f[2] == len(f) - 3\n\ndef enfiler(f, val):\n    # A compl\u00e9ter\n    pass\n\ndef defiler(f):\n    # A compl\u00e9ter\n    pass\n</code></pre> <ol> <li> <p>A partir des informations disponibles:  </p> <ul> <li>dire combien d'op\u00e9rations sont autoris\u00e9es sur cette structure;</li> <li>r\u00e9diger leur sp\u00e9cification.</li> </ul> </li> <li> <p>Pr\u00e9voir les r\u00e9ponses de l'interpr\u00e9teur python apr\u00e8s les s\u00e9quences de commandes ci-dessous (qui se suivent!).</p> </li> <li> <p>Proposer une impl\u00e9mentation pour <code>enfiler</code> et <code>defiler</code>.</p> </li> </ol> <p>S\u00e9quence 1 <pre><code>f1 = creer_file()\nest_vide(f1)\n</code></pre></p> <p>S\u00e9quence 2 <pre><code>enfiler(f1, 5)\nest_vide(f1)\n</code></pre></p> <p>S\u00e9quence 3 <pre><code>enfiler(f1, -10)\nenfiler(f1, 25)\nenfiler(f1, -35)\nwhile not est_vide(f1):\n    print(defiler(f1), end=' ')\n</code></pre></p> <p>S\u00e9quence 4 <pre><code>f2 = creer_file(3)\nenfiler(f2, 10)\nenfiler(f2, 100)\nenfiler(f2, 1000)\nenfiler(f2, 50)\n</code></pre></p> <pre><code>\n</code></pre>"},{"location":"NSITerm/SD/C2E1P.html","title":"C2E1P","text":""},{"location":"NSITerm/SD/C2E1P.html#exercice-1","title":"Exercice 1","text":"<p>Reprendre la structure de pile du cours impl\u00e9ment\u00e9e avec des <code>list</code> de python et ajouter \u00e0 l'interface deux op\u00e9rations:  </p> <ul> <li><code>vider(p)</code> qui vide une pile <code>p</code>;</li> <li><code>taille(p)</code> qui renvoie la taille de la pile <code>p</code>.</li> </ul> <pre><code>def creer_pile():\n    return []\n\ndef est_pilevide(p):\n    return len(p) == 0\n\ndef depiler(p):\n    # A compl\u00e9ter\n    assert not est_pilevide(p), 'Erreur pile vide'\n    v = p.pop()\n    return v\n\ndef empiler(p, val):\n    # A compl\u00e9ter\n    p.append(val)\n\ndef sommet(p):\n    # A compl\u00e9ter\n    assert not est_pilevide(p), 'Erreur pile vide'\n    return p[-1]\n\ndef vider(p):\n    p.clear()\n\ndef taille(p):\n    return len(p)\n</code></pre> <pre><code>p1 = creer_pile()\nempiler(p1, 10)\nempiler(p1, 1)\nempiler(p1, 5)\nempiler(p1, 4)\nest_pilevide(p1)\n</code></pre> <pre><code>False\n</code></pre> <pre><code>print(sommet(p1))\nvider(p1)\nprint(est_pilevide(p1))\n</code></pre> <pre><code>4\nTrue\n</code></pre>"},{"location":"NSITerm/SD/C2E1P.html#exercice-2-notation-polonaise-inverse","title":"Exercice 2 - Notation polonaise inverse","text":"<p>L'\u00e9criture polonaise inverse des expressions arithm\u00e9tiques place l'op\u00e9rateur apr\u00e8s ses op\u00e9randes. Cette notation ne n\u00e9cessite aucune parenth\u00e8se, ni aucune r\u00e8gle de priorit\u00e9. Ainsi l'expression polonaise inverse d\u00e9crite par la cha\u00eene de caract\u00e8res  </p> <p><code>1 2 3 * + 4 *</code> </p> <p>d\u00e9signe l\u2019expression traditionnellement not\u00e9e \\((1+ 2 \\times 3)\\times 4\\). La valeur d\u2019une telle expression peut \u00eatre calcul\u00e9e facilement en utilisant une pile pour stocker les r\u00e9sultats interm\u00e9diaires. Pour cela, on parcours un \u00e0 un les \u00e9l\u00e9ments de l'expression et on effectue les actions suivantes:  </p> <ul> <li>si on trouve un nombre, on l'empile;</li> <li>si on trouve un op\u00e9rateur binaire, on d\u00e9pile le dernier et l'avant dernier nombre, on leur applique l\u2019op\u00e9rateur, et on empile r\u00e9sultat.</li> </ul> <p>Si l'expression \u00e9tait bien \u00e9crite, il y a bien toujours deux nombres sur la pile lorsque l\u2019on voit un op\u00e9rateur, et \u00e0 la fin du processus il reste exactement un nombre sur la pile, qui est le r\u00e9sultat.  </p> <p>\u00c9crire une fonction prenant en param\u00e8tre une cha\u00eene de caract\u00e8res repr\u00e9sentant une expression en notation polonaise inverse compos\u00e9e d\u2019additions et de de multiplications de nombres entiers et renvoyant la valeur de cette expression.  </p> <p>On supposera que les \u00e9l\u00e9ments de l'expression sont s\u00e9par\u00e9s par des espaces. Attention, cette fonction ne doit pas renvoyer de r\u00e9sultat si l'expression est mal \u00e9crite.</p> <pre><code>def npi(c):\n    exp = c.split()\n    p = creer_pile()\n    for elt in exp:\n        print(f'----Examen de {elt}')\n        if elt.isdigit():\n            empiler(p, int(elt))\n            print(f\"J'ai empil\u00e9 {int(elt)}\")\n            print(p)\n        elif elt in ('+', '*'):\n            a = depiler(p)\n            print(f\"J'ai d\u00e9pil\u00e9 {a}\")\n            b = depiler(p)\n            print(f\"J'ai d\u00e9pil\u00e9 {b}\")\n            r = a + b if elt == '+' else a * b\n            empiler(p, r)\n            print(f\"J'ai empil\u00e9 {r}\")\n        else:\n            raise ValueError\n        print()\n    assert taille(p) == 1, 'Mal \u00e9crit'\n    return sommet(p)\n</code></pre> <pre><code>npi('1 2 + 3 * 2 + 4 *')\n</code></pre> <pre><code>----Examen de 1\nJ'ai empil\u00e9 1\n[1]\n\n----Examen de 2\nJ'ai empil\u00e9 2\n[1, 2]\n\n----Examen de +\nJ'ai d\u00e9pil\u00e9 2\nJ'ai d\u00e9pil\u00e9 1\nJ'ai empil\u00e9 3\n\n----Examen de 3\nJ'ai empil\u00e9 3\n[3, 3]\n\n----Examen de *\nJ'ai d\u00e9pil\u00e9 3\nJ'ai d\u00e9pil\u00e9 3\nJ'ai empil\u00e9 9\n\n----Examen de 2\nJ'ai empil\u00e9 2\n[9, 2]\n\n----Examen de +\nJ'ai d\u00e9pil\u00e9 2\nJ'ai d\u00e9pil\u00e9 9\nJ'ai empil\u00e9 11\n\n----Examen de 4\nJ'ai empil\u00e9 4\n[11, 4]\n\n----Examen de *\nJ'ai d\u00e9pil\u00e9 4\nJ'ai d\u00e9pil\u00e9 11\nJ'ai empil\u00e9 44\n\n\n\n\n\n\n44\n</code></pre>"},{"location":"NSITerm/SD/C2E1P.html#exercice-3-chaines-bien-parenthesees","title":"Exercice 3 - Cha\u00eenes bien parenth\u00e9s\u00e9es","text":"<p>On consid\u00e8re consid\u00e8re une cha\u00eene de caract\u00e8res incluant \u00e0 la la fois fois des parenth\u00e8ses rondes <code>(</code> et <code>)</code> et des parenth\u00e8ses carr\u00e9es <code>[</code> et <code>]</code> . La cha\u00eene est bien parenth\u00e9s\u00e9e si chaque ouvrante est associ\u00e9e \u00e0 une unique fermante de m\u00eame forme, et r\u00e9ciproquement.  </p> <p>\u00c9crire une fonction prenant en param\u00e8tre une cha\u00eene de caract\u00e8res contenant, entre autres, les parenth\u00e8ses d\u00e9crites et qui renvoie <code>True</code> si la cha\u00eene est bien parenth\u00e9s\u00e9e et <code>False</code> sinon.</p> <pre><code>par = {'(': ')', '[': ']'}\n\ndef est_bien_parent(c):\n    p = creer_pile()\n    for elt in c:\n        if elt in par:\n            empiler(p, elt)\n        elif elt in par.values():\n            s = depiler(p)\n            if s not in par or par[s] != elt:\n                return False\n    return taille(p) == 0\n</code></pre> <pre><code>est_bien_parent('1*3+(2-[2/5])')\n</code></pre> <pre><code>True\n</code></pre>"},{"location":"NSITerm/SD/C2E1P.html#exercice-4-file-bornee","title":"Exercice 4 - File born\u00e9e","text":"<p>On propose ici une autre r\u00e9alisation possible d'une file born\u00e9e \u00e0 partir d'un tableau.  La file sera rep\u00e9r\u00e9e par deux index <code>tete</code> et <code>queue</code>. On enfile par la queue et d\u00e9file par la t\u00eate.  </p> <p>Soit \\(N\\) la capacit\u00e9 de la file. On pr\u00e9voit un tableau de taille \\(N+3\\) car on souhaite stocker \u00e9galement:</p> <ul> <li>la position de la t\u00eate (index 0);  </li> <li>la position de la queue (index 1);  </li> <li>la longueur effective de la file (index 3)  </li> </ul> <p>La position de la queue indique l'endroit o\u00f9 sera enfil\u00e9e la prochaine donn\u00e9e. La figure (a) ci-dessous montre une file <code>f</code> de ce type et de capacit\u00e9 maximale 7, dans laquelle figurent d\u00e9j\u00e0 4 \u00e9l\u00e9ments. A partir de cette situation et apr\u00e8s les op\u00e9rations:  </p> <p><pre><code>defiler(f)\ndefiler(f)\nenfiler(f, 4)\nenfiler(f, 17)\nenfiler(f, 10)\n</code></pre> on se trouve dans la situation (b).</p> <p></p> <pre><code>MAXFILE = 8 # Capacit\u00e9 de la pile\n\n\ndef creer_file(n=MAXFILE):\n    return [3, 3, 0] + [None] * n\n\ndef enfiler(f, x):\n    assert not est_pleine(f), 'Erreur: file pleine'\n\n    queue, taille = f[1], f[2] # Pour la lisibilit\u00e9\n\n    f[queue] = x\n    f[2] = taille + 1 # la file comporte un elt suppl\u00e9mentaire    \n    # D\u00e9placement de la queue - mod\u00e8le circulaire\n    if queue == len(f) -1:\n            queue = 3\n    else:\n        queue += 1\n    f[1] = queue\n\ndef est_pleine(f):\n    return f[2] == len(f) - 3\n\ndef est_vide(f):\n    return f[2] == 0\n\ndef defiler(f):\n    assert not est_vide(f), 'Erreur: file vide'\n\n    tete = f[0]\n    v = f[tete]\n    f[tete] = None # Optionnel\n    f[2] -= 1 # la file a un elt de moins\n    # D\u00e9placement de la tete - mod\u00e8le circulaire\n    if tete == len(f) - 1:\n        tete = 3\n    else:\n        tete += 1\n    f[0] = tete\n    return v\n</code></pre> <pre><code>f = creer_file()\n#f[0], f[1], f[2] = 4, 8, 4\n#f[4], f[5], f[6], f[7] = 15, 6, 9, 8\nprint(f)\nenfiler(f, 3)\nprint(f)\nenfiler(f, -1)\nprint(f)\nenfiler(f, 100)\nprint(f)\nenfiler(f, 8)\n</code></pre> <pre><code>[3, 3, 0, None, None, None, None, None, None, None, None]\n[3, 4, 1, 3, None, None, None, None, None, None, None]\n[3, 5, 2, 3, -1, None, None, None, None, None, None]\n[3, 6, 3, 3, -1, 100, None, None, None, None, None]\n</code></pre> <ol> <li>A partir des informations disponibles:  </li> <li>dire combien d'op\u00e9rations sont autoris\u00e9es sur cette structure;</li> <li> <p>r\u00e9diger leur sp\u00e9cification.</p> </li> <li> <p>Pr\u00e9voir les r\u00e9ponses de l'interpr\u00e9teur python apr\u00e8s les s\u00e9quences de commandes suivantes (qui se suivent!):  </p> </li> </ol> <p>S\u00e9quence 1 <pre><code>f1 = creer_file()\nest_filevide(f1)\n</code></pre></p> <p>S\u00e9quence 2 <pre><code>enfiler(f1, 5)\nest_filevide(f1)\n</code></pre></p> <p>S\u00e9quence 3 <pre><code>enfiler(f1, -10)\nenfiler(f1, 25)\nenfiler(f1, -35)\nwhile not est_filevide(f1):\n    print(defiler(f1), end=' ')\n</code></pre></p> <p>S\u00e9quence 4 <pre><code>f2 = creer_file(3)\nenfiler(f2, 10)\nenfiler(f2, 100)\nenfiler(f2, 1000)\nenfiler(f2, 50)\n</code></pre></p> <ol> <li>Proposer une impl\u00e9mentation pour <code>enfiler</code> et <code>defiler</code>.</li> </ol> <pre><code>f = creer_file(5)\nprint(f)\nenfiler(f, 5)\n#print(f)\nenfiler(f, 10)\n#print(f)\nenfiler(f, -1)\n#print(f)\nprint(est_pleine(f))\ndefiler(f)\n#print(f)\ndefiler(f)\n#print(f)\ndefiler(f)\nprint(f)\n</code></pre> <pre><code>[3, 3, 0, None, None, None, None, None]\nFalse\n[6, 6, 0, None, None, None, None, None]\n</code></pre> <pre><code>f1 = creer_file()\nest_filevide(f1)\n</code></pre> <pre><code>True\n</code></pre> <pre><code>enfiler(f1, 5)\nest_filevide(f1)\n</code></pre> <pre><code>False\n</code></pre> <pre><code>enfiler(f1, -10)\nenfiler(f1, 25)\nenfiler(f1, -35)\nwhile not est_filevide(f1):\n    print(defiler(f1), end=' ')\n</code></pre> <pre><code>5 -10 25 -35\n</code></pre> <pre><code>f2 = creer_file(3)\nenfiler(f2, 10)\nenfiler(f2, 100)\nenfiler(f2, 1000)\nenfiler(f2, 50)\n</code></pre> <pre><code>---------------------------------------------------------------------------\n\nAssertionError                            Traceback (most recent call last)\n\n&lt;ipython-input-15-c43f6bea7b7e&gt; in &lt;module&gt;\n      3 enfiler(f2, 100)\n      4 enfiler(f2, 1000)\n----&gt; 5 enfiler(f2, 50)\n\n\n&lt;ipython-input-11-a90013406bf0&gt; in enfiler(f, x)\n      6 \n      7 def enfiler(f, x):\n----&gt; 8     assert not est_pleine(f), 'Erreur: file pleine'\n      9 \n     10     queue, taille = f[1], f[2] # Pour la lisibilit\u00e9\n\n\nAssertionError: Erreur: file pleine\n</code></pre> <pre><code>\n</code></pre>"},{"location":"NSITerm/SD/C3C1.html","title":"Vocabulaire de la programmation objet","text":""},{"location":"NSITerm/SD/C3C1.html#introduction","title":"Introduction","text":"<p>En python on ne manipule que des objets. On en a rencontr\u00e9 de plusieurs sortes depuis la classe de premi\u00e8re. Le type d'un objet peut \u00eatre obtenu avec la fonction ... <code>type</code>! <pre><code>ch = 'bonjour'\nprint(type(ch))\n&lt;class 'str'&gt;\n\nl = 3.1\nprint(type(l))\n&lt;class 'float'&gt;\n</code></pre> M\u00eame si les types d'objets natifs de Python sont tr\u00e8s puissants, on pourra souvent \u00eatre amen\u00e9 \u00e0 en cr\u00e9er d'autres.  </p> <p>Les paragraphes qui suivent ont pour objectif de:  </p> <ul> <li>se familiariser avec tout le vocabulaire n\u00e9cessaire \u00e0 la compr\u00e9hension de la construction des objets;</li> <li>pr\u00e9senter les bases permettant de cr\u00e9er ses propres classes d'objets.  </li> </ul>"},{"location":"NSITerm/SD/C3C1.html#voyage-en-premiere-classe-avec-les-objets","title":"Voyage en premi\u00e8re classe avec les objets","text":""},{"location":"NSITerm/SD/C3C1.html#descritption-dune-classe","title":"Descritption d'une classe","text":"<p>D\u00e9finition</p> <p>Une classe est une structure qui peut contenir des variables et des d\u00e9finitions de fonctions. </p> <p>On peut faire l'analogie avec une usine ayant des plans de construction et qui pourra donc construire des objets. </p> <p>Dans le cas le plus simple, en python on d\u00e9finit une classe avec le mot cl\u00e9 <code>class</code> suivi d'un nom de classe (qu'on \u00e9crit avec une premi\u00e8re lettre en majuscule, par convention) puis des <code>:</code> annon\u00e7ant l'arriv\u00e9e d'un bloc.</p> <p>Construisons notre premi\u00e8re classe. Il s'agit d'une classe permettant de construire des objets de type <code>Rectangle</code>.</p> <pre><code>class Rectangle:\n\"\"\" Une classe pour d\u00e9crire les rectangles\"\"\"\n\n    def __init__(self, longueur, largeur):\n        self.long = longueur\n        self.larg = largeur\n</code></pre> <p>Une bonne habitude est de fournir une documentation. On trouve ensuite une d\u00e9finition de fonction <code>__init__</code> qui sera d\u00e9taill\u00e9e plus loin.  </p>"},{"location":"NSITerm/SD/C3C1.html#creation-dun-objet","title":"Cr\u00e9ation d'un objet","text":"<p>Pour construire un objet de type <code>Rectangle</code>, on fait suivre le nom de la classe de la liste d'arguments attendus par <code>__init__</code> sauf <code>self</code>.  </p> <pre><code>Rectangle(2, 6)\n</code></pre> <pre><code>&lt;__main__.Rectangle at 0x7f70f92fd220&gt;\n</code></pre> <p>L'interpr\u00e9teur nous informe qu'un objet a \u00e9t\u00e9 cr\u00e9\u00e9. N\u00e9anmoins, construire un objet de cette fa\u00e7on n'est pas tr\u00e8s utile. On va plut\u00f4t affecter l'objet cr\u00e9\u00e9 \u00e0 une variable.</p> <pre><code>r1 = Rectangle(6, 4)\nr2 = Rectangle(5, 2)\n</code></pre> <p>La classe permet de cr\u00e9er des objets. Ce processus de cr\u00e9ation d'objet est appel\u00e9 instanciation et l'objet cr\u00e9\u00e9 est une instance de la classe.</p> <p>A ce stade, voici la situation relev\u00e9e avec Pythontutor.  </p> <p></p> <p>Chaque objet <code>Rectangle</code> cr\u00e9\u00e9 poss\u00e8de ses propres variables <code>larg</code> et <code>long</code>. Ce sont les attributs de l'objet. On dit aussi attributs d'instance.</p> <p>On peut acc\u00e9der aux attributs faisant partie de l'interface de l'objet avec la notation <code>objet.attribut</code>. </p> <pre><code>print(r1.larg)\n</code></pre> <pre><code>4\n</code></pre> <p>Les attributs des objets sont mutables en python. N\u00e9anmoins, on \u00e9vitera de recourir \u00e0 cette propri\u00e9t\u00e9 et on privil\u00e9giera l'interaction avec les objets via des m\u00e9thodes (voir ci-dessous).</p>"},{"location":"NSITerm/SD/C3C1.html#manipuler-les-donnees","title":"Manipuler les donn\u00e9es","text":"<p>Supposons que l'on veuille calculer l'aire ou la diagonale du rectangle correspondant \u00e0 l'objet <code>r1</code>. On peut utiliser les attributs de <code>r1</code>.</p> <pre><code>from math import sqrt\n\nprint(\"A = \", r1.larg * r1.long)\nprint(\"d = \", sqrt(r1.larg**2 + r1.long**2))\n</code></pre> <pre><code>A =  24\nd =  7.211102550927978\n</code></pre> <p>Cependant, cela ne correspond pas au style de la programmation orient\u00e9e objet. C'est la classe qui doit se charger de d\u00e9finir les traitements possibles sur les objets. Cela se fait par le biais de m\u00e9thodes.  </p> <p>D\u00e9finition</p> <p>Une m\u00e9thode est fonction rattach\u00e9e \u00e0 une classe.  </p> <p>On peut compl\u00e9ter la classe rectangle.</p> <pre><code>class Rectangle:\n\"\"\" Une classe pour d\u00e9crire les rectangles\"\"\"\n\n    def __init__(self, longueur, largeur):\n        self.long = longueur\n        self.larg = largeur\n\n    def surface(self):\n        return self.long * self.larg\n\n    def diagonale(self):\n        return sqrt(self.larg**2 + self.long**2)\n</code></pre> <pre><code>r1 = Rectangle(6, 4)\nprint(\"A =\", r1.surface(), \"; d =\", r1.diagonale())\n</code></pre> <pre><code>A = 24 ; d = 7.211102550927978\n</code></pre> <p>Une m\u00e9thode destin\u00e9e \u00e0 manipuler les objets se d\u00e9finit dans la classe comme une fonction ordinaire. L'interpr\u00e9teur le confirme.</p> <pre><code>Rectangle.surface\n</code></pre> <pre><code>&lt;function __main__.Rectangle.surface(self)&gt;\n</code></pre> <p>Par contre, on doit imp\u00e9rativement d\u00e9finir comme premier param\u00e8tre <code>self</code>. Il s'agit d'une r\u00e9f\u00e9rence vers l'objet sur lequel on op\u00e8re.  </p> <p>Remarque</p> <p><code>self</code> est juste une convention adopt\u00e9e par la communaut\u00e9 python, on aurait pu nommer ce param\u00e8tre autrement.</p> <p>Lors de l'appel de la m\u00e9thode sur l'objet, on ne fait pas appara\u00eetre <code>self</code>. En r\u00e9alit\u00e9, quand on \u00e9crit <code>r1.surface()</code>, c'est un raccourci pour <code>Rectangle.surface(r1)</code> o\u00f9 <code>r1</code> est associ\u00e9 \u00e0 <code>self</code>.</p>"},{"location":"NSITerm/SD/C3C1.html#methodes-speciales","title":"M\u00e9thodes sp\u00e9ciales","text":"<p>Lors de la cr\u00e9ation d'un objet, python appelle automatiquement deux m\u00e9thodes sp\u00e9ciales. L'une d'entre elle <code>__init__</code> est charg\u00e9e d'initialiser les attributs de l'objet. Son premier param\u00e8tre est aussi <code>self</code>.  </p> <p>Il existe d'autres m\u00e9thodes sp\u00e9ciales, reconnaissables \u00e0 leur syntaxe: elles commencent et se terminent par un double soulign\u00e9 (underscore en anglais) <code>__</code>. Elles ne sont pas sp\u00e9cifiquement au programmes de NSI mais seront quelques fois rencontr\u00e9es dans des exercices. A titre d'exemple, montrons une utilisation de la m\u00e9thode <code>__str__</code> qui est automatiquement appel\u00e9 par <code>print</code>.</p> <pre><code># Affichage de l'objet r1\nprint(r1)\n</code></pre> <pre><code>&lt;__main__.Rectangle object at 0x7f70e36f0490&gt;\n</code></pre> <p>Ce n'est pas tr\u00e8s explicite, on va d\u00e9finir la m\u00e9thode <code>__str__</code>.</p> <pre><code>class Rectangle:\n\"\"\" Une classe pour d\u00e9crire les rectangles\"\"\"\n\n    def __init__(self, longueur, largeur):\n        self.long = longueur\n        self.larg = largeur\n\n    def surface(self):\n        return self.long * self.larg\n\n    def diagonale(self):\n        return sqrt(self.larg**2 + self.long**2)\n\n    def __str__(self):\n        return f'Rect({self.long} X {self.larg})'\n</code></pre> <pre><code>r2 = Rectangle(8,3)\nprint(r2)\n</code></pre> <pre><code>Rect(8 X 3)\n</code></pre>"},{"location":"NSITerm/SD/C3E1.html","title":"Vocabulaire de la programmation objet - Manipuler des classes","text":""},{"location":"NSITerm/SD/C3E1.html#le-vocabulaire","title":"Le vocabulaire","text":"<p>Donner la d\u00e9finition des termes apparaissant en gras dans la consigne ci-dessous.</p> <p>Il existe dans la librairie standard un module nomm\u00e9 <code>datetime</code> qui permet de manipuler les dates. Il impl\u00e9mente notamment une classe <code>date</code> (voir <code>help(datetime.date)</code> pour une description plus compl\u00e8te). Des objets de type <code>date</code> seront instanci\u00e9s en utilisant la syntaxe <code>date(annee, mois, jour)</code> (voir exemple ci-dessous). Une date poss\u00e8de des attributs int\u00e9ressants: <code>year</code>, <code>month</code> et <code>day</code> dont les noms sont suffisamment explicites. Enfin, la date du jour peut \u00eatre obtenue avec la m\u00e9thode <code>today</code>. </p> <pre><code>from datetime import date\n\nd = date(2000, 12, 1)  # le 1er d\u00e9cembre 2000\nprint(d.day)  # le jour\nprint(d.month)  # le  mois\nprint(d.year)  # l'ann\u00e9e\nprint(date.today())\n</code></pre> <pre><code>1\n12\n2000\n2021-07-30\n</code></pre> <pre><code>import inspect\n\nprint(inspect.getsource(date))\n</code></pre>"},{"location":"NSITerm/SD/C3E1.html#une-classe-personne","title":"Une classe Personne","text":"<p>Cr\u00e9er une classe <code>Personne</code> qui initialisera les instances avec 3 param\u00e8tres: <code>nom</code>, <code>prenom</code> et une date de naissance <code>nais</code>. Cette classe fournit une m\u00e9thode <code>age</code> qui renvoie l'age de la personne. Cr\u00e9er un objet <code>p1</code> de type <code>Personne</code> qui sera initialis\u00e9 avec les informations suivantes: <code>'Bob'</code>,  <code>'Leponge'</code> n\u00e9 le <code>17 juillet 1999</code>. Donner alors son \u00e2ge.</p> <pre><code># R\u00e9ponses\n# Cellule \u00e0 compl\u00e9ter\n\nfrom datetime import date\n\n\nclass Personne:\n\"\"\"Informations personnelles sur une personne\"\"\"\n\n    def __init__(self, nom, prenom, dnais):\n        pass\n        # \u00e0 compl\u00e9ter - SUPPRIMER la ligne contenant l'instruction 'pass' !!\n\n    def age(self):\n        d = date.today()\n        # \u00e0 compl\u00e9ter\n</code></pre>"},{"location":"NSITerm/SD/C3E1.html#une-classe-article","title":"Une classe Article","text":"<p>Compl\u00e9ter la cellule suivante dans laquelle on devra cr\u00e9er une classe <code>Article</code> qui initialisera les objets instanci\u00e9s avec les param\u00e8tres <code>ref</code>, <code>prixHT</code>, et <code>tva</code>. Cette classe impl\u00e9mentera les m\u00e9thodes:  </p> <ul> <li><code>prixTTC</code> qui renvoie le prix TTC calcul\u00e9 de la mani\u00e8re suivante: <code>prixHT + prixHT*tva/100</code>;</li> <li><code>affiche</code> qui affiche toutes la r\u00e9f\u00e9rence de l'article, son prix HT et son prixTTC.  </li> </ul> <p>Tester (avec une TVA \u00e0 20% par exemple).</p> <pre><code># R\u00e9ponses\n# Cellule \u00e0 compl\u00e9ter\n\nclass Article:\n\"\"\"Une classe pour manipuler les caract\u00e9ristiques des articles\"\"\"\n\n    #def __init__(...):\n\n    #def prixTTC(...):\n\n    #def affiche(...):\n</code></pre>"},{"location":"NSITerm/SD/C3E1.html#compte-bancaire","title":"Compte bancaire","text":"<p>On d\u00e9finit compte bancaire par la donn\u00e9e:  </p> <ul> <li>d'un nom et d'un pr\u00e9nom</li> <li>d'un num\u00e9ro de compte</li> <li>d'un solde initial de 50 (la banque offre 50\u20ac de bienvenue pour l'ouverture d'un compte)</li> </ul> <p>Par ailleurs, le titulaire peut d\u00e9biter son compte, le cr\u00e9diter ou le consulter (c-\u00e0-d obtenir la valeur du solde). Attention, on ne peut d\u00e9biter son compte que si son solde le permet !  </p> <p>Ecrire et tester une classe <code>CompteBancaire</code> qui r\u00e9pond \u00e0 ce cahier des charges.</p>"},{"location":"NSITerm/SD/C3E2.html","title":"Impl\u00e9mentation des piles et files avec des classes","text":""},{"location":"NSITerm/SD/C3E2.html#les-piles","title":"Les piles","text":"<p>On se propose de cr\u00e9er une classe <code>Pile</code> r\u00e9pondant \u00e0 l'interface suivante:</p> Op\u00e9ration Description est_vide() renvoie un bool\u00e9en correspondant \u00e0 l'\u00e9tat de la pile empiler(x) empile la valeur x; depiler() renvoie le sommet de la pile SI elle est non vide <p>La cr\u00e9ation d'une pile vide (initialisation) se fera avec un objet de type <code>list</code> de python, vide. On pourra utiliser les m\u00e9thodes <code>pop</code> et append. R\u00e9-\u00e9crire la m\u00e9thode <code>__str__</code> de mani\u00e8re \u00e0 ce qu'apr\u00e8s les op\u00e9rations suivantes:  </p> <p><pre><code>p = Pile()\np.empiler(4)\np.empiler(8)\np.empiler(12)\nprint(p)\n</code></pre> on obtienne une sortie du genre:  </p> <pre><code>12 &lt;- Sommet\n8\n4\n____________\n</code></pre>"},{"location":"NSITerm/SD/C3E2.html#les-files","title":"Les files","text":"<p>Impl\u00e9menter une classe <code>File</code> avec deux piles.</p>"},{"location":"NSITerm/SD/C6C1.html","title":"Le TAD liste - Exemples d'impl\u00e9mentation","text":"<p>TAD pour Type Abstrait de Donn\u00e9es: description d\u2019un ensemble organis\u00e9 d\u2019objets et des op\u00e9rations de manipulation sur cet ensemble (Jean Berstel dans \u00c9l\u00e9ments d'algorithmique page 38).</p>"},{"location":"NSITerm/SD/C6C1.html#repere-historique","title":"Rep\u00e8re historique","text":"<p>John McCarthy, prix Turing en 1971, cr\u00e9a en 1958 le langage Lisp qui signifie LISt Processor.  Les listes constituent le fondement de Lisp.</p>"},{"location":"NSITerm/SD/C6C1.html#introduction","title":"Introduction","text":"<p>D\u00e9finitions</p> <p>Une liste est une collection finie d\u2019\u00e9l\u00e9ments qui se suivent. C\u2019est une structure de donn\u00e9es lin\u00e9aire.  Une liste qui ne contient aucun \u00e9l\u00e9ment est une liste vide.  </p> <p>Les doublons sont possibles. On formalisera cette d\u00e9finition dans un premier temps, avant de donner des impl\u00e9mentations possibles des op\u00e9rations fondamentales sur les listes.  </p> <p>Exemples</p> <ul> <li>liste des gaz nobles dans l'ordre de leur masse atomique: [h\u00e9lium, n\u00e9on, argon, krypton, x\u00e9non, radon];</li> <li>liste des nombres de jour des mois d'une ann\u00e9e non bissextile: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]</li> </ul>"},{"location":"NSITerm/SD/C6C1.html#comment-formaliser-une-liste","title":"Comment formaliser une liste ?","text":"<p>Supposons une liste compos\u00e9e de trois \u00e9l\u00e9ments, ici des entiers: \\(\\ell = [3, 7, 9]\\). Une fa\u00e7on de d\u00e9crire cette liste consiste \u00e0 voir \\(\\ell\\) comme l'association:  </p> <ul> <li>d'un premier \u00e9l\u00e9ment 3 qu\u2019on nomme \u00e9l\u00e9ment de t\u00eate;</li> <li>et d'une liste \\(\\ell_1 = [7, 9]\\) des \u00e9l\u00e9ments qui suivent (liste qu\u2019on nomme souvent reste).  </li> </ul> <p>Cette description de \\(\\ell\\) est aussi valable pour \\(\\ell_1\\) qui est constitu\u00e9e:  </p> <ul> <li>d\u2019un \u00e9l\u00e9ment de t\u00eate : 7,</li> <li>et d\u2019un reste : \\(\\ell_2 = [9]\\).</li> </ul> <p>De la m\u00eame fa\u00e7on que pr\u00e9c\u00e9demment, la liste \\(\\ell_2\\) est constitu\u00e9e:  </p> <ul> <li>d\u2019un \u00e9l\u00e9ment de t\u00eate : 9,</li> <li>et d\u2019un reste : \\(\\ell_3 = []\\).  </li> </ul> <p>La liste \\(\\ell_3\\) \u00e9tant vide, elle ne poss\u00e8de pas d\u2019\u00e9lement de t\u00eate, et ne peut donc pas \u00eatre d\u00e9compos\u00e9e comme nous venons de le faire \u00e0 trois reprises.  </p> <p>D\u00e9finition</p> <p>Une liste \\(\\ell\\) d'\u00e9l\u00e9ments d'un ensemble \\(E\\), est:  </p> <ul> <li>soit une liste vide;</li> <li>soit un couple \\((x,L)\\) form\u00e9 d'un \u00e9l\u00e9ment de t\u00eate \\(x\\in E\\) et d'une liste \\(L\\) d'\u00e9l\u00e9ments de \\(E\\): </li> </ul> <p>Cette d\u00e9finition est r\u00e9cursive.</p>"},{"location":"NSITerm/SD/C6C1.html#operations-sur-les-listes","title":"Op\u00e9rations sur les listes","text":"<p>Parmi les op\u00e9rations fondamentales sur les listes, on peut citer celles mises en \u00e9vidence ci-dessous.</p> <p>Op\u00e9rations</p> <ul> <li>cr\u00e9ation d'une liste vide;</li> <li>construction d'une liste \u00e0 partir d'un \u00e9l\u00e9ment et d'une autre liste;</li> <li>test d'une liste afin de savoir si elle est vide ou pas;</li> <li>pour une liste non vide, r\u00e9cup\u00e9ration de la t\u00eate et du reste (on dit aussi queue).</li> </ul>"},{"location":"NSITerm/SD/C6C1.html#structures-concretes","title":"Structures concr\u00e8tes","text":"<p>Une liste peut \u00eatre impl\u00e9ment\u00e9e de diff\u00e9rentes fa\u00e7ons. On verra ici rapidement une r\u00e9alisation \u00e0 base de couples, puis, de mani\u00e8re plus d\u00e9taill\u00e9e, une impl\u00e9mentation \u00e0 base d'\u00e9l\u00e9ments cha\u00een\u00e9s entre eux.</p>"},{"location":"NSITerm/SD/C6C1.html#realisation-avec-des-couples","title":"R\u00e9alisation avec des couples","text":"### Lancer # TESTSbksl-nlpremiers = cons(2, cons(3, cons(5, cons(7, listepy-undvide()))))bksl-nlassert tete(premiers) == 2, \"tete(premiers) == 2\"bksl-nlassert queue(premiers) == (3, (5, (7, None))), \"queue(premiers) == (3, (5, (7, None)))\"bksl-nlassert estpy-undvide(premiers) == False, \"estpy-undvide(premiers)\"bksl-nlbksl-nl Valider 5/5 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>def listepy-undvide():bksl-nl    return Nonebksl-nlbksl-nldef cons(e, l):bksl-nl    \"\"\" Construit une liste \u00e0 partir d'un \u00e9l\u00e9ment e et d'une liste l\"\"\"bksl-nl    return (e, l)bksl-nlbksl-nldef tete(l):bksl-nl    \"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\"bksl-nl    assert l is not None, \"tete: erreur liste vide\"bksl-nl    return l[0]bksl-nlbksl-nldef queue(l):bksl-nl    \"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\"bksl-nl    assert l is not None, \"queue: erreur liste vide\"bksl-nl    return l[1]bksl-nlbksl-nldef estpy-undvide(l):bksl-nl    return l is Nonebksl-nlbksl-nl# TESTSbksl-nlpremiers = cons(2, cons(3, cons(5, cons(7, listepy-undvide()))))bksl-nlprint(tete(premiers))bksl-nlprint(queue(premiers))bksl-nlprint(estpy-undvide(premiers))bksl-nlbksl-nl</p> <p>A</p> <p>Z</p> <p>Insertion</p> <p>L'insertion d'un \u00e9l\u00e9ment \u00e0 l'int\u00e9rieur de la liste, pas tr\u00e8s pratique, est laiss\u00e9e en guise d'exercice.</p>"},{"location":"NSITerm/SD/C6C1.html#realisation-avec-des-listes-chainees","title":"R\u00e9alisation avec des listes cha\u00een\u00e9es","text":"<p>Dans cette r\u00e9alisation concr\u00e8te d'une liste, les \u00e9l\u00e9ments sont cha\u00een\u00e9s entre eux.  </p> <p> </p> <p>Chaque \u00e9l\u00e9ment, qu'on nomme habituellement cellule ou maillon en fran\u00e7ais (Node en anglais), contient une valeur ou cl\u00e9 et une r\u00e9f\u00e9rence (qui peut \u00eatre vue comme l'adresse m\u00e9moire) vers la cellule suivante. On va repr\u00e9senter une cellule par une classe <code>Cell</code> en python.</p> <pre><code>class Cell:\n\"\"\" Une classe pour d\u00e9crire une cellule (maillon) d'une liste chain\u00e9e\"\"\"\n\n    def __init__(self, v, s):\n        self.cle = v\n        self.suiv = s\n</code></pre> <p>La construction d'une liste ressemble beaucoup \u00e0 la r\u00e9alisation par couple. La liste sch\u00e9matis\u00e9e ci-dessus est obtenue par:</p> <pre><code>lst = Cell(3, Cell(7, Cell(9, None)))\n</code></pre> <p>On remarque que la liste vide est obtenue avec <code>None</code>. La t\u00eate et la queue d'une liste cha\u00een\u00e9e peuvent \u00eatre obtenues avec les fonctions suivantes:</p> <p><pre><code>def tete(l):\n\"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\"\n    assert not est_vide(l), \"tete: erreur liste vide\"\n    return l.cle\n\ndef queue(l):\n\"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\"\n    assert not est_vide(l), \"queue: erreur liste vide\"\n    return l.suiv\n</code></pre> Dans un IDE:  </p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>class Cell:bksl-nl    \"\"\" Une classe pour d\u00e9crire une cellule (maillon) d'une liste chain\u00e9e\"\"\"bksl-nlbksl-nl    def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl        self.cle = vbksl-nl        self.suiv = sbksl-nl   bksl-nldef estpy-undvide(l):bksl-nl    return l is Nonebksl-nl            bksl-nldef tete(l):bksl-nl    \"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\"bksl-nl    assert not estpy-undvide(l), \"tete: erreur liste vide\"bksl-nl    return l.clebksl-nlbksl-nldef queue(l):bksl-nl    \"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\"bksl-nl    assert not estpy-undvide(l), \"queue: erreur liste vide\"bksl-nl    return l.suivbksl-nl    bksl-nllst = Cell(3, Cell(7, Cell(9, None)))bksl-nlprint(estpy-undvide(lst))bksl-nlprint(tete(lst))bksl-nlprint(queue(lst))bksl-nlprint(tete(queue(lst)))bksl-nlbksl-nl</p> <p>A</p> <p>Z</p>"},{"location":"NSITerm/SD/C6C1.html#autres-operations-sur-les-listes","title":"Autres op\u00e9rations sur les listes","text":""},{"location":"NSITerm/SD/C6C1.html#longueur-dune-liste","title":"Longueur d'une liste","text":"<p>Une premi\u00e8re possibilit\u00e9 est d'\u00e9crire une fonction r\u00e9cursive:  </p> <ul> <li>si la liste est vide, sa longueur est nulle;</li> <li>sinon sa longueur vaut 1 plus la longueur de la liste suivante (rappel: une liste est un \u00e9l\u00e9ment suivi d'une autre liste, la queue). </li> </ul> <pre><code>def longueur(l):\n\"\"\" renvoie la longueur d'une liste l\"\"\"   \n\n    if est_vide(l):\n        return 0\n    else:\n        return 1 + longueur(queue(l))\n</code></pre> <pre><code>print(longueur(lst))\nprint(longueur(queue(lst)))\n</code></pre> <pre><code>3\n2\n</code></pre> <p>Seconde possibilit\u00e9:  </p> \u00c0 faire <p>\u00c9crire une version it\u00e9rative de la fonction <code>longueur</code>.  </p> <pre><code>def longueur_iter(l):\n\"\"\" Version it\u00e9rative de la fonction 'longueur' \"\"\"\n\n# Supprimer l'instruction pass et proposer votre code\npass\n</code></pre> <p>Le co\u00fbt en temps est proportionnel \u00e0 la taille \\(n\\) de la liste (complexit\u00e9 temporelle en \\(\\mathcal{O}(n)\\)).</p>"},{"location":"NSITerm/SD/C6C1.html#acceder-au-n-ieme-element","title":"Acc\u00e9der au n-i\u00e8me \u00e9l\u00e9ment","text":"<p>On souhaite acc\u00e9der \u00e0 la cl\u00e9 (avoir la valeur) de l'\u00e9l\u00e9ment d'index \\(k\\) d'une liste <code>lst</code> avec une fonction <code>kieme(k, lst)</code>. On peut proc\u00e8der encore une fois de mani\u00e8re r\u00e9cursive:  </p> <ul> <li>si \\(k=0\\), on renvoie simplement la t\u00eate de <code>lst</code>;</li> <li>sinon, on renvoie la cl\u00e9 de l'\u00e9l\u00e9ment d'index \\((k-1)\\) de la queue de <code>lst</code>.  </li> </ul> <p>\u00c9videmment acc\u00e9der \u00e0 l'\u00e9l\u00e9ment d'index \\(k\\) n'est pas d\u00e9fini pour une liste vide.  </p> \u00c0 faire <p>\u00c9crire la fonction</p> <pre><code>def kieme(k, lst):\n\"\"\" renvoie la cl\u00e9 du k-i\u00e8me \u00e9l\u00e9ment de la liste lst;\nk: entier naturel,\nlst: liste non vide\n\"\"\"\n\nassert not est_vide(lst), \"Erreur: acc\u00e8s impossible\"\n# Compl\u00e9ter avec votre code\n</code></pre> <p>Le pire des cas se produit pour un acc\u00e8s \u00e0 la cl\u00e9 de la derni\u00e8re cellule. Dans ce cas, le co\u00fbt en temps est proportionnel \u00e0 la taille \\(n\\) de la liste (complexit\u00e9 temporelle en \\(\\mathcal{O}(n)\\)).</p>"},{"location":"NSITerm/SD/C6C1.html#inserer-ou-supprimer-un-element","title":"Ins\u00e9rer ou supprimer un \u00e9l\u00e9ment","text":"<p>\u00c0 faire</p> <p>Voir exercice 1 de la fiche d'exercices</p>"},{"location":"NSITerm/SD/C6E1.html","title":"Du type abstrait \u00e0 la structure de donn\u00e9e Liste : Exercices","text":"<p>L'utilisation de l'\u00e9diteur int\u00e9gr\u00e9 \u00e0 la page est largement envisageable pour toute solution it\u00e9rative. L'utilisation de la r\u00e9cursion est ... un peu lente!  </p> <p>On pourrait \u00e9galement choisir de t\u00e9l\u00e9charger le script, en utilisant le bouton \u00e0 cet effet et l'inclure dans un notebook ...</p>"},{"location":"NSITerm/SD/C6E1.html#exercice-1-insertion-suppression","title":"Exercice 1 Insertion / Suppression","text":"<p>On reprend la r\u00e9alisation d'une liste cha\u00een\u00e9e du cours et on se propose d'ajouter \u00e0 l'ensemble des op\u00e9rations, l'insertion et la suppression d'un \u00e9l\u00e9ment \u00e0 un index donn\u00e9.</p> <pre><code>class Cell:\n\"\"\" Une classe pour d\u00e9crire une cellule (maillon) d'une liste chain\u00e9e\"\"\"\n\n    def __init__(self, v, s):\n        self.cle = v\n        self.suiv = s\n\ndef est_vide(l):\n    return l is None\n\ndef tete(l):\n\"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\"\n    assert l is not None, \"tete: erreur liste vide\"\n    return l.cle\n\ndef queue(l):\n\"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\"\n    assert not est_vide(l), \"queue: erreur liste vide\"\n    return l.suiv\n</code></pre> <p>1. \u00c9crire une fonction <code>inserer</code> qui prend pour param\u00e8tres un \u00e9l\u00e9ment <code>x</code>, une position <code>k</code>, une liste cha\u00een\u00e9e non vide <code>lst</code> et qui va ins\u00e8rer <code>x</code> \u00e0 l'index <code>k</code> de la liste <code>lst</code>.</p> <pre><code>def inserer(x, k, lst):\n\"\"\" \n    Ins\u00e8re x \u00e0 l'index k de la liste lst non vide.\n    Ne renvoie rien: lst est modifi\u00e9!\n    \"\"\"\n    pass\n</code></pre> ### Lancer lst = Cell(3, Cell(7, Cell(9, Cell(0, None))))bksl-nlinserer(-1, 3, lst)bksl-nlbksl-nlassert tete(lst) == 3bksl-nlassert tete(queue(queue(queue(lst)))) == -1bksl-nlinserer(1000, 0, lst)bksl-nlassert tete(lst) == 1000bksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>class Cell:bksl-nl    \"\"\" Une classe pour d\u00e9crire une cellule (maillon) d'une liste chain\u00e9e\"\"\"bksl-nlbksl-nl    def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl        self.cle = vbksl-nl        self.suiv = sbksl-nlbksl-nldef estpy-undvide(l):bksl-nl    return l is Nonebksl-nlbksl-nldef tete(l):bksl-nl    \"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\"bksl-nl    assert l is not None, \"tete: erreur liste vide\"bksl-nl    return l.clebksl-nlbksl-nldef queue(l):bksl-nl    \"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\"bksl-nl    assert not estpy-undvide(l), \"queue: erreur liste vide\"bksl-nl    return l.suivbksl-nlbksl-nl# A compl\u00e9terbksl-nldef inserer(x, k, lst):bksl-nl    \"\"\" bksl-nl    Ins\u00e8re x \u00e0 l'index k de la liste lst non vide.bksl-nl    Ne renvoie rien: lst est modifi\u00e9!bksl-nl    \"\"\"bksl-nl    passbksl-nlbksl-nldef inserer(x, k, lst):bksl-nl    \"\"\" Ins\u00e8re x \u00e0 l'index k de la liste lst non vide.bksl-nl    Ne renvoie rien: lst est modifi\u00e9!bksl-nl    \"\"\"bksl-nl    if k == 0: # il s'agit d'une insertion en t\u00eatebksl-nl        c = Cell(tete(lst), queue(lst))bksl-nl        lst.cle = xbksl-nl        lst.suiv = cbksl-nl    else:bksl-nl        ## 1) Initialisation des variables utiles##        bksl-nl        # compteur pour trouver l'index d'insertionbksl-nl        pos = 1 bksl-nl        bksl-nl        # 2 pointeurs 'precedent' et 'cellpy-undapy-unddecaler'bksl-nl        # ---+--------+---+-----+...bksl-nl        #    | xk-1   | xk| xk+1|...bksl-nl        # ---+--------+---+-----+...bksl-nl        #      ^        ^ bksl-nl        #      |        |bksl-nl        #cell. prec   cell. \u00e0 d\u00e9caler (pour l'insertion)bksl-nl        #      bksl-nl        precedent = lstbksl-nl        cellpy-undapy-unddecaler = queue(lst)bksl-nl        # Cr\u00e9ation de la cellule \u00e0 ins\u00e9rerbksl-nl        cellpy-undapy-undinserer = Cell(x, None)bksl-nl        bksl-nl        # 2) D\u00e9placement des pointeurs jusqu'\u00e0 trouver l'index kbksl-nl        while pos != k:bksl-nl            cellpy-undapy-unddecaler = queue(cellpy-undapy-unddecaler)bksl-nl            precedent = queue(precedent)bksl-nl            pos += 1bksl-nl        bksl-nl        # On a trouv\u00e9 la position, on assure maintenant le cha\u00eenagebksl-nl        precedent.suiv = cellpy-undapy-undinsererbksl-nl        cellpy-undapy-undinserer.suiv = cellpy-undapy-unddecalerbksl-nl</p> <p>A</p> <p>Commentaires </p> <p>Le cas d'une insertion en t\u00eate est trivial ! Dans le cas d'une insertion \u00e0 un index quelconque \\(k\\gt 0\\), on doit d'abord cr\u00e9er deux pointeurs vers les cellules concern\u00e9es par l'insertion. Ensuite, dans une boucle, on d\u00e9cale ces pointeurs jusqu'\u00e0 ce l'on trouve la position  o\u00f9 sera ins\u00e9r\u00e9 la nouvelle cellule.</p> <p>Z</p> <p>2. \u00c9crire une fonction <code>supprimer</code> qui prend en param\u00e8tres un index <code>k</code> et une liste <code>lst</code> non vide et qui supprime l'\u00e9l\u00e9ment d'index <code>k</code> de la liste. </p> <pre><code>def supprimer(k, l):\n\"\"\" \n    Supprime la cellule d'index k de la liste non vide lst.\n    Ne renvoie rien: lst est modifi\u00e9 !\n    \"\"\"\n    pass\n</code></pre> ### Lancer # TESTSbksl-nllst = Cell(3, Cell(7, Cell(9, Cell(0, None))))bksl-nlsupprimer(0, lst)bksl-nlassert tete(lst) == 7bksl-nlassert tete(queue(queue(lst))) == 0bksl-nlsupprimer(2, lst)bksl-nlassert tete(queue(lst)) == 9bksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>class Cell:bksl-nl    \"\"\" Une classe pour d\u00e9crire une cellule (maillon) d'une liste chain\u00e9e\"\"\"bksl-nl    bksl-nl    def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl        self.cle = vbksl-nl        self.suiv = sbksl-nlbksl-nldef estpy-undvide(l):bksl-nl    return l is Nonebksl-nlbksl-nldef tete(l):bksl-nl    \"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\"bksl-nl    assert l is not None, \"tete: erreur liste vide\"bksl-nl    return l.clebksl-nlbksl-nldef queue(l):bksl-nl    \"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\"bksl-nl    assert not estpy-undvide(l), \"queue: erreur liste vide\"bksl-nl    return l.suivbksl-nlbksl-nlbksl-nldef supprimer(k, lst):bksl-nl    \"\"\" bksl-nl    Supprime la cellule d'index k de la liste non vide lst.bksl-nl    Ne renvoie rien: lst est modifi\u00e9 !bksl-nl    \"\"\"bksl-nl    passbksl-nlbksl-nlclass Cell:bksl-nl    \"\"\" Une classe pour d\u00e9crire une cellule (maillon) d'une liste chain\u00e9e\"\"\"bksl-nl    bksl-nl    def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl        self.cle = vbksl-nl        self.suiv = sbksl-nlbksl-nldef estpy-undvide(l):bksl-nl    return l is Nonebksl-nlbksl-nldef tete(l):bksl-nl    \"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\"bksl-nl    assert l is not None, \"tete: erreur liste vide\"bksl-nl    return l.clebksl-nlbksl-nldef queue(l):bksl-nl    \"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\"bksl-nl    assert not estpy-undvide(l), \"queue: erreur liste vide\"bksl-nl    return l.suivbksl-nlbksl-nlbksl-nlbksl-nldef supprimer(k, lst):bksl-nl    \"\"\" bksl-nl    Supprime la cellule d'index k de la liste non vide lst.bksl-nl    Ne renvoie rien: lst est modifi\u00e9 !bksl-nl    \"\"\"bksl-nl    if k == 0:bksl-nl        # Suppression en t\u00eate: on \u00e9crase la 1re cl\u00e9 avec la 2\u00e8mebksl-nl        # puis on \u00e9tablit le cha\u00eenage de mani\u00e8re \u00e0 supprimer la 2eme cellule.bksl-nl        lst.cle = tete(queue(lst))bksl-nl        lst.suiv = queue(queue(lst))bksl-nl    else:bksl-nl        # Initialisation de variables utilesbksl-nl        # Compteur (index)bksl-nl        pos = 1bksl-nl        # D\u00e9claration de 2 pointeurs autour de la cellule \u00e0 supprimerbksl-nl        # ----+--------+-------+-------+---bksl-nl        # ... | xk-1   | xk    | xk+1  |...bksl-nl        # ----+--------+-------+-------+---bksl-nl        #       ^         ^       ^bksl-nl        #       |         |       |bksl-nl        #      prec.    \u00e0 suppr.  suivantbksl-nl        bksl-nl        precedent = lstbksl-nl        suivant = queue(queue(lst))bksl-nl        bksl-nl        # D\u00e9placement des pointeurs autour de l'index kbksl-nl        while pos != k:bksl-nl            suivant = queue(suivant)bksl-nl            precedent = queue(precedent)bksl-nl            pos += 1bksl-nl        bksl-nl        # On a trouv\u00e9 la cellule \u00e0 supprimer, on \u00e9tablitbksl-nl        # le cha\u00eenage de mani\u00e8re \u00e0 la \"court-circuiter\"bksl-nl        precedent.suiv = suivantbksl-nl</p> <p>A</p> <p>Z</p> <p>3. Que peut-on dire du co\u00fbt en temps de ces op\u00e9rations?</p>"},{"location":"NSITerm/SD/C6E1.html#probleme-1-la-concatenation-de-deux-listes-chainees","title":"Probl\u00e8me 1 - La concat\u00e9nation de deux listes cha\u00een\u00e9es","text":"<p>L'objectif de ce probl\u00e8me est d'\u00e9crire plusieurs versions d'une fonction permettant de concat\u00e9ner (mettre bout \u00e0 bout) deux listes.</p> <p>Avertissement</p> <p>Bien que moins facile \u00e0 appr\u00e9hender, cette impl\u00e9mentation ne vous demandera pas de produire du code \u00e0 partir de z\u00e9ro mais plut\u00f4t \u00e0 comprendre et compl\u00e9ter du code existant. Ce qui est \u00e0 la port\u00e9e d'un \u00e9l\u00e8ve de terminale NSI.</p>"},{"location":"NSITerm/SD/C6E1.html#solution-recursive-autorisant-les-effets-de-bords","title":"Solution r\u00e9cursive autorisant les effets de bords","text":"<p>\u00c9tant donn\u00e9es deux listes cha\u00een\u00e9es <code>l1</code> et <code>l2</code>:</p> <pre><code>l1 = ListeChainee()\nl1.insert(5)\nl1.insert(3)\nl1.insert(1)\n\nl2 = ListeChainee()\nl2.insert(10)\nl2.insert(7)\n</code></pre> <p>Question essentielle: qu'est-ce que la concat\u00e9nation de deux listes cha\u00een\u00e9es <code>l1</code> et <code>l2</code>? </p> <ul> <li>Si <code>l1</code> est vide, la r\u00e9ponse est triviale, il s'agit de la liste cha\u00een\u00e9e <code>l2</code>;</li> <li>Sinon il s'agit de la liste cha\u00een\u00e9e r\u00e9sultant de la concat\u00e9nation de la queue de <code>l1</code> avec <code>l2</code>, \u00e0 laquelle on a ins\u00e9r\u00e9 la t\u00eate de <code>l1</code>.</li> </ul> <p></p> <p>Apr\u00e8s application de la fonction <code>concat</code> apr\u00e8s <code>l3 = concat(l1, l2)</code>:</p> <p></p> <p>1. Compl\u00e9ter la fonction <code>concat</code> ci-dessous qui prend en param\u00e8tres deux listes cha\u00een\u00e9es <code>l1</code> et <code>l2</code> et qui proc\u00e8de \u00e0 leur concat\u00e9nation <code>l1---l2</code>, c'est-\u00e0-dire qui place <code>l2</code> au bout de <code>l1</code>. Le r\u00e9sultat de la concat\u00e9nation sera affect\u00e9 \u00e0 <code>l2</code> c'est-\u00e0-dire <code>l2 &lt;- l1---l2</code>.</p> <p>Attention r\u00e9cursion</p> <p>Les tests de fonctions r\u00e9cursives peuvent \u00eatre relativement lents (typiquement 1 \u00e0 2 minutes selon le navigateur). Soyez patients ... surtout si votre fonction est fausse ! Par ailleurs, en cas d'alerte du navigateur, choisir Attendre (et non terminer le programme ou fermer la fen\u00eatre). Si cela vous semble r\u00e9dhibitoire, copier-coller dans un notebook ...</p> ### Lancer l1 = ListeChainee()bksl-nll1.insert(5)bksl-nll1.insert(3)bksl-nll1.insert(1)bksl-nlbksl-nll2 = ListeChainee()bksl-nll2.insert(10)bksl-nll2.insert(7)bksl-nll = concat(l1, l2)bksl-nlassert l.tete() == 1bksl-nlassert l.queue().tete() == 3bksl-nlassert l.queue().queue().tete() == 5bksl-nlassert l.queue().queue().queue().tete() == 7bksl-nlassert l.queue().queue().queue().queue().tete() == 10bksl-nlbksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>class Cell:bksl-nl    \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl    bksl-nl    def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl        self.val = vbksl-nl        self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl    def py-undpy-undinitpy-undpy-und(self):bksl-nl        \"\"\"Initialise une liste vide.\"\"\"bksl-nl        self.head = Nonebksl-nl    bksl-nl    def estpy-undvide(self):bksl-nl        return self.head is Nonebksl-nl    bksl-nl    def insert(self, element):bksl-nl        \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl        self.head = Cell(element, self.head)bksl-nl        bksl-nl    def tete(self):bksl-nl        \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl        bksl-nl        assert self.head  is not None , \"tete : erreur liste vide\"bksl-nl        return self.head.valbksl-nl    bksl-nl    def queue(self):bksl-nl        \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl        assert self.head  is not None , \"queue : erreur liste vide\"bksl-nl        bksl-nl        reste = ListeChainee()bksl-nl        reste.head = self.head.suivbksl-nl        return restebksl-nl        bksl-nldef concat(l1, l2):bksl-nl    \"\"\"bksl-nl    Renvoie la concat\u00e9nation l1---l2, en modifiant l2 (l1 plac\u00e9 enbksl-nl    t\u00eate de l2).bksl-nl    \"\"\"bksl-nl    bksl-nl    # \u00c0 compl\u00e9terbksl-nl    if ...:bksl-nl        return l2bksl-nl    else:bksl-nl        concat(l1.queue(), ...).insert(...)bksl-nl        return l2bksl-nlbksl-nlclass Cell:bksl-nl    \"\"\" Une classe pour d\u00e9crire un maillon d'une liste chain\u00e9e\"\"\"bksl-nl    bksl-nl    def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl        self.val = vbksl-nl        self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl    def py-undpy-undinitpy-undpy-und(self):bksl-nl        \"\"\"Initialise une liste cha\u00een\u00e9e vide.\"\"\"bksl-nl        self.head = Nonebksl-nl    bksl-nl    def estpy-undvide(self):bksl-nl        return self.head is Nonebksl-nl    bksl-nl    def insert(self, element):bksl-nl        \"\"\" Construit une liste en ins\u00e9rant 'element' en tete\"\"\"bksl-nl        self.head = Cell(element, self.head)bksl-nl        bksl-nl    def tete(self):bksl-nl        \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl        bksl-nl        assert self.head  is not None , \"tete : erreur liste vide\"bksl-nl        return self.head.valbksl-nl    bksl-nl    def queue(self):bksl-nl        \"\"\"Renvoie une liste cha\u00een\u00e9e correpsondant \u00e0 la queue de la liste\"\"\"bksl-nl        bksl-nl        assert self.head  is not None , \"queue : erreur liste vide\"bksl-nl        reste = ListeChainee()bksl-nl        reste.head = self.head.suivbksl-nl        return restebksl-nl    bksl-nldef concat(l1, l2):bksl-nl    \"\"\" bksl-nl    Renvoie la concat\u00e9nation l1---l2, en modifiant l2 (l1 plac\u00e9 enbksl-nl    t\u00eate de l2.bksl-nl    \"\"\"bksl-nl    bksl-nl    if l1.estpy-undvide():bksl-nl        return l2bksl-nl    else:bksl-nl        concat(l1.queue(), l2).insert(l1.tete())bksl-nl        return l2bksl-nl</p> <p>A</p> <p>Z</p> <p>2. La fonction <code>concat</code> est-elle r\u00e9cursive? Justifier.</p> <p>3. Quel probl\u00e8me potentiel peut-on identifier (en cas de difficult\u00e9, observer l'illustration Pythontutor)?</p>"},{"location":"NSITerm/SD/C6E1.html#solution-reduisant-les-effets-de-bords","title":"Solution r\u00e9duisant les effets de bords","text":"<p>On souhaite contourner le probl\u00e8me identifi\u00e9 pr\u00e9c\u00e9d\u00e9mment. L'id\u00e9e est de renvoyer une nouvelle liste cha\u00een\u00e9e contenant les cellules de la premi\u00e8re liste puis celles de la seconde.  </p> <p>Compl\u00e9ter le code ci-dessous. Justifier la pr\u00e9sence de la ligne 20.  </p> ### Lancer # TESTSbksl-nldef testpy-undconcatener():bksl-nl    l1 = ListeChainee()bksl-nl    l1.insert(5)bksl-nl    l1.insert(3)bksl-nl    l1.insert(1)bksl-nlbksl-nl    l2 = ListeChainee()bksl-nl    l2.insert(10)bksl-nl    l2.insert(7)bksl-nl    l2.insert(-5)bksl-nlbksl-nl    l3 = concatener(l1, l2) # /!\\ Attention \u00e0 l'ordre, ici l2 au bout de l1bksl-nl    result = ''bksl-nl    while not l3.estpy-undvide():bksl-nl        result += str(l3.tete()) + ' 'bksl-nl        l3 = l3.queue()bksl-nl    return resultbksl-nlbksl-nlassert testpy-undconcatener() == '1 3 5 -5 7 10 'bksl-nlbksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>def concatener(lst1, lst2):bksl-nl    \"\"\" Renvoie une nouvelle liste cha\u00een\u00e9e issue de la concat\u00e9nation de lst1 et lst2, c-a-dbksl-nl    form\u00e9e des \u00e9l\u00e9ments de lst1 puis de lst2;bksl-nl    lst1, lst2: listes cha\u00een\u00e9es non videsbksl-nl    \"\"\"bksl-nl    assert not lst1.estpy-undvide() and not lst2.estpy-undvide(), \"Erreur: liste vide\"bksl-nl    bksl-nl    # Cr\u00e9ation d'une nouvelle liste et d'une r\u00e9f\u00e9rence sur le premier \u00e9l\u00e9ment de cette listebksl-nl    lst3 = ListeChainee()bksl-nl    lst3.head = Cell(lst1.tete(), None)bksl-nl    cellulepy-undcourante = lst3.headbksl-nl    # N\u00e9cessit\u00e9 de r\u00e9ajuster lst1, sinon on risque de copier deux fois son 1er \u00e9l\u00e9ment !!bksl-nl    lst1.head = lst1.head.suivbksl-nl    bksl-nl    for liste in (lst1, lst2):bksl-nl        while not liste.estpy-undvide():bksl-nl            x = liste.tete()bksl-nl            cellulepy-undcourante.suiv = ...bksl-nl            cellulepy-undcourante = ...bksl-nl            liste = liste.queue()bksl-nl    bksl-nl    return lst3       bksl-nlbksl-nldef concatener(lst1, lst2):bksl-nl    \"\"\" Renvoie une nouvelle liste cha\u00een\u00e9e issue de la concat\u00e9nation de l1 et l2, c-a-dbksl-nl    form\u00e9e des \u00e9l\u00e9ments de l2 puis de l1;bksl-nl    l1, l2: listes cha\u00een\u00e9es non videsbksl-nl    \"\"\"bksl-nl    assert not lst1.estpy-undvide() and not lst2.estpy-undvide(), \"Erreur: liste vide\"bksl-nl    bksl-nl    # Cr\u00e9ation d'une liste vide et d'une r\u00e9f\u00e9rence sur le dernier \u00e9l\u00e9ment de cette listebksl-nl    lst3 = ListeChainee()bksl-nl    lst3.head = Cell(lst1.tete(), None)bksl-nl    cellulepy-undcourante = lst3.headbksl-nl    # N\u00e9cessit\u00e9 de r\u00e9ajuster lst1, sinon on risque de copier deux fois son 1er \u00e9l\u00e9ment !!bksl-nl    lst1.head = lst1.head.suivbksl-nl    bksl-nl    for liste in (lst1, lst2):bksl-nl        while not liste.estpy-undvide():bksl-nl            x = liste.tete()bksl-nl            cellulepy-undcourante.suiv = Cell(x, None)bksl-nl            cellulepy-undcourante = cellulepy-undcourante.suivbksl-nl            liste = liste.queue()bksl-nl    bksl-nl    return lst3  bksl-nlbksl-nl</p> <p>A</p> <p>Z</p>"},{"location":"NSITerm/SD/C6E1.html#exercice-2-recherche-sequentielle-dans-une-liste-chainee","title":"Exercice 2 - Recherche s\u00e9quentielle dans une liste cha\u00een\u00e9e","text":"<p>La fonction <code>chercher(x, lst)</code> renvoie l'index de la premi\u00e8re occurence de <code>x</code> dans la liste cha\u00een\u00e9e <code>lst</code> ou <code>None</code> si non trouv\u00e9. Elle s'appuie sur la fonction auxilliaire <code>recherche_aux</code> qui r\u00e9alise ce travail r\u00e9cursivement.  </p> <p>L'id\u00e9e retenue pour <code>recherche_aux</code> est la suivante: la recherche s\u00e9quentielle de <code>x</code> dans <code>lst</code> \u00e0 un index <code>i</code> est:  </p> <ul> <li>soit <code>None</code> si la liste <code>lst</code>est vide;</li> <li>soit <code>i</code> si <code>x</code> correspond \u00e0 la t\u00eate de <code>lst</code>;</li> <li>soit la <code>recherche_aux</code> de <code>x</code> dans la queue de <code>lst</code>.</li> </ul> <p>Indication</p> <p>On utilise ici l'impl\u00e9mentation des listes cha\u00een\u00e9es avec la classe <code>ListeChainee</code>.  </p>"},{"location":"NSITerm/SD/C6E1.html#version-recursive","title":"Version r\u00e9cursive","text":"<p>Attention r\u00e9cursion</p> <p>Les tests de fonctions r\u00e9cursives peuvent \u00eatre relativement lents (typiquement 1 \u00e0 2 minutes selon le navigateur). Soyez patients ... surtout si votre fonction est fausse ! Par ailleurs, en cas d'alerte du navigateur, choisir Attendre (et non terminer le programme ou fermer la fen\u00eatre).</p> ### Lancer # TESTSbksl-nll1 = ListeChainee()bksl-nll1.insert(5)bksl-nll1.insert(3)bksl-nll1.insert(1)bksl-nll1.insert(10)bksl-nll1.insert(7)bksl-nlbksl-nlassert chercher(7, l1) == 0bksl-nlassert chercher(5, l1) == 4bksl-nlassert chercher(100, l1) == Nonebksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>class Cell:bksl-nl    \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl    bksl-nl    def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl        self.val = vbksl-nl        self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl    def py-undpy-undinitpy-undpy-und(self):bksl-nl        \"\"\"Initialise une liste vide.\"\"\"bksl-nl        self.head = Nonebksl-nl    bksl-nl    def estpy-undvide(self):bksl-nl        return self.head is Nonebksl-nl    bksl-nl    def insert(self, element):bksl-nl        \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl        self.head = Cell(element, self.head)bksl-nl        bksl-nl    def tete(self):bksl-nl        \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl        bksl-nl        assert self.head  is not None , \"tete : erreur liste vide\"bksl-nl        return self.head.valbksl-nl    bksl-nl    def queue(self):bksl-nl        \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl        assert self.head  is not None , \"queue : erreur liste vide\"bksl-nl        bksl-nl        reste = ListeChainee()bksl-nl        reste.head = self.head.suivbksl-nl        return restebksl-nl    bksl-nl# Recherche s\u00e9quentiellebksl-nl# 1) R\u00e9cursivebksl-nlbksl-nldef recherchepy-undaux(x, lst, i):bksl-nl    \"\"\" bksl-nl    Fonction auxilliaire r\u00e9cursive qui recherche 'x' dans 'lst'bksl-nl    \u00e0 partir d'une position 'i';bksl-nl    x: valeur \u00e0 rechercherbksl-nl    lst: liste chain\u00e9ebksl-nl    i: index o\u00f9 se trouve \u00e9ventuellement xbksl-nl    \"\"\"bksl-nl    if lst.estpy-undvide():bksl-nl        return Nonebksl-nl    elif x == lst.tete():bksl-nl        return ...bksl-nl    else:bksl-nl        return recherchepy-undaux(..., ..., ...)bksl-nl    bksl-nldef chercher(x, lst):bksl-nl    return recherchepy-undaux(x, lst, 0)bksl-nlbksl-nlclass Cell:bksl-nl    \"\"\" Une classe pour d\u00e9crire un maillon d'une liste chain\u00e9e\"\"\"bksl-nl    bksl-nl    def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl        self.val = vbksl-nl        self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl    def py-undpy-undinitpy-undpy-und(self):bksl-nl        \"\"\"Initialise une liste vide.\"\"\"bksl-nl        self.head = Nonebksl-nl    bksl-nl    def estpy-undvide(self):bksl-nl        return self.head is Nonebksl-nl    bksl-nl    def insert(self, element):bksl-nl        \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl        self.head = Cell(element, self.head)bksl-nl        bksl-nl    def tete(self):bksl-nl        \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl        bksl-nl        assert self.head  is not None , \"tete : erreur liste vide\"bksl-nl        return self.head.valbksl-nl    bksl-nl    def queue(self):bksl-nl        \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl        assert self.head  is not None , \"queue : erreur liste vide\"bksl-nl        bksl-nl        reste = ListeChainee()bksl-nl        reste.head = self.head.suivbksl-nl        return restebksl-nl    bksl-nl# Recherche s\u00e9quentiellebksl-nl# 1) R\u00e9cursivebksl-nlbksl-nldef recherchepy-undaux(x, lst, i):bksl-nl    \"\"\" bksl-nl    Fonction auxilliaire r\u00e9cursive qui recherche 'x' dans 'lst'bksl-nl    \u00e0 partir d'une position 'i';bksl-nl    \"\"\"bksl-nl    if lst.estpy-undvide():bksl-nl        return Nonebksl-nl    elif x == lst.tete():bksl-nl        return ibksl-nl    else:bksl-nl        return recherchepy-undaux(x, lst.queue(), i+1)bksl-nl    bksl-nldef chercher(x, lst):bksl-nl    return recherchepy-undaux(x, lst, 0)bksl-nl</p> <p>A</p> <p>Z</p>"},{"location":"NSITerm/SD/C6E1.html#version-iterative","title":"Version it\u00e9rative","text":"### Lancer # TESTSbksl-nll1 = ListeChainee()bksl-nll1.insert(5)bksl-nll1.insert(3)bksl-nll1.insert(1)bksl-nll1.insert(10)bksl-nll1.insert(7)bksl-nlbksl-nlassert chercherpy-unditer(1, l1) == 2bksl-nlassert chercherpy-unditer(100, l1) == Nonebksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>class Cell:bksl-nl    \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl    bksl-nl    def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl        self.val = vbksl-nl        self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl    def py-undpy-undinitpy-undpy-und(self):bksl-nl        \"\"\"Initialise une liste vide.\"\"\"bksl-nl        self.head = Nonebksl-nl    bksl-nl    def estpy-undvide(self):bksl-nl        return self.head is Nonebksl-nl    bksl-nl    def insert(self, element):bksl-nl        \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl        self.head = Cell(element, self.head)bksl-nl        bksl-nl    def tete(self):bksl-nl        \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl        bksl-nl        assert self.head  is not None , \"tete : erreur liste vide\"bksl-nl        return self.head.valbksl-nl    bksl-nl    def queue(self):bksl-nl        \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl        assert self.head  is not None , \"queue : erreur liste vide\"bksl-nl        bksl-nl        reste = ListeChainee()bksl-nl        reste.head = self.head.suivbksl-nl        return restebksl-nl    bksl-nl# Recherche s\u00e9quentiellebksl-nl# 2) It\u00e9ratifbksl-nlbksl-nldef chercherpy-unditer(x, lst):bksl-nl    i = 0bksl-nl    while ...:bksl-nl        if lst.tete() == x:bksl-nl            return ibksl-nl        i += 1bksl-nl        lst.head = ...bksl-nl    return Nonebksl-nlbksl-nlclass Cell:bksl-nl    \"\"\" Une classe pour d\u00e9crire un maillon d'une liste chain\u00e9e\"\"\"bksl-nl    bksl-nl    def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl        self.val = vbksl-nl        self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl    def py-undpy-undinitpy-undpy-und(self):bksl-nl        \"\"\"Initialise une liste vide.\"\"\"bksl-nl        self.head = Nonebksl-nl    bksl-nl    def estpy-undvide(self):bksl-nl        return self.head is Nonebksl-nl    bksl-nl    def insert(self, element):bksl-nl        \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl        self.head = Cell(element, self.head)bksl-nl        bksl-nl    def tete(self):bksl-nl        \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl        bksl-nl        assert self.head  is not None , \"tete : erreur liste vide\"bksl-nl        return self.head.valbksl-nl    bksl-nl    def queue(self):bksl-nl        \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl        assert self.head  is not None , \"queue : erreur liste vide\"bksl-nl        bksl-nl        reste = ListeChainee()bksl-nl        reste.head = self.head.suivbksl-nl        return restebksl-nl    bksl-nl# Recherche s\u00e9quentiellebksl-nl# 2) It\u00e9ratifbksl-nlbksl-nldef chercherpy-unditer(x, lst):bksl-nl    i = 0bksl-nl    while not lst.estpy-undvide():bksl-nl        if lst.tete() == x:bksl-nl            return ibksl-nl        i += 1bksl-nl        lst = lst.queue()bksl-nl    return Nonebksl-nl</p> <p>A</p> <p>Z</p>"},{"location":"NSITerm/SD/C6E1.html#exercice-3-insertion-dans-une-liste-chainee-triee-version-recursive","title":"Exercice 3 - Insertion dans une liste cha\u00een\u00e9e tri\u00e9e ... version r\u00e9cursive ;)","text":"<p>1. Compl\u00e9ter la fonction <code>list_insert(x, lst)</code> qui prend en param\u00e8tres un entier <code>x</code> et une liste cha\u00een\u00e9e <code>lst</code> d'entiers, suppos\u00e9e tri\u00e9e par ordre croissant et qui renvoie une nouvelle liste dans laquelle <code>x</code> a \u00e9t\u00e9 ins\u00e9r\u00e9 \u00e0 sa place.  </p> <pre><code>   +-----+-----+-----+---\nlst|  n0 |  n1 | n2  | ..\n   +-----+-----+-----+---\navec n0 &lt;= n1 &lt;= n2 &lt;= ... &lt;= nk-1 si lst comporte k \u00e9l\u00e9ments\n</code></pre> <p>Indication</p> <p>On utilise ici l'impl\u00e9mentation des listes cha\u00een\u00e9es avec la classe <code>ListeChainee</code> ainsi que la fonction <code>concatener</code> en version effets de bord r\u00e9duits. Par ailleurs, une m\u00e9thode <code>affiche</code> a \u00e9t\u00e9 ajout\u00e9e afin de faciliter le debugage.</p> <p>On remarque que:  </p> <ul> <li>si <code>lst</code>est vide, il suffit de renvoyer une liste cha\u00een\u00e9e dans laquelle on a ins\u00e9r\u00e9 <code>x</code>;</li> <li>si \\(x&lt;n_0\\), on cr\u00e9e une liste cha\u00een\u00e9e <code>l</code> avec <code>x</code> comme seul \u00e9l\u00e9ment et on renvoie la concat\u00e9nation de cette liste avec lst. Attention \u00e0 l'ordre des param\u00e8tres lors de l'appel de <code>concatener</code>! ;</li> <li>sinon (c-\u00e0-d \\(x\\ge n_0\\)) on renvoie la concat\u00e9nation de l'insertion de <code>x</code> dans la queue de <code>lst</code>, avec une liste <code>l</code> constitu\u00e9e de la t\u00eate de <code>lst</code>.</li> </ul> <p>Il est important de noter que nous avons ici deux cas de base.  </p> <p>Coup de pouce</p> <p>Pensez \u00e9ventuellement \u00e0 revoir l'exercice 5 (optionnel) du chapitre 1.</p> ### Lancer l1 = ListeChainee()bksl-nll1.insert(5)bksl-nll1.insert(3)bksl-nll1.insert(1)bksl-nll2 = listpy-undinsert(-1, l1)bksl-nll1 = ListeChainee()bksl-nll1.insert(5)bksl-nll1.insert(3)bksl-nll1.insert(1)bksl-nll3 = listpy-undinsert(6, l1)bksl-nll1 = ListeChainee()bksl-nll1.insert(5)bksl-nll1.insert(3)bksl-nll1.insert(1)bksl-nll4 = listpy-undinsert(4, l1)bksl-nlassert l2.affiche() == '[-1,1,3,5]'bksl-nlassert l3.affiche() == '[1,3,5,6]'bksl-nlassert l4.affiche() == '[1,3,4,5]'bksl-nlbksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>class Cell:bksl-nl    \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl    bksl-nl    def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl        self.val = vbksl-nl        self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl    def py-undpy-undinitpy-undpy-und(self):bksl-nl        \"\"\"Initialise une liste vide.\"\"\"bksl-nl        self.head = Nonebksl-nl    bksl-nl    def estpy-undvide(self):bksl-nl        return self.head is Nonebksl-nl    bksl-nl    def insert(self, element):bksl-nl        \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl        self.head = Cell(element, self.head)bksl-nl        bksl-nl    def tete(self):bksl-nl        \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl        bksl-nl        assert self.head  is not None , \"tete : erreur liste vide\"bksl-nl        return self.head.valbksl-nl    bksl-nl    def queue(self):bksl-nl        \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl        assert self.head  is not None , \"queue : erreur liste vide\"bksl-nl        bksl-nl        reste = ListeChainee()bksl-nl        reste.head = self.head.suivbksl-nl        return restebksl-nl    bksl-nl    def affiche(self):bksl-nl        \"\"\" Affiche les \u00e9l\u00e9ments d'une liste chain\u00e9e\"\"\"bksl-nl        bksl-nl        liste = selfbksl-nl        elements = []bksl-nl        while not liste.estpy-undvide():bksl-nl            elements.append(str(liste.tete()))bksl-nl            liste = liste.queue()bksl-nl        return '[' + ','.join(elements) + ']'bksl-nlbksl-nldef concatener(lst1, lst2):bksl-nl    \"\"\" Renvoie une nouvelle liste cha\u00een\u00e9e issue de la concat\u00e9nation de lst1 et lst2, c-a-dbksl-nl    form\u00e9e des \u00e9l\u00e9ments de l1 puis de l2;bksl-nl    lst1, lst2: listes cha\u00een\u00e9es non videsbksl-nl    \"\"\"bksl-nl    assert not lst1.estpy-undvide() and not lst2.estpy-undvide(), \"Erreur: liste vide\"bksl-nl    bksl-nl    # Cr\u00e9ation d'une liste vide et d'une r\u00e9f\u00e9rence sur le dernier \u00e9l\u00e9ment de cette listebksl-nl    lst3 = ListeChainee()bksl-nl    lst3.head = Cell(lst1.tete(), None)bksl-nl    cellulepy-undcourante = lst3.headbksl-nl    # N\u00e9cessit\u00e9 de r\u00e9ajuster lst1, sinon on risque de copier deux fois son 1er \u00e9l\u00e9ment !!bksl-nl    lst1.head = lst1.head.suivbksl-nl    bksl-nl    for liste in (lst1, lst2):bksl-nl        while not liste.estpy-undvide():bksl-nl            x = liste.tete()bksl-nl            cellulepy-undcourante.suiv = Cell(x, None)bksl-nl            cellulepy-undcourante = cellulepy-undcourante.suivbksl-nl            liste = liste.queue()bksl-nl    bksl-nl    return lst3bksl-nlbksl-nlbksl-nldef listpy-undinsert(x, lst):bksl-nl    if lst.estpy-undvide():bksl-nl        l = ListeChainee()bksl-nl        l.insert(x)bksl-nl        return lbksl-nl    elif x &lt; lst.tete():bksl-nl        l = ListeChainee()bksl-nl        l.insert(x)bksl-nl        return ...bksl-nl    else:bksl-nl        l = ListeChainee()bksl-nl        l.insert(lst.tete())bksl-nl        return ...bksl-nlclass Cell:bksl-nl    \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl    bksl-nl    def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl        self.val = vbksl-nl        self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl    def py-undpy-undinitpy-undpy-und(self):bksl-nl        \"\"\"Initialise une liste vide.\"\"\"bksl-nl        self.head = Nonebksl-nl    bksl-nl    def estpy-undvide(self):bksl-nl        return self.head is Nonebksl-nl    bksl-nl    def insert(self, element):bksl-nl        \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl        self.head = Cell(element, self.head)bksl-nl        bksl-nl    def tete(self):bksl-nl        \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl        bksl-nl        assert self.head  is not None , \"tete : erreur liste vide\"bksl-nl        return self.head.valbksl-nl    bksl-nl    def queue(self):bksl-nl        \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl        assert self.head  is not None , \"queue : erreur liste vide\"bksl-nl        bksl-nl        reste = ListeChainee()bksl-nl        reste.head = self.head.suivbksl-nl        return restebksl-nl    bksl-nl    def affiche(self):bksl-nl        \"\"\" Affiche les \u00e9l\u00e9ments d'une liste chain\u00e9e\"\"\"bksl-nl        bksl-nl        liste = selfbksl-nl        elements = []bksl-nl        while not liste.estpy-undvide():bksl-nl            elements.append(str(liste.tete()))bksl-nl            liste = liste.queue()bksl-nl        return '[' + ','.join(elements) + ']'bksl-nlbksl-nldef concatener(lst1, lst2):bksl-nl    \"\"\" Renvoie une nouvelle liste cha\u00een\u00e9e issue de la concat\u00e9nation de lst1 et lst2, c-a-dbksl-nl    form\u00e9e des \u00e9l\u00e9ments de l1 puis de l2;bksl-nl    lst1, lst2: listes cha\u00een\u00e9es non videsbksl-nl    \"\"\"bksl-nl    assert not lst1.estpy-undvide() and not lst2.estpy-undvide(), \"Erreur: liste vide\"bksl-nl    bksl-nl    # Cr\u00e9ation d'une liste vide et d'une r\u00e9f\u00e9rence sur le dernier \u00e9l\u00e9ment de cette listebksl-nl    lst3 = ListeChainee()bksl-nl    lst3.head = Cell(lst1.tete(), None)bksl-nl    cellulepy-undcourante = lst3.headbksl-nl    # N\u00e9cessit\u00e9 de r\u00e9ajuster lst1, sinon on risque de copier deux fois son 1er \u00e9l\u00e9ment !!bksl-nl    lst1.head = lst1.head.suivbksl-nl    bksl-nl    for liste in (lst1, lst2):bksl-nl        while not liste.estpy-undvide():bksl-nl            x = liste.tete()bksl-nl            cellulepy-undcourante.suiv = Cell(x, None)bksl-nl            cellulepy-undcourante = cellulepy-undcourante.suivbksl-nl            liste = liste.queue()bksl-nl    bksl-nl    return lst3bksl-nlbksl-nlbksl-nldef listpy-undinsert(x, lst):bksl-nl    if lst.estpy-undvide():bksl-nl        l = ListeChainee()bksl-nl        l.insert(x)bksl-nl        return lbksl-nl    elif x &lt; lst.tete():bksl-nl        l = ListeChainee()bksl-nl        l.insert(x)bksl-nl        return concatener(l, lst)bksl-nl    else:bksl-nl        l = ListeChainee()bksl-nl        l.insert(lst.tete())bksl-nl        return concatener(l, listpy-undinsert(x, lst.queue()))bksl-nl</p> <p>A</p> <p>Z</p>"},{"location":"NSITerm/SD/C6E1.html#exercice-4-listes-identiques","title":"Exercice 4 - Listes identiques","text":"<p>Compl\u00e9ter la fonction <code>identiques(lst1, lst2)</code> qui renvoie un bool\u00e9en indiquant si les listes <code>lst1</code> et <code>lst2</code> sont identiques c'est-\u00e0-dire contiennent les m\u00eames \u00e9l\u00e9ments, dans le m\u00eame ordre. Une approche it\u00e9rative sera adopt\u00e9e (... pour une fois \ud83e\udd73)</p> <p>Indication</p> <p>On utilise ici l'impl\u00e9mentation des listes cha\u00een\u00e9es avec la classe <code>ListeChainee</code>. On essaiera de tirer au mieux profit des commentaires.</p> ### Lancer l1 = ListeChainee()bksl-nll2 = ListeChainee()bksl-nll3 = ListeChainee()bksl-nll4 = ListeChainee()bksl-nl    bksl-nll1.insert(5)bksl-nll1.insert(3)bksl-nll1.insert(1)bksl-nl    bksl-nll3.insert(5)bksl-nll3.insert(3)bksl-nll3.insert(1)bksl-nl    bksl-nlassert identiques(l1, l3) is Truebksl-nlassert identiques(l1, l2) is Falsebksl-nlassert identiques(l2, l4) is Truebksl-nlassert identiques(l2, l3) is Falsebksl-nlbksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>class Cell:bksl-nl    \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl    bksl-nl    def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl        self.val = vbksl-nl        self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl    def py-undpy-undinitpy-undpy-und(self):bksl-nl        \"\"\"Initialise une liste vide.\"\"\"bksl-nl        self.head = Nonebksl-nl    bksl-nl    def estpy-undvide(self):bksl-nl        return self.head is Nonebksl-nl    bksl-nl    def insert(self, element):bksl-nl        \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl        self.head = Cell(element, self.head)bksl-nl        bksl-nl    def tete(self):bksl-nl        \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl        bksl-nl        assert self.head  is not None , \"tete : erreur liste vide\"bksl-nl        return self.head.valbksl-nl    bksl-nl    def queue(self):bksl-nl        \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl        assert self.head  is not None , \"queue : erreur liste vide\"bksl-nl        bksl-nl        reste = ListeChainee()bksl-nl        reste.head = self.head.suivbksl-nl        return restebksl-nl    bksl-nl    def affiche(self):bksl-nl        \"\"\" Renvoie les \u00e9l\u00e9ments d'une liste chain\u00e9e sous forme d'une chaine\"\"\"bksl-nl        bksl-nl        liste = selfbksl-nl        elements = []bksl-nl        while not liste.estpy-undvide():bksl-nl            elements.append(str(liste.tete()))bksl-nl            liste = liste.queue()bksl-nl        return '[' + ','.join(elements) + ']'bksl-nlbksl-nl# Fonction 'identiques'bksl-nl# \u00c0 compl\u00e9terbksl-nlbksl-nldef identiques(lst1, lst2):bksl-nl    \"\"\"bksl-nl    Renvoie True si lst1 et lst2 sont identiques, False sinon.bksl-nl    \"\"\"bksl-nl    # 1) On parcours les 2 listes en m\u00eame tempsbksl-nl    while not lst1.estpy-undvide() and not lst2.estpy-undvide():bksl-nl        if lst1.tete() != lst2.tete():bksl-nl            return Falsebksl-nl        # Les \u00e9l\u00e9ments sont identiques, on avance jusqu'\u00e0 la prochaine cellulebksl-nl        ...bksl-nl        ...bksl-nl    bksl-nl    # 2) On a quitt\u00e9 la boucle: les \u00e9l\u00e9ments sont jusqu'ici identiques, maisbksl-nl    # au moins une des 2 listes est vide!bksl-nl    if lst1.estpy-undvide():bksl-nl        # On aura identit\u00e9 uniquement si lst2 est aussi vide!bksl-nl        return ...bksl-nl    else:bksl-nl        # Cas trivial: ici lst2 est vide mais pas lst1, donc ...!?bksl-nl        return ...bksl-nlclass Cell:bksl-nl    \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl    bksl-nl    def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl        self.val = vbksl-nl        self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl    def py-undpy-undinitpy-undpy-und(self):bksl-nl        \"\"\"Initialise une liste vide.\"\"\"bksl-nl        self.head = Nonebksl-nl    bksl-nl    def estpy-undvide(self):bksl-nl        return self.head is Nonebksl-nl    bksl-nl    def insert(self, element):bksl-nl        \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl        self.head = Cell(element, self.head)bksl-nl        bksl-nl    def tete(self):bksl-nl        \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl        bksl-nl        assert self.head  is not None , \"tete : erreur liste vide\"bksl-nl        return self.head.valbksl-nl    bksl-nl    def queue(self):bksl-nl        \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl        assert self.head  is not None , \"queue : erreur liste vide\"bksl-nl        bksl-nl        reste = ListeChainee()bksl-nl        reste.head = self.head.suivbksl-nl        return restebksl-nl    bksl-nl    def affiche(self):bksl-nl        \"\"\" Renvoie les \u00e9l\u00e9ments d'une liste chain\u00e9e sous forme d'une chaine\"\"\"bksl-nl        bksl-nl        liste = selfbksl-nl        elements = []bksl-nl        while not liste.estpy-undvide():bksl-nl            elements.append(str(liste.tete()))bksl-nl            liste = liste.queue()bksl-nl        return '[' + ','.join(elements) + ']'bksl-nlbksl-nl# Fonction 'identiques'bksl-nl# \u00c0 compl\u00e9terbksl-nlbksl-nldef identiques(lst1, lst2):bksl-nl    \"\"\"bksl-nl    Renvoie True si lst1 et lst2 sont identiques, False sinon.bksl-nl    \"\"\"bksl-nl    # 1) On parcours les 2 listes en m\u00eame tempsbksl-nl    while not lst1.estpy-undvide() and not lst2.estpy-undvide():bksl-nl        if lst1.tete() != lst2.tete():bksl-nl            return Falsebksl-nl        # Les \u00e9l\u00e9ments sont identiques, on avance jusqu'\u00e0 la prochaine cellulebksl-nl        lst1 = lst1.queue()bksl-nl        lst2 = lst2.queue(bksl-nl    bksl-nl    # 2) On a quitt\u00e9 la boucle: les \u00e9l\u00e9ments sont jusqu'ici identiques, maisbksl-nl    # au moins une des 2 listes est vide!bksl-nl    if lst1.estpy-undvide():bksl-nl        # On aura identit\u00e9 uniquement si lst2 est aussi vide!bksl-nl        return lst2.estpy-undvide()bksl-nl    else:bksl-nl        # Cas trivial: ici lst2 est vide mais pas lst1, donc ...!?bksl-nl        return Falsebksl-nl</p> <p>A</p> <p>Z</p>"},{"location":"NSITerm/SD/C6E1.html#probleme-2-creation-dune-classe-pile-avec-une-liste-chainee","title":"Probl\u00e8me 2 - Cr\u00e9ation d'une classe Pile avec une liste cha\u00een\u00e9e","text":"<p>On consid\u00e8re le type abstrait de donn\u00e9es <code>Pile</code> muni des op\u00e9rations suivantes:  </p> <ul> <li>creer_pile_vide: \\(\\varnothing\\longrightarrow\\) <code>Pile</code>;</li> <li>est_pilevide: <code>Pile</code> \\(\\longrightarrow\\) <code>Bool\u00e9en</code>;</li> <li>empiler: <code>Pile</code>, <code>element</code> \\(\\longrightarrow\\varnothing\\);</li> <li>d\u00e9piler: <code>Pile</code> \\(\\longrightarrow\\) <code>element</code> (avec <code>Pile</code> non vide);</li> </ul> <p>On se propose de donner une r\u00e9alisation possible de ce TAD avec une liste cha\u00een\u00e9e.</p> <p>Indication</p> <p>On utilise ici l'impl\u00e9mentation des listes cha\u00een\u00e9es avec la classe <code>ListeChainee</code> donn\u00e9e plus haut. De plus, \u00e9tant donn\u00e9 la particularit\u00e9 de l'initialisateur (<code>__init__</code>) en python, la cr\u00e9ation de la pile vide se fera simplement en instanciant un objet pile par l'appel <code>Pile()</code>. </p> <p>On cr\u00e9e une classe <code>Pile</code> en l'initialisant avec une liste vide. Compl\u00e9ter les m\u00e9thodes de cette classe.</p> ### Lancer p = Pile()bksl-nlp.empiler(10)bksl-nlp.empiler(5)bksl-nlp.empiler(1)bksl-nlassert p.depiler() == 1bksl-nlassert p.depiler() == 5bksl-nlassert p.depiler() == 10bksl-nl Valider 10/10 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>class Cell:bksl-nl    \"\"\" Une classe pour d\u00e9crire une cellule d'une liste chain\u00e9e\"\"\"bksl-nl    bksl-nl    def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl        self.val = vbksl-nl        self.suiv = sbksl-nlbksl-nlclass ListeChainee:bksl-nl    def py-undpy-undinitpy-undpy-und(self):bksl-nl        \"\"\"Initialise une liste vide.\"\"\"bksl-nl        self.head = Nonebksl-nl    bksl-nl    def estpy-undvide(self):bksl-nl        return self.head is Nonebksl-nl    bksl-nl    def insert(self, element):bksl-nl        \"\"\" Construit une liste cha\u00een\u00e9e en ins\u00e9rant 'element' en tete\"\"\"bksl-nl        self.head = Cell(element, self.head)bksl-nl        bksl-nl    def tete(self):bksl-nl        \"\"\"Renvoie le contenu de la premiere cellule\"\"\"bksl-nl        bksl-nl        assert self.head  is not None , \"tete : erreur liste vide\"bksl-nl        return self.head.valbksl-nl    bksl-nl    def queue(self):bksl-nl        \"\"\"Renvoie une liste cha\u00een\u00e9e correspondant \u00e0 la queue de la liste\"\"\"bksl-nl        assert self.head  is not None , \"queue : erreur liste vide\"bksl-nl        bksl-nl        reste = ListeChainee()bksl-nl        reste.head = self.head.suivbksl-nl        return restebksl-nl    bksl-nl    def affiche(self):bksl-nl        \"\"\" Renvoie les \u00e9l\u00e9ments d'une liste chain\u00e9e sous forme d'une chaine\"\"\"bksl-nl        bksl-nl        liste = selfbksl-nl        elements = []bksl-nl        while not liste.estpy-undvide():bksl-nl            elements.append(str(liste.tete()))bksl-nl            liste = liste.queue()bksl-nl        return '[' + ','.join(elements) + ']'bksl-nl    bksl-nl# \u00c0 compl\u00e9terbksl-nlbksl-nlclass Pile:bksl-nl    \"\"\" Une classe pile \u00e0 base de liste cha\u00een\u00e9e\"\"\"bksl-nl    bksl-nl    def py-undpy-undinitpy-undpy-und(self):bksl-nl        self.py-undpile = ListeChainee()bksl-nl        bksl-nl    def estpy-undpilevide(self):bksl-nl        return self.py-undpile.estpy-undvide()bksl-nl    bksl-nl    def empiler(self, x):bksl-nl        passbksl-nl        bksl-nl    def depiler(self):bksl-nl        assert not self.estpy-undpilevide(), \"Erreur pile vide\"bksl-nl        passbksl-nlbksl-nlclass Pile:bksl-nl    \"\"\" Une classe pile \u00e0 base de liste cha\u00een\u00e9e\"\"\"bksl-nl    bksl-nl    def py-undpy-undinitpy-undpy-und(self):bksl-nl        self.py-undpile = ListeChainee()bksl-nl        bksl-nl    def estpy-undpilevide(self):bksl-nl        return self.py-undpile.estpy-undvide()bksl-nl    bksl-nl    def empiler(self, x):bksl-nl        self.py-undpile.insert(x)bksl-nl        bksl-nl    def depiler(self):bksl-nl        assert not self.estpy-undpilevide(), \"Erreur pile vide\"bksl-nl        bksl-nl        val = self.py-undpile.tete()bksl-nl        self.py-undpile = self.py-undpile.queue()bksl-nl        return valbksl-nl        bksl-nl    def sommet(self):bksl-nl        assert not self.estpy-undpilevide()bksl-nl        return self.py-undpile.tete()bksl-nl</p> <p>A</p> <p>Z</p>"},{"location":"NSITerm/SD/C6E1P.html","title":"TAD Liste : Exercices","text":""},{"location":"NSITerm/SD/C6E1P.html#exercice-1-insertion-suppression","title":"Exercice 1 Insertion / Suppression","text":"<p>On reprend la r\u00e9alisation d'une liste cha\u00een\u00e9e du cours et on se propose d'ajouter \u00e0 l'ensemble des op\u00e9rations, l'insertion et la suppression d'un \u00e9l\u00e9ment \u00e0 un index donn\u00e9.</p> <pre><code>class Cell:\n\"\"\" Une classe pour d\u00e9crire une cellule (maillon) d'une liste chain\u00e9e\"\"\"\n\n    def __init__(self, v, s):\n        self.cle = v\n        self.suiv = s\n\ndef est_vide(l):\n    return l is None\n\ndef tete(l):\n\"\"\" Renvoie l'\u00e9l\u00e9ment de t\u00eate de l\"\"\"\n    assert l is not None, \"tete: erreur liste vide\"\n    return l.cle\n\ndef queue(l):\n\"\"\" Renvoie une liste correspondant \u00e0 la queue de l\"\"\"\n    assert not est_vide(l), \"queue: erreur liste vide\"\n    return l.suiv\n</code></pre> <p>1. \u00c9crire une fonction <code>inserer</code> qui prend pour param\u00e8tres un \u00e9l\u00e9ment <code>x</code>, une position <code>k</code>, une liste cha\u00een\u00e9e non vide <code>l</code> et qui va ins\u00e8rer <code>x</code> \u00e0 l'index <code>k</code> de la liste <code>l</code>.</p> <pre><code>def inserer(x, k, l):\n\"\"\" Ins\u00e8re x \u00e0 l'index k de la liste l non vide\"\"\"\n    if k == 0:\n        c = Cell(tete(l), queue(l))\n        l.cle = x\n        l.suiv = c\n    else:\n        pos = 1\n        # Initialisation de 2 pointeurs et de la cellule \u00e0 ins\u00e9rer\n        # +---+---+---+...\n        # | x0| x1| x2|...\n        # +---+---+---+...\n        #   ^   ^ \n        #   |   |\n        #  av. insertion\n        #      (pos)\n        cell_avant = l\n        cell_insertion = queue(l)\n        cell_a_inserer = Cell(x, None)\n\n        # D\u00e9placement des pointeurs jusqu'\u00e0 trouver l'index k\n        while pos != k:\n            cell_insertion = queue(cell_insertion)\n            cell_avant = queue(cell_avant)\n            pos += 1\n\n        # On a trouv\u00e9 la position, on assure maintenant le cha\u00eenage\n        cell_avant.suiv = cell_a_inserer\n        cell_a_inserer.suiv = cell_insertion\n\nlst = Cell(3, Cell(7, Cell(9, None)))\ninserer(-1, 0, lst)\n\nprint(tete(queue(lst)))\nprint(tete(lst))\n</code></pre> <pre><code>3\n-1\n</code></pre> <p>2. \u00c9crire une fonction <code>supprimer</code> qui prend en param\u00e8tres un index <code>k</code> et une liste <code>l</code> non vide et qui supprime l'\u00e9l\u00e9ment d'index <code>k</code> de la liste. </p> <pre><code>def supprimer(k, l):\n\"\"\" Supprime la cellule d'index k de la liste non vide l\"\"\"\n    if k == 0:\n        l.cle = tete(queue(l))\n        l.suiv = queue(queue(l))\n    else:\n        pos = 1\n        # Initialisation de 2 pointeurs autour de la cellule \u00e0 supprimer\n        # +---+---+---+...\n        # | x0| x1| x2|...\n        # +---+---+---+...\n        #   ^   ^   ^\n        #   |   |   |\n        #  av.suppr \\\n        #            apres\n        cell_avant = l\n        cell_apres = queue(queue(l))\n        # D\u00e9placement des pointeurs autour de l'index k\n        while pos != k:\n            cell_apres = queue(cell_apres)\n            cell_avant = queue(cell_avant)\n            pos += 1\n\n        # On a trouv\u00e9 la cellule \u00e0 supprimer, on \u00e9tablit\n        # le cha\u00eenage de mani\u00e8re \u00e0 la \"court-circuiter\"\n        cell_avant.suiv = cell_apres\n</code></pre> <pre><code>supprimer(0, lst)\nprint(tete(lst))\nprint(tete(queue(lst)))\n</code></pre> <pre><code>3\n7\n</code></pre> <p>3. Que peut-on dire du co\u00fbt en temps de ces op\u00e9rations?</p>"},{"location":"NSITerm/SD/C6E1P.html#probleme-1-la-concatenation-de-deux-listes-chainees","title":"Probl\u00e8me 1 - La concat\u00e9nation de deux listes cha\u00een\u00e9es","text":"<p>On reprend la structure de liste chain\u00e9e vue en cours, construite avec la classe <code>ListeChainee</code>.</p> <pre><code>class Cell:\n\"\"\" Une classe pour d\u00e9crire un maillon d'une liste chain\u00e9e\"\"\"\n\n    def __init__(self, v, s):\n        self.val = v\n        self.suiv = s\n\nclass ListeChainee:\n    def __init__(self, m=None):\n\"\"\"Initialise une liste vide.\"\"\"\n        self.maillon = m\n\n    def est_vide(self):\n        return self.maillon is None\n\n    def insert(self, element):\n\"\"\" Construit une liste en ins\u00e9rant 'element' en tete\"\"\"\n\n        # On fait attention \u00e0 maintenir un cha\u00eenage correct: \n        # un maillon a 2 composantes: un \u00e9l\u00e9ment et une ListeChainee !\n        self.maillon = Cell(element, ListeChainee(self.maillon))\n\n    def tete(self):\n\"\"\"Renvoie le contenu de la premiere cellule\"\"\"\n\n        assert self.maillon  is not None , \"tete : erreur liste vide\"\n        return self.maillon.val\n\n    def queue(self):\n\"\"\"Renvoie la queue de la liste\"\"\"\n\n        assert self.maillon  is not None , \"queue : erreur liste vide\"\n        return self.maillon.suiv\n</code></pre> <p>L'objectif de cet exercice est d'\u00e9crire une fonction permettant de concat\u00e9ner (mettre bout \u00e0 bout) deux listes.</p>"},{"location":"NSITerm/SD/C6E1P.html#solution-autorisant-les-effets-de-bord","title":"Solution autorisant les effets de bord","text":"<p>\u00c9tant donn\u00e9es deux listes chain\u00e9es <code>l1</code> et <code>l2</code>:</p> <pre><code>l1 = ListeChainee()\nl1.insert(5)\nl1.insert(3)\nl1.insert(1)\n\nl2 = ListeChainee()\nl2.insert(10)\nl2.insert(7)\n</code></pre> <p>Qu'est-ce que la concat\u00e9nation de <code>l1</code> et <code>l2</code>? </p> <ul> <li>Si <code>l2</code> est vide, la r\u00e9ponse est triviale, il s'agit de <code>l1</code>;</li> <li>Sinon il s'agit de la liste construite \u00e0 partir de l'\u00e9l\u00e9ment de t\u00eate de <code>l2</code> et de la concat\u00e9nation de <code>l1</code> avec la queue de <code>l2</code>.</li> </ul> <p>Voici une illustration de la situation apr\u00e8s une telle concat\u00e9nation:</p> <p></p> <ol> <li>Compl\u00e9ter la fonction <code>concat</code> ci-dessous qui prend en param\u00e8tres deux listes <code>l1</code> et <code>l2</code> et qui proc\u00e8de \u00e0 leur concat\u00e9nation, c'est-\u00e0-dire qui place <code>l1</code> au bout de <code>l2</code>. Le r\u00e9sultat de la concat\u00e9nation se trouvant dans <code>l1</code>.</li> </ol> <pre><code>def concat(l1, l2):\n\"\"\" renvoie la concat\u00e9nation l2,l1, avec r\u00e9sultat dans l1\"\"\"\n    if ...:\n        return l1\n    else:\n        concat(l1, ...).insert(...)\n        return l1\n</code></pre> <pre><code># Votre r\u00e9ponse\n</code></pre> <pre><code># TESTS - \u00c0 ex\u00e9cuter\nl1 = ListeChainee()\nl1.insert(5)\nl1.insert(3)\nl1.insert(1)\n\nl2 = ListeChainee()\nl2.insert(10)\nl2.insert(7)\n\ndef dernier(l):\n\"\"\" renvoie la derni\u00e8re cellule de l\"\"\"\n    assert not l.est_vide()\n    cellule = l\n    # On d\u00e9place la cellule tant que la queue n'est vide.\n    while not cellule.queue().est_vide():\n        cellule = cellule.queue()\n    return cellule\n\nl = concat(l1, l2)\nassert l.tete() == 7\nassert l.queue().tete() == 10\nassert dernier(l).tete() == 5\nprint('Test OK')\n</code></pre> <pre><code>Test OK\n</code></pre> <ol> <li>La fonction <code>concat</code> est-elle r\u00e9cursive?</li> <li>Quel probl\u00e8me peut-on identifier?</li> </ol>"},{"location":"NSITerm/SD/C6E1P.html#solution-reduisant-les-effets-de-bord","title":"Solution r\u00e9duisant les effets de bord","text":"<p>On souhaite contourner le probl\u00e8me identifi\u00e9 pr\u00e9c\u00e9d\u00e9mment, en travaillant sur une copie de liste. Le code d'une fonction <code>copie</code> est donn\u00e9e ci-dessous. </p> <pre><code>def copie(c, liste):\n\"\"\" R\u00e9alise la copie de 'liste' dans une liste cha\u00een\u00e9e vide c.\"\"\"\n    if liste.queue().est_vide():\n        c.insert(liste.tete())\n    else:\n        copie(c, liste.queue())\n        c.insert(liste.tete())        \n</code></pre> <p>1. \u00c9crire le code permettant de r\u00e9aliser une copie de la liste <code>l1</code> utilis\u00e9e dans les tests pr\u00e9c\u00e9dents.</p> <pre><code># R\u00e9ponse\n</code></pre> <p>2. Compl\u00e9ter la fonction <code>concat\u00e9ner</code> ci-dessous:</p> <pre><code>def concatener(l1, l2):\n\"\"\" Renvoie une nouvelle liste cha\u00een\u00e9e issue de la concat\u00e9nation de l1 et l2;\n    l1, l2: listes cha\u00een\u00e9es\n    \"\"\"\n    l1_copie = ...\n    copie(l1_copie, l1)\n    concat(..., ...)\n    return l1_copie\n</code></pre> <pre><code>def concat(l1, l2):\n\"\"\" renvoie la concat\u00e9nation de l2 + l1 (l1 \"au bout\" de l2) en mettant le r\u00e9sultat \u00e9tant dans l1\"\"\"\n    if l2.est_vide():\n        return l1\n    else:\n        concat(l1, l2.queue()).insert(l2.tete())\n        return l1\n\ndef concatener(l1, l2):\n\"\"\" Renvoie une nouvelle liste cha\u00een\u00e9e issue de la concat\u00e9nation de l1 et l2;\n    l1, l2: listes cha\u00een\u00e9es\n    \"\"\"\n    l1_copie = ListeChainee()\n    copie(l1_copie, l1)\n    concat(l1_copie, l2)\n    return l1_copie\n</code></pre> <p>3. Tester votre fonction <code>concat\u00e9ner</code>.</p> <pre><code># TESTS\nl1 = ListeChainee()\nl1.insert(5)\nl1.insert(3)\nl1.insert(1)\n\nl2 = ListeChainee()\nl2.insert(10)\nl2.insert(7)\n\nl3 = concatener(l2, l1)\n\nwhile not l3.est_vide():\n    print(l3.tete(), end=' ')\n    l3 = l3.queue()\n</code></pre>"},{"location":"NSITerm/SD/C6E1P.html#exercice-1-recherche-sequentielle-dans-une-liste-chainee","title":"Exercice 1 - Recherche s\u00e9quentielle dans une liste cha\u00een\u00e9e","text":"<p>Ecrire une fonction <code>trouver(x, lst)</code> qui renvoie l'index de la premi\u00e8re occurence de <code>x</code> dans la liste cha\u00een\u00e9e <code>lst</code> ou <code>None</code> si non trouv\u00e9. On donnera deux versions: r\u00e9cursive et it\u00e9rative. Tester.</p> <pre><code># r\u00e9cursif\ndef place(x, l, i):\n\"\"\" Fonction auxilliaire r\u00e9cursive pour 'trouver' \"\"\"\n    if l.est_vide():\n        return None\n    elif x == l.tete():\n        return i\n    else:\n        return place(x, l.queue(), i+1)\n\ndef trouver(x, lst):\n    return place(x, lst, 0)\n\n# it\u00e9ratif\ndef trouver_iter(x, lst):\n    i = 0\n    while not lst.est_vide():\n        if lst.tete() == x:\n            return i\n        i += 1\n        lst = lst.queue()\n    return None\n</code></pre> <pre><code># TESTS\nl1 = ListeChainee()\nl1.insert(5)\nl1.insert(3)\nl1.insert(1)\nl1.insert(10)\nl1.insert(7)\n\ndef test_trouver(val, lst):\n    t = lst\n    print(f'Cherche {val} r\u00e9cursif ----')\n    print(trouver(val, t))\n    while not t.est_vide():\n        print(t.tete(), end=' ')\n        t = t.queue()\n\n    t = lst\n    print(f'\\n\\nCherche {val} It\u00e9ratif ----')\n    print(trouver_iter(val, t))\n    while not t.est_vide():\n        print(t.tete(), end=' ')\n        t = t.queue()\n    print('\\n\\n')\n\ntest_trouver(1, l1)\ntest_trouver(100, l1)\n</code></pre> <pre><code>Cherche 1 r\u00e9cursif ----\n2\n7 10 1 3 5\n\nCherche 1 It\u00e9ratif ----\n2\n7 10 1 3 5\n\n\nCherche 100 r\u00e9cursif ----\nNone\n7 10 1 3 5\n\nCherche 100 It\u00e9ratif ----\nNone\n7 10 1 3 5\n</code></pre>"},{"location":"NSITerm/SD/C6E1P.html#exercice-2-insertion-dans-une-liste-triee","title":"Exercice 2 - Insertion dans une liste tri\u00e9e","text":"<p>1. \u00c9crire une fonction <code>inserer(x, lst)</code> qui prend en param\u00e8tres un entier <code>x</code> et une liste cha\u00een\u00e9e <code>lst</code> d'entiers, suppos\u00e9e tri\u00e9e par ordre croissant et qui renvoie une nouvelle liste dans laquelle <code>x</code> a \u00e9t\u00e9 ins\u00e9r\u00e9 \u00e0 sa place. </p> <p>Coup de pouce</p> <p>Pensez \u00e0 revoir l'exercice 5 (optionnel) du chapitre 1.</p> <pre><code>def insert(x, lst):\n    if lst.est_vide():\n        l = ListeChainee()\n        l.insert(x)\n        return l\n    elif x &lt; lst.tete():\n        l = ListeChainee()\n        l.insert(x)\n        return concatener(lst, l)\n    else:\n        l = ListeChainee()\n        l.insert(lst.tete())\n        return concatener(insert(x, lst.queue()), l)\n</code></pre> <p>2. V\u00e9rifier votre r\u00e9ponse en utilisant la cellule ci-dessous.</p> <pre><code># Tests\nl1 = ListeChainee()\nl1.insert(5)\nl1.insert(3)\nl1.insert(1)\nl2 = ListeChainee()\nl4 = insert(5, l1)\nwhile not l4.est_vide():\n    print(l4.tete(), end=' ')\n    l4 = l4.queue()\n</code></pre>"},{"location":"NSITerm/SD/C6E1P.html#exercice-3-listes-identiques","title":"Exercice 3 - Listes identiques","text":"<p>Ecrire une fonction <code>identiques(l1, l2)</code> qui renvoie un bool\u00e9en indiquant si les listes <code>l1</code> et <code>l2</code> sont identiques c'est-\u00e0-dire contiennent les m\u00eames \u00e9l\u00e9ments, dans le m\u00eame ordre.</p> <pre><code>def identiques(l1, l2):\n    while not l1.est_vide() and not l2.est_vide():\n        if l1.tete() != l2.tete():\n            return False\n        l1 = l1.queue()\n        l2 = l2.queue()\n    if l1.est_vide():\n        return l2.est_vide()\n    return l1.est_vide()\n</code></pre> <pre><code># Tests\nl1 = ListeChainee()\nl1.insert(5)\nl1.insert(3)\nl1.insert(1)\nl2 = ListeChainee()\nl3 = ListeChainee()\nl3.insert(5)\nl3.insert(3)\nl3.insert(1)\nprint(identiques(l1, l3))\nprint(identiques(l1, l2))\n</code></pre>"},{"location":"NSITerm/SD/C6E1P.html#probleme-4-creation-dune-classe-pile-avec-une-liste-chainee","title":"Probl\u00e8me 4 - Cr\u00e9ation d'une classe Pile avec une liste cha\u00een\u00e9e","text":"<p>L'interface de la structure de donn\u00e9es <code>Pile</code> comporte (rappels !) les op\u00e9rations suivantes:  </p> <ul> <li>est_pilevide;</li> <li>empiler;</li> <li>d\u00e9piler;</li> </ul> <p>On se propose de donner une r\u00e9alisation possible avec une liste cha\u00een\u00e9e, en adoptant le paradigme objet.</p> <pre><code>class Cell:\n\"\"\" Une classe pour d\u00e9crire un maillon d'une liste chain\u00e9e\"\"\"\n\n    def __init__(self, v, s):\n        self.val = v\n        self.suiv = s\n</code></pre> <p>On cr\u00e9e une classe <code>Pile</code> en l'initialisant avec une liste vide. Compl\u00e9ter les m\u00e9thodes de cette classe.</p> <pre><code>class Pile:\n\"\"\" Une classe pile \u00e0 base de liste cha\u00een\u00e9e\"\"\"\n\n    def __init__(self):\n        self._pile = ListeChainee()\n\n    def est_pilevide(self):\n        return self._pile.est_vide()\n\n    def empiler(self, x):\n        self._pile.insert(x)\n\n    def depiler(self):\n        assert not self.est_pilevide(), \"Erreur pile vide\"\n\n        val = self._pile.tete()\n        self._pile = self._pile.queue()\n        return val\n\n    def sommet(self):\n        assert not self.est_pilevide()\n        return self._pile.tete()\n</code></pre> <pre><code># TESTS - A EXECUTER\ndef test_pile():    \n    p = Pile()\n    p.empiler(10)\n    p.empiler(20)\n    p.empiler(5)\n\n    assert p.sommet() == 5\n    assert p.depiler() == 5\n    assert p.sommet() == 20\n    p.depiler()\n    p.depiler()\n    p.est_pilevide()\n    return 'Tests OK'\n\ntest_pile()\n</code></pre>"},{"location":"NSITerm/SD/C6bC1.html","title":"Le TAD dictionnaire","text":""},{"location":"NSITerm/SD/C6bC1.html#description","title":"Description","text":"<p>Un dictionnaire (ou tableau associatif) peut \u00eatre vu comme la g\u00e9n\u00e9ralisation du tableau vu en 1re, o\u00f9 son index n'est plus forc\u00e9ment un entier naturel.  </p> <p>D'un point de vue formel, un dictionnaire ou tableau associatif est un ensemble de paire (cl\u00e9, valeur) dans lequel chaque cl\u00e9 n'appara\u00eet qu'une fois.</p> <p>Contrairement \u00e0 la liste o\u00f9 l'ordre est fondamental, un dictionnaire n'est, \u00e0 priori, pas ordonn\u00e9. La propri\u00e9t\u00e9 importante d'un dictionnaire est la pr\u00e9sence ou l'absence d'un \u00e9l\u00e9ment.</p> <p>Les applications sont nombreuses: compilateurs, routeurs, base de donn\u00e9es, etc.</p>"},{"location":"NSITerm/SD/C6bC1.html#les-operations","title":"Les op\u00e9rations","text":"<p>Les trois principales op\u00e9rations portant sur les dictionnaires sont: l'insertion, la suppression et la recherche. Plus formellement, si \\(D\\) est un dictionnaire:</p> <ul> <li><code>D.inserer(e: \u00e9l\u00e9ment de type (cl\u00e9, valeur))</code>: la nouvelle paire a \u00e9t\u00e9 int\u00e9gr\u00e9 au dictionnaire;</li> <li><code>D.supprimer(k: cl\u00e9)</code>: l'\u00e9l\u00e9ment dont la cl\u00e9 est <code>k</code> a \u00e9t\u00e9 supprim\u00e9 du dictionnaire;</li> <li><code>D.rechercher(k)</code>: si l'\u00e9l\u00e9ment dont la cl\u00e9 est <code>k</code> est pr\u00e9sent dans \\(D\\), alors on renvoie la valeur associ\u00e9e sinon on renvoie rien.</li> </ul> <p>Par ailleurs, on trouve fr\u00e9quemment une op\u00e9ration <code>iterer</code> qui permet de boucler sur toutes les cl\u00e9s du dictionnaire.</p>"},{"location":"NSITerm/SD/C6bC1.html#implementation","title":"Impl\u00e9mentation","text":""},{"location":"NSITerm/SD/C6bC1.html#les-solutions","title":"Les solutions","text":"<p>Les deux principales impl\u00e9mentations efficaces de dictionnaires sont r\u00e9alis\u00e9es \u00e0 base de table de hachage et d'arbre.</p> <p>Savoir r\u00e9aliser ces deux impl\u00e9mentations ne figure pas au programme de terminale NSI. Cependant, on va exposer ici les principales id\u00e9es utilis\u00e9es dans les tables de hachage.</p> <p>Les cl\u00e9s sont transform\u00e9es au pr\u00e9alable en index entier gr\u00e2ce \u00e0 une fonction dite de hachage. Gr\u00e2ce \u00e0 cet index, on peut stocker l'information (cl\u00e9, valeur) dans un tableau (appel\u00e9 table de hachage).</p> <p>On peut remarquer que deux cl\u00e9s peuvent conduire \u00e0 un m\u00eame index. Cet \u00e9v\u00e9nement s'appelle une collision. Divers algorithmes existent pour g\u00e9rer les cas de collision.</p>"},{"location":"NSITerm/SD/C6bC1.html#exemple-peu-efficace","title":"Exemple (peu efficace)","text":"<p>On utilise une fonction de hachage qui transforme une cl\u00e9 de type cha\u00eene de caract\u00e8res en entier, \u00e0 partir de leur code ascii . Voir cet exemple d'impl\u00e9mentation sur Capytale</p>"},{"location":"NSITerm/SD/C6bC1.html#recherche-dune-valeur-comparaison-liste-dictionnaire","title":"Recherche d'une valeur: comparaison liste / dictionnaire","text":"<p>Dans une liste, la recherche d'une valeur peut avoir un co\u00fbt en temps proportionnel \u00e0 la taille \\(n\\)  de la liste (ou \\(\\mathcal{O}(n)\\)). Le pire des cas arrive si la valeur est absente de la liste.</p> <p>Dans le cas du dictionnaire, tout va d\u00e9pendre de la qualit\u00e9 de la fonction de hachage et de la taille de la table de hachage.</p> <p>Un bon choix peut conduire \u00e0 des recherches en temps constant (ou \\(\\mathcal{O}(1)\\)).</p> <p>Voici un r\u00e9sum\u00e9 des performances de ces deux types de donn\u00e9es (disponible sur la page wikipedia en anglais consacr\u00e9e aux tableaux associatifs). Attention c'est l'impl\u00e9mentation avec des tables hachages qui est privil\u00e9gi\u00e9e.</p> Recherche Insertion En moyenne Pire des cas En moyenne Pire des cas Dictionnaire \\(\\mathcal{O}(1)\\) \\(\\mathcal{O}(n)\\) \\(\\mathcal{O}(1)\\) \\(\\mathcal{O}(n)\\) Liste \\(\\mathcal{O}(n)\\) \\(\\mathcal{O}(n)\\) \\(\\mathcal{O}(1)\\) \\(\\mathcal{O}(1)\\)"},{"location":"PC/HelloWorld.html","title":"Hello World","text":"<p>Il est coutume de commencer l'apprentissage d'un nouveau langage de programmation par le code d'affichage de la phrase Hello World. La d\u00e9clinaison dans le monde des microcontr\u00f4leurs est le clignotement d'une led.</p>"},{"location":"PC/HelloWorld.html#le-montage","title":"Le montage","text":"<p>On connecte une led sur la broche <code>D2</code> du bo\u00eetier en s\u00e9rie avec une r\u00e9sistance de \\(220\\ \\Omega\\), en utilisant les connecteurs SIL (solution 1) ou SATA associ\u00e9s \u00e0 la platine de c\u00e2blage (solution 2) de Sciencethic.  </p> <p>Solution 1 </p> <p>Solution 2 </p>"},{"location":"PC/HelloWorld.html#dialogue-via-un-terminal-repl","title":"Dialogue via un terminal REPL","text":"<p>Apr\u00e8s avoir \u00e9tabli une connexion avec le Plug'Py, on va tester via l'interpr\u00e9teur (REPL) quelques instructions, en python, destin\u00e9es \u00e0 allumer puis \u00e9teindre une led. On peut le faire avec <code>PuTTY</code> ou <code>Thonny</code> </p> <p></p> <p></p> <p>Commentaires du code </p> <p>L'essentiel des fonctionnalit\u00e9s de la carte r\u00e9side dans le module <code>ppy</code>. Par cons\u00e9quent, on importera presque syst\u00e9matiquement ce module avec <code>import ppy</code> ou uniquement quelques fonctions ou classes par <code>from ppy import ...</code>.</p> <p>Avant de pouvoir utiliser une broche du microcontr\u00f4leur en sortie ou en entr\u00e9e, il faut cr\u00e9er un objet de la classe <code>Pin</code> qui r\u00e9f\u00e9rence cette broche. La syntaxe est la suivante:</p> <pre><code>ma_led = Pin('D2', Pin.OUT)\n</code></pre> <p>Les instructions <code>ma_led.on()</code> et <code>ma_led.off()</code> permettent de placer un niveau haut ou bas de tension sur la broche r\u00e9f\u00e9renc\u00e9e par <code>ma_led</code>. Enfin, <code>delay(...)</code> provoque une attente (la valeur en milliseconde doit \u00eatre plac\u00e9e en param\u00e8tre).</p>"},{"location":"PC/HelloWorld.html#ecriture-dun-script","title":"Ecriture d'un script","text":"<p>Afin de sauvegarder son travail, on peut naturellement enregistrer son code dans un fichier sur la carte (avec les recommandations d\u00e9j\u00e0 faites sur le lieu de stockage).  </p> <p></p>"},{"location":"PC/capteurs.html","title":"Mise en \u0153uvre de capteurs","text":""},{"location":"PC/capteurs.html#capteur-de-temperature","title":"Capteur de temp\u00e9rature","text":""},{"location":"PC/capteurs.html#courbe-detalonnage-dune-ctn","title":"Courbe d'\u00e9talonnage d'une CTN","text":"<p>Il s'agit d'utiliser le Plug'Uino Py pour mesurer la r\u00e9sistance d'une CTN (module 651 054), en faisant varier la temp\u00e9rature. Les r\u00e9sultats seront sauvegard\u00e9s dans un fichier csv.  </p> <p></p> <p>Apr\u00e8s avoir branch\u00e9 le capteur fourni par Sciencethic sur la broche <code>A0</code> et ouvert l'\u00e9diteur <code>Thonny</code>, on cr\u00e9e un fichier <code>releve_temp.py</code> dont le contenu est le suivant:  </p> <p>Script <code>releve_temp.py</code></p> <pre><code># Relev\u00e9 R=f(\u03b8) d'une CTN\n# Par d\u00e9faut l'acquisition se fait toutes les 30 secondes. Pour changer cette valeur\n# modifier la constante DELAI (valeur en seconde)\n\n__author__ = 'Bruno DARID'\n__license__ = 'CC-BY-NC-SA 4.0'\n__email__ = 'bruno.darid@ac-reunion.fr'\n\nimport os\nfrom ppy import ADC, Pin, delay\n\n\n# Quelques 'constantes'\nDELAI = 30\nMSG = \"\"\"==== Acquisition toutes les 30 sec ou param\u00e9trage personnel ====\n1) A l'invite, entrer la temperature lue au thermom\u00e8tre\n2) Pour quitter --&gt; ctrl + C\n\"\"\"\n\ndef lecture(entree):\n\"\"\" R\u00e9alise une conversion A/N sur 'entree' et renvoie sa valeur \"\"\"\n\n    return entree.read()\n\ndef acquisition(nom_fichier, entree):\n\"\"\" Demande une lecture sur 'entree' et \u00e9crit la valeur dans 'nom_fichier'.csv\n    nom_fichier: chaine correspondant au nom du fichier SANS EXTENSION.\n    \"\"\"\n\n    with open(nom_fichier + '.csv', 'w') as f:\n        while True:\n            temp = input('Nouvelle valeur de temperature: ')\n            n = lecture(entree) # demande une conversion\n            f.write(str(10_000 * (4095 / n - 1)) + ';' + temp + '\\n') # Diviseur de tension avec Rctn et R1=10k sur entr\u00e9e A0\n            delay(DELAI * 1000) # delay attend des millisecondes\n\ndef main():\n    print(MSG)\n    os.chdir('/flash/Samples/Perso') # Se d\u00e9placer dans le r\u00e9p. de travail perso\n    entree_A0 = ADC(Pin('A0', Pin.IN)) # On suppose que le capteur est branch\u00e9 sur A0\n    acquisition('etalonnage', entree_A0) # le fichier sera nomm\u00e9 'etalonnage.csv'\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"PC/capteurs.html#commentaires-de-code","title":"Commentaires de code","text":"<p>La fonction <code>aquisition</code>m\u00e9rite une attention particuli\u00e8re. Elle a pour objectif de commander une lecture et d'\u00e9crire le r\u00e9sultat dans un fichier. Les op\u00e9rations d'entr\u00e9e/sortie sur les fichiers sont g\u00e9n\u00e9ralement effectu\u00e9es avec la fonction <code>open</code> \u00e0 qui on fournit le nom du fichier et le mode d'acc\u00e8s. Typiquement, on utilise une d\u00e9claration comme: <pre><code>f = open(mon_fichier, 'r')\n...\nf.close()\n</code></pre></p> <p>ou  </p> <pre><code>f = open(mon_fichier, 'w')\n...\nf.close()\n</code></pre> <p>Ici, on utilise une construction un peu plus s\u00fbre, form\u00e9e de la mani\u00e8re suivante:  </p> <p><pre><code>with open(nom_fichier + '.csv', 'w') as f:\n</code></pre> qui fermera le fichier quoi qu'il arrive, m\u00eame si une erreur s'est produite. Il s'agit de concepts (tr\u00e8s) avanc\u00e9s du langage (<code>Exception</code> et <code>Context manager</code>) qui ne seront pas abord\u00e9s ici.</p> <p>Remarque</p> <p>La relation de la ligne 34 vient du diviseur de tension form\u00e9 par une r\u00e9sistance \\(R_1=10\\ \\mathrm{k\\Omega}\\) et \\(R_{CTN}\\) sur l'entr\u00e9e <code>A0</code></p> <p>La fonction <code>main</code> ne pose pas de probl\u00e8me de compr\u00e9hension particulier.</p>"},{"location":"PC/capteurs.html#exploitation","title":"Exploitation","text":""},{"location":"PC/capteurs.html#trace-dune-courbe-detalonnage","title":"Trac\u00e9 d'une courbe d'\u00e9talonnage","text":"<p>L'impl\u00e9mentation Micropython de la carte ne permet pas le trac\u00e9 \\(R=f(\\theta)\\), la librairie <code>matplotlib</code> n'\u00e9tant pas pr\u00e9sente! A titre indicatif, on peut r\u00e9cup\u00e9rer le fichier csv avec <code>Thonny</code> (clic droit sur le fichier, puis t\u00e9l\u00e9chargement).  </p> <p></p> <p>Avec l'installation python de l'ordinateur ou sur basthon, on peut facilement tracer \\(R=f(\\theta)\\), par exemple avec le code suivant:  </p> <pre><code>import matplotlib.pyplot as plt\n\n# A d\u00e9commenter, si l'installation le permet\n#%matplotlib widget\n\nwith open('etalonnage2.csv', 'r') as f:\n    mesures = [ligne.strip().split(';') for ligne in f] # R\u00e9cup\u00e9ration de chaque ligne\n    R = [float(point[0]) for point in mesures]\n    theta = [float(point[1]) for point in mesures]\n\nfig, ax = plt.subplots(figsize=(10,7))\nax.set(xlabel=r'$\\theta$(\u00b0C)',\n       ylabel=r'R ($\\Omega$)',\n       ylim=(0,25_000),\n       title=\"Courbe d'\u00e9talonnage d'une CTN\"\n      )\nax.grid()\nax.scatter(theta, R, color='green', marker='o')\n# A d\u00e9commenter si l'installation le n\u00e9cessite\n#fig.show()\n</code></pre> <p>On obtient alors la courbe d'\u00e9talonnage:  </p> <p></p>"},{"location":"PC/capteurs.html#modelisation","title":"Mod\u00e9lisation","text":"<p>Pour mod\u00e9liser la CTN on utilise la relation de Steinhart-Hart (source Wikipedia):  </p> \\[\\dfrac{1}{T}=A + B\\times \\ln(R) + C\\times(\\ln(R))^3\\] <p>avec :  </p> <ul> <li>\\(T\\) sa temp\u00e9rature (en kelvins);</li> <li>\\(R\\) sa r\u00e9sistance \u00e9lectrique (en ohms);</li> <li>\\(A, B\\) et \\(C\\) les coefficients de Steinhart-Hart qui caract\u00e9risent chaque thermistance.</li> </ul> <p>Il s'agit de calculer les trois coefficients \u00e0 partir de trois mesures de temp\u00e9rature. L'impl\u00e9mentation micropython de la carte n'int\u00e8gre pas les librairies de calculs <code>numpy</code> ou <code>sympy</code>, on programmera directement la r\u00e9solution de ce probl\u00e8me comme indiqu\u00e9 sur la page de Wikipedia.  </p> <p>Script <code>model_temp.py</code></p> <pre><code># Calcule les \u00e9l\u00e9ments du mod\u00e8le de Steinhart-Hart;\n# Application: affichage de la temp\u00e9rature\n\nfrom math import log as ln\nfrom ppy import ADC, Pin\n\n\ndef model_steinhart():\n\"\"\" Calcule le mod\u00e8le de Steinhart-Hart et renvoie un tuple (A, B, C) tel que:\n    1/T = A + B*ln(R) + C*(ln(R))**3\n    \"\"\"\n\n    with open('/flash/Samples/Perso/etalonnage2.csv', 'r') as f:\n        releve = [ligne.strip().split(';') for ligne in f] # R\u00e9cup\u00e9ration de chaque ligne\n        releve = [[float(valeur[0]), float(valeur[1])] for valeur in releve] # Conversion en flottant\n\n    # On r\u00e9cupere 3 pts dans notre relev\u00e9\n    R = [releve[i][0] for i in (0, len(releve) // 2, -1)] # on prend 1 pt au d\u00e9but, milieu et \u00e0 la fin   \n    T = [releve[i][1] + 273.15 for i in (0, len(releve) // 2, -1)] \n    # Quelques changements de variables\n    # D\u00e9tails --&gt; https://fr.wikipedia.org/wiki/Relation_de_Steinhart-Hart\n    Y1, Y2, Y3 = 1 / T[0], 1 / T[1], 1 / T[2]\n    L1, L2, L3 = ln(R[0]), ln(R[1]), ln(R[2])\n\n    a = ((L2 - L3) / (L1 - L2)) * ((L2)**3 - (L1)**3) + ((L2)**3 - (L3)**3)\n    b = Y2 - Y3 - ((L2 - L3) / (L1 - L2)) * (Y1 - Y2)\n\n    C = b / a\n    B = (Y1 - Y2 - ((L1)**3 - (L2)**3) * C) / (L1 - L2)\n    A = Y1 - L1 * B - (L1)**3 * C\n    return A, B, C\n\n\ndef main():\n    A, B, C = model_steinhart() # R\u00e9cup\u00e9ration des coefficients du mod\u00e8le\n    entree_A0 = ADC(Pin('A0', Pin.IN))\n    v = entree_A0.read() # lecture d'une valeur\n    R = 10_000 * (4095 / v - 1) # La CTN est inclus dans un diviseur de tension avec R=10K\n    T = 1 / (A + B * ln(R) + C * ln(R)**3)\n    print('\\u03B8 = {} \u00b0C'.format(round(T - 273.15, 1))) # Affichage au dixi\u00e8me pr\u00e8s\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <p>Ex\u00e9cution du programme: thermom\u00e8tre </p> <p></p>"},{"location":"PC/capteurs.html#capteur-a-ultrasons","title":"Capteur \u00e0 ultrasons","text":"<p>On utilise le module Sciencethic 651 049 </p> <p></p> <p>Vu que le module HC-SR04 est mont\u00e9 dans une coque plastique, il nous est impossible d'avoir acc\u00e8s \u00e0 ses bornes et donc de visualiser les signaux \u00e9mis et re\u00e7us.</p>"},{"location":"PC/capteurs.html#documentation-du-hc-sr04","title":"Documentation du HC-SR04","text":"<p>Avant de proposer une utilisation, il est toujours int\u00e9ressant de consulter la documentation associ\u00e9e \u00e0 ce type de capteur. on peut trouver une copie \u00e0 cette adresse. La page 6 est particlui\u00e8rement int\u00e9ressante.  </p> <p></p> <p>Sans surprise on y apprend que la dur\u00e9e du signal pr\u00e9sent dur la broche 'ECHO' est proportionnelle \u00e0 la distance entre l'\u00e9metteur et l'obstacle.</p>"},{"location":"PC/capteurs.html#une-activite-possible","title":"Une activit\u00e9 possible","text":"<p>On met en \u0153uvre ici le principe du radar de recul des voitures. Le module ultrason est branch\u00e9e sur la sortie <code>A0</code> du microcontrolleur. Voici un exemple de script. Script <code>radar_recul.py</code> </p> <pre><code># Principe du radar de recul\n# Utilisation du module 'T\u00e9l\u00e9m\u00e8tre' r\u00e9f. Sciencethic 651 049\n# on simule l'alarme en envoyant un son sur la sortie A0, par\n# l'interm\u00e9diaire d'un convertisseur num\u00e9rique/analogique (DAC)\n\n__author__ = 'Bruno DARID'\n__license__ = 'CC-BY-NC-SA 4.0'\n__email__ = 'bruno.darid@ac-reunion.fr'\n\nfrom lib.USRanger import USRanger\nfrom ppy import Pin, delay, DAC\nfrom math import sin, pi\n\n\ndef alarme(sortie, off=False):\n\"\"\" Produit d'un son sinusoidal de freq = 600 Hz;\n    sortie: instance de DAC\n    off: booleen, si off=True, alors on coupe le son.\n    \"\"\"\n\n    if off:\n        sortie.write(0)\n    else:\n        buf = bytearray(100) # tableau d'octets pour un buffer\n        for i in range(100):\n            # Remplissage du buffer contenant la fonction sinus\n            buf[i] = 128 + int(127 * sin(2 * pi * i / 100))\n        # voir documentation pour la syntaxe de write_timed\n        sortie.write_timed(buf, 600 * len(buf), mode=DAC.CIRCULAR)\n\ndef main():\n    # Affectation des broches: t\u00e9l\u00e9m\u00e8tre sur D2 et son sur A0\n    module = USRanger(Pin('D2', Pin.OUT))\n    sortie_son = DAC(Pin('A0', Pin.OUT))\n\n    while True:\n        # Il vaudrait mieux effectuer une moyenne sur quelques mesures\n        # plutot qu'une seule !\n        mesures = []\n        for i in range(20):\n            # Utilisation de la librairie pour la mesure de d\n            mesures.append(module.mesureCentimeters())\n            delay(10) # conform\u00e9ment \u00e0 la documentation\n        dist = sum(mesures) / len(mesures)\n        # Prise de d\u00e9cision suivant la valeur de la distance\n        if dist &lt; 20:\n            alarme(sortie_son)\n        else:\n            alarme(sortie_son, off=True)\n\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"PC/capteurs.html#commentaires-de-code_1","title":"Commentaires de code","text":""},{"location":"PC/capteurs.html#production-de-son","title":"Production de son","text":"<p>On utilise les fonctionnalit\u00e9s du convertisseur num\u00e9rique analogique. On cr\u00e9\u00e9 d'abord le tableau de valeurs \u00e0 envoyer vers le DAC, puis on r\u00e9alise effectivement l'\u00e9criture.</p> <pre><code>buf = bytearray(100) # tableau d'octets pour un buffer\nfor i in range(100):\n    # Remplissage du buffer contenant la fonction sinus\n    buf[i] = 128 + int(127 * sin(2 * pi * i / 100))\n</code></pre> <p>Le tableau d'octet cr\u00e9\u00e9 va contenir une p\u00e9riode d'un sinus. On a choisi ici arbitrairement de d\u00e9couper l'intervalle \\(\\left[0\\cdots 2\\pi\\right[\\) en 100 points.</p> <pre><code>sortie.write_timed(buf, 600 * len(buf), mode=DAC.CIRCULAR)\n</code></pre> <p>La m\u00e9thode <code>write_timed</code> de la classe DAC est document\u00e9e ici. Les param\u00e8tres utilis\u00e9s ici sont les donn\u00e9es <code>buf</code> \u00e0 \u00e9crire sur la broche d\u00e9sign\u00e9e par <code>sortie</code>. La fr\u00e9quence du signal est transmise par <code>600 * len(buf)</code> que l'on peut interpr\u00e9ter comme 600 signaux <code>buf</code> \u00e0 \u00e9crire par seconde. Enfin, le mode <code>CIRCULAR</code> est \u00e0 prendre au sens en continu. </p>"},{"location":"PC/capteurs.html#la-fonction-prinpale-main","title":"La fonction prinpale main","text":"<p>L'algorithme est trivial: on r\u00e9alise une boucle infinie dans laquelle on mesure la distance avec l'obstacle, si celle-ci est inf\u00e9rieure \u00e0 20 cm, on d\u00e9clenche l'alarme. </p> <p>Remarque</p> <p>On quitte la boucle infinie avec la s\u00e9quence de touches Ctrl\uff0bC. L'interpr\u00e9teur stoppe le script en levant une exception <code>KeyboardInterrupt</code>.</p>"},{"location":"PC/capteurs.html#capteur-de-pression","title":"Capteur de pression","text":"<p>On utilise le module r\u00e9f. 651 055 de Sciencethic connect\u00e9 \u00e0 l'entr\u00e9e analogique <code>A3</code>.  </p> <p></p>"},{"location":"PC/capteurs.html#quelques-remarques-preliminaires","title":"Quelques remarques pr\u00e9liminaires","text":"<p>Il est impossible d'acc\u00e9der \u00e0 la documentation du capteur utilis\u00e9. Sciencethic ne fournit qu'une r\u00e9f\u00e9rence interne et ne mentionne aucun composant! En effectuant quelques recherches on y apprend que:  </p> <ul> <li>c'est un capteur de pression absolue (-1000;+2000 hPa) (source fiche de TP \"Mariotte\" de la rubrique T\u00e9l\u00e9chargement du site de Sciencethic);</li> <li>le signal de sortie est un Signal 0-5 V proportionnel \u00e0 la pression (source https://www.sciencethic.com/shop/651066-capteur-arduino-tm-pression-pour-mariotte-4858?page=2&amp;category=556#attr=);</li> <li>la relation de proportionnalit\u00e9 est du type <code>pression = (valeur lue / Nmax) * 3010</code> (source ligne 140 du script <code>Loi de Mariotte-PlugUino-Py.py</code> pr\u00e9sent dans le dossier <code>TP</code> de la carte).  </li> </ul> <p>La suite de ce document repose sur ces hypoth\u00e8ses ...   </p> <p>Enfin, la liaison entre le module capteur et la seringue semble fragile.</p>"},{"location":"PC/capteurs.html#activite-possible","title":"Activit\u00e9 possible","text":"<p>On choisit ici de v\u00e9rifier que le produit \\(P\\times V\\) reste constant pour une quantit\u00e9 d'air (qu'on assimile \u00e0 un GP) donn\u00e9e \u00e0 une temp\u00e9rature donn\u00e9e.  </p> <p>Le script ci-dessous permet la r\u00e9cup\u00e9ration et la sauvegarde de la pression et du volume dans un fichier <code>csv</code>.  </p> <p>Script <code>pression.py</code> </p> <pre><code># Relev\u00e9 de la pression en fonction du volume d'air emprisonn\u00e9 dans une seringue.\n# La sauvegarde se fait dans un fichier csv\n\n__author__ = 'Bruno DARID'\n__license__ = 'CC-BY-NC-SA 4.0'\n__email__ = 'bruno.darid@ac-reunion.fr'\n\nimport os\nfrom ppy import ADC, Pin\n\n\n# Quelques 'constantes'\nMSG = \"\"\"==== Relev\u00e9 de la pression en fonction du volume ====\n1) A l'invite, entrer le volume d'air pr\u00e9sent dans la seringue\n2) Pour quitter --&gt; ctrl + C\n\"\"\"\n\ndef lecture(entree):\n\"\"\" R\u00e9alise une conversion A/N sur 'entree' et renvoie sa valeur \"\"\"\n\n    return entree.read()\n\ndef acquisition(nom_fichier, entree):\n\"\"\" Demande une valeur de volume et mesure la pression correspondante. Les r\u00e9sultats sont\n    \u00e9crits dans 'nom_fichier'.csv\n    nom_fichier: chaine correspondant au nom du fichier SANS EXTENSION.\n    entree: instance de classe ADC, d\u00e9signe la broche sur laquelle est branch\u00e9e le module\n    \"\"\"\n\n    with open(nom_fichier + '.csv', 'w') as f:\n        while True:\n            v = input('Nouvelle valeur de volume (mL): ')\n            volume = float(v)\n            n = lecture(entree) # demande une conversion\n            f.write(str(n * 3010 / 4095) + ';' + str(volume + 3.1) + '\\n') # Sauvegarde 'Pression ; \n            # Volume' dans le fichier csv.\n            # On a tenu compte du volume de 3.1 mL (tuyau avant capteur)\n            # 3010 est le facteur de proportionnalit\u00e9 entre P et la tension d'entr\u00e9e\n\ndef main():\n    print(MSG)\n    os.chdir('/flash/Samples/Perso') # Se d\u00e9placer dans le r\u00e9p. de travail perso\n    entree_A3 = ADC(Pin('A3', Pin.IN)) # On suppose que le capteur est branch\u00e9 sur A3\n    acquisition('PV', entree_A3)\n\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"PC/capteurs.html#commentaires-de-code_2","title":"Commentaires de code","text":"<p>La structure de la fonction <code>aquisition</code> est quasiment identique \u00e0 celle de l'activit\u00e9 sur la CTN. Seuls les r\u00e9sultats \u00e0 sauvegarder changent. La ligne <code>os.chdir('/flash/Samples/Perso')</code> est utile si on veut que le fichier \u00e0 sauvegarder soit situ\u00e9 dans <code>Perso</code>.</p>"},{"location":"PC/capteurs.html#exploitation-des-resultats","title":"Exploitation des r\u00e9sultats","text":"<p>Le trac\u00e9 du graphe \\(P\\cdot V=f(V)\\) ne peut se faire avec l'interpr\u00e9teur Micropython. On utilisera un serveur de notebook Jupyter (par exemple https://nsiboisdo.bdrd.fr/basthon/).  </p> <p>Exemple de code python </p> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\n# A d\u00e9commenter, si l'installation le permet\n#%matplotlib widget\n\nwith open('PV.csv', 'r') as f:\n    mesures = [ligne.strip().split(';') for ligne in f] # R\u00e9cup\u00e9ration de chaque ligne\n    P = np.array([float(point[0]) for point in mesures])\n    V = np.array([float(point[1]) for point in mesures])\n\nfig, ax = plt.subplots(figsize=(10,7))\nax.set(xlabel=r'V (en mL)',\n       ylabel=r'Produit $P\\times V\\ (\\mathrm{en\\ hPa\\cdot mL})$',\n       title='Loi de Mariotte',\n       ylim=(0, 80_000)\n      )\nax.grid()\nax.scatter(V, P * V, color='green', marker='o')\n# A d\u00e9commenter si l'installation le n\u00e9cessite\n#fig.show()\n</code></pre> <p>Ex\u00e9cution </p> <p></p>"},{"location":"PC/conclusion.html","title":"Conclusions","text":""},{"location":"PC/conclusion.html#points-forts-du-kit","title":"Points forts du kit","text":"<p>Le boitier incorporant la carte ainsi que les connecteurs sata semblent robustes et devraient r\u00e9sister aux chocs. Les capteurs sont bien prot\u00e9g\u00e9s si on exclus la faiblesse entre le capteur de pression et la seringue. Par ailleurs, les entr\u00e9es sont prot\u00e9g\u00e9es \u00e9lectriquement et l'utilisateur n'a pas \u00e0 se soucier de conversions de niveau logique 3V-5V. Enfin, la pr\u00e9sence de l'interpr\u00e9teur Micropython est \u00e9galement un avantage. L'\u00e9l\u00e8ve retrouve un langage utilis\u00e9 dans d'autres disciplines. </p>"},{"location":"PC/conclusion.html#points-faibles","title":"Points faibles","text":"<p>La principale faiblesse de ce kit se situe au niveau de sa documentation. Celle-ci est soit absente (caract\u00e9ristiques des capteurs utilis\u00e9s) soit de tr\u00e8s mauvaise qualit\u00e9 (les codes python fourni en exemple sont tr\u00e8s mal \u00e9crits, ne respectant en rien les r\u00e8gles \u00e9l\u00e9mentaires \u00e9nonc\u00e9es dans la PEP8). Un autre probl\u00e8me est constat\u00e9 au niveau de la mise \u00e0 jour du micro-programme (firmware) de la carte. Cette MAJ doit \u00eatre possible via un fichier binaire distribu\u00e9 par Sciencethic. Il n'existe aucune trace de ce fichier sur le site du vendeur. Pour information, la version de micropython install\u00e9e (1.11) date de 2019. Au 10 novembre 2021, la version 1.17 est disponible ...</p>"},{"location":"PC/conclusion.html#quelques-references","title":"Quelques r\u00e9f\u00e9rences","text":"<p>Le livre de Dominique Meurisse (Ed. ENI) est disponible dans Magist\u00e8re / Biblioth\u00e8que en ligne. Enfin, la documentation officielle de Micropython pour pyboard est une source incontournable.</p> <p>Bruno DARID novembre 2021.</p>"},{"location":"PC/connexion.html","title":"Connexion avec un ordinateur","text":""},{"location":"PC/connexion.html#liaison-a-lordinateur","title":"Liaison \u00e0 l'ordinateur","text":"<p>On se place dans un mode de fonctionnement non autonome o\u00f9 le Plug' py est connect\u00e9 \u00e0 l'ordinateur via le bus USB, avec le c\u00e2ble fourni. On utilise le connecteur micro-usb dans le coin haut gauche du boitier et un des ports USB de l'ordinateur.  </p> <p></p>"},{"location":"PC/connexion.html#detection","title":"D\u00e9tection","text":"<p>La d\u00e9tection ne pose aucun soucis avec les syst\u00e8mes d'exploitation r\u00e9cents. Le boitier est vu comme un p\u00e9riph\u00e9rique de stockage externe dont la taille proche de 128 Mo (taille de la carte SD pr\u00e9sente sur le syst\u00e8me), nomm\u00e9 <code>PPYFLASH</code>.  </p> <p></p> <p>Par ailleurs, on peut noter que le boitier est vu \u00e9galement comme un p\u00e9riph\u00e9rique s\u00e9rie, dont il est important de relever le num\u00e9ro COM (pour les syst\u00e8mes windows). Il suffit de faire un clic droit sur Ce PC, puis propri\u00e9t\u00e9s et gestionnaire de p\u00e9riph\u00e9rique. En cas, d'\u00e9chec du clic droit (absence de Propri\u00e9t\u00e9s), utiliser un raccourci vers le gestionnaire de p\u00e9riph\u00e9rique, sur le bureau. </p> <p></p> <p>Dans le cas de la capture, on note COM5. Attention, cette valeur n'est pas garantie sur les autres machines.</p>"},{"location":"PC/matplotlib.html","title":"Tracer une courbe avec Matplotlib","text":""},{"location":"PC/matplotlib.html#breve-introduction","title":"Br\u00e8ve introduction","text":"<p>Matplotlib a \u00e9t\u00e9 cr\u00e9\u00e9 en 2003 par un neurobiologiste (John Hunter) pour s'affranchir du logiciel MATLAB et notamment son caract\u00e8re propri\u00e9taire. Une des caract\u00e9ristiques de MATLAB est son style global totalement \u00e0 l'oppos\u00e9 des processus d'importation de python. </p> <p>Un graphique <code>matplotlib</code> est constitu\u00e9 de nombreux objets hi\u00e9rarchis\u00e9s de la mani\u00e8re suivante:  </p> <p></p> <p>Les objets les plus importants \u00e0 notre niveau sont: <code>Figure</code>, <code>Axes</code> et dans une moindre mesure <code>Axis</code>.  </p> <p><code>Matplotlib</code> est assez difficile d'approche pour les raisons suivantes:  </p> <ul> <li>la librairie est \u00e9norme (entre 70000 et 200000 lignes de code suivant les sources)</li> <li>il fournit plusieurs interfaces (fa\u00e7on de tracer une figure);</li> <li>certains points de la documentation ne sont pas \u00e0 jour.</li> </ul> <p>Enfin, d'un point de vue architecturale, <code>matplotlib</code> peut \u00eatre d\u00e9compos\u00e9 en trois couches:</p> <p></p> <p>Remarque</p> <p>La tr\u00e8s grande majorit\u00e9 des scripts pr\u00e9sents dans les manuels du secondaire, mais aussi dans la formation <code>Python en sciences physiques</code> dispens\u00e9e sur Magist\u00e8re, utilisent la couche de script avec <code>Pyplot</code>. Ce n'est pas forc\u00e9ment le meilleur choix ... (voir ci-apr\u00e8s)</p>"},{"location":"PC/matplotlib.html#quelle-interface-choisir","title":"Quelle interface choisir ?","text":""},{"location":"PC/matplotlib.html#interface-pylab","title":"Interface Pylab","text":"<p>Afin de retrouver le style global de MATLAB, un module de <code>matplotlib</code> a \u00e9t\u00e9 con\u00e7u: <code>Pylab</code>. L'utilisation de <code>Pylab</code> est contraire aux bonnes habitudes codage en python et peut \u00eatre de surcroit \u00e0 l'origine de nombreux bugs difficiles \u00e0 cerner. D'apr\u00e8s la documentation, disponible ici:   </p> <p>pylab is a module that includes matplotlib.pyplot, numpy, numpy.fft, numpy.linalg, numpy.random, and some additional  functions, all within a single namespace. Its original purpose was to mimic a MATLAB-like way of working by importing  all functions into the global namespace. This is considered bad style nowadays.</p> <p>On ne devrait donc PAS UTILISER CE MODULE, contrairement au sujet E3C Physique Chimie n\u00b0 02715, page 2!</p>"},{"location":"PC/matplotlib.html#interface-avec-etat-pyplot-pour-des-cas-tres-simples","title":"Interface avec \u00e9tat Pyplot (pour des cas tr\u00e8s simples)","text":"<p><code>Pyplot</code> fait partie de la couche de script de <code>matplotlib</code>. <code>Pyplot</code> poss\u00e8de une multitude de fonction permettant de tracer simplement des graphiques. Son utilisation lib\u00e8re l'utilisateur de toutes manipulations d'objets de plus bas niveau. En arri\u00e8re plan, <code>Pyplot</code> cr\u00e9\u00e9, enregistre l'\u00e9tat de tous les objets utiles (<code>Figure</code>, <code>Axes</code>, etc.). Au final, on n'a qu'\u00e0 saisir les commandes comme on le ferait dans un shell interactif.  </p> <p>Exemple</p> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\n\ng = 9.81 # Intensit\u00e9 de la pesanteur\nH = 2.5 # hauteur initiale\n\nt = np.arange(0, 1, step=0.05, dtype=float)\nvy = -g * t\ny = -0.5 * g * t**2 + H\n\nplt.title(\"y=f(t)\")\nplt.xlabel(\"t (s)\")\nplt.ylabel(\"y (m)\")\nplt.title(\"Chute libre\")\nplt.plot(t, y, label=\"y\")\nplt.plot(t, vy, label=\"vy\")\nplt.legend()\nplt.grid()\nplt.show()\n</code></pre> <p></p> <p>Toutes les fonctions de <code>Pyplot</code>se r\u00e9f\u00e8rent aux objets <code>Figure</code> ou <code>Axes</code> courants (ou alors les cr\u00e9ent si ces derniers n'existent pas). Mais qu'en est-il si on a plusieurs graphiques (<code>Axes</code>) \u00e0 g\u00e9rer ? On voit sur l'exemple ci-dessus les premiers probl\u00e8mes appara\u00eetre: les deux trac\u00e9s partagent les m\u00eames axes et ... la parabole est tr\u00e8s \u00e9cras\u00e9e !  Par ailleurs, le fait que <code>Pyplot</code> g\u00e8re tout en arri\u00e8re plan, ne nous permet pas de personnaliser au maximum nos graphiques. De ce fait, cette interface n'est pas la plus recommand\u00e9e.</p>"},{"location":"PC/matplotlib.html#interface-sans-etat-ou-approche-orientee-objet","title":"Interface sans \u00e9tat ou approche orient\u00e9e objet","text":"<p>C'est l'approche recommand\u00e9e par la documentation officielle et notamment lorsqu'on doit g\u00e9rer plusieurs graphiques ou modifier des attributs tr\u00e8s particuliers de certains objets (graduation des axes par exemple).</p> <pre><code>fig, ax1 = plt.subplots(figsize=(8,5))\n\nax1.set_ylabel(\"y (m)\", color=\"blue\")\nax1.set_xlabel(\"t (s)\")\nax1.plot(t, y, \"blue\")\nax1.tick_params(axis=\"y\", labelcolor=\"blue\")\nax1.grid()\n\nax2 = ax1.twinx() # cr\u00e9\u00e9 un 2\u00e8me axe sur la droite partageant le m\u00eame axe Ox\n\nax2.set_ylabel(\"vy (m/s)\", color=\"green\")\nax2.tick_params(axis=\"y\", labelcolor=\"green\")\nax2.plot(t, vy, \"green\")\n\nfig.suptitle(\"Chute libre\")\nfig.legend([\"Ordonn\u00e9e\", \"Vitesse\"])\n</code></pre> <pre><code>&lt;matplotlib.legend.Legend at 0x7fc852da63a0&gt;\n</code></pre> <p></p>"},{"location":"PC/matplotlib.html#conclusion","title":"Conclusion","text":"<p>Dans la documentation officielle, on peut relever les passages suivants:  </p> <p>pyplot is mainly intended for interactive plots and simple cases of programmatic plot generation.</p> <p>et  </p> <p>At its core, Matplotlib is object-oriented. We recommend directly working with the objects, if you need more control and customization of your plots.</p> <p>Apr\u00e8s lecture de cette page, on peut conclure qu'il faudrait adopter l'approche orient\u00e9e objet afin de pouvoir mieux personnaliser ses graphiques. Dans tous les cas, on n'utilisera plus l'interface pylab.</p>"},{"location":"PC/mode_fonctionnement.html","title":"Les modes fonctionnements du Plug'Py","text":"<p>Lien vers les scripts de cette pr\u00e9sentation</p>"},{"location":"PC/mode_fonctionnement.html#le-mode-interface","title":"Le mode interface","text":"<p>La carte dispose d'un premier mode de fonctionnement appel\u00e9 Interface dans lequel l'essentiel des op\u00e9rations se d\u00e9roule c\u00f4t\u00e9 ordinateur.  </p> <p>On peut tester ce mode avec un des programmes livr\u00e9s avec le boitier (exemple <code>Temperature simple-PlugUnio-Py.py</code>).  </p> <p>Avis personnel </p> <p>Ce mode de fonctionnement bien que s\u00e9duisant souffre de gros d\u00e9fauts:  </p> <ul> <li>obligation d'avoir python install\u00e9 sur l'ordinateur h\u00f4te;</li> <li>obligation d'avoir la librairie <code>libPlugPy</code> dans le m\u00eame dossier que le programme \u00e0 ex\u00e9cuter;</li> <li>syntaxe du code python utilis\u00e9 tr\u00e8s lourde lorsqu'on ex\u00e9cute une instruction destin\u00e9e au microcontr\u00f4leur;</li> <li>utilisation de structures avanc\u00e9es du langage Python (<code>Exception</code>, contexte <code>try / except</code>, etc.) inutiles \u00e0 ce stade d'apprentissage. </li> </ul>"},{"location":"PC/mode_fonctionnement.html#le-mode-repl","title":"Le mode REPL","text":"<p>C'est le mode privil\u00e9gi\u00e9 durant cette initiation. Il s'agit:  </p> <ul> <li>d'utiliser la liaison s\u00e9rie;</li> <li>de dialoguer directement (sans librairie) avec le microcontr\u00f4leur, en python;</li> <li>finalement d'\u00e9crire ses scripts sur son ordinateur avec son \u00e9diteur de code pr\u00e9f\u00e9r\u00e9 (par exemple Thonny).</li> </ul> <p>Pour entrer dans ce mode, proc\u00e9der selon la description ci-dessous. Sur la carte Plug'Uino Py:  </p> <ul> <li>appuyer et maintenir le bouton USR puis appuyer bri\u00e8vement sur le bouton RST (en haut \u00e0 gauche);</li> <li>dans le menu de l'\u00e9cran du Plug' Py, choisir Safe Mode avec le bouton USR (appui court) puis valider par un appui long sur USR.  </li> </ul> <p></p>"},{"location":"PC/mode_fonctionnement.html#utiliser-la-liaison-serie","title":"Utiliser la liaison s\u00e9rie","text":"<p>Plusieurs applications permettent d'atteindre cet objectif.  </p>"},{"location":"PC/mode_fonctionnement.html#putty","title":"PuTTY","text":"<p>Il s'agit d'une application l\u00e9g\u00e8re, libre de droits, distribu\u00e9 sous licence MIT. Un raccourci <code>Putty Reseau</code> est disponible sur les ordinateurs de la salle A104.  </p> <p></p> <p>Il est n\u00e9cessaire de proc\u00e9der \u00e0 quelques r\u00e9glages, certains optionnels, d'autres obligatoires. On DOIT:  </p> <ul> <li>indiquer la COM utilis\u00e9e;</li> <li>cocher serial.</li> </ul> <p></p> <p>On PEUT adapter la police utilis\u00e9e, notamment sa taille ;) car la police par d\u00e9faut <code>Courier 10 pt</code> n'est gu\u00e8re lisible.   </p> <p></p> <p>On valide en cliquant sur <code>Open</code></p>"},{"location":"PC/mode_fonctionnement.html#edi-thonny","title":"EDI Thonny","text":"<p>Thonny est un environnement de d\u00e9veloppement int\u00e9gr\u00e9, tr\u00e8s pris\u00e9 par les d\u00e9butants. C'est un logiciel libre, multiplateforme et qui peut \u00eatre t\u00e9l\u00e9charg\u00e9 \u00e0 cette adresse. Apr\u00e8s avoir d\u00e9marr\u00e9 la carte en mode Safe Mode, il peut \u00eatre utile, la premi\u00e8re fois, de param\u00e9trer Thonny pour l'utilisation avec le Plug'Uino Py. Il s'agira d'indiquer au syst\u00e8me le bon interpr\u00e9teur python \u00e0 utiliser.  </p> <p></p> <p>Sur la capture, on remarque que Thonny utilise l'interpr\u00e9teur Python par d\u00e9faut du syst\u00e8me (Python 3.8), il faut changer cet \u00e9tat. 1. Aller dans Executer puis choisir \"S\u00e9lectionner l'interpr\u00e9teur...\"  </p> <p> </p> <ol> <li>Une nouvelle fen\u00eatre s'ouvre; choisir l'onglet Interpr\u00e9teur </li> <li>Dans le menu d\u00e9roulant, choisir Micropython (g\u00e9n\u00e9rique) puis dans le menu Port choisir la carte Plug'Uino Py (sur les syst\u00e8mes Windows 10, c'est la ligne o\u00f9 apparait COM...) </li> <li>Valider par OK, le syst\u00e8me est configur\u00e9. On constate, via la console, que l'on travaille avec un interpr\u00e9teur micropython (celui de la carte). On peut ne pas tenir compte de la pr\u00e9sence d'\u00e9ventuels Warnings. </li> </ol>"},{"location":"PC/mode_fonctionnement.html#le-dialogue-avec-le-microcontroleur-interpreteur-micropython","title":"Le dialogue avec le microcontr\u00f4leur - Interpr\u00e9teur micropython","text":"<p>En cas de succ\u00e8s de l'ouverture d'une session, on se retrouve avec un interpr\u00e9teur Python parfaitement fonctionnel.  </p> <p>Exemple avec Putty </p> <p> </p> <p>Exemple avec Thonny</p> <p></p>"},{"location":"PC/mode_fonctionnement.html#en-cas-dechec-de-la-connexion","title":"En cas d'\u00e9chec de la connexion","text":"<p>Lorsque la connexion \u00e9choue, on pourra en premi\u00e8re intention, effectuer certaines v\u00e9rifications:</p> <ul> <li>le microcontr\u00f4leur est-il bien connect\u00e9 \u00e0 un port USB ? une led bleue sur le boitier permet de le confirmer;</li> <li>un programme en ex\u00e9cution sur le microcontr\u00f4leur n'est-il pas pas dans une boucle infinie ou en attente d'entr\u00e9e ? une s\u00e9rie de Ctrl\uff0bC peut \u00eatre la solution ...</li> <li>peut-on r\u00e9cup\u00e9rer un interpr\u00e9teur en effectuant un RESET avec la s\u00e9quence de touches Ctrl\uff0bD ou le bouton STOP de Thonny?</li> </ul>"},{"location":"PC/mode_fonctionnement.html#proposition-de-procedure-de-developpement","title":"Proposition de proc\u00e9dure de d\u00e9veloppement","text":"<p>Une fois la connexion \u00e9tablie avec le microcontr\u00f4leur, on peut commencer des tests dans l'interpr\u00e9teur micropython.   </p> <p>Si les tests sont concluants, on peut \u00e9crire un script dans la fen\u00eatre d'\u00e9dition de Thonny et l'enregistrer dans un dossier sur la carte. L'espace est tr\u00e8s limit\u00e9 sur la carte (128 Mo), on y d\u00e9posera que des scripts. De plus, on \u00e9vitera \u00e0 tout prix de d\u00e9poser ses fichiers n'importe o\u00f9! On pourra cr\u00e9er, par exemple, un dossier <code>Perso</code> dans le dossier <code>Samples</code> pour le stockage de ses fichiers personnels.  </p> <p></p>"},{"location":"PC/ucontroleur.html","title":"Plan : D\u00e9couvrir le Plug'Uino Py","text":"<ol> <li>Qu'est qu'un microcontroleur ?</li> <li>Pr\u00e9sentation du boitier Plug'Uino Py</li> <li>Les modes de fonctionnements<ul> <li>Mode interface</li> <li>Mode REPL</li> </ul> </li> <li>Le \"Hello world\" du Plug Py<ul> <li>Montage</li> <li>Utilisation d'un terminal REPL</li> <li>\u00c9criture d'un script</li> </ul> </li> <li>Mise en oeuvre de capteurs<ul> <li>Capteur de temp\u00e9rature</li> <li>Capteur US</li> <li>Capteur de pression</li> </ul> </li> <li>Conclusion</li> <li>Annexe: tracer un graphique avec matplotlib</li> </ol>"},{"location":"PC/ucontroleur.html#quest-ce-quun-microcontroleur","title":"Qu'est-ce qu'un microcontr\u00f4leur?","text":"<p>Un microcontr\u00f4leur (en notation abr\u00e9g\u00e9e \u00b5c, ou uc ou encore MCU en anglais) est un circuit int\u00e9gr\u00e9 qui rassemble les \u00e9l\u00e9ments essentiels d'un ordinateur : processeur, m\u00e9moires (m\u00e9moire morte et m\u00e9moire vive), unit\u00e9s p\u00e9riph\u00e9riques et interfaces d'entr\u00e9es-sorties.  Source wikipedia</p> <p>En dehors de l'architecture, les microcontr\u00f4leurs diff\u00e8rent des microprocesseurs sur les points suivants:  </p> <ul> <li>leur domaine d'utilisation (syst\u00e8me embarqu\u00e9 ou informatique g\u00e9n\u00e9rale);</li> <li>leur prix (quelques euros ou quelques centaines voire milliers d'euros);</li> <li>leur consommation (moins d'un milliwatt \u00e0 plusieurs dizaines de watt).</li> </ul> <p>Quelques microcontr\u00f4leurs usuels ...</p> <p> </p> <p>... mont\u00e9s sur une carte de d\u00e9veloppement</p> <p> </p>"},{"location":"PC/ucontroleur.html#le-boitier-pluguino-py","title":"Le boitier Plug'Uino Py","text":"<p>Le boitier Plug'Uino Py est commercialis\u00e9 par la soci\u00e9t\u00e9 Scienc\u00e9thic. Le mod\u00e8le pr\u00e9sent au lyc\u00e9e de Bois d'Olive contient une version simplifi\u00e9e de la carte Pyboard. </p> <p></p> <p>L'acc\u00e8s aux bornes d'entr\u00e9e/sortie se fait par le biais de connecteurs SATA en respectant le code des couleurs:  </p> <ul> <li>ROUGE: donn\u00e9es num\u00e9riques;</li> <li>BLEU: donn\u00e9es analogiques;</li> <li>JAUNE: utilisation du bus \\(I^2C\\).</li> </ul> <p>La connexion peut se faire \u00e9galement gr\u00e2ce aux connecteurs SIL.  </p> <p>Remarque</p> <p>Les connecteurs SATA et SIL de m\u00eame nom sont connect\u00e9s entre eux.  </p> <p></p> <p>L'alimentation et la connexion avec l'ordinateur se font via l'USB (connecteur en haut \u00e0 gauche).  </p> <p>La carte est automatiquement d\u00e9tect\u00e9e par les syst\u00e8mes r\u00e9cents (Linux Ubuntu ou W10) sans installation de pilotes annexes. Ce n'est pas le cas avec W7.</p>"},{"location":"Projets/jeu_carte.html","title":"Description du projet","text":"<p>Il s'agit de mod\u00e9liser une partie de bataille aux cartes. Les r\u00e8gles du jeu de bataille sont les suivantes (voir wikipedia): il s'agit d'un jeu \u00e0 deux joueurs o\u00f9 l'on commence par distribuer l'ensemble d'un jeu de cartes (52 cartes) aux joueurs de mani\u00e8re \u00e0 ce que chaque joueur poss\u00e8de le m\u00eame nombre de cartes, c'est-\u00e0-dire 26.  </p> <p>Les joueurs ne regardent pas les cartes et \u00e0 chaque tour, ils retournent la carte se trouvant sur le dessus du paquet. Le joueur poss\u00e9dant la carte la plus forte r\u00e9cup\u00e8re les deux cartes et les place sous son tas (cela doit rappeler une structure de donn\u00e9e d\u00e9j\u00e0 \u00e9tudi\u00e9e ). Si les deux cartes sont de valeur \u00e9gale, on dit qu'il y a bataille : chaque joueur place la carte du dessus de son tas \u00e0 l'envers sur sa premi\u00e8re carte, puis place une nouvelle carte par dessus. Le joueur ayant la carte la plus forte r\u00e9cup\u00e8re l'ensemble des cartes (en cas de nouvelle \u00e9galit\u00e9, on recommence).  </p> <p>La partie se termine lorsque l'un des deux joueurs n'a plus de carte (et ce dernier a perdu). </p>"},{"location":"Projets/jeu_carte.html#modelisation","title":"Mod\u00e9lisation","text":"<p>Plusieurs mod\u00e9lisations sont possibles. En voici une:  </p> <p></p> <p>Autre (UML)  </p> <p></p>"},{"location":"Projets/jeu_carte.html#remarques-concernant-les-classes","title":"Remarques concernant les classes","text":"<p>La classe <code>Cartes</code> ne pr\u00e9sente pas de difficult\u00e9s particuli\u00e8res avec ses deux attributs <code>couleur</code> et <code>valeur</code>. L'As est particulier, c'est la plus forte carte, on peut lui attribuer la valeur 14.  </p> <p>La classe <code>JeuCartes</code> doit permettre de constituer les 52 cartes d'un jeu. Son attribut <code>cartes</code> \u00e9tant une instance de <code>Cartes</code>. </p> <p>Pour pouvoir jouer, deux joueurs ont besoin d'un paquet de cartes issus d'un jeu de cartes. D'o\u00f9 la pr\u00e9sence d'une classe <code>Paquet</code>.</p>"},{"location":"Projets/jeu_carte.html#roadmap","title":"Roadmap","text":""},{"location":"Projets/jeu_carte.html#modalites-devaluation","title":"Modalit\u00e9s d'\u00e9valuation","text":"<ul> <li>Pr\u00e9sentation oral du travail effectu\u00e9</li> <li>Qualit\u00e9 du travail collaboratif et recherche</li> </ul>"},{"location":"Projets/jeu_carte.html#le-rapport-de-projet","title":"Le rapport de projet","text":"<p>Le contenu du rapport doit faire appara\u00eetre les acquis d\u2019apprentissage associ\u00e9s au Projet. On insiste notamment sur l'aspect collaboratif, la d\u00e9couverte et l'utilisation de nouveaux outils, etc.</p> <p>Le rapport doit \u00eatre structur\u00e9 et doit pr\u00e9senter clairement ce que l\u2019on a cherch\u00e9 \u00e0 faire, pourquoi, et enfin comment. Il ne s\u2019agit pas forc\u00e9ment d\u2019un descriptif chronologique du travail effectu\u00e9.</p> <p>Sur la forme, on doit y trouver :</p> <ul> <li>une introduction,</li> <li>une analyse du probl\u00e8me pos\u00e9,</li> <li>les solutions propos\u00e9es avec justification;</li> <li>une conclusion;</li> <li>les sources utilis\u00e9es (bibliographie, sitographie, forum ou autre);</li> <li>un lien vers le code.</li> </ul>"},{"location":"Projets/jeu_carte.html#pistes-pour-les-plus-rapides","title":"Pistes pour les plus rapides","text":"<p>Envisager une partie <code>Joueur humain</code> vs <code>Programme</code>.</p>"},{"location":"Projets/web.html","title":"\u00c0 venir","text":""},{"location":"my_theme_customizations/pyodide-mkdocs/end_REM.html","title":"end REM","text":"<p>Z</p>"},{"location":"my_theme_customizations/pyodide-mkdocs/start_REM.html","title":"start REM","text":"<p>A</p>"},{"location":"perso/textes.html","title":"\u00c0 lire (...pour rares curieux s'int\u00e9ressant \u00e0 l'informatique    \ud83d\udcbb )","text":"<ul> <li>Le tas binaire</li> <li>Python list implementation</li> <li>Representation des objets en m\u00e9moire - Python</li> <li>Les labyrinthes - Wikipedia</li> <li>l'algorithme Aldous-Broder - G\u00e9n\u00e9ration de labyrinthes</li> </ul>"},{"location":"perso/videos.html","title":"Liens consult\u00e9s et appr\u00e9ci\u00e9s","text":"<ul> <li>Mod\u00e8le m\u00e9moire en python - PyCon 2016</li> <li>The history of programming - Devcon 2016</li> <li>Heaps and heap sort</li> <li>All your ducks in a row - Brandon Rhodes, PyCon 2014</li> <li>Chaine de l'EPFL</li> <li>Chaine LearnLinuxtv</li> <li>Chaine de Derek Molloy</li> <li>PyCon 2014 ... le cr\u00e9ateur himself ; \u00e0 44:29 la programmation fonctionnelle est \u00e9voqu\u00e9e</li> <li>Programmation dynamique - Erick Demaine MIT</li> </ul>"},{"location":"pyodide-mkdocs/end_REM.html","title":"end REM","text":"<p>Z</p>"},{"location":"pyodide-mkdocs/start_REM.html","title":"start REM","text":"<p>A</p>"},{"location":"scripts/C10/rendudyn_REM.html","title":"rendudyn REM","text":"<p>Commentaires </p> <p>Le syst\u00e8me est compos\u00e9 de pi\u00e8ces \\(\\left[1,\\cdots p_i, \\cdots ,p_{max}\\right]\\).  </p> <p>On part de l'hypoth\u00e8se o\u00f9 on sait rendre de fa\u00e7on optimale toutes les valeurs strictement inf\u00e9rieures \u00e0 <code>somme</code>. Pour rendre <code>somme</code>, il faut au moins une pi\u00e8ce, \u00e0 prendre parmi les pi\u00e8ces disponibles du syst\u00e8me mon\u00e9taire. Une fois cette pi\u00e8ce choisie, la somme restante est inf\u00e9rieure (strictement) \u00e0 <code>somme</code>, donc on sait la rendre de fa\u00e7on optimale. Il suffit d'essayer toutes possibilit\u00e9s parmi les pi\u00e8ces du syst\u00e8me propos\u00e9:  </p> <p>\\(nb\\_ piece[somme]=1+min(nb\\_piece[somme-p_i]\\) pour \\(p_i\\in \\left[1\\cdots p_{max}\\right]\\)</p>"},{"location":"scripts/C6/C6E1_REM.html","title":"C6E1 REM","text":"<p>Commentaires </p> <p>Le cas d'une insertion en t\u00eate est trivial ! Dans le cas d'une insertion \u00e0 un index quelconque \\(k\\gt 0\\), on doit d'abord cr\u00e9er deux pointeurs vers les cellules concern\u00e9es par l'insertion. Ensuite, dans une boucle, on d\u00e9cale ces pointeurs jusqu'\u00e0 ce l'on trouve la position  o\u00f9 sera ins\u00e9r\u00e9 la nouvelle cellule.</p>"},{"location":"scripts/C6/C6PB1_1_REM.html","title":"C6PB1 1 REM","text":"<p>Commentaires </p> <p>Pour l'\u00e9criture de la fonction <code>concat</code>, une simple traduction de l'\u00e9nonc\u00e9 am\u00e8ne \u00e0 la solution. Un point important: dans la m\u00e9thode <code>queue</code> pr\u00e9sente dans la classe <code>ListeChainee</code>,  il est IMPORTANT de renvoyer une liste cha\u00een\u00e9e. D'o\u00f9 le passage par   la variable intem\u00e9diaire <code>reste</code>.</p>"},{"location":"scripts/NSI1S8/KP1_REM.html","title":"Commentaires","text":"<p>La construction <code>nom, poids, prix = objet</code> alors que <code>objet</code> est une liste de python de type <code>['A', 10, 300]</code> est appel\u00e9e d\u00e9ballage de la liste (en anglais list unpacking). Elle est totalement \u00e9quivalente \u00e0:  </p> <pre><code>nom = objet[0]\npoids = objet[1]\nprix = objet[2]\n</code></pre> <p>L'utilisation du param\u00e8tre <code>reverse=True</code> dans l'appel de <code>sorted</code> permet un tri par ordre d\u00e9croissant.</p>"}]}